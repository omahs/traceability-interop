{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "22e7e1c6-cda6-44fe-a300-b960cf1b9ff0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dbd50119-bec9-4285-ac64-ce55bf4ca7f3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "517a03dd-e050-4d91-83ae-0c4d67626746",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b40f0b53-b335-4fa9-87e1-95cb8f088b28"
                }
              }
            ]
          },
          {
            "id": "dce03082-ef07-4775-94a0-83233b109d01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85414e9b-cbb5-4e83-bfa6-580279817bd4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a627813-8323-4770-91d1-aad9f14bffc6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bdcbde04-b0cd-4d60-ad94-8c089b496990",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b60f61c7-b207-4b65-9684-ea8097975ed9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b686dd6-aff1-401d-a419-01c7e83727c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab457aad-e84a-4d6c-81f4-b485010a184b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f620c9c-e29b-4326-891f-06c5da41541a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f9ed76c-b9f8-48e7-864a-ec79551d591c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d4b7e98-e02c-4264-a75e-b93d18524011"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c78a4d7-d4c4-4fc3-965a-be43b87a0a5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de36cd44-541c-4f76-9f24-f8bd7d6c4be9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74fdf77d-2815-4957-9f6e-fb77a6f74b9b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a9ef8fd4-96c2-4c35-8868-85cc089d4adb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3987c157-681a-4df4-ad05-3d5a6481c07a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f606b267-99b1-4108-89cb-fabf4e4def75"
            }
          }
        ]
      },
      {
        "id": "e581c8b1-44df-4c7a-b385-f9ff4b6ade85",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "61b5d9e0-6005-4d93-bf67-f081b37b4195",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d9ca81e-2f8a-49e3-9aff-9fa77cdbb9a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79ce6339-d70c-4cea-8bc6-989f9e48be6a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bda3233-a95c-461f-a060-368f017b7f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea2279db-eaeb-4984-a646-9e2ca1a2b115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b077e2b-5a80-487e-b62f-30552696e22a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d10d5b-938d-48c7-8a3d-0df4c3fcfce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85cafd7e-45ec-4522-97eb-ecf4706b7f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f512b508-9153-4d14-8bbf-4b7c75032c53",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9936bcc-cd0c-4f84-a4a9-15ce86a4d852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a06ea17-ae4f-49bb-980f-005ed7e993f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1a19b93-27e5-488c-a0cb-acfff8d559ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "740c49be-3d46-4c97-943a-f83113194f38",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7c4c3f-98e3-41b6-a4c6-3a802fd14fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a81681e-9c50-4e1b-8040-2af200c03ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44e2182-6cf2-48e1-8fb2-4dd699fddfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727e3732-e2f0-4dc6-9d2a-4eb8630ae011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3f05c9-c376-4215-be08-a91436072af8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe4d59d-bae6-447a-bdb3-3bb3ea1eb45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd199462-27ff-4f79-8a50-23f57f4b53d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3ad4e6-7607-4f33-91d1-95ea133e5182",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f3ed27c4-df3d-4af0-aa5b-293704e851a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cf15f0a7-469b-4579-9f5b-8007861311f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7f43fd2-21bb-46f0-a593-64c1ab5423f8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb540aa6-b4ea-4762-a9c7-5f4d9bd43b62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1c37898e-7b9c-4472-be64-1495a748568d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52686d2f-f4d6-4c5b-a88e-706330a2194f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1896f051-b882-473b-b7a7-cf668db75dce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec1113c1-8c86-4265-98ee-c9b8c1436170",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a77ab7-ae04-433a-af67-fe59c7260ae5"
            }
          }
        ]
      },
      {
        "id": "1daf53fc-aa35-4cea-a613-2ace8d8da64b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d9137522-37ce-45ec-8c83-7fe8d8df7723",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39c92e0f-c0e5-4f3c-b519-d627369a438c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9bbbc7bb-28c4-4fa8-b02e-fc3ce359b9d6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e6078c-2456-4af2-8f8e-d93648359f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711a2228-91a3-4c7f-a1d8-06b1edcec31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a167074-378d-45b6-a508-848ed5d04953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0736ad9c-9562-4cf9-9a27-4fefd36b6a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ce80b5-eb8b-4e79-b707-f79fe08d3bf2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdee4684-e2ca-44f4-8561-d966792121eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149a0817-527a-41fd-92c9-83aee3b0b675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67adfbf-2e4e-4f8b-b4ed-0714916cc486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "812d886d-7318-4165-aa2d-399418f59908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec2299-9af6-4fa7-aece-077174f5b5c1",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248642dc-a29f-4d38-be13-fd648366d6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5480fb-b3d6-4292-8e5f-e3fb09f3c4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909aaff8-1b68-489e-a3bc-113e5e9f53c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5a4c3a0-2777-4de8-b602-55b6a5a6d837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e155685a-8abb-40f3-9dc5-d4b8099c92fe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a6a622-830c-470f-99bf-5b852cadd6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6967668-3e5e-426a-a092-491c0101546f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52184fec-f6fd-4c69-8fed-0e137ecd9ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4989c995-e1c0-49d4-adb0-4a9889c764b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a6c926-494a-4acc-91d9-f355c657b5b5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc5a4b-7d8b-48bd-9fd3-ecfc3a5f65d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443e684f-589b-4240-86e4-e0e748b41bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912210be-2e84-4d3b-aa62-49f58c4c5f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9294935e-2dbd-4432-9a47-1bb262478f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f74a49b-84f8-469e-8ef9-67c85a486544",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e6200a-6ec4-48aa-96d0-27965370fa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b269fd-ad5a-443e-b1c0-f48d6668b5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a975ba66-6024-4b7f-bd84-0c5314bc2df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6acaa3b9-32bd-47c7-b1b5-b3a2d8087484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f860a31-4303-4da8-8a18-bfedd42d2a37",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292c1684-14d9-45d8-b85f-12717b6e5cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186baefe-315e-423a-9d0d-41eb72864c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4437927b-7a7e-43fe-8d37-52a451ea02f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b80aee08-52ac-4e80-b482-5a211a3b6de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe32bb08-014d-4e53-955e-8a605f4c9ba4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794ba20a-56b1-4f82-9331-a90c06becbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1ab037-dc23-451f-9666-36cc7c01270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22724021-462a-46d3-a590-519c76adad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b132c912-bc6d-4e96-b712-2b77ffaff9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6070bd5a-98ca-4d55-9436-80f71a324d5d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d64ac99-9a5b-4ba2-a3f8-106d6786af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254842f8-d425-4f70-aa62-6618a3ed2076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dbdb9c-0203-44ad-ac78-16b60c40bc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00062a2f-1033-4aa9-82dd-058d80cf7843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ba6b61-fe44-4a98-b26d-29cdd1bcdd3e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9450a3c8-3d40-4ffd-9fdb-c1b2670cb0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68f880c-9e68-42f8-9704-8a5e560321a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e9c2dd-dfa4-4849-a1dd-9e6e5b30656b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fcbda95-2358-4cb1-8014-27c354905713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b151ffbf-f9a2-416a-86a4-376099c38efa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1796b3-6066-4570-81ad-27f69e23d94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336dd9a2-a3f2-4548-a3a8-52db41fc24e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdff2815-297a-4213-b8ca-46b7abe85bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e0d9b1-e691-4402-8697-8117a1820e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7370a210-09df-48f9-8c3e-62afaf95e15f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801b1e21-f3e5-4b55-bd9b-4a44ca1fe6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285d7ecb-db6f-48e4-86e9-7b9e53596785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2068cf49-5069-4378-90c2-b2711c846964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8cbe5e9-3fb9-4612-a231-06dcb0e7ecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f729c9f9-a449-4b8c-8683-f28fdb6335fc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c02c1b-8b89-4e38-b4d9-887cafa3f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff3214f-f064-4aea-afcf-6d60e5d54a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7959f7fd-235a-4cd9-b35a-944fe7604be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e3594c-4fe4-4e21-8e45-86ebdb4606e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d582ac7-3215-4833-9acd-462af6ba0c92",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c92a5cf-a45d-4deb-9467-6b17dbe2ee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93e9658-8949-47ee-9331-f94283d282e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53076f0f-898d-4455-93f7-3a7524c57c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab164bc1-b537-47e6-8908-9eb3885b4fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac7c02d-24e1-4a4d-81c6-a4fc3ff60466",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564848ab-1937-4756-b9a5-564cfba251fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f2de6f-8e99-4922-9b17-ad30c154920c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd62411-3f93-4112-b34c-cc52ec36f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "957efa7e-de17-46ac-a387-894d55809e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b6fc53-2cb1-4387-b74d-f4bc76f2c80a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd269e5-6d39-434f-8f9a-55159cb21665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe8b144-2254-4609-980a-76f1d86746b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea77c826-6692-4e14-ad75-0b3fc40b2472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "004416a2-4aa0-4ddd-b482-5e182fb0185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe071da-3a2f-4008-8ee1-eb5c7c88fa31",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52085b0c-788f-42fe-99c4-7c58ab652485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e9f7fb-c88a-450f-bf81-2af0f13c76d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ce86fd-9d78-49ca-8e14-8e4b3f264c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb5b3976-e74a-4954-b977-f17f68aa16f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c62ff37-12dc-4143-bbe8-ebf64461e23f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3db6032-5f65-4131-94de-fcdf21af070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5596363-9298-46d5-86ab-4de10f776153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde96cfb-85d9-4b99-9ea3-7449831fec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "483e7a64-8bdf-42cf-8cd4-12ad0b5836a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887acf38-fd32-4cc5-995a-6c9b41788b6d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4caf9f-03cd-4eee-83e1-b48d1d60763e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87599bc6-4b10-4fa9-a1c7-a7dd90137237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaa4378-ad72-4aa7-b545-a22fd010f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c35da63a-0594-482f-98a1-29342e77347d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71be71-ff71-4daf-b70f-6b1ca7a5e0b4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa07d81-185c-4418-8b02-fc99be1ca791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294526c0-2d53-4c17-b919-2ab25d982025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8323d-e265-4fcd-a349-e278b2db6362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a795832-d5ef-4d81-a308-c944b90a3921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b471a8-f992-4929-ac52-08ffa4e32da7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7527da53-ab63-49a9-b2b0-31333f57bb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54c780d-2ceb-4400-9ac6-25abfb9cef4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f54354d-949c-4c86-b285-6029bb21070c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0869551-127e-48fa-a5ee-710a25567b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68236ec-79f1-4f57-924c-25d44ecd23b2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90abbd79-af59-4c0b-bbbe-b7590ee7533a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc42223-742f-46a6-b401-4649345af4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876437db-37f2-4801-a1ae-c0b99bd6ebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06fdfe3a-3a94-4849-8b01-c3cdffc1ef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712ec10d-c328-479b-a5d4-3507727131fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5489d31-e4a4-449f-89d6-e45fe8a8f972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d315d84-250b-4e7b-bf8d-dd83f6143507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed3396-e29b-4124-83fa-7ae0cb6c393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b624dc2-eed3-4b37-895f-1dba25a5b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe55d5f-c7ee-4208-ad9a-7a8376921385",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d6a222-5c9d-43e1-86de-a58616e9bcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00eedf43-f286-4dbe-a9bc-7ffcba5fd208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a4c461-503b-4632-904b-f35db9575ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f0d92a-f4ed-45db-8e1f-aaa7f08264a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c1c9f7-ce92-4096-9034-24bd76a4672c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21f0bb1-e569-4e20-85e6-1dc04ce771b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2cd6ff-5123-4477-a29f-fa7f8a1c0448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ac358b-8120-45bc-9cab-643654815020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "399860b8-c80c-4154-99b2-39d42991b0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2194a8a-44c3-4c21-9c16-92c74220b771",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed411144-d88e-45bc-a731-c03b3a41df5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c06bf39-4d1a-4ffd-8a1c-70da83091fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda03dda-457f-481a-9eec-cea64cc02f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "95db5e0e-db5f-45be-ba62-3aa910ca1322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cd1c7f-2ad6-4bc3-bd04-c284d2876d82",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db33f94-14ea-47fc-8c1a-f99f56489236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6a6e56-29ee-4f4c-89ac-e29c52785673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5c9069-e758-4c21-ab8e-a44cb0187289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bce817a-10b8-4e84-994c-f63b622274f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a361e1b-f971-4609-bc84-10bec33ac68b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaba136f-3fb4-4272-8acd-560ca54b671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80207233-8fe9-4264-91da-9f349582b020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ca0986-ada9-4e0b-82de-3a903fc69817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ce470a-60bc-4b49-9364-4133ed9447ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc9acae-102d-4183-831e-36a100fd68d1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e772f8f4-3e89-4aba-878e-d3f5651bffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c021d1-b031-451c-a14c-1884313e5b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91391aef-f6ac-451d-8649-073f55b9c5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b631699e-0a9d-4686-b222-bc567832f7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4439fb0e-37d0-4d79-8699-9adaa729c636",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7047ab-fe3f-4c53-876d-1e61ab2ba4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3118a6-a9af-4e4c-ab05-2babb5eb923d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d937d088-39ca-4d0a-962f-51e0da9bf693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7775f8-5574-4ec4-bdd2-258ce9d4630b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7396ccfd-faa8-4117-963a-168bcf086eb1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed480eb-5bcd-4d54-9c19-92c1069ecad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a0fa5-607b-4b36-8aaf-17eaf03b6aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b461482f-7a18-4af5-8e92-5a6472257de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48cea61-aade-4012-af31-dfe9d2b6d566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be47cdf-c18b-49b9-b3e6-68f6696b6415",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a077838c-06d3-4bc3-a21a-0ea5a30d6e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31254f1b-9bd7-4618-ae09-94a99057e279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e742bc-0ad1-4026-a6d7-be7962640d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "76115680-4ca3-4f26-aa1e-54ebc686432a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92603a81-89da-410f-b09e-1972ce5108b0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd910323-e63e-4fb7-a689-aa6e386bc158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b62f2e-4981-4246-89e4-108eced9875d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4484cc-4ac8-412c-904a-d2fd2015d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9f535d-ae56-4e21-be1f-8a742aa1f115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8c7204-06ab-4b8c-8f7a-d0dd8c458ce3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679d031d-aa34-4019-8dba-5b8358337b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c57769-3c02-46ac-ab70-e4ce0a87fc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc880137-70e4-43f0-8137-fbff37bbb85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca8ff7e-dc57-40db-a578-29e62a4f5012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d910f7c3-a2cc-44f1-8d0c-321c7f14262e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a033c435-0478-440e-a3a4-5dc791bae65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eb5c66-2805-4462-ab9c-78324e8665b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f82ec1-cc11-4331-92a2-764a61f0600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f4c565-7c3a-4070-a559-f4e50038bc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd05d5f-9a4b-4306-954c-42fc028afda3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa93af44-b771-4bd1-a012-82bff6613999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28771170-8522-4482-a0df-4c397ae18961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b6c9e8-3d61-4c33-a261-fc251e9ff95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2ed8a6-da8d-4b6a-9d1c-d92f80901e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3192db-a1ab-4479-93e8-f0a7563c0c36",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fd9408-b09d-492b-906c-40345550c653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae161458-e00a-4af5-b862-0c1b6f21eab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad88b54-a75b-4292-87f4-59a7bff54b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8593eb5f-8445-4f95-a6c6-4a0750da4919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0edd31d-4b90-4312-97f0-1cfe1c5f526f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d3159c-3450-459d-9655-918d16e7fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe75adb8-11fe-4ee5-a6e9-b7d9952e258d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cd787c-e593-429b-9870-e4a5cce6b580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f83d44cd-a989-4ebb-ac43-aa75f9a5e938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825a70d7-f77e-401f-896a-51015233de8c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9879255a-491c-4067-9b3d-55b1d8180a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b310e9a8-a01f-4ac2-8582-83ac84b420d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ba3b3b-1f81-4ac7-bfd0-b65d8ea0b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23024bdd-2e82-4aac-8584-6cf15a5e1449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8258f85-a119-473c-b37f-bfae859bdcd1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35bb48b-bb08-424b-9432-cb1bd3574a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c8b575-b840-466c-b62f-ceeea8e94ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c86e2ea-a39d-4f32-affc-4f37f2fcf80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7026aa91-4787-4f01-91da-6a57ba59d5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a223d5-d940-438a-b1bd-24290aaa1d32",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f63e500-68b9-4da6-9eb0-f4f4b449b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81591893-afa6-4855-a221-257742c56f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79415553-2a50-4d6f-b860-f638e5cc0e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d53a9b-17d3-4b9f-9cd9-21f3d517b2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b452d84a-d97e-47c4-bad2-3949c8277f3d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821761e1-6cc8-435d-a0b8-572bd58e088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1420918b-04be-4fb1-94dc-7258f1ce1a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed12b7c9-1247-47fe-9d0e-6a5c2fa84589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5ec19b-a689-4463-9a34-9ccd1b0cae82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac57db67-532d-4124-9b7e-0d078aa9ab79",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa55b8f-8e35-41e3-9426-24cf9793beed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1605fd22-ea8a-4c70-920f-abab4934ec31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8e03dc-f2d2-4621-80ca-cc228776ada6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68f2ea62-aaea-4a83-83d1-4cab29ab11d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40551d96-c3cd-4c18-a730-cfc9d1dcd443",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5223f0-7a50-4f0e-9b5c-747ecfcd3ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03eb792f-ec67-4854-a1bb-c14d2974db0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e53d1c4-4c55-452d-b862-0d5fd83702c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab0d6df-fa20-4a57-813a-843ea28ff0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eec182c-b16b-4fe9-ab53-9ac20609d52b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b1c04-2c6a-4965-b836-e3db54a499e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3363a5c-e179-45d4-99d1-95d7a7290c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cc37cf-e7e6-4765-9f92-b977b8d3ba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7bf93b-6636-4253-8cd6-76ceafc0546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d52a54-d477-4966-8399-2f1bd2cd6854",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85919666-8a1c-45b5-8494-9e7082bc369f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee7df06-1afc-4af1-8baa-75e34537da6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8a6b9d-c8e7-4da1-aee5-f2824fb6bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "34fb0493-3019-41b6-9b64-717fe57e924b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0a1075-5283-48e0-84cb-69f1a4d5d380",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e3ce5b-bb41-4b64-befc-7b988a1ff116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba066164-1e66-4b33-9a3f-d24b42d9a92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cda3e2c-167f-43b4-9c62-0d524fdad6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b868e34-9eb0-4118-a051-95d5cede5454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3c2a3b-213f-4262-a735-fa9e516c75cc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bdafff-a88c-4505-bc52-0a56832c4b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c518f944-cef1-4722-9ca6-4f5fcfef93e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92b4c75-7da2-4df9-8514-e8311fb82f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6892a41d-672d-461f-8812-adbd32cd2a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0af4d4-2758-4350-a320-75c56e3c7656",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9e969d-33e2-4fb4-aab3-add3dd2b2058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e59f9d-54a5-4aeb-b4de-34826a8911a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683d0db7-d22e-4e1e-880e-fb9174ae7ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c941ec0b-033c-4d7c-8d0d-87c19db14031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066daa7e-5b66-4818-a31c-6d162a484fcc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605fc1b0-437f-48c0-b7cd-d4391b941c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1866abb5-cdd8-4679-a252-5928c4b02907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01472b73-162c-464b-9e54-e8d66c2acb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7568657-c5ce-44cb-b7f4-2c32736ed4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a440e25-305b-4688-a358-8f24c2b77544",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a67d2c-ce7c-4bfa-8e8e-5b85415822ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58635539-acff-425b-8b3b-d059f5139d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5799490b-cb69-4e0f-a0f9-9d591f15a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f10c0c9c-c3f7-42e0-9389-162adb4176c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a845c4ba-44d8-44dd-a21e-0bd46b9ed1e6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e72861b-8c82-43cb-aad9-d2263cb747d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4b0ee3-632c-45ab-8fbd-4445f9c7ffcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710a9a42-0b24-4ca1-8159-b5a6683bbb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f02953e3-a981-4b5d-9ba6-da446bdbc92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bbd5b8-52ea-4c85-b92d-7379f352880d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617d4e22-f632-4927-a4d3-0683fce80cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200f79cd-1287-408f-94e3-57f75421f419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9460c7e3-6c90-4f6d-a322-6054c0d4c38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c39ef6-3133-411c-9f12-2079ff3e7196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b402d103-72ca-482d-be51-ba8847460202",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998124a1-c206-4236-ba11-f30ce2f0386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201d2519-9dcf-488e-af41-3c3319183ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b50d86c-b39e-4884-9452-b42f5f55e634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00769257-cd8b-4da2-adee-74b7d48f2fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d961cb72-1332-470c-8450-8eac274244a5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9257ebaa-b615-432e-ad3d-d027468150f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6e463e-b067-410e-ba9e-5f67500567a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7f965d-c52e-4977-9b51-1e96962639c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e202aab-72c7-44aa-bf42-530358554eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51a99f3-dd8b-4d40-92fe-2ef93d46539a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23255ad-73e1-47f5-8ba6-50a1cab2db37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7981e0b6-ceb8-4e0a-9d83-c25e4cbc238e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b8bb2a-4ef9-4515-9016-e910cb36e718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48eef94d-012d-46a8-905b-ee6456d56c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf85576b-97b7-45bd-a570-d5ed8574862e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848b2067-2beb-434e-8fb9-c550d6253000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b57916c-c4c7-4fa0-a197-c65eef250e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb77a9e-0b0d-4046-81ac-939f21865cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5c42eb-2dc6-4fd8-89d2-b52d273fad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80d672-9dca-4164-80bd-f91f53798c4f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf5c522-e660-4401-a25d-523dbb3a0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761f9b9c-d280-4328-9591-3457aa472e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab96c157-3477-4d60-93b4-f27f256f0d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "92bcc6c9-e090-49cb-afa0-f4fb944ed365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221cb50-2c76-47aa-9b9e-5e729474a42c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa821024-7233-4b66-8a86-d69bbf269429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d8a510-71b9-457e-8c81-b7e310b336da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e3d338-4643-4fd7-be65-15ecf8e6d7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0df61c6-3885-46bf-8bc2-c31bc587199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab90660-8741-467c-8add-d00c5f43859b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60562181-76ef-43f2-b5d3-a9fbfd35d147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e11680e-af93-4c11-9730-618deb35d324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93169bd4-59d6-40f0-a221-d83b4e7b953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c28d4897-1161-49b2-a6c7-0ccb44149937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a52417d-1700-45f8-96c7-1c4c56b3cb6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3235a453-02a5-4bb9-a05c-09846863e3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f552fc-daeb-467d-b7c9-116abeeeadf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac65c016-5dbf-40c1-b88a-3b6f3dbe8683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5278c891-8364-4d63-9d44-0a65380f7da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69daf27b-fa19-4257-be8e-5ec9a61b1cb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18723f53-bf25-406d-b010-f878dd359dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3f6285-6cc4-465b-a7b7-66af40262748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f8fa9d-e96c-4e57-ac07-4e1b87e298df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "30b6c446-2507-4bd2-8374-e752a34ac43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b143dc-5ad5-4d07-8538-ab95b3c50c99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33396e9-a6ae-4900-ae74-7a5b1ce6c38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ca84d0-7ef5-46fe-a7c9-64c770642474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca5c829-ac4e-4aa6-a838-01ac95e08f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84728684-c53f-4395-96a6-72ab7677c89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7e6595-50eb-4fd4-9aab-8396604daaaf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746efac8-6942-4187-81bb-a7a634e75644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b22295-d16a-4702-8961-328931f83f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb2fdad-272e-4416-97c1-e2922d60aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd82271c-f74b-47f2-86ba-fbb5817d9828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b817c38-a615-4499-a143-d959843ac23e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89baa790-14e7-4fc4-9422-620c69f1ace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfadc27-0066-4e03-9bda-803e14d06ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb13fb76-4002-4a5c-9843-110220243464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ecfb16-a92a-4e08-94b9-e1d7cc65bbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1442c584-0b17-40a0-874a-c8d1415c5f97",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc6ea8b-3003-4e81-a690-9dcd6fdc8f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4160a3f-0134-4086-a0b1-a708337b845a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1622e62b-ca38-4108-8f0d-9e75f9b440f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22dfc1ba-73ba-487e-8bee-42b4b9e7f44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8e9fec-cffd-4eb4-8382-bb4c825ad7d0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d338c6b3-0c87-4e52-9148-df5483c7eedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32389b4-a4c8-46c4-8f84-926bc11d46bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcb5eee-5ded-41a3-b658-18a9fd347fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5477329e-1d90-446d-87f0-40f533e364b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59f4407-6512-45b1-a54f-f9304d5a0339",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0db3f3-f2b9-4a0c-a054-5d595aba9c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1e4344-29dd-4af9-9e52-676fbac3f3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f74780a-5d60-434a-aa46-ac9ddba120e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19d6a2a-dfae-4a35-bba0-6abfefc214a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7adf890-ee71-4e61-b447-b08c9619a93f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d657e7f-d891-4d1f-b31f-ae3d300fe7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7d52e1-0fe7-48a3-8ff3-5277a5506972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c11e632-4f33-48a8-995a-979075a8ab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72d6beec-5ecc-48e7-82fe-816807904abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6b07ff-bba3-4745-860f-5949e36e3ea9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb9d4ff-fe2b-4f89-9a07-bff9befcf8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34612059-a783-4bbd-a521-3f6593ba5ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0702bc-6261-453c-8fc3-b825114a96f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "44d2299f-70b2-4037-ada4-34a19ea1ac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c85eb9d-f992-4172-b10f-0c04d70fdd8d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b081e3-e957-4ee1-9eac-20460f8fe2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cd5bc7-b060-41e8-98ea-5cde90e9c8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357a4c02-b250-4c7a-aaec-7c5a563180cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef631868-a412-4718-92ad-d8cd3057f707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7582d263-e4be-4148-85ad-93bdccdabb6d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc07fa70-a81b-457d-8bee-9b59217dde12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9c1cd9-79af-4584-8cb9-637fb5a35ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f9673d-ce15-4078-bdf9-7a99a3aa0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "937a12a5-eb86-4bd5-aed6-67fb7f9b6846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830a25a7-c887-48b7-998b-9b0fa7c67757",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b735945f-5a65-4ee8-aaee-2cfa6eba5cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664ca560-6677-4844-92c7-96725093ee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833d195c-1ac4-4bc9-b5aa-104235383322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3d7c74-7129-4d30-96b8-a73f49fabfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3adffb4-0a6d-4e4b-83c4-2c50ee701ba3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7450af-b191-478a-96bf-68bffa7743e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d80eb4-851d-405a-adfd-12612ba842ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541aeea4-3bd1-4757-8dee-e52fff3a6fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85578b89-7128-4f7b-ace3-a116b71153b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f35ac1-ff2b-44e6-b667-36e3f6e09593",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83344680-0bca-4cf1-895b-14b107c69006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f7210c-6a33-43f3-8fa3-096304db56d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b039fe38-a7e5-4b70-972a-bf619668e633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfb0d90-875c-4752-888e-c28ed18cfe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298e88d7-0a55-42d3-9665-bbd0797d82e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3656fc5d-2c08-48f4-b342-2693fec9fa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9a9a58-f96d-4f5d-b2cb-f58dff52fbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8517ead-959e-418b-b7a7-99f99639d32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa3ab53-42c1-4d98-9ef0-87bceb725249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e30f2e-6657-4f95-86a4-39a8fe241d34",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874e4da-4c62-4e62-9901-d3157226f929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3818cfa-9f32-4296-af6a-710350708ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72bd6ee-07c2-47a4-848a-0d10dc221b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8d67bb-3a03-4688-a2d5-f61d89fe01ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54b8aac-9a51-413c-8e54-0dfc81e444be",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c708b7c-5568-42f8-bf52-71f4a9b1ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56895d6c-fcc4-4c29-ba8a-31def1029bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63898cf6-b538-4b0b-91e3-f42b9ca374bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9701304-4587-4235-9547-b5349371e22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4734986a-dc1d-4e22-89ca-326557e5d177",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eacdee-fa80-42de-894a-31d59ee69e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2e934f-9bef-426b-920d-fd4a1014171c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e8852e-92ec-4f5e-800e-31f4cdf6c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c0d9ec-6255-4a85-9e2e-7b995da4cbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f039e3-2b94-4963-bde6-06093697b28a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7499f651-29e7-4372-bebf-5750dbd50143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe1a001-b6d9-479a-9721-9dde7b9e7f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4ac124-1f6b-49d9-8583-e8636ff87ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e20311d-c4e3-4a41-a184-b8a3969538b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ab3307-d84e-45f7-b39c-5af498258c82",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ca2b6-ada9-4c69-a052-4e7f15f85c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e099665-e4ea-48c8-8132-67e053063e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3f2417-4b34-4a51-ad9f-a0332f2acc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f888fdc5-0a93-444d-81ad-09377da875d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f3abc-da40-4711-8c13-8f93d64a98b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812bb3c0-50a7-4d62-8540-24cc888fe539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9cae73-8dde-4fb8-a33c-84981b02bafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9561acb0-4bfa-4e76-9f05-23b55c547eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb63147-fc4d-4a36-bd77-0d31ecde12a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a029cf-7686-45a9-9f29-c370cf1885de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be89492-f472-4a9b-9f89-10e4c68d81d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987b1c91-b451-4cd9-9cb5-845f16f00c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fe685c-5c34-4b36-af93-eb292b0cfba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc59284-0d4a-4940-8d9c-cd8634b119ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76decb2b-49e6-4707-98c6-267c67475e5f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bc05fd-8f67-40ef-a435-a7280b2bedd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618a6979-1476-4fa3-a368-86c895f06020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4211f883-7764-40c3-8be9-d00a76b2e793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b26d03c3-a153-4828-a3fd-26145e42821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356b265f-7842-47f0-bf3f-70432faa0b62",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a393908-fc7c-4a5c-a4bf-6948c52ae1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9e7451-595a-4828-adc4-92765cd63186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747d9bd4-e353-48d6-8887-d3570885165b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6d6bab-488c-4c9d-9652-ab4067ec7f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b50a0d-cf71-40e5-8c91-d68f87edbfc3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8023592b-4bd8-4c93-ba3e-5cf234472bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143e322d-c157-4889-ac0c-5832605b8461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9943322-cc37-4679-8e54-02bad4a46cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "997bb7a1-fa43-4925-b92e-6a3de3158a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12614ef0-e1d2-4a74-96c8-1f4766e036ce",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf70e5be-8934-40b5-b553-398aa78af5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de166cb5-fa95-4ba4-b0f3-6e96102b30bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e3987f-bccf-49ef-b588-586015625b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a87d29f1-6705-491c-98e8-121a622539e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b864ff-425a-467a-8bd4-7ae0c5bb868a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c589c35-b562-404c-9869-ba381a12c23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b8cd68-a987-431e-bba4-7286b7e1187a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de28d7b1-0171-4093-8956-4cfdfe48da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac93a06-1cf6-444c-a663-400d0c9fe1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2edf78-a92a-44d7-b635-c7e0eca615db",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67adb4d2-291b-4e33-929a-f9c3ed9b2f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0873ce7-7333-4865-9c6a-97f08c761fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8ad2f2-c793-4b23-8740-53f70420165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab20a4c7-136f-4811-a7ab-d416cfc43dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7208bf1f-a28a-4798-a2d3-ae9317ad2a89",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e96e06f-9016-4576-bd06-9facf3539e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc06653-5801-4410-b93b-fa5a2633080c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b5586-0fdd-4ee4-9858-525936ab0e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07d71493-fd9d-4776-86ec-223ecbbc2d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdc6222-8f05-4e93-8289-6a092a0daee7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918ed6a8-3755-4ab7-903c-27650fb62af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d967e40-5dbd-4253-b7e9-46fd8391da4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c86510-155c-4b50-827c-d03b85305b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa02933d-7b6c-46d1-8b33-3f1e5cd72204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae15c4f-89ef-426e-b4db-177d1a806870",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ed69f3-c5bf-4f81-9e9c-97d414dd5c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0213ceb6-ca11-4af2-9b65-368ace2fa49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbb5bf1-a5f8-4f76-82dc-266cc12292a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "542aa89e-17f9-4c44-9020-0f603734396d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033de62a-0c99-42bb-9477-62ce549d00b7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677be4a1-6dec-46e4-85d5-852f55e2c690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fb5d40-9030-457a-ac01-1e66fb4d58df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39908a81-0087-4c60-848a-2dd15f92ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad4313b-3f90-4f52-af28-7eede9a62630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f78b8f-144f-48a5-a051-ee419cf8c33a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7a3932-982c-461e-bfa6-e25cbf1e64b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "213e581f-dffd-4404-aa8f-688c64abbdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ec73ce-c334-4196-9c5b-fc9f0ab48c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1171aa81-f401-49f5-8ffe-e7d6b77c1d10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9792e3d1-c6b0-4889-88bf-2ff2f4749e2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3af0eebf-dfd6-4cac-947a-a8640d8f53fd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae6276b-f230-4828-8977-7b5fcf136647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea996e0f-466e-4ffb-88a3-2c03809936ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5805ab2a-f0d5-4b06-a7d1-6eb3e89ea1fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c85c84d0-d7fd-42bd-b5c8-914dc69e538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1d6e32-2dd8-493d-bdc9-9d8a585511b2",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3979c690-9eb1-46a0-acce-75b5e2bf451d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a16e8754-0c30-47bc-9c06-c6afb3aac77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce4452-ab7e-4ac3-98a4-b4274fdfe702",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0065a44e-43f3-48ee-8a34-390e57f0d678"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f0cddff-7504-4eff-8e4a-3ce176ef385d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff64dacd-52c6-42c0-a808-292bc1363dce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bafc15b0-46a8-493b-bcaa-1d1eff7a3496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3d36651-e07a-4e3b-9210-518478c579c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3199bb7a-eb9b-4cec-8dda-a6f8b09874bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4e61dd1-3abb-4ac0-9963-2a79dc1f6503"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4fd4eb10-7228-418a-ac08-b7d4d5533e02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "234d6cc2-5e0a-430d-b864-0af446027449"
                }
              }
            ]
          },
          {
            "id": "27b05789-5e7a-42d7-b329-edf7937791b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac328a86-834d-4f7d-bd55-6b8c55d61abe",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c9e0b8-d69d-4f01-b088-fad572a4ce0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5553d093-96a8-409d-a7b5-1b956d035dbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d145fed-dc82-4d64-9693-1c02bf670e7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f7ae17d5-6add-4642-baa5-21dbeb06ec95"
                    }
                  }
                ]
              },
              {
                "id": "fb4c0beb-e964-4646-8d49-38606a769620",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bee32f3-ef47-42b4-9926-c588c6556ba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d1a1533-43bd-456f-ac88-17e81c28efc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd249112-89d9-4d6c-9dbb-f5c63b19ca2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9529283-9445-42af-bc49-ca1a79a3ee0f"
                    }
                  }
                ]
              },
              {
                "id": "9e1795cc-c3b2-422e-b61d-316c64742093",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39152400-fb9a-4b35-944d-65155d620c89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95088ae9-fbeb-42dd-a00e-a4fb07e24399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "858e583a-0e7c-43ca-92f2-afedf45d2963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c9a4e5c5-6ee2-4360-98c3-3dbdc926069e"
                    }
                  }
                ]
              },
              {
                "id": "342568a4-eaa8-4b21-8a6e-c3e919b10e20",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a79307-ae32-4c25-a83b-0ddfb1d633d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f587f5-ee92-4caa-a2ad-0f576eafc12a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81719736-633d-4a1e-af70-ea65eb2f8f0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bcc4ccf5-b441-444b-83a8-9ae84e06dd7b"
                    }
                  }
                ]
              },
              {
                "id": "1af422fa-6a1a-4e71-abea-e236338b96c5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0d8231f-5e5e-490d-a854-798a69c1ac6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47758e61-6902-4306-b196-09c27bce46a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42c526dc-1e86-4c57-baa6-388b10b101e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e387002-5842-408c-88c3-453c8e10cb40"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9939398-9211-43fb-9036-02bf92bc33c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffbbfeaa-174b-43d4-8972-483365577dc6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3702c9a-2015-4df9-91c2-c98d4285038c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e86d6a71-4df4-43a4-b3f5-c37c178b2a40"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1901769b-5da4-4184-ba74-4c3fe4231e5d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d5a9ea4e-9853-4d39-ad28-39011c7b2688"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27794bb1-8fb7-4730-b91d-3748a222a4f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d6f4266-54e6-46fc-85d8-8e67982942ef"
            }
          }
        ]
      },
      {
        "id": "70df5ad1-9d61-47a2-ab63-9d1833622bfe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "271e51c0-d550-4027-968b-1995310f58ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61c9d2b5-c144-48d7-8c8d-a02f135d8aff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c4eb1cc-dcac-414a-8531-de2ed466a46d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54057a8f-efcc-4dbc-a9f3-aeae4ee0ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a348dd5b-0404-4d4d-906b-72db298ab053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa58e9e-4005-4fff-8b88-a6ab256e799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "510879dd-d9bd-4808-baad-875b6ee2e6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f68032f-f5df-42aa-9273-49fb286bc852",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b7f5de-92b3-4918-90b8-377689dd51b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd3dd25-472a-487d-8310-df23b2f6d7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc38f5-24cd-4730-bf62-c9121e0d7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0dff38-27c5-4512-a1d0-2e4de3c2455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4859ba-7894-452c-bbf9-c0fdaf7fbd73",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af46c71-18d0-48ed-af02-dcfc9283d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d29aac-3d19-4b0d-8de8-7e7d11abb5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bd83dc-568d-4ff3-ae00-65226d0f8eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5f4c5b-7063-4786-9e2b-0d804775c81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811cc5a7-975e-4b4e-9cc0-342631b57f1d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827ccc0b-1b93-401b-ac4d-19a9fbb6fc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c90ee0-7c52-4c5c-ac31-61d1ded28a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a4fdc7-5d6c-4716-8094-ef96ea2284c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7dfaf5-2a4b-437f-ae7e-4ecb6b1ce6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfed775e-20d7-4b5b-8cdb-f06f6935c6c1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37367e3b-773e-4922-91e9-cec27e4dd40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef365cda-3a29-4e10-9c9e-4d94eb06c20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31879b5-d287-45b6-8f1b-b6a6f79e1916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c04d0b1-6ebe-42b2-863c-85ff1eab5224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4962f23f-bbf2-4b85-9aef-b2ef284e5da7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1118ad-aa65-4847-ad69-845f60304088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660b776a-68ff-48e4-bdee-a5e8821b8dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8499f19-7858-4c31-9be1-ba8ef5715a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09e1ccaa-583d-46c7-b907-4d70d0f5065a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af389a44-5ac3-41e0-a2d9-9c3c9a420e1e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734cfdb3-2bbb-43cb-976e-9ad83217fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2f313d-df41-45f4-a4c0-9e96bc01448d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ad504c-defc-4f6b-b61f-e1ec7a124440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b6ca0a-2f85-43ac-81e3-f1cdbdbc05e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22ecda7-0c14-4ff1-8fd7-db6f7ab51a4b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3009a9d7-7f87-4b0d-b465-a5b40d84cd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658dc57c-1d8f-4786-aa8e-6979e7185c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1221fc6c-eea2-4a2b-b21f-14cc8db9f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "435d377c-1fa1-478f-a721-c682eafc3028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a065b48-1626-411d-ba52-e94f95f514a5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa6a606-4a73-4ac3-a5ad-f658b650bf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717f50cf-0ec5-4bdd-8b3e-4c43e030d59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b09b1f-2ae9-4e19-b533-07aaa6fbd8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9e086b-f837-4d7b-8d19-0031fdf54093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9de31c4-266c-427d-b4f7-1e43b530a5c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eafea39-3095-4b78-8026-b8fb4f6c8886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ac0f91-2b26-4b5b-9d93-c5322dc04e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec01641-fe76-407d-b158-4262383b9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "976a79aa-5ee4-4e69-a7f6-79e9a2c2a4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b1630c-2c7b-4cbc-ac53-c7b95ea78fda",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f510cbd7-9681-472d-8904-1869d26b023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed1c763-8646-440f-818a-d0482493f62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0a3051-d2e7-495c-aa61-17507389ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0136250-37e6-4247-b200-11e35c1b6ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa77fba-3977-425a-9a2a-12defb468324",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce484573-fa52-4f45-95cd-ba22a2102ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4c4721-e4f1-4c0b-9b2b-c6c284cb3612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24458452-229f-4808-a3b8-0e5ff1c887a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bce2ebeb-5042-4f96-9e45-58da86b51027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1ef887-de98-49f2-8fb6-fd32de892894",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657aeeec-cbe1-42d8-a69e-4c3b44e2be27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ac10eb-e69a-40a7-a75c-31e13983f5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cd79e8-19d4-49ae-849d-7ed595d07fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa255e8-9106-4b51-a7a5-51b3d1be5020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b71d60-130d-43ef-bbe4-2dffd9b9f379",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cefcb7-1c25-4e2a-9143-4c85e310a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed124aed-baab-49ac-83ae-12cdc7049b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8720e5f0-af2d-40b7-8c58-99d63a495d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b732a76a-10e7-462b-a536-2dc0fa897f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a49d4b-92d8-40d8-b639-528b44c8f0db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c892e1b0-b8b2-4d10-8ce0-f7c4ed95cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b3646c-ab43-4dde-89ad-771e716404c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834af20c-6792-4345-84fe-803b773c4f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da376ad9-c6e8-498a-8725-a58ea25b4620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95302c80-e88d-487a-8a63-d0aa95354840",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dc4829-0785-416b-aa99-76b3d69af940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fb899d-ab1f-4592-91ca-9228b6875119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf026d6-07b8-451d-af37-d1a792b27fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3006a86-4cf0-44d1-ad27-e1bb7d44fa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac7adc5-e4a8-4012-88ec-648228cc3047",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b76c8b-7f58-4892-a074-ee5597c4e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d56ab79-9cad-44e9-9e00-94cb05c7b60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74494837-01b0-41ed-8968-c07e985e04c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d71a003-bb71-405d-aa0a-1a20876fcdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517b1f2c-bf05-40b7-b03b-9002531061b6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c2d2dc-91a0-486b-b627-87500e06cd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dc849d-f2f8-42c5-898f-e5abdfef4bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec0747c-e0da-4c3e-b5b9-4173e43fa88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a2c816-371c-4edb-8947-8ce5ce6c9f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d5d23a-1bf4-4905-b624-80893d31cca6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d3b0d6-76b2-4756-9c16-b7b66c4792f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a24d3dd-f9e7-428b-b429-1ab1cefa1fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ef3a52-2bed-4e3a-bb1d-e8d4ae7e45c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0243d1b-fa4b-4f70-b0d6-53e12589e3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714119db-39ee-43cd-a9c7-f0595d9919e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d7ab81-9b1c-4e7c-bb8c-eef024a96105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29756dda-a6d2-44bd-a70b-36df0488a21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27002dd7-215b-49e5-89a7-0ad0d98810d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5705329-203c-4321-8c97-6698d4dae052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e9390f-b290-4b74-8397-cda40b33d5a7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94dfa31-ab71-47ea-8dc3-92c1f1c87332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039d4874-810c-465d-8cfe-40f640790251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae166ea-184c-4c81-ab6d-5d8bbf288a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a75d952-550c-4bd6-8717-4e86e230d2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53408988-1d62-4841-b48c-ce5c0b969492",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb67baf0-3018-4096-9f71-a6653a588e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f39d480-374b-484d-a288-dfef89c1eebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f29404f-c652-4ec3-9268-2acf3e1fb1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90ea210-a409-493d-aafc-5ec11e7c35d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff79231c-fe56-446b-bf23-dd074729a046",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbe69b6-f91c-4db2-bcaf-70fe8b894b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddd100c-da11-4e09-b6d0-9d719dc8a8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1a00c0-018b-4013-876d-ee4f0d101f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c6b370-31e3-4a35-bc95-33d43b24cbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115d83c7-6376-4e78-80e9-f3d572ff77d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f45f84-a077-4a09-88e4-c2c7b62d529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7a1ed5-f854-411a-bf0c-b4f108253679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3d9541-48c4-4d4a-bbf9-8765f829f62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "365e0c23-4860-4f1f-81ab-acf8989fe9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac844f30-6eca-4d1b-8f6f-5e496628963e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d2410b-89d5-4b73-a1f0-946eccb40575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62a0b09-f8a1-4602-87d5-bfe26e71c649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f64aa5b-b724-4a20-8e10-4cf1a66671e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04294357-22fd-4cae-bfc2-93414a3b6206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c65b29c-321d-4151-ae76-4526d1d6fe0f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df01e56-f52f-4d35-a3e3-a50134eea2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e84fe78-8451-4095-8da6-5993306a7263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4232c7aa-e6f1-4072-9ff8-7749f1a83d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3ef1ae-2a4a-422a-8d8f-a2bce8e8e87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4694b826-36e5-4713-8ecb-a2af17f82a68",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dd36f4-836f-401e-b04a-32162739f55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a719f2e-1e7f-432c-8a8d-b563992f7fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df63d0f1-6d9c-49c7-8006-5db4550997df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21dfb118-72db-43bc-89d5-9b455db059fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a418c9-e9b4-4cfa-9533-286a250c990e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b321bf-299a-4b98-b245-494b24240813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b46664a-5ced-417f-9026-3d2283ac67cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2d59e3-1bb2-4003-a8c4-3cb6a560c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fc8849-0c56-4f30-a0b2-f9c16f9d8994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc36980-be4c-4f3b-82d3-320a63c11ef7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9803dd-489d-4179-a4bd-191bf6ebbc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeaadf7-5521-4df7-91c0-de420a53ab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72ba9ac-6249-4d8d-9811-8df5ab0b3e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3840903b-7370-4136-80f0-abb726fd3447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bab962-f8a6-4cb0-9b4f-c65727fdd2e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e64dbc-0383-4cdc-9f84-80be79622b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1596ce4c-5c21-4dc7-8eda-f8c758483afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838a001e-ae77-4865-b38a-9313013b29fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e8738d-003f-4e38-8acf-2b7fbb0d65fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ce80f8-2cde-4b45-b411-5436c83160d5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a34db-7593-4d15-ab91-85a68a1fe5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19497057-9932-46d6-bda1-c994ea3c5ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57df28c4-7547-47f7-9927-38d33265c34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2fd3b6-c69a-484a-a859-bbf145905a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64b8ba6-886e-4d8c-afce-fbbda2dc5614",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd4858-b9f5-46fd-989f-ccb156e6be9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ae8bdb-9150-4a33-855f-d4a1484189e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79da1fb1-2ab2-49dc-9765-02afb3d13246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e31b35-4886-4849-ba71-5b30af0ddced"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d6152c4-1b67-4a3a-b0d9-15d1c4eae722",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40be173a-3e83-43d9-b9eb-1e850bcb342f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da0652-f67c-4834-b862-d3cb713c7edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1e5d9f-c652-4c98-894b-0ed8dfe77f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d8dd9-0038-4eda-9be1-e9df2bc729b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47a04122-0f1c-4838-9042-b90c14f9c0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23393242-b16f-4773-b2fb-c90b8223744c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27f69c0-0fe0-4bc3-a872-403027a95ba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a10a4fcc-1a2f-47b0-a051-8e30628a6598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90b7157-206b-4e6e-a402-c67f600906d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50e032df-7de6-408c-b68e-83f04c395c6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2366741-e92c-45f3-bef1-b336b22932f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df2ce040-4666-4651-8700-f26e7c4b9986"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94cbbd50-363f-45c0-a434-14016cd5f7c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bda18457-e6f5-4e5c-986d-ab289f9e7d2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b3fc3e0-fd10-4929-877e-ee47d00d6f35",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "994ab4ea-3abc-4bdc-ac8e-3ee8e1b348f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb546fbc-bc14-4af1-bb81-2390bbd46ad4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7abd1979-da2c-4ea0-871b-dce73b199741"
            }
          }
        ]
      },
      {
        "id": "7ec434b1-6615-425c-a4ca-70c362aea543",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e9bf8e7f-bc66-4c1b-9232-60c353613fd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "590cd968-f462-4c8d-bef0-e30a2049263c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bfe9a86a-dc6f-4a17-bfef-8b7d5e00cda9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1026c603-6198-427d-bb4b-839c7f4a731f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b693006-406a-4b5d-8534-7ec39d3d59b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263c209a-da17-4514-b9ec-9449b3970b37",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d678586-6642-4ddc-a91b-ca7e69ce0715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2129a012-e317-4d6d-845f-b4c8433a241b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f8f7bd-e3c6-436f-84b1-b9ba1d08c132",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83990fa4-d696-4371-9791-9ed1e1462857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c69606-dd0b-4052-a0c5-e8fe3d96ae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efe9204-b0cf-411b-a432-d38b3c001952",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b140e5-1a72-4882-bd86-0c09c2d2e864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3197a4b-7c97-41c2-ad5c-40403cb61203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db1b869-4310-4162-afdd-61dcd6c01d20",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adc37df-1d56-4e4a-b088-0be62b11d40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3c38db-7a66-4753-bdce-7236fa8539df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f10911-3c01-4a9b-84df-250bbec2af61",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60dfcf4-7c37-4d98-a3d7-85a0472ea67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8961536f-f260-41f3-a441-f5c132b7eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed282e68-4b95-4cc8-9981-2c3dc6bfb6ca",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d85a45a-ab57-4fec-96a7-630a46cfc429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ff3ddb-6308-4301-bd8b-ce3a42188141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f91247-507f-423f-bf0a-c348a6ef1fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3b835d-a10e-4076-b15c-66d58a92ba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb3f0eb-b1c6-4ddc-b802-314bd6a6b3ae",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249506e3-a1e3-4472-b694-0ac557c668ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65bac961-179b-4031-aea0-fa787843082e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baedc00c-0d95-4056-b6f6-d022d9654af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66228547-ecac-4ba9-9e2e-3eac778e4b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f081941c-680f-4d9a-92ad-d81d5ff1a647",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582cb272-d8e1-4fd8-9dc1-9c2e0397c725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c900bcf-2f2f-47a2-8ab1-429eaf2d7336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b281ac30-4a0d-4a41-a103-719268e63477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ba4bf1-c2c0-4059-a0ef-0e5d5656afac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aec4da6-60c9-4777-8711-32fd643738b1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e356495a-7433-420a-bce4-293403cfa194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8590b6a7-2e7e-4dea-9199-e46499cdf560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d939a8f-5a39-4a51-bf1e-0f9ddcb6a7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cd1894-56ac-4ead-a456-6509e4eabc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d3ac43-3f5b-4923-9143-91e83528ccda",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a200b3-a7d9-426f-ac48-ec8c35f2e444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02e33f4-7181-46e8-8e22-c6f3ee75fb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33668d39-43da-488e-907f-6080ba407f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7241da4-41d5-4b87-ba65-436015adf0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d2cd0d-8909-4490-9022-ca4107698f5c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0094c2a6-b4e1-432a-b261-042ed420054e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed90f9e5-a468-40bb-ad46-1fef88734a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9370b11-8076-4c82-806a-fa796490a936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cdf8b2-f46d-4ab6-a1d5-0dbf71430b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13452b5e-1d5f-4041-b61a-3b682b77a0e8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc00b23e-3d76-425b-8e71-e4f09da5b1e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086513d1-b269-447a-b641-05b5954e94e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9811cf58-eefd-48c5-9906-45318e9ee971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c834177-6efa-4459-b02b-c3753123ba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed81bb7-4c8f-4946-96d5-cafde100a776",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb13b1b-b6b4-4c46-8d85-3575efb1b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ad7bf9-5a13-4cf4-8877-455114506668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148b6664-4ea1-4adc-896b-80f91b2936ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40efd518-77cc-4880-ac44-ec4d10953b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb28dba1-d6dc-4343-b90d-b8e46a88ec97",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0685267-de69-4a02-8f51-f295704beaec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9b891a-8793-4883-8472-d8fde9a000f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b27f6d4-0dfd-4050-b16c-33fd54d9ffe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59757fcf-8bf9-4e7b-95b4-f9cdc73737c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a58e4ed-b636-4fba-a9b3-af1c2a9c7f23",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd56d4-dca0-46ba-89d6-ad1ae5d7631a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca02f7d0-0242-4d8e-b3da-6a1c83440155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4b1b11-6e2f-4c81-ba59-4c584d0d9186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca043227-f2de-4ab5-9999-d192316dfd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3b77d0-257c-4a47-88be-fcebc875e8b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8f8c02-ba5d-4b5b-b21f-f8496e637787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32221f89-c196-4847-8f23-60597955a647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d384adf-200e-414c-a094-94bd42eaf7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53997189-6789-4d89-9cc0-f1373fa68c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478915f4-8ffd-4e99-8c36-49dcf1e6a91b",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b6e74-33cc-4ecb-ae7f-3a90527a2260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae75429-3e44-4b0d-b758-04fa61ad77b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5a29f7-6b25-4b1f-978c-872a4d679f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ef9ce1-4686-4ba6-a8c3-58ce552a5f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fb6960-9cd8-445c-b5b5-b76bc563fcbc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f6a1aa-9fb5-42c5-8f9e-413b2b48440f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c9c985-04c1-4347-af3d-38e93373e0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4bf1ab-71ad-460b-beb0-92b8bba0987c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298f41d1-c459-4610-99bb-3ac3d9c4d0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bd8560-2175-41da-a73f-719e599b01c2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b0de01-7dc7-4a74-be28-0304d4ad8808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99da6be-a6d7-4ea1-b8b3-75cc4ddefe02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2088aaec-a776-4de4-b205-c9353b32db29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40a7c0e-9274-455e-a556-37f332f90e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf0ad71-df1b-4ad4-8ca3-c5f248683043",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e3a917-03ad-4e59-9e54-ec3168612c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f254d5-b8dd-4cf9-bd83-6d7667a30f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f09c14-48be-48f4-9619-3118f2b23bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a1c044-7747-4167-86cb-1843e0f6c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8176ee3d-eed0-4701-87a7-dfe33349636c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5af76c-8dcc-4f2d-a9ab-de8b88de75a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c5c5f7-a6d8-4993-96b3-797e11a4d815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ac3412-e3a3-4a6d-8db2-43ee6aad7b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd313a21-3382-4132-a4bd-ef66708a40b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758f0ce6-5d90-4502-ad3f-e48807fdde13",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee3f8a3-1e20-4224-8133-84e78d64e9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8957dcbd-6585-4cc8-8b78-4a278792818e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987cb8d4-a103-4a1e-97b5-e3c791f09116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b49243-b94b-4963-8c58-e5bd451b825a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244c5eb3-056b-461d-8a37-d002b0bf850d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881cf2e3-68a7-46f7-9421-5ec9055c4d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f132f238-c25e-45e4-8c25-af784b24b925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85761a82-cc40-4a39-a4eb-ff4e7b2f10a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdb2821-e551-434e-8c6c-8881cb3aaf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933feab3-fb4d-48dc-bcd4-ecee0a2705ee",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be816542-1ef5-4ed9-8c6f-ac33db5a966a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa53b3b-68c8-4df9-b131-10b0ba1e2424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7db1367-3bf6-450f-8054-9302553f0c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be87110-0e9d-4e02-bc19-795d3a6e7d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b829c6db-d67b-43ac-af69-5c0628b8d690",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2daac4b-5eac-401a-b246-79380d00592b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e70852-802e-4d52-9e42-51b0440b9a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a61bac7-80c2-4032-aa67-ff8c710c40fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acf0d1a-9d45-4f19-b1db-cb6922a6a07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37287c7-cec5-46f5-aeef-548c968e7090",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5428d3-f130-4960-b27c-65ce5e81d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44de16f6-52bf-48f4-ac3c-459aa4491207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12f6bbc-a4ed-4002-ba9f-5ec2e4d49ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0679602-1897-4375-a790-cda3180c1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa21d3-7236-4bed-861c-2d11aa8ecd76",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d043329-de7a-40aa-aecc-67766aab67f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae098f22-03d1-4001-9953-77cfb9b013ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e5415e-ea4f-4249-8a84-353d60d2ad00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfed719-2dec-4bcd-be2a-7517c0d2914c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff5be09-4e44-49ae-a87b-0452fd40d363",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d1c34e-13bc-45c3-9b48-74866794d30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17f9e9e-a5d0-445a-a50b-855bb7526e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b8f087-de41-4a9f-8ac6-9f639076df94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86849ff-fe83-4f90-9d0f-3ac4dd45075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a664b51-8a48-4966-a40a-ffa6d43b9d4d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7934fe59-e86e-4b3e-b15b-c9c2e2311fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab45394c-60c0-4f45-b35d-4ed3c28c7216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f20069-e6a5-419f-9d87-0576b51ba37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea7ac4e-376d-4600-8943-ecd2c1905f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5bb395-39e1-437e-9366-e73aa769478e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed96c9ac-7086-4c34-9202-790e727ef9b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65515bbc-ba47-4eb6-a74f-b70e57754ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8ad061-bde1-4077-8ca5-7ca8e5a2fc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2898de77-385f-4f81-9071-0855504bcf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a388a6d-436b-42da-8506-e2b46a4c7472",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ea149a-9c71-42fc-a798-f98956fda0c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c54144e-9c3f-4f97-b7c2-d06b3037d374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32106f3-d578-4b9d-98d8-a1efc04c7f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68cb9c6-0c3f-406c-bb17-f3d281c3dd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facc85b1-e564-4979-8090-f73fe9954249",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77667c5-1525-4d92-9a71-b6d5e72e169f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9a7710-7a0b-41d5-b810-b2a8b666cc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930a9ccd-064f-4e9b-bd29-965238d7de7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9d4345-7b77-4a8f-9129-c53e5c9834a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc79bbf-2456-43a1-a282-018b41e5dfa1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205fa730-b3aa-482b-b9a4-63aef28de6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e24c29-fc97-42a5-b07b-52cc894bc95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b467d33-7a42-4537-a0a0-70371c15e02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cfcf7b-2063-428c-97b1-1aa8e997fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5384a918-87ae-4b5e-a8e2-59ba715d992f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d89722-afbb-4bcc-bb8a-b3f0b5f7d270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6906305d-a4a0-4110-ab43-d85c712eb867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69334e2d-a520-4bbd-a3ba-86a48fc9d890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1310e63e-4530-4038-90a4-09c104756845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fa7025-aef4-483a-943c-3b1bbbadcd8e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73b8e00-94b7-4f1d-9297-b32dbbb1e661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5cf0b1-f9ef-4cce-b6b0-93bef9b273fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7fffe8-58e6-40ff-bffd-b931421d4a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b8b4fa-3fa6-4f2e-9cd6-61354621ac72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d3aed0-262d-4ee2-87ec-c87f512716d9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b63703-80e3-4d1d-b35b-e065c6723c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73279b40-5d0f-4bd3-94cd-faa0c6cec392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c9df41-d58e-4072-8320-c7150cb85c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beb1ebb-71b6-4c9d-be7c-ea2cc33d4e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571177ae-d9f3-475b-829c-d2ce186675eb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a063e2f-bfba-4f02-99c8-f77b11cb6378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c922161c-7cc3-4462-842f-8147055a8b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed297e-cc52-4415-a576-b50aeac79d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59adfe7-4640-42e9-bd63-958179f18329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fc82bc-490d-48f3-8387-f1f8ff1465c3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b6db2e-def8-4df8-9d6e-05dae7897c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa956e1e-bffd-4d93-b707-86bce783c652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbccf35-81b0-43b2-b4a1-cc9aa360403f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4726f335-997f-4f40-ad25-4fba12227f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b1135a-dbfd-4bfd-828f-be2124edcb35",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd5262d-1e77-4da5-b4af-841fd8854614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5ae792-08c3-47af-b86d-168ccf8208e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45622c51-94df-419e-9170-522a6bcca28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bd1789-fa56-4908-82b0-b4c8bea0ed7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5d1592-7aa4-4d44-9d35-9a9f9fa8c365",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e33862-a9c6-4a4f-ac7a-85b14f03544b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e703ca10-fd54-4aea-af0e-4d2029d5323e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d38e17e-f681-4387-b800-6b0efe8ecedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf749d9-a157-4e82-8a6e-95f777e497fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b5198-3041-4f3a-94e1-f8f1e2c93f73",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f33a3f-9c0e-40d4-87e8-3c2b0cbde0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdba3d2-deab-4a13-bb10-b53b108546e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078338e1-0f0a-4558-8402-8dd28abe525d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c953121d-489c-42a6-ae5c-ac72d831df02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f1980c-b12c-4afe-a79f-7244a80dfa00",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4171aff-9db5-4f4c-ac4e-5c837602ef79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8f59ba-a337-4a40-a908-50672882837c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4abc61-c12d-48d4-b752-0c42f37bf54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aced71d-3631-48e4-967a-466d555c123d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555d7e6b-7b5e-45c0-bb57-ed31546b70cc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bc4548-8bf2-46ef-bda2-9a1dd9456ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538a28b2-3af3-42a6-a920-8e82fbdb3cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962e9ffd-fc8e-4fb7-be3d-ad0ce3753ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fb7ba8-2f0b-4cd3-8096-1bdaeba88d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23ef0c-4cb9-4e8d-b508-fd62698198c7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b823a8-0e00-4247-a972-060a9b69cdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657a9270-0a4e-41e9-b34f-09a8ec8b461f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e419ae8a-0e2b-44fc-866b-7b35a45e7dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f50ae-1e7e-419e-9fd0-ce0b24379fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9baf16-12b8-4f23-9a64-a78fe0bf9e66",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65637b3a-6913-417d-b026-435ac30a4a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872aa74a-5471-448e-88cc-39ace0a5a08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3d2635-adc0-492c-8c2c-1df965d69473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f8110f-a3cb-41b4-8ea7-89b789338cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9db223-898a-4286-8395-556ee1aafc29",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b29ba4f-2e99-468f-9993-b17d4f46e9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dda79e-6822-4132-be12-38a3605c2dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048f177c-a780-4635-9215-020f1581d65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42de1806-b282-4f42-9b52-ed5303380243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ec5881-1c62-40b5-abfa-e1b56250ab3c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611ba517-9069-47c1-9195-f8fd83092971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4154483-0900-48f8-a781-fd181b723601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbde4190-ac01-454f-9d65-9de778f76ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34eb61ec-c1d0-4b25-86e2-2bd1931d254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3073983-4f0f-4514-bd42-4b108d6fcb17",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1836cf4-829a-4b6b-88be-9585403e0a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bc8ed6-cfce-48a7-b049-5a67b9a771fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2def343e-6053-4470-bb82-64c826fb4f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5508fb-57b9-405e-8178-a5a2ee607fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989900a6-afec-4ebd-b480-02f794a3a4a1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e02f20-3520-4526-944f-18a9329c879b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f61952-e1fd-40e3-982c-6bc212845558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c8c39-ff2a-455f-b596-ae43bc7205a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9ae696-8695-42c6-a2f9-cc3758219695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b05701-75e2-4de7-ae8f-f4d1b31ed1e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6e9a92-6b97-4d53-89d9-94286863d7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ba827e-f364-440b-8975-573faa0dd86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb6c466-3f37-415e-a1be-991546b7d9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc89bbe-b6cf-47a8-9995-eceee9aad1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5259024-b495-48b3-964c-19b9ffb940eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ba3140-efd1-4539-be26-5e31ae430c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06c17c9-eb3e-47f2-bb43-82d8c7d8fa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe21aec-9d27-4f7a-9ef9-856620b6d685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d93d1c4-cd1a-475f-afb8-f17b6a76ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db55a330-4a35-4bc8-8ad9-c89c41153078",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d2a786-b550-4a2b-ab9e-b8478b0ee3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c107246-fe47-40ba-a23a-44cfdcc048c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c5aa88-eb67-46f6-baeb-fd8226d0bee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee306ad-f7e2-44be-84e7-e1d68b7c0a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d371df9c-7fb8-4812-9cb0-f166d1697df3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e892bb3-21da-430e-997d-eb1fc128f1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b374785f-b5dc-4466-b25a-4071480e8e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1183ecf-77fb-4aca-89fd-8a3cb6983b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29af4e4-8f92-4385-9da2-09650581078f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550b6dda-2e9a-43ef-8aff-9ae4ff2c48c1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5da2c4f-5b09-41f0-a451-b5e9bd28e15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85dfbb8-da83-49f7-aed8-1091d4aacd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13f640d-0e59-4659-ba94-09e5ee63fbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6979c2-897a-4c47-95a9-dbb9ca2ac9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f3321d-f7c9-436b-abd2-edf6c87ca7c8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8581bc-22ce-4d53-ac29-87a72540de46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add50344-3005-4c1f-abc0-4bf23609f3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3be00f-935c-4b60-8d07-6a4627cbb31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12002e4-898f-4730-b55a-81f785ab41cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83a5ac3-a6cd-407b-bb37-2d0820afa05d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea9a6ac-bf01-4e38-8d67-c9da7a42fe7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48473d9b-239c-4108-91ce-633abdff1d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8fbe90-f782-4303-8457-6f36a70817c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ec82ab-9b0e-4bc4-9d29-4a71d1400dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4176265b-a397-4e20-97e4-658a2bcef504",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d384fb80-180d-4aed-84d4-899948cf2247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a46ad9-6742-43f5-a830-45dea9a0537c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b095535e-6b6f-41ce-9829-8a31e3e593b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c948c43-5122-42f7-9358-3b770d164aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d2f05b-1005-41b5-9896-c3a787690a20",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4731acd7-722a-4115-812b-f1ac6805d249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b019fb-c0e9-41ef-af30-3dca3c7ebf2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf70597-810d-45a6-8547-57e603b2d07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b28812-fa69-4461-95ac-9d5f9cab4e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4f8366-5200-4c67-9948-68648e738f73",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2998c6c-91e9-4a76-bab9-55e523106162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36403edd-11f3-41aa-b058-69445e2d9279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2cc24e-c83c-454e-b7ad-08e2ba54f7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cf7be2-bc7f-43e1-a4c2-35f11e9e142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b229ef7f-7a14-4826-8535-7f0ee3646f5f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10b5dd0-7211-4943-8993-951bbcf0d6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e6abb6-7267-4024-8614-9fe568d33100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c48dbb3-f83a-4079-baf6-4683461cf030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe6c060-04b5-4973-bd77-79538664f298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6653158-3912-4abf-ad0f-a6ff104322a1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab57a34-3bfc-461e-9232-83b4ce95fb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4215d072-c90a-4004-9c62-6a573c7f5ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400a6d8d-daec-4dec-b41d-b8a4875b9d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6ada0a-d70e-47a8-bab3-7fa33dfd2222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeb0aa3-7d83-41a3-a4e7-71ea584975cb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d3403c-8de4-42a6-b387-5696f6d7ef7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86979ecc-b5fa-469e-8df1-a2fdd4a32337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5213e-bb10-42a5-aa30-772611722091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdba32d-78f6-4c9d-b768-4554b28ed029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bd6103-72d2-4812-9729-44471adad1ea",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ae07a6-6e83-43c2-b1b2-1eccc7f7b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b039b0e-6081-4043-b872-d1642f38c546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5639b88-6649-408c-9821-d3e3185f0042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c907cc7-dcc3-4ffc-a3d1-74d532efb897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f7e9f0-75bb-42a6-a75a-43d9b35a6652",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68dd2ab-6706-4caf-ab07-d04167d86a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8cb36a9-31b4-4ab0-b04d-8da202f6687a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423002c-0402-4dea-bc0e-3f910e042333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36f2155-8395-4e99-ada8-6b6fa61c444e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d03a4d7-4991-478e-9e7d-67396b3bad30",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3183caac-838e-4310-9378-be5f9f0a58af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321bd9d1-a773-42ac-93bd-f2ed8e822b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38c47a7-e69e-44b3-8d46-2a7826e0f97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55caa734-e552-4b33-8218-dc1515f146a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9374da-0b8b-471f-9f77-5c418612cf29",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7b01d7-7219-4dc4-986b-0c51b3ae4598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e68bd0-9317-484e-bf9e-33bc92b3fe00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68779c90-2f81-4457-a7ca-02bc4316e9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d259c270-887c-4c76-bae1-918091cdb472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0398f198-e029-4eba-8112-92a63a640498",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11492bf-2971-4b63-92de-cb8e3c20b2d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5518ffdc-1c6b-415b-b466-04325741ce35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaea242-6aa7-4021-81a7-0abc069433c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614f8104-1718-45fd-b05d-6b0cd48b1855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc652543-bbb4-4a38-b1b6-69a2ec5d9eca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dc4ee4-a158-447a-9787-9fff3bf55a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c455c7-e9fe-418c-ab9d-96046a875c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408b47b1-902a-4ee7-8515-391cea3fdc7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a74760-9e90-4ceb-af4c-18b96b2c18cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579e9c4e-7b55-4775-8224-26a0e0e8c24e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a20e94-6c66-4ce9-8bc3-21ebda2c4eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c280ca-a6d0-4a51-8e15-3c1f5413a8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843a6e8b-b151-4bcb-a46f-1544c5f924a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739de6a8-5d54-4705-b687-7c0800deade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c0a107-a9c1-4d87-b468-f6c91bd2a5ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc0354c-0762-43b8-8cbe-347e30957480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe101e0-cbc1-4d8e-843a-0e7878e57d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9854a9-5cb6-482a-a4e7-703363892a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d80bfe-dda8-4cbb-94ed-1d13eb62d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33b1463-67e1-4861-978c-3df71a988d09",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dc2810-5333-4a83-ac15-314ded93d858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a5159f-9369-4042-b5a4-fb07539feb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8754a789-06b7-4091-8e6c-f7b3db9c3dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae1628f-92d4-40f1-99e9-74f8e90dc108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51c2d95-05ef-4c85-a8b4-52afe23ab929",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bd5cdc-9318-4e25-acef-a0764fe300e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1618eec6-9169-4bfa-96ba-093696fafcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ceb5c4-2691-4f7a-953f-63aee03333dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459a46b8-dc78-4d8d-ab80-d83cc3e5b89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f4a6f3-d5e4-47e5-ae13-2ec9e5045eb7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533b0998-7119-4b86-bb5e-ad774f4c9f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c7e69c-0fc4-4d34-a8da-f4a8faf70aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b8472-2800-4c26-bd61-e3ee7bb34c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f7fc4e-0292-4104-bc37-acb1a3278115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc41138-5219-4c04-8c5e-c2543a8ff9e5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea5ba17-8e95-4a39-96cc-2c4f026d808b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a1b10f-04de-4013-be47-b8150f431e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80873c47-38a3-4245-a9c5-74491bd149b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3abd917-06cc-46eb-b805-9ce2de3b8f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480f392c-74ec-4a60-a50c-2e5906003839",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2ecb1c-680c-47b6-b9e4-e5902afe34c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef454f5e-2e2f-477e-9404-c6a38f7b993e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b628c0f3-fe59-4713-aaa4-89698b03101c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041a54ba-890c-4731-93f6-62a8f840b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43f288c-7e29-4cfe-81b4-f885f87464f8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8372e2e-21be-4dee-9815-7698c16ffd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a36d00e-084a-4401-ac29-51380cc28b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2970229f-06ce-48ee-949e-ec06da4cac45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a08baf-e2a8-472d-9073-8572619d3b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3ebdaa-f70e-4159-873c-074fb0c24d77",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac5947f-e5ba-44e9-ba35-61afd172b6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d34652-c2d8-4a92-85bc-41ebf57c0d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b45e93-685a-477d-8568-81bbb857c96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5acc368-7833-4ea1-9fc3-265711152aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60778ab1-64ad-43f9-a868-44c55c3a7d44",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aad94b-c4fc-41fd-be05-c997469c074f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50596f9f-9d91-49fd-b1d9-8c629550ae41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ceba3-a6cc-4667-9e0e-7b0c8b76abde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0195837b-29ff-48e0-9b4e-ab9d35667cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a97b9c5-2e8d-4ff7-be4f-dbb4ce44e9a3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d8f11-14dc-48e7-be55-23bff3a848e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bc5c32-8ca7-4169-bb79-231cd1869b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f192889-277f-49fb-8597-29c53fec321f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab24040-41e7-4160-8f7d-9b56c8b55f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710e78c1-379c-41f6-a702-93da04b94dcc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79cf44c-f91b-48fb-befb-aafea5fb047e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0110a62f-62ac-4698-8240-9e700f4c7687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bc5d91-c5dd-4986-b04c-6bc29f9c7d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3686fbc-6552-45dd-b05a-46b4d5e8bd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fafa28-c45e-42e9-9aaf-78afe293c7a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7f2914-08fd-4c20-b70b-80dd20929a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c9cdd9-1146-4990-a10b-c9bacf08d169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa02be9d-dae2-488b-8978-a424c86b94a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee092f2-ba18-45ad-8f22-7881bb2d9dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b99de36-0d40-4fdd-bd24-173717f4a2fb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed01c2b7-8024-47c8-bdde-a68843b1ab70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3792a234-1a6e-4672-8d69-b834e32ff5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ed00cc-fa5e-4b17-8f51-1664f6476526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9781af9-3ab6-4251-a34e-50c2eab98945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebf974f-52d4-4c0e-844f-be558caae719",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2febfeb5-d9e6-4dac-877c-7a148716ce53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31618d0-de53-4e03-abc4-6a0d2b0d81e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99282d56-460a-4332-9c1d-02b2e9cc8827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c96fbe-5d03-4324-bd88-4642a0255c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202b159e-dd35-4fe8-9f53-b5e301253aaf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521a450c-3459-4cbb-af23-ef638c99ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07b3db7-fbe4-439c-bbc7-04dfb6f2ba5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f340d588-25ba-4e9a-a946-96f820130b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f3a0ff-b0b5-48dd-ba66-c7266eb0783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160dadcf-b0e2-49ce-879b-54d5f63941fd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beefc527-a223-42fe-bedc-a087969d7a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ecf3400-3e4b-40b3-920f-447454739568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be8140f-1285-4468-ae0f-27ea43696592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c79a8db-48e0-460f-b27b-71cda47b8c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65c87dd-5ada-488d-9149-4ab2ef7c83d3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd8a621-0797-4116-a7de-f4031a7ffa80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a76d8a-677d-4603-a1e1-7fd65107007e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917c7918-2703-40c3-9e2f-dc452c4c4acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a26434-5384-4b26-862b-5592f3f12628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7271434c-d94d-4da4-b3ad-ea7e30475fd3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5fe36f-1557-46f4-a0fd-7d795fb31078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "370a9560-c32c-4149-924c-4a27aaa09a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5137ff-9d4b-4c5a-a794-5ed25a745ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62441cee-4bbf-415c-bbca-876fc7b45293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58e4c17-85fb-452c-91b8-4817315c7214",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f0e78-ed51-46a8-8df1-74b77e8ea02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e9cd12-9a39-40eb-a5c3-04d1f2d8f73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e623ad9-555e-40b2-8a16-264263ce4df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21adff6a-33cb-4ade-8b46-08ba873b63f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367934c4-07d3-4e2a-9828-5f332279be92",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd46369b-d241-46cc-8487-df2e448fac3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6787e599-450f-4fee-aa5c-d1db1df1ae71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00f17a-daec-45ab-a613-40a56306a07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752727a3-d38a-4072-870f-89c3ccda9bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740498a0-feb0-4f37-a040-7f8daa355f2c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af04ed0-3e32-4f30-9a52-d7adc2d7537f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d19a5c8-005e-412e-ace3-f7873fea94b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab231839-fb07-46af-bef8-1470067ba999",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9588e6e1-cfbe-44c4-aa4a-71b4ed5fc1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5f5df0-23ca-4e74-8b82-e7c077f9924f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f7f207-d76d-4d8a-949b-ac141a0c1f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79505f4-59fb-46fe-aeb6-102fd0940294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad84f89c-8d3a-47a0-bef7-7ccee42e818f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28498a5-57e5-4b00-beb7-19103c25192c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913d2641-d2f0-4910-a157-1076547ba1b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34b28d-a2f6-4906-9520-204f93dd6385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad4715e-728c-4306-836b-0b0645494ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9f6e8b-0b2a-4f7b-a8b4-50811b2b21d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612ec14f-920c-4031-8fe5-ad1fd5700a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced2d778-5dea-47a6-9063-0487e2fae53a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4846debd-050b-47bd-8d7c-87a1dab304b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507c3c8e-7cbb-48af-b010-562bbe154fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21b9448-ca7c-455f-826c-88b2b5247f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635d96c3-42e9-4c50-9154-bb49c24f839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401db490-1f87-4277-b4ee-b6728b128335",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599c8ed9-427c-4848-b030-b9c91045c4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f590b007-8056-485b-93d2-dfbda9ca2517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a83ca1-89bb-443b-b05b-560a2cbd3bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9000e150-5c14-4c81-93ce-2746b3c21b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12c5b0b-58d1-449d-b53d-03b01db62741",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c835c5ba-d18c-4f3d-a925-eddfe263fd78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e864a5b-5237-47b3-acfc-1a843742c34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f9538c-bf8c-4cf6-93f9-6fcbc6a6cac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fc3948-488f-4f24-a4de-2d7bb9fdf96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b31d070-6d33-4be5-8636-a845c5221d55",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0f2f7a-2ac3-4c0e-bc62-6722b14f9553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744b77f7-346f-4975-9c73-2e0ab1550963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ddb8f4-baba-4bac-a543-15ffd03187e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3cea83-0b82-45f1-98dd-2f85d5d0b226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33e9366-8cf6-4e12-bfb8-94cb4cad997d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043f40c5-179e-4ac2-a24e-9513f83ad28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce66368-1de9-466d-93d9-9ba57e748c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a5cfd3-ff0e-434b-b7b4-fa53365d409a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc2454f-e9ab-459e-b9a9-da649dfd667c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b294f0-205c-4ab3-a915-d8d182282e39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bce594b3-cb45-4d68-8f83-4a6b6a283e37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fd5afd6-f601-4bf3-9825-0cde979829c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "673f2542-99ac-4a97-8748-8d9a644001c2"
                    }
                  }
                ]
              },
              {
                "id": "4c48baba-efdc-41e5-8203-6ade3c3b7d4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a21a753-1edd-455c-83b3-1baffc1efef3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b16351-116f-4d9e-80bb-9eb46ea7c580",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5747e086-374d-4802-8214-781f7561eae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b5dd7-d147-44f9-ab57-e252e19cc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9abd33f5-cb58-4347-be74-ead39229a99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5359c7-01e1-4470-b62d-b21eb25b1289",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ffd5f7-8647-43d7-abd5-54f2a46325f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5c5a5203-1801-4c06-b421-9c3bca18170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f218c31-94a5-4c34-9487-fe4d24cc9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c02cc673-c0c7-4182-a4b6-80b893bf1ef8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df7a62ae-bacf-4075-9b07-5a71327cf2f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8332e0f0-7fa5-4781-9c37-9089a51c2a6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0c7e515-abde-472c-94d3-bff947c74f35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebeedb6b-c6d8-40c2-9a30-34733b023566"
                    }
                  }
                ]
              },
              {
                "id": "568471ae-eb3d-480e-b72f-4f18c40ee669",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "82d31f2c-6729-487d-a1f4-c4c84cb66833",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c229cf9-061e-44c7-9d84-7454fb60bf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c8fabd8e-d1c8-4bcd-b864-da2e23934346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bed743-bdc8-47c6-93db-50056abea668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcca70fe-5952-4209-a2de-86747e06d55e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96e8d1ce-c6a7-4938-87ca-923d565808cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "145a9439-a831-418a-a467-5dc60b43a67b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8778be0-cf56-47f6-930a-8a312a1a3d62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f1cc9d3-f5f0-4719-a783-a0f5cd6094f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f6f52c9-ab15-4128-a90c-eb4357378403",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3fb91a9-57db-4034-9320-a8865a3b535f"
                    }
                  }
                ]
              },
              {
                "id": "bc336a92-b14d-492e-bcc2-99c6738d5ea8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf3c49dd-1f22-4831-a470-cfe4331a7bbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "afbc6dd8-789d-4ad4-99fc-112c90eeef64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0393270-0322-4981-9b68-a8c78e5a3cf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ddb17ff-61e9-41fd-84bf-04f221264be6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9cf6687-0da4-4d20-a4e5-ca4295dd9af3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fcbd7b65-348d-4a5a-9587-5c229a514ab5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b4ae1f0-ca9e-4cc4-921c-6f5e411e8c06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e683e33a-48f1-4672-9ce5-16a12dd8431f"
            }
          }
        ]
      },
      {
        "id": "8fa9b396-4d66-4de3-ab47-dc3ada3af716",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "53bb4f01-3c87-4872-8814-c899e316428e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "687901cb-4c4e-4cf8-b556-e696244afc58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ab66b9-6ddd-4ab4-98a7-01c2c58b83ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "556a9c84-f8d1-4383-8a12-924da55c2107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5ecc43-356e-4924-a619-f02edc30d6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e1c873c-3ba3-4c46-ab73-557978c0ca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6358226-8d30-46c6-9206-7b33c1eb9db6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdc778e-5035-4b55-a86c-215f82e1fe68",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a0d8cccc-5cc0-4f40-a235-4d98472afd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fe0ed7-ecaf-4f53-b7ad-409cd4e1ce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd2ad574-b77a-43ae-9ad6-b6b885655d85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1762bfea-c557-42eb-8dfa-34100b5344ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a551003-9b18-4b83-9cf3-2fc3373a1465"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7600d991-27b3-4d94-ad60-01593dffdb95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23dfbfae-7f3d-4581-984b-96eff4bfbafd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f94befe5-0202-4248-9452-d57217851a0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "71c78b2f-e459-4ec2-af2f-434294ee34e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f4c4d57-347b-422d-896c-6acf3c29547e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a633522f-3692-473e-9dbb-b33f31daa108"
            }
          }
        ]
      },
      {
        "id": "988ab666-d219-4a02-8237-161cb2efde0f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bb36c745-db28-4ecb-bd88-8ca42291aca4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcd22839-c8e8-47de-8e26-91710e4187d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "913d5099-f5bf-48f8-a333-4ddedd076a18",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8ea2ff-6f56-4f8b-921e-dccbb620533d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d24ff634-d14f-4593-8426-56958f216791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bef374-6215-4aff-b652-9d5dded15254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad32029c-3788-471d-a51e-dc161fe2610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2961f51e-1a0e-4ea9-bff2-2a54b31a19f7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03463a09-3ac4-45c5-aa19-501ef1bb821c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d40e2833-7486-4d6c-a8be-c88dfa779fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99a243e-be37-4b28-82e0-845dea6f6721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81f1248e-2290-47f4-8ad4-da8df0df43db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4312e128-e344-44a2-8249-64c4be40f33c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5182f4ae-d721-479d-a988-5198e63f205a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24b44fad-98ff-4e31-a5bb-1b11c861f5fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cdbe721-f686-47f0-9eef-ff207cda0cfc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3889800-6d1f-473b-ab59-06cb13b9c52a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5000957c-d5da-43eb-b90a-b2e3647839e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e22b9124-b368-489e-aa37-048f6d274fea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "735e56e6-62e1-460f-99f6-91058212db19"
            }
          }
        ]
      },
      {
        "id": "297dd0df-a48a-4fab-b091-584b63ae670b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bd0fc601-d97b-428c-9451-b500e6515441",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a598cb49-49c4-4e5d-80c9-528a61a5500a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3003bc3d-206b-404e-9489-df714c1bce26",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82afa5-f956-47cd-9104-6f7f4b6ad630",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9eafd23d-4e7a-4640-8fbf-daeced46d5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5c6dd7-3ea3-436a-9235-d7e14a26e133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6fcbfc8-7ac5-4149-a21b-d49e625dbace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad5ae64-f030-461f-bfce-ffc2c9646695",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4f5ac8-f1bb-43b7-aa06-af9f74650db0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "906435a7-fb67-419b-89f6-3ff8b573216c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efead70c-8ace-4628-b571-3fe63b508a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13b5400d-579d-4125-98bc-9b8555365127"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3cbc6a6-60e7-41c9-a9b1-28f2d8bcc83a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e7e58da-56cb-4816-8681-260818b30829"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1950390-b896-45ef-adab-0b203891d537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aa46ca7-cf81-4f8b-b777-a3336c758aad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "957bdb62-f9e3-4494-bd74-3c31064ee436",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59a78f05-99c0-4d78-b10b-97c809f40695"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0b15f40-f064-472b-9158-97b7de1beb7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8af45ba6-0faf-446c-80a3-a19966f17a0d"
            }
          }
        ]
      },
      {
        "id": "e70ad2a8-67d8-46b4-ac62-3122dac4f275",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c85ea20-0f67-4b83-bd74-f8f74a171538",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0414d5be-910c-4c69-8b55-c2471826f544",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "224698e1-b4f9-44a4-894c-d37e35b63a2d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "309c19b3-c156-4038-b6e6-3a19316444e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a466f456-7c93-40a4-b939-bd87217eb6b7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 598.8931297709926,
      "responseMin": 6,
      "responseMax": 4602,
      "responseSd": 641.5734743035281,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671064858701,
      "completed": 1671065027964
    },
    "executions": [
      {
        "id": "dbd50119-bec9-4285-ac64-ce55bf4ca7f3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "06452d56-6e7c-49e4-954f-d83f32bc5a62",
          "httpRequestId": "64379a58-ad09-4ef8-be49-6e72ca946731"
        },
        "item": {
          "id": "dbd50119-bec9-4285-ac64-ce55bf4ca7f3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "04001337-2d93-4050-adea-38d8bc5c309a",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "dce03082-ef07-4775-94a0-83233b109d01",
        "cursor": {
          "ref": "85747704-a4b0-4f33-8aaa-fd87c8e6678e",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bdce0e9f-81a7-4ab3-88d3-e756dc5c2e72"
        },
        "item": {
          "id": "dce03082-ef07-4775-94a0-83233b109d01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e789744-7f34-4e50-b829-bfd51c377cec",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "0b686dd6-aff1-401d-a419-01c7e83727c3",
        "cursor": {
          "ref": "9bb438b9-05e3-435d-9642-cf7a0b2f9ed3",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e9cba52a-f67d-420c-b774-3e1bbe95d0c8"
        },
        "item": {
          "id": "0b686dd6-aff1-401d-a419-01c7e83727c3",
          "name": "did_json"
        },
        "response": {
          "id": "f471f213-718b-49ef-8a8e-3f5d91165355",
          "status": "OK",
          "code": 200,
          "responseTime": 1273,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce6339-d70c-4cea-8bc6-989f9e48be6a",
        "cursor": {
          "ref": "840234c2-8ef7-44e3-b594-570d4a82d610",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "efd42d19-1d8e-422f-a3c4-acad121f8d38"
        },
        "item": {
          "id": "79ce6339-d70c-4cea-8bc6-989f9e48be6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a5e057ed-e8dc-4774-aea1-48997c5450fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce6339-d70c-4cea-8bc6-989f9e48be6a",
        "cursor": {
          "ref": "840234c2-8ef7-44e3-b594-570d4a82d610",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "efd42d19-1d8e-422f-a3c4-acad121f8d38"
        },
        "item": {
          "id": "79ce6339-d70c-4cea-8bc6-989f9e48be6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a5e057ed-e8dc-4774-aea1-48997c5450fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b077e2b-5a80-487e-b62f-30552696e22a",
        "cursor": {
          "ref": "9970b93c-a9a5-4108-b7be-b08f98608c1c",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "818b5f2b-0761-4d53-b544-b2a988e1542c"
        },
        "item": {
          "id": "5b077e2b-5a80-487e-b62f-30552696e22a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "09c5eb31-124f-41c2-804e-4f36015520c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 814,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f512b508-9153-4d14-8bbf-4b7c75032c53",
        "cursor": {
          "ref": "846dca70-7558-430f-9a8c-9259357bbf63",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "55a4b9ca-3882-49de-ac71-53c046b8d7e3"
        },
        "item": {
          "id": "f512b508-9153-4d14-8bbf-4b7c75032c53",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "95b30890-7503-4852-a812-6472491a368d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 516,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c49be-3d46-4c97-943a-f83113194f38",
        "cursor": {
          "ref": "712445fd-dad9-4ebe-971f-6ae28be8a881",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "59bfb7f4-34a0-430e-9a23-9116dc697525"
        },
        "item": {
          "id": "740c49be-3d46-4c97-943a-f83113194f38",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b270c92e-2b03-4dc5-a07e-80aefc3fd568",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3f05c9-c376-4215-be08-a91436072af8",
        "cursor": {
          "ref": "533c6151-7bfe-4bee-b54e-12e08a2b83ea",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ded9e46d-8a1c-4f0d-b10d-2af04cc07085"
        },
        "item": {
          "id": "1a3f05c9-c376-4215-be08-a91436072af8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "1f0716f1-42a3-45ae-b0a9-18e3030ff390",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 525,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3f05c9-c376-4215-be08-a91436072af8",
        "cursor": {
          "ref": "533c6151-7bfe-4bee-b54e-12e08a2b83ea",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ded9e46d-8a1c-4f0d-b10d-2af04cc07085"
        },
        "item": {
          "id": "1a3f05c9-c376-4215-be08-a91436072af8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "1f0716f1-42a3-45ae-b0a9-18e3030ff390",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 525,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f43fd2-21bb-46f0-a593-64c1ab5423f8",
        "cursor": {
          "ref": "ff8425bb-fd1b-4f50-86a7-cc1fd0e18d82",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "54ce5b2d-6d85-435f-b2e3-49387fb79e5f"
        },
        "item": {
          "id": "b7f43fd2-21bb-46f0-a593-64c1ab5423f8",
          "name": "identifiers"
        },
        "response": {
          "id": "9e1af876-4e90-48d3-a554-d10648a84b58",
          "status": "OK",
          "code": 200,
          "responseTime": 903,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbbc7bb-28c4-4fa8-b02e-fc3ce359b9d6",
        "cursor": {
          "ref": "cb749ec2-6d86-4625-b3f0-3d2f7e124223",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36946a8c-c819-4dd9-85d7-06f831d34304"
        },
        "item": {
          "id": "9bbbc7bb-28c4-4fa8-b02e-fc3ce359b9d6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9122ee59-ea56-497b-a1ed-7525be5ddf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbbc7bb-28c4-4fa8-b02e-fc3ce359b9d6",
        "cursor": {
          "ref": "cb749ec2-6d86-4625-b3f0-3d2f7e124223",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36946a8c-c819-4dd9-85d7-06f831d34304"
        },
        "item": {
          "id": "9bbbc7bb-28c4-4fa8-b02e-fc3ce359b9d6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9122ee59-ea56-497b-a1ed-7525be5ddf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ce80b5-eb8b-4e79-b707-f79fe08d3bf2",
        "cursor": {
          "ref": "e3d4dace-f352-4023-85bd-0db99c7e3a1d",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d10ffea6-97f9-4efb-8410-2eae609dfb72"
        },
        "item": {
          "id": "57ce80b5-eb8b-4e79-b707-f79fe08d3bf2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "47d1c77e-fe1f-460e-be57-68229387952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec2299-9af6-4fa7-aece-077174f5b5c1",
        "cursor": {
          "ref": "9f67bab8-85f7-4aac-80f3-20235818fe9c",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3bdca41f-145f-47a2-9224-f9fb230c90d9"
        },
        "item": {
          "id": "02ec2299-9af6-4fa7-aece-077174f5b5c1",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "bec8adca-2e13-4040-bc15-d47a3298168b",
          "status": "Created",
          "code": 201,
          "responseTime": 3177,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "e155685a-8abb-40f3-9dc5-d4b8099c92fe",
        "cursor": {
          "ref": "dd6ba38d-4783-4a7c-b5ad-f53478f63ae0",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "57f96590-7cd6-428c-b1c7-e4e12c007846"
        },
        "item": {
          "id": "e155685a-8abb-40f3-9dc5-d4b8099c92fe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f4b81449-348a-4f06-97aa-ddd054ea0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a6c926-494a-4acc-91d9-f355c657b5b5",
        "cursor": {
          "ref": "58e6022d-d33b-4d0d-b876-67d874bff41c",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2d06208a-4c48-4139-8e85-b7ea97c3b6da"
        },
        "item": {
          "id": "e4a6c926-494a-4acc-91d9-f355c657b5b5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "74420ce9-9a61-42c3-9384-3964a2c76a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f74a49b-84f8-469e-8ef9-67c85a486544",
        "cursor": {
          "ref": "7fd63e31-6595-42ba-bf87-36b0577f4aea",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a6bc7116-a523-4227-8465-3d2fce7be204"
        },
        "item": {
          "id": "4f74a49b-84f8-469e-8ef9-67c85a486544",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6882abad-5e1e-4848-a9d2-619a0a3d805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f860a31-4303-4da8-8a18-bfedd42d2a37",
        "cursor": {
          "ref": "b76fc8b2-5d86-45cb-abf0-8a1b6cbc1f0a",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "50f97f8f-add3-456b-91e4-6348d776c535"
        },
        "item": {
          "id": "4f860a31-4303-4da8-8a18-bfedd42d2a37",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2ce0c600-7cc1-44b0-b8f4-0ff2a8a35c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe32bb08-014d-4e53-955e-8a605f4c9ba4",
        "cursor": {
          "ref": "2fa5b1ef-6c4d-468f-b38e-9810bff944cd",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4feb0f57-faaf-4a2a-a0f0-87f13fef94d8"
        },
        "item": {
          "id": "fe32bb08-014d-4e53-955e-8a605f4c9ba4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0a81a3e4-5ac2-4fd1-b669-179e3a60f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6070bd5a-98ca-4d55-9436-80f71a324d5d",
        "cursor": {
          "ref": "67e5353e-044f-4e1d-9fb2-4801ebd49a6c",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3413eb3a-d1bf-423d-a16c-5934fafe13c1"
        },
        "item": {
          "id": "6070bd5a-98ca-4d55-9436-80f71a324d5d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d18ff45b-791e-4478-9eee-7031a2d279e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ba6b61-fe44-4a98-b26d-29cdd1bcdd3e",
        "cursor": {
          "ref": "809c9fdd-d2c4-400f-b182-dd845eaeda51",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dab70be8-8c81-4469-8ea2-d9aa0c9033c1"
        },
        "item": {
          "id": "f7ba6b61-fe44-4a98-b26d-29cdd1bcdd3e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6ee99e95-0eb6-4b50-9385-41dc5eb090db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b151ffbf-f9a2-416a-86a4-376099c38efa",
        "cursor": {
          "ref": "48e95eca-7456-4c1b-b126-9c0caa93dab6",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "88872c99-71ef-4aa4-9d05-6ba81935f105"
        },
        "item": {
          "id": "b151ffbf-f9a2-416a-86a4-376099c38efa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20812f48-9b9e-4bc9-b14f-37cc2d813822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7370a210-09df-48f9-8c3e-62afaf95e15f",
        "cursor": {
          "ref": "2fc4ab42-fbe6-4580-8717-2fed733cbcc2",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0fd7864e-dbac-489b-afb9-499c8d7e17cb"
        },
        "item": {
          "id": "7370a210-09df-48f9-8c3e-62afaf95e15f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ede1dd78-951b-4d0f-bdd9-9bf8b6e59e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f729c9f9-a449-4b8c-8683-f28fdb6335fc",
        "cursor": {
          "ref": "e016df0b-b417-4cbd-b664-7b99655fb83d",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55f053d0-4d6d-4242-a61c-9c90d649069b"
        },
        "item": {
          "id": "f729c9f9-a449-4b8c-8683-f28fdb6335fc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "47aa9b35-d582-4b59-965c-f4b88d70e466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d582ac7-3215-4833-9acd-462af6ba0c92",
        "cursor": {
          "ref": "3351c5e2-9bea-4993-bfff-98eb1003c09d",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "640492f6-72d7-489e-b021-57de852fb114"
        },
        "item": {
          "id": "2d582ac7-3215-4833-9acd-462af6ba0c92",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "03fc807b-9625-4fd1-9b8a-ffdd20be3dd8",
          "status": "Created",
          "code": 201,
          "responseTime": 4191,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "8ac7c02d-24e1-4a4d-81c6-a4fc3ff60466",
        "cursor": {
          "ref": "4c14c08d-7f97-4b55-8bd9-85e4be2080d7",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "78983c5e-2f76-45c8-87e8-9f786cee9cae"
        },
        "item": {
          "id": "8ac7c02d-24e1-4a4d-81c6-a4fc3ff60466",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3447072f-c794-4429-96a9-bf36c6ab2897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b6fc53-2cb1-4387-b74d-f4bc76f2c80a",
        "cursor": {
          "ref": "1a2f7bfe-a95b-4d02-a229-d5ed972dc9b6",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "980ce67d-77a1-4125-b78e-25155e7da31a"
        },
        "item": {
          "id": "91b6fc53-2cb1-4387-b74d-f4bc76f2c80a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c86c3dc9-0a5c-4659-988e-9a593a92c85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe071da-3a2f-4008-8ee1-eb5c7c88fa31",
        "cursor": {
          "ref": "881f918a-fc07-49c2-aef6-ad710ab3c45e",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "830fee3a-dfc1-4e15-b99f-89ca0989cd11"
        },
        "item": {
          "id": "0fe071da-3a2f-4008-8ee1-eb5c7c88fa31",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bf7cd00b-28b8-4c3e-a4d9-cecb27218cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c62ff37-12dc-4143-bbe8-ebf64461e23f",
        "cursor": {
          "ref": "4edd8439-5508-4250-af31-71dcc7873562",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ccb3d0c9-cdc3-4fb8-98a4-f8ec8bf85780"
        },
        "item": {
          "id": "0c62ff37-12dc-4143-bbe8-ebf64461e23f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "70a107a3-b1cc-4274-9a63-954f509adbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887acf38-fd32-4cc5-995a-6c9b41788b6d",
        "cursor": {
          "ref": "e583a132-f4b6-46a3-8ca5-ab4a98b17292",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e12083ea-eb32-4c92-ba83-54f7e08a1c62"
        },
        "item": {
          "id": "887acf38-fd32-4cc5-995a-6c9b41788b6d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8c52db86-be41-4111-bee4-0bd9c129c866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71be71-ff71-4daf-b70f-6b1ca7a5e0b4",
        "cursor": {
          "ref": "89c1f95c-b8ff-465e-b2e9-1076e5e63f82",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f08b87ce-ae4d-4446-9dc2-7f33a0f8f083"
        },
        "item": {
          "id": "2e71be71-ff71-4daf-b70f-6b1ca7a5e0b4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5dad236c-48b2-4330-96d1-967a8d26e8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b471a8-f992-4929-ac52-08ffa4e32da7",
        "cursor": {
          "ref": "8a1f0f37-4a97-48cf-b585-e6745ce0bee4",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e9c9df13-b750-47f8-965e-58c70df00ecd"
        },
        "item": {
          "id": "01b471a8-f992-4929-ac52-08ffa4e32da7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2d444fd8-4839-426c-b299-94986a33fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68236ec-79f1-4f57-924c-25d44ecd23b2",
        "cursor": {
          "ref": "8f52fd83-d1c7-4350-ad2e-82823941e656",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ad347794-133d-499d-8b0f-e62ede6d6053"
        },
        "item": {
          "id": "d68236ec-79f1-4f57-924c-25d44ecd23b2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4bb76fd3-1df1-40a9-a922-f7252e61c69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712ec10d-c328-479b-a5d4-3507727131fc",
        "cursor": {
          "ref": "935f4a47-a5c5-4e4e-a499-b5bdd2e9ae05",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "02f0bdcd-5819-4c11-acae-87caeee377b9"
        },
        "item": {
          "id": "712ec10d-c328-479b-a5d4-3507727131fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "efd49980-1850-4ffc-9a30-dd846fbddddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe55d5f-c7ee-4208-ad9a-7a8376921385",
        "cursor": {
          "ref": "9b04d560-9ce4-45d6-9d28-f485a9050751",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0d3d3531-3b27-4597-a561-11686b70e830"
        },
        "item": {
          "id": "dfe55d5f-c7ee-4208-ad9a-7a8376921385",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c71dceb3-3be9-42aa-9a52-7c378f1590c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c1c9f7-ce92-4096-9034-24bd76a4672c",
        "cursor": {
          "ref": "f0d3c5d7-25f5-4b89-8fd1-b12dd126c7fa",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6b865c6c-da69-4ed2-ac29-c567282f93f8"
        },
        "item": {
          "id": "e5c1c9f7-ce92-4096-9034-24bd76a4672c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "43aa0147-d924-4b04-8129-97c71dd6e770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2194a8a-44c3-4c21-9c16-92c74220b771",
        "cursor": {
          "ref": "cd5a0563-e341-4053-b59f-f9440def24ad",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "30cff6fb-b232-427d-95eb-47e40cef139c"
        },
        "item": {
          "id": "b2194a8a-44c3-4c21-9c16-92c74220b771",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "34dae7a0-0f2d-495a-b9b6-071b24442983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cd1c7f-2ad6-4bc3-bd04-c284d2876d82",
        "cursor": {
          "ref": "212d8047-618c-4f60-9bc1-f38570d5d305",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "289f16b2-1c2f-4625-a622-1822929ce927"
        },
        "item": {
          "id": "89cd1c7f-2ad6-4bc3-bd04-c284d2876d82",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3ddbadbc-c79d-4975-b9f3-a591f00673cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a361e1b-f971-4609-bc84-10bec33ac68b",
        "cursor": {
          "ref": "07c7b1ea-53a1-4e84-a329-8c2bc92bd899",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c7253412-7dae-4e3a-a5a9-6544aecc0208"
        },
        "item": {
          "id": "7a361e1b-f971-4609-bc84-10bec33ac68b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "913970c0-4035-4837-b2c6-42055ff5b69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc9acae-102d-4183-831e-36a100fd68d1",
        "cursor": {
          "ref": "961063da-a8ed-42cf-a407-9799d5f6dec8",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b26db8c7-6fcc-43c6-8948-02996c6e3521"
        },
        "item": {
          "id": "2cc9acae-102d-4183-831e-36a100fd68d1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "62fba189-b99c-44df-ae01-1b2284f9c702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4439fb0e-37d0-4d79-8699-9adaa729c636",
        "cursor": {
          "ref": "4f8cfe07-03ec-4e0d-abbf-7744e410b895",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8c0becc-e8ea-4e87-9dd9-752c7fd5cf6e"
        },
        "item": {
          "id": "4439fb0e-37d0-4d79-8699-9adaa729c636",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f27be8f5-b072-4c38-96bd-c01ba99c1243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7396ccfd-faa8-4117-963a-168bcf086eb1",
        "cursor": {
          "ref": "e9fe79de-57a4-42b6-a640-7ee60920ef5a",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "acdbf9b1-f4a4-484b-905b-c0f9272f257f"
        },
        "item": {
          "id": "7396ccfd-faa8-4117-963a-168bcf086eb1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1be69973-a3d7-4318-966a-01f9cc030f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be47cdf-c18b-49b9-b3e6-68f6696b6415",
        "cursor": {
          "ref": "942e5b22-b8e1-4650-befc-37c2d0c6ed79",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "14d2ae8f-c684-4e5b-84b2-8c88b64836e3"
        },
        "item": {
          "id": "7be47cdf-c18b-49b9-b3e6-68f6696b6415",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "29d54c0f-b635-42ef-b92c-9f3f35f51bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92603a81-89da-410f-b09e-1972ce5108b0",
        "cursor": {
          "ref": "2741a13e-7a26-4e33-9738-1000d8f8312b",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b414837-f5fb-4e83-9a63-4390462e03d7"
        },
        "item": {
          "id": "92603a81-89da-410f-b09e-1972ce5108b0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5695d296-8c77-4d6e-a31b-d0198c1c9c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8c7204-06ab-4b8c-8f7a-d0dd8c458ce3",
        "cursor": {
          "ref": "c172d132-43d4-460d-bea6-b0966946a187",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc471847-29d6-4f30-a672-bce148b7cefe"
        },
        "item": {
          "id": "ee8c7204-06ab-4b8c-8f7a-d0dd8c458ce3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "392ab35e-1377-4958-bed7-74e118e1eca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d910f7c3-a2cc-44f1-8d0c-321c7f14262e",
        "cursor": {
          "ref": "4ce38f2c-6144-45c9-93cc-83887f8b6661",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e36bff2e-2feb-4b34-9745-afe877f1cf9d"
        },
        "item": {
          "id": "d910f7c3-a2cc-44f1-8d0c-321c7f14262e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd3121ee-9626-4b0e-b707-c79bf34b4951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd05d5f-9a4b-4306-954c-42fc028afda3",
        "cursor": {
          "ref": "dba8cfea-4464-49a1-a58d-56ff5748297f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "44afff90-bf65-456f-830e-b5675bbaa6a1"
        },
        "item": {
          "id": "2fd05d5f-9a4b-4306-954c-42fc028afda3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7b7eea48-e275-4ced-a860-699c5f4fd1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3192db-a1ab-4479-93e8-f0a7563c0c36",
        "cursor": {
          "ref": "1229e3df-b5d0-4c50-865a-1fb7f4987b62",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f2b4cf7f-fbce-4a0c-bbef-319606e829e6"
        },
        "item": {
          "id": "df3192db-a1ab-4479-93e8-f0a7563c0c36",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "27326144-ed89-49eb-afad-942c23c784b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0edd31d-4b90-4312-97f0-1cfe1c5f526f",
        "cursor": {
          "ref": "1e5d3b9d-dd78-4f49-9ae4-7a4707a74b97",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "df05f88a-87ec-4b68-8586-51c86acdc591"
        },
        "item": {
          "id": "e0edd31d-4b90-4312-97f0-1cfe1c5f526f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d89a0aac-f0f4-4383-94ab-6e2639ddaee7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 624,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825a70d7-f77e-401f-896a-51015233de8c",
        "cursor": {
          "ref": "3bcf7e70-9297-45b7-8a88-d6791d458c06",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4b636fc4-5690-4277-9dd4-cb79eb98ef39"
        },
        "item": {
          "id": "825a70d7-f77e-401f-896a-51015233de8c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0c7f2530-5d76-448e-a9fa-87178ac83c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8258f85-a119-473c-b37f-bfae859bdcd1",
        "cursor": {
          "ref": "e6421bc6-ccb5-4187-993a-1a0360fdd171",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8e895486-6ab8-44de-9f9c-23985df864aa"
        },
        "item": {
          "id": "d8258f85-a119-473c-b37f-bfae859bdcd1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e22375fb-8aa3-4593-9a4f-dbb3c518632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a223d5-d940-438a-b1bd-24290aaa1d32",
        "cursor": {
          "ref": "ed2c5997-7249-45dc-979d-68fc817f9bd9",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eac81b4c-78d4-4122-93f5-02c7f13678ec"
        },
        "item": {
          "id": "18a223d5-d940-438a-b1bd-24290aaa1d32",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f802e02b-8380-43d8-bb66-fa1c72729176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b452d84a-d97e-47c4-bad2-3949c8277f3d",
        "cursor": {
          "ref": "9840f61c-80c8-47a2-8c31-67e5ed207cf8",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "42a18525-d81a-4bcd-8ad0-01efe5cc1506"
        },
        "item": {
          "id": "b452d84a-d97e-47c4-bad2-3949c8277f3d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "990aef2a-4ca4-48ed-b13d-eceb8de2eae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac57db67-532d-4124-9b7e-0d078aa9ab79",
        "cursor": {
          "ref": "f35ea42a-7383-4fb3-811c-532281c3b899",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ce412bec-4fc2-459e-a69f-db28dd950f33"
        },
        "item": {
          "id": "ac57db67-532d-4124-9b7e-0d078aa9ab79",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8b0dd1c-ace7-4f78-9d99-abfeacb27ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40551d96-c3cd-4c18-a730-cfc9d1dcd443",
        "cursor": {
          "ref": "fdcf5713-67fc-4619-8b17-896faaf05106",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cf67b14b-241a-480d-bf77-855c25c0ee89"
        },
        "item": {
          "id": "40551d96-c3cd-4c18-a730-cfc9d1dcd443",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "686a0481-58cb-4e91-951a-99d170bce4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eec182c-b16b-4fe9-ab53-9ac20609d52b",
        "cursor": {
          "ref": "39761d1d-d91a-474a-bbac-a46cf98fdcc2",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "09336aa5-5d7c-4e96-ae28-34a32b36753c"
        },
        "item": {
          "id": "1eec182c-b16b-4fe9-ab53-9ac20609d52b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "971e00ac-314c-4c51-9ff2-5ac08e960126",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 632,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d52a54-d477-4966-8399-2f1bd2cd6854",
        "cursor": {
          "ref": "79919da5-377a-4bc3-8e61-cc1aa2e232fe",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1d60a6b2-8d06-49e1-9aa5-fe2cca38a3ea"
        },
        "item": {
          "id": "30d52a54-d477-4966-8399-2f1bd2cd6854",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7fcbda8a-3a01-4f3d-8ac2-86660488800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0a1075-5283-48e0-84cb-69f1a4d5d380",
        "cursor": {
          "ref": "fdb8ca66-3fc4-4193-b668-d791b2d346c3",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1535239-f30c-4003-a9d2-98afdc249d06"
        },
        "item": {
          "id": "da0a1075-5283-48e0-84cb-69f1a4d5d380",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a0e7b9e9-98fe-4927-be8d-0e6609c9285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3c2a3b-213f-4262-a735-fa9e516c75cc",
        "cursor": {
          "ref": "26104852-dfbd-43fd-83da-37e5645a54e9",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3e7c9b4e-5dbb-41f8-9a76-328c704b826b"
        },
        "item": {
          "id": "cf3c2a3b-213f-4262-a735-fa9e516c75cc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "49127528-8b63-452a-acff-e206f8620c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0af4d4-2758-4350-a320-75c56e3c7656",
        "cursor": {
          "ref": "cb230e7f-2ad5-4edc-80e9-1d57f7e807de",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3cc64a88-979f-4c2c-9bb7-c2bd07d53f26"
        },
        "item": {
          "id": "4e0af4d4-2758-4350-a320-75c56e3c7656",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9ca4a9b9-e545-4ba9-9d0d-57b9886c49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066daa7e-5b66-4818-a31c-6d162a484fcc",
        "cursor": {
          "ref": "4408cfc8-a0d1-4536-b721-df70b5432a7e",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b55b0f8d-1394-4a08-acfb-39bbec87eac1"
        },
        "item": {
          "id": "066daa7e-5b66-4818-a31c-6d162a484fcc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "81823cbe-75c1-4bf8-9bab-caa1f24cbd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a440e25-305b-4688-a358-8f24c2b77544",
        "cursor": {
          "ref": "a6e36247-dcf7-4c0f-8483-35db9c75303d",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "49332fac-7709-43d6-ae75-b79bfe435e59"
        },
        "item": {
          "id": "7a440e25-305b-4688-a358-8f24c2b77544",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "053f5121-7b2a-4fd4-89fe-3c12fb482235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a845c4ba-44d8-44dd-a21e-0bd46b9ed1e6",
        "cursor": {
          "ref": "831228b8-a62b-4f04-8df6-62711e92139c",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "43a91b3c-d6c0-4425-b0f4-d5fcf7f9ee66"
        },
        "item": {
          "id": "a845c4ba-44d8-44dd-a21e-0bd46b9ed1e6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6cc74f2a-07e8-43ac-a4e9-8b859c92c969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bbd5b8-52ea-4c85-b92d-7379f352880d",
        "cursor": {
          "ref": "0377a8cf-0d28-463c-b43f-6e20410c512f",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "69dab113-234e-462d-90fd-cd334f04b60a"
        },
        "item": {
          "id": "64bbd5b8-52ea-4c85-b92d-7379f352880d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d2dd500a-7432-49c5-94c6-128efd74b9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b402d103-72ca-482d-be51-ba8847460202",
        "cursor": {
          "ref": "875c1d72-2941-4861-b32c-24bff4582e5a",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8d155fc3-a32e-434d-90b2-015f394f75bd"
        },
        "item": {
          "id": "b402d103-72ca-482d-be51-ba8847460202",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1d17e778-a8f2-4a5e-a191-5c70baa25367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d961cb72-1332-470c-8450-8eac274244a5",
        "cursor": {
          "ref": "e42cc20f-91e5-4c1c-9926-5562c2e42a78",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a2369710-1634-47d7-94db-3dc8ed5509d0"
        },
        "item": {
          "id": "d961cb72-1332-470c-8450-8eac274244a5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "47266d92-05c0-4e10-a317-b0920c313b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51a99f3-dd8b-4d40-92fe-2ef93d46539a",
        "cursor": {
          "ref": "0c198b51-ee53-4081-886b-15330e4905ad",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8e6ca68d-8204-4c47-bc49-84dc5328b96c"
        },
        "item": {
          "id": "f51a99f3-dd8b-4d40-92fe-2ef93d46539a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e96056a-d681-4754-9ac1-95f0dbda7f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf85576b-97b7-45bd-a570-d5ed8574862e",
        "cursor": {
          "ref": "abc49fa1-4693-4f5c-858d-6334735429d2",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c1d249dd-69b9-437c-aeba-866dde9e3a9e"
        },
        "item": {
          "id": "bf85576b-97b7-45bd-a570-d5ed8574862e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9ca46877-82e2-4c43-b837-eac5f49d8176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80d672-9dca-4164-80bd-f91f53798c4f",
        "cursor": {
          "ref": "efe30aaa-6758-4447-8840-e1a8f3a4cc46",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0d764d60-301a-4dee-82ab-ab589fbe1ecd"
        },
        "item": {
          "id": "eb80d672-9dca-4164-80bd-f91f53798c4f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a28f207f-1c78-4461-b527-5e61fce10a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221cb50-2c76-47aa-9b9e-5e729474a42c",
        "cursor": {
          "ref": "976afabd-086c-4b57-8c60-b51688b8b28c",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eca13750-a341-4862-9d8e-74b2f82a48d7"
        },
        "item": {
          "id": "d221cb50-2c76-47aa-9b9e-5e729474a42c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "61bce29b-4bf4-475f-b784-2e4dc45c8d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab90660-8741-467c-8add-d00c5f43859b",
        "cursor": {
          "ref": "dfbd6a7c-0a1d-4394-95d7-e7ed7c1b979c",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ce35c3ed-27d9-42a1-92cc-2f79409e7c05"
        },
        "item": {
          "id": "6ab90660-8741-467c-8add-d00c5f43859b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b200c538-91f5-42fe-b2d5-1a4e58a6c3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a52417d-1700-45f8-96c7-1c4c56b3cb6e",
        "cursor": {
          "ref": "5341c7bf-9393-4b84-8c7f-3ac3e49c3895",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e2f25bcd-7b57-4070-961a-54a1ed6db709"
        },
        "item": {
          "id": "0a52417d-1700-45f8-96c7-1c4c56b3cb6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9020ffe4-bd62-4a0c-abfa-b6a4269e6c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69daf27b-fa19-4257-be8e-5ec9a61b1cb9",
        "cursor": {
          "ref": "b44d1b7f-7522-434d-ae60-611b3104bf54",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "765c4bec-021d-41c5-b3d6-a436dd435ffe"
        },
        "item": {
          "id": "69daf27b-fa19-4257-be8e-5ec9a61b1cb9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "23491c65-b5c7-4a26-a108-df1374427222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b143dc-5ad5-4d07-8538-ab95b3c50c99",
        "cursor": {
          "ref": "1151090e-06f1-42c0-886f-51008e5a680e",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4decb5a9-d81d-4f27-9405-50ef08e081ab"
        },
        "item": {
          "id": "18b143dc-5ad5-4d07-8538-ab95b3c50c99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c7b25219-96c3-4f37-b8f7-6f226f88a24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7e6595-50eb-4fd4-9aab-8396604daaaf",
        "cursor": {
          "ref": "88a0e326-e7ae-4716-9150-996fd8af594b",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a23f29ec-5bcf-4f5a-91dd-0edaeee3dac2"
        },
        "item": {
          "id": "3c7e6595-50eb-4fd4-9aab-8396604daaaf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b9349a81-4e05-44e9-b80d-21f5eb4fdd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b817c38-a615-4499-a143-d959843ac23e",
        "cursor": {
          "ref": "a863177b-4579-4c1a-baa7-aa8d532f6497",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "43e534d2-4bb0-49b5-843a-8cd33cd73ac2"
        },
        "item": {
          "id": "2b817c38-a615-4499-a143-d959843ac23e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9f4e2226-87c7-4de0-883c-12feaab894e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1442c584-0b17-40a0-874a-c8d1415c5f97",
        "cursor": {
          "ref": "afc9059c-45c6-43ca-b79c-81f9a2b51e1f",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "77c2c00f-37bd-4c9a-9bf1-34aa487d4cf7"
        },
        "item": {
          "id": "1442c584-0b17-40a0-874a-c8d1415c5f97",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "91ece921-e712-4d60-8108-a32d617f8cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8e9fec-cffd-4eb4-8382-bb4c825ad7d0",
        "cursor": {
          "ref": "1246d599-376b-49a1-85dd-e7bc041e8244",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a122f758-bf82-4233-85fa-300c22387242"
        },
        "item": {
          "id": "cd8e9fec-cffd-4eb4-8382-bb4c825ad7d0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "04200794-00f6-471b-9291-621330387304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59f4407-6512-45b1-a54f-f9304d5a0339",
        "cursor": {
          "ref": "feb12176-b963-402e-b8c8-b32fbcb77883",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "14fbf7f7-191f-41f2-bd7a-2ff83927ce9b"
        },
        "item": {
          "id": "e59f4407-6512-45b1-a54f-f9304d5a0339",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8624b9d3-a9c8-438b-a5e5-8760b168824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7adf890-ee71-4e61-b447-b08c9619a93f",
        "cursor": {
          "ref": "13e46f2e-0b75-4925-934c-bf244132cdae",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8173a904-aeab-49ab-9462-c7674ed01594"
        },
        "item": {
          "id": "e7adf890-ee71-4e61-b447-b08c9619a93f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0d8171bd-3530-473d-8c19-a81e328b872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6b07ff-bba3-4745-860f-5949e36e3ea9",
        "cursor": {
          "ref": "c08ccc66-9754-4f8e-94ce-9b2cfceaf039",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dce3d602-ba72-4a0d-8225-b7e351b3667a"
        },
        "item": {
          "id": "3b6b07ff-bba3-4745-860f-5949e36e3ea9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8390a408-7ffd-4b4a-be88-abec9eb1399a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c85eb9d-f992-4172-b10f-0c04d70fdd8d",
        "cursor": {
          "ref": "c47ce19a-5f12-4782-8881-c278beb1fc48",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "58b013c0-eedf-4a0c-93df-2ab2e13ecf2e"
        },
        "item": {
          "id": "6c85eb9d-f992-4172-b10f-0c04d70fdd8d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6227282a-a5d6-4011-b4ac-07738cf86726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7582d263-e4be-4148-85ad-93bdccdabb6d",
        "cursor": {
          "ref": "8a8af125-3953-4f82-9415-18d84129bbdd",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "23a94b77-1892-46f9-b0e1-2502fbaf127d"
        },
        "item": {
          "id": "7582d263-e4be-4148-85ad-93bdccdabb6d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a813d470-3f01-4c36-a5a1-e7bb0da8efae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830a25a7-c887-48b7-998b-9b0fa7c67757",
        "cursor": {
          "ref": "0fbdb531-5794-482b-8327-9075be122075",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1950bc2a-16c9-4190-af5a-8e842e99b16e"
        },
        "item": {
          "id": "830a25a7-c887-48b7-998b-9b0fa7c67757",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba1995fc-38b3-4a39-a665-ae4563da06c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3adffb4-0a6d-4e4b-83c4-2c50ee701ba3",
        "cursor": {
          "ref": "44da6b1d-fd58-4dfb-9345-916d2181dfa5",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "92d0d30b-fa44-4b23-a327-7a741d5594cc"
        },
        "item": {
          "id": "c3adffb4-0a6d-4e4b-83c4-2c50ee701ba3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4d1641bc-0efe-4da5-a3ca-d68f2d1e810c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f35ac1-ff2b-44e6-b667-36e3f6e09593",
        "cursor": {
          "ref": "8b868eea-e054-4029-b2ca-cf4c97e447da",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0222ee71-6656-4b1f-aca1-0aedd3866b5d"
        },
        "item": {
          "id": "22f35ac1-ff2b-44e6-b667-36e3f6e09593",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7dabceb8-1d50-4f27-9490-a11453c5a162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298e88d7-0a55-42d3-9665-bbd0797d82e2",
        "cursor": {
          "ref": "c4af4db3-c38c-4354-83fa-888fac7079c8",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "26dcbdd9-f48b-418b-96e4-45049d337262"
        },
        "item": {
          "id": "298e88d7-0a55-42d3-9665-bbd0797d82e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2b667cdb-4391-4781-b2d4-53eb938c9326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e30f2e-6657-4f95-86a4-39a8fe241d34",
        "cursor": {
          "ref": "0f2628b6-a227-4171-840a-45a4da560cd6",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "032a8ccd-3ad0-4596-bc6f-77fcd079526a"
        },
        "item": {
          "id": "11e30f2e-6657-4f95-86a4-39a8fe241d34",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "db22b526-6be3-4c03-b083-a4a0313f27a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54b8aac-9a51-413c-8e54-0dfc81e444be",
        "cursor": {
          "ref": "2b1c608a-2ecc-424f-8779-244e8ff0085e",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "12d299f8-9688-4e06-97f9-772e6893ccb0"
        },
        "item": {
          "id": "a54b8aac-9a51-413c-8e54-0dfc81e444be",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fabd5b22-082f-40ac-bff6-919ea666f6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4734986a-dc1d-4e22-89ca-326557e5d177",
        "cursor": {
          "ref": "af1f66c9-9c58-4cdc-81ec-d9e55c966c5e",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a314d85e-219f-4cff-8cc3-4cc4326c039a"
        },
        "item": {
          "id": "4734986a-dc1d-4e22-89ca-326557e5d177",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b9868751-8041-4148-9e5c-dc129a2909e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f039e3-2b94-4963-bde6-06093697b28a",
        "cursor": {
          "ref": "405190db-0e9b-4784-ad1e-252dc1d5680a",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc8ec777-14e8-49c1-bfe9-cdce470a32e6"
        },
        "item": {
          "id": "99f039e3-2b94-4963-bde6-06093697b28a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "295a487d-488c-46a0-a713-995947c91b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ab3307-d84e-45f7-b39c-5af498258c82",
        "cursor": {
          "ref": "04ba166c-2504-49c8-bd4e-033524762e85",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef0f4269-b5e4-4f6a-80c0-183d192c5865"
        },
        "item": {
          "id": "b8ab3307-d84e-45f7-b39c-5af498258c82",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "88cb08eb-12c8-495b-a3fd-650391cfc3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f3abc-da40-4711-8c13-8f93d64a98b0",
        "cursor": {
          "ref": "b4056f88-ba74-42db-b0e2-1e26159e960d",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ae25c6ac-1c7b-460d-8c42-e8619829f65a"
        },
        "item": {
          "id": "787f3abc-da40-4711-8c13-8f93d64a98b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7d195d83-d309-4757-a5ca-a5501091d3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a029cf-7686-45a9-9f29-c370cf1885de",
        "cursor": {
          "ref": "7a53856f-10b3-4b8c-bd6c-1cf66b2d601f",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c6bcea2-cf75-4e9c-92b5-3a2141880b02"
        },
        "item": {
          "id": "34a029cf-7686-45a9-9f29-c370cf1885de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "76aa1f3e-71f1-4129-9931-2b622e0e9944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76decb2b-49e6-4707-98c6-267c67475e5f",
        "cursor": {
          "ref": "628ffefd-317c-4fb6-a112-673b49ab4590",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc49dc4b-eafa-4410-8825-e48701962566"
        },
        "item": {
          "id": "76decb2b-49e6-4707-98c6-267c67475e5f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e8debd4-9e1f-4dff-a413-9d245ac7a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356b265f-7842-47f0-bf3f-70432faa0b62",
        "cursor": {
          "ref": "078eaad1-dda1-4f2f-9e74-27fcb63ba763",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1bbda9b-0fd4-4ce8-ad01-1e68cfe80c9e"
        },
        "item": {
          "id": "356b265f-7842-47f0-bf3f-70432faa0b62",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "69aee6ca-f0ad-48e6-b10a-6c15b4207871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b50a0d-cf71-40e5-8c91-d68f87edbfc3",
        "cursor": {
          "ref": "536d24b6-d356-4d6f-8517-ea46ca7926d2",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c69dcfe8-c5af-4322-8691-31025eb31420"
        },
        "item": {
          "id": "54b50a0d-cf71-40e5-8c91-d68f87edbfc3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "395d2a57-a210-43c0-8d06-b2f79d4340e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12614ef0-e1d2-4a74-96c8-1f4766e036ce",
        "cursor": {
          "ref": "1fc2aa3c-5e90-4bbb-86f2-2a92dca74d2d",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8bb4902f-26a5-44c4-b859-cd31d94217ab"
        },
        "item": {
          "id": "12614ef0-e1d2-4a74-96c8-1f4766e036ce",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e4fd9c3e-1926-4708-9de9-ae635b603d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b864ff-425a-467a-8bd4-7ae0c5bb868a",
        "cursor": {
          "ref": "51caa2fc-a8a1-49e9-85d8-3446a95bcf26",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78c56fc3-3ca2-435c-a87c-885f6d96206f"
        },
        "item": {
          "id": "c9b864ff-425a-467a-8bd4-7ae0c5bb868a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "945130ea-605b-4af0-9b09-cd996c68bcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2edf78-a92a-44d7-b635-c7e0eca615db",
        "cursor": {
          "ref": "5852c699-768a-4c69-82ae-c035a7b9258c",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ca702734-f963-4baa-9f79-e0250228e080"
        },
        "item": {
          "id": "fe2edf78-a92a-44d7-b635-c7e0eca615db",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a8e88f6a-a940-4e74-91ab-a1463af9a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7208bf1f-a28a-4798-a2d3-ae9317ad2a89",
        "cursor": {
          "ref": "eab284f1-b062-4ca9-a54b-50cea66d08d7",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "53b59b50-2c37-4772-a839-446e160fe8d2"
        },
        "item": {
          "id": "7208bf1f-a28a-4798-a2d3-ae9317ad2a89",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2dfa75e9-1a32-4a93-b225-1baf43b39840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdc6222-8f05-4e93-8289-6a092a0daee7",
        "cursor": {
          "ref": "183d99bc-cab9-458a-bb2d-5749322adb59",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9ef057cb-05a3-48bd-8226-15a03dafdc27"
        },
        "item": {
          "id": "3bdc6222-8f05-4e93-8289-6a092a0daee7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0125570c-eb9e-4f9b-bce5-9ef7b991b757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae15c4f-89ef-426e-b4db-177d1a806870",
        "cursor": {
          "ref": "80d7e9d5-fcfb-4508-ac83-c5cf221d5e31",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f2b3407-6a80-4d75-b08e-7e23bb9fbd03"
        },
        "item": {
          "id": "9ae15c4f-89ef-426e-b4db-177d1a806870",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5ab6eef4-5f84-46c1-8e06-f466aebc2815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033de62a-0c99-42bb-9477-62ce549d00b7",
        "cursor": {
          "ref": "d0edc466-2129-4799-bead-cd49477c1350",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "de773f45-c6aa-4f71-91f7-5e430a4ee12a"
        },
        "item": {
          "id": "033de62a-0c99-42bb-9477-62ce549d00b7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f872ac6-32d7-4bf6-8d51-237111d560ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f78b8f-144f-48a5-a051-ee419cf8c33a",
        "cursor": {
          "ref": "70cc4acd-79fb-426d-ad52-ccf1b8e7738a",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b184f253-da24-4013-b93b-4dc3b1f7c56d"
        },
        "item": {
          "id": "62f78b8f-144f-48a5-a051-ee419cf8c33a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1adc3287-3c0d-4a4e-9115-6e2417d2b3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af0eebf-dfd6-4cac-947a-a8640d8f53fd",
        "cursor": {
          "ref": "16787c84-f519-428b-946a-9ec366e4ca3c",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "334ee094-b670-4043-8ba3-88ea26d8248f"
        },
        "item": {
          "id": "3af0eebf-dfd6-4cac-947a-a8640d8f53fd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7b18b78e-d63f-4959-b6e8-db9a4b3c45d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1d6e32-2dd8-493d-bdc9-9d8a585511b2",
        "cursor": {
          "ref": "552d8490-7295-414f-9641-76d7d145418c",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3fa397f-41b8-43a9-99e9-d28d29d66ab9"
        },
        "item": {
          "id": "3f1d6e32-2dd8-493d-bdc9-9d8a585511b2",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1a31b2a8-c40c-4067-b55b-8ec9a9b5c86f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac328a86-834d-4f7d-bd55-6b8c55d61abe",
        "cursor": {
          "ref": "3761f60c-6e27-44e9-988b-3880899d7431",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8c996b4c-7b84-4ad8-b620-452fadb0c015"
        },
        "item": {
          "id": "ac328a86-834d-4f7d-bd55-6b8c55d61abe",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b85cf722-9ef2-4fd3-8d03-5a3e87627d5b",
          "status": "Created",
          "code": 201,
          "responseTime": 4041,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "fb4c0beb-e964-4646-8d49-38606a769620",
        "cursor": {
          "ref": "ba3825d5-0eaf-4161-8c2c-1c34279f9dab",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c50580aa-7ef7-447c-bc12-90fee1b01d9c"
        },
        "item": {
          "id": "fb4c0beb-e964-4646-8d49-38606a769620",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "031d725b-fea5-40f9-bd7f-bf212fd8e16f",
          "status": "Created",
          "code": 201,
          "responseTime": 3944,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "9e1795cc-c3b2-422e-b61d-316c64742093",
        "cursor": {
          "ref": "068b4926-00cb-49a6-9e7d-bdeb59345aa0",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fe8ee88c-c8ad-42a8-aa7b-f5f06efe3b6b"
        },
        "item": {
          "id": "9e1795cc-c3b2-422e-b61d-316c64742093",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7de168e5-998d-461c-b98f-a57195ad4c06",
          "status": "Created",
          "code": 201,
          "responseTime": 3789,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "342568a4-eaa8-4b21-8a6e-c3e919b10e20",
        "cursor": {
          "ref": "32f826bd-7e5d-4b19-8f99-abb6ae1ef6c9",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2583698d-1229-4bcf-8ea6-9ac63142fc33"
        },
        "item": {
          "id": "342568a4-eaa8-4b21-8a6e-c3e919b10e20",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d31b571e-72a9-4cf2-a639-003c5ea7f4d4",
          "status": "Created",
          "code": 201,
          "responseTime": 3577,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "1af422fa-6a1a-4e71-abea-e236338b96c5",
        "cursor": {
          "ref": "7d6538e8-6b51-4e9d-b800-b03f5fc9a880",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3b098b1-421b-4f03-803b-19e6c1a3344e"
        },
        "item": {
          "id": "1af422fa-6a1a-4e71-abea-e236338b96c5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "82c51ba8-5206-4343-b595-6ec2ec740c77",
          "status": "Created",
          "code": 201,
          "responseTime": 4602,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "7c4eb1cc-dcac-414a-8531-de2ed466a46d",
        "cursor": {
          "ref": "834d706a-a55a-4c83-89db-801110096538",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "67bcb25d-a342-410e-a566-b51bc8e89f43"
        },
        "item": {
          "id": "7c4eb1cc-dcac-414a-8531-de2ed466a46d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "37abd43e-6d72-466f-8433-4dbf969a5c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4eb1cc-dcac-414a-8531-de2ed466a46d",
        "cursor": {
          "ref": "834d706a-a55a-4c83-89db-801110096538",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "67bcb25d-a342-410e-a566-b51bc8e89f43"
        },
        "item": {
          "id": "7c4eb1cc-dcac-414a-8531-de2ed466a46d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "37abd43e-6d72-466f-8433-4dbf969a5c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f68032f-f5df-42aa-9273-49fb286bc852",
        "cursor": {
          "ref": "bb9b17d7-6897-4aaa-be45-682a7296f512",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d112440e-a51c-46c8-a3f5-9f6ea4cd10d2"
        },
        "item": {
          "id": "9f68032f-f5df-42aa-9273-49fb286bc852",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb2cc182-37f3-4ae2-8861-823f21b4514b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4859ba-7894-452c-bbf9-c0fdaf7fbd73",
        "cursor": {
          "ref": "412455ef-4c76-4bbe-a94f-f64998cae7af",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "525b1d6f-1b0c-4d1c-a066-df6c0407883e"
        },
        "item": {
          "id": "5e4859ba-7894-452c-bbf9-c0fdaf7fbd73",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c6728fd8-5f19-4681-8f39-810fb15f9df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811cc5a7-975e-4b4e-9cc0-342631b57f1d",
        "cursor": {
          "ref": "ce069149-281c-4aee-9f78-9d3a272019f9",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c4015bd8-5984-4f95-bf32-30e8eb24852a"
        },
        "item": {
          "id": "811cc5a7-975e-4b4e-9cc0-342631b57f1d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1358de2e-d6db-4cf7-8f9a-5f80d57441ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfed775e-20d7-4b5b-8cdb-f06f6935c6c1",
        "cursor": {
          "ref": "cd0fea00-5057-4e73-bb63-4738b585d379",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d0683c56-35b6-4876-8812-a36eced5045b"
        },
        "item": {
          "id": "bfed775e-20d7-4b5b-8cdb-f06f6935c6c1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e1380311-b304-455e-92ac-3e8a80304469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4962f23f-bbf2-4b85-9aef-b2ef284e5da7",
        "cursor": {
          "ref": "8a82fa40-b73b-46aa-ad69-1a106d2011bd",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b7a1cb7-9754-4a56-bfed-0af66e0e22e9"
        },
        "item": {
          "id": "4962f23f-bbf2-4b85-9aef-b2ef284e5da7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2bf1e18-9421-43d4-8fa4-11be557add52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af389a44-5ac3-41e0-a2d9-9c3c9a420e1e",
        "cursor": {
          "ref": "d93df09b-b8af-43a9-9bf2-5c389d064035",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "16339eb6-c90c-4aeb-94c7-6b0cb5918e22"
        },
        "item": {
          "id": "af389a44-5ac3-41e0-a2d9-9c3c9a420e1e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e8554b2f-4dba-4ef9-bfda-9a06b48ce1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22ecda7-0c14-4ff1-8fd7-db6f7ab51a4b",
        "cursor": {
          "ref": "304a37b0-0a1d-4a40-9ab5-71f7ad47f7b8",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "160ad5eb-ec25-441a-95e6-4fa8c5bf639e"
        },
        "item": {
          "id": "e22ecda7-0c14-4ff1-8fd7-db6f7ab51a4b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d54159a3-4d23-4280-ba69-9ab28ee5b282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a065b48-1626-411d-ba52-e94f95f514a5",
        "cursor": {
          "ref": "5f4c1a08-e913-4a3a-bac2-90621c1d77bb",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3369097d-9386-47d1-ae3a-2f7787e158bd"
        },
        "item": {
          "id": "9a065b48-1626-411d-ba52-e94f95f514a5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "64b7fd0e-4638-4e7b-8449-97205becda43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9de31c4-266c-427d-b4f7-1e43b530a5c4",
        "cursor": {
          "ref": "b12048ea-8655-4abf-89e1-c5abc6b98be2",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "43a1d044-27c3-4f7d-aa43-25fea097f690"
        },
        "item": {
          "id": "e9de31c4-266c-427d-b4f7-1e43b530a5c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e4a7c996-a3c3-44cf-a598-790b8c145735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b1630c-2c7b-4cbc-ac53-c7b95ea78fda",
        "cursor": {
          "ref": "0587fb02-28fb-4fa4-94d2-e1f2504dafe5",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0acbda0f-b507-4548-8a22-298543e7e59e"
        },
        "item": {
          "id": "c8b1630c-2c7b-4cbc-ac53-c7b95ea78fda",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ec5e258d-043f-4cfa-be27-a6cd59427029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa77fba-3977-425a-9a2a-12defb468324",
        "cursor": {
          "ref": "dd8cd34c-1381-4ffa-b44c-6347d7cbc36c",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d355eb9c-9d56-41ad-8b51-e9fb4624fdd8"
        },
        "item": {
          "id": "7fa77fba-3977-425a-9a2a-12defb468324",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c5dae7ac-e475-4617-ac3f-af017d84115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1ef887-de98-49f2-8fb6-fd32de892894",
        "cursor": {
          "ref": "62b4fa58-380a-4e6a-a9da-882a77cf4499",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ad6cf81a-b054-492f-8ee8-cf3b9b7a1a35"
        },
        "item": {
          "id": "fc1ef887-de98-49f2-8fb6-fd32de892894",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a32f59c-c07b-4e71-a327-52d7095a5c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b71d60-130d-43ef-bbe4-2dffd9b9f379",
        "cursor": {
          "ref": "9a9ce748-ed1b-4895-a90a-874e2a8757a5",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cb99aa9b-b06c-4c4c-a6c7-2c0bda2a2c68"
        },
        "item": {
          "id": "24b71d60-130d-43ef-bbe4-2dffd9b9f379",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bc511655-b83a-4dcf-917e-d998e5934ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a49d4b-92d8-40d8-b639-528b44c8f0db",
        "cursor": {
          "ref": "8c5fadaf-63d1-48ab-b5bc-c401c7209ebb",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "99d11c41-adcd-4287-a496-7d8a957d2489"
        },
        "item": {
          "id": "f2a49d4b-92d8-40d8-b639-528b44c8f0db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53cd0150-e8e6-4888-be0d-711e62f1479b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95302c80-e88d-487a-8a63-d0aa95354840",
        "cursor": {
          "ref": "f196904e-1ac7-4c55-bf19-a2baeffd6642",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0da20b48-152e-4ea4-859a-1ec2403fffb3"
        },
        "item": {
          "id": "95302c80-e88d-487a-8a63-d0aa95354840",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f27d47a1-5733-4f50-bf09-d3b2e88f9140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac7adc5-e4a8-4012-88ec-648228cc3047",
        "cursor": {
          "ref": "fdbd016b-a668-4dd9-a75d-1e52a9272dac",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c1df2637-eca4-4cfe-a4a3-849f34ca97e1"
        },
        "item": {
          "id": "0ac7adc5-e4a8-4012-88ec-648228cc3047",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "623eb412-2856-41f7-96a5-4576171aa75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517b1f2c-bf05-40b7-b03b-9002531061b6",
        "cursor": {
          "ref": "2feb54fb-bb44-45bc-8b9f-ba5ef1d8cb2f",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "18949a95-d527-443f-936b-feafef760901"
        },
        "item": {
          "id": "517b1f2c-bf05-40b7-b03b-9002531061b6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "44a321b3-74c2-41ae-b288-edcb665b26ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d5d23a-1bf4-4905-b624-80893d31cca6",
        "cursor": {
          "ref": "1b397e4c-36e7-40e7-a011-3f33b415c746",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4d8a31c8-01c0-4b24-8f3a-aac1d48fc3ea"
        },
        "item": {
          "id": "c7d5d23a-1bf4-4905-b624-80893d31cca6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "731741ef-a234-4a26-bf11-b471ed033da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714119db-39ee-43cd-a9c7-f0595d9919e0",
        "cursor": {
          "ref": "89b93db5-5bde-42ed-bcef-11a42e4473f2",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d97bf32-4696-4428-91cf-9cf412d93a31"
        },
        "item": {
          "id": "714119db-39ee-43cd-a9c7-f0595d9919e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a97d453-da23-4599-aef4-0d5026e3daf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e9390f-b290-4b74-8397-cda40b33d5a7",
        "cursor": {
          "ref": "57eb4107-11b7-402a-bcf3-641c663bcf2f",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2785957e-4362-4409-9008-90ede56f53ad"
        },
        "item": {
          "id": "b2e9390f-b290-4b74-8397-cda40b33d5a7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "84bc865f-15df-46ea-981c-b40e89206426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53408988-1d62-4841-b48c-ce5c0b969492",
        "cursor": {
          "ref": "28f2aa31-5230-4043-95c6-c0aa0defe63d",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f8595f93-1954-494c-b462-48fc531a76d6"
        },
        "item": {
          "id": "53408988-1d62-4841-b48c-ce5c0b969492",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ae9d5790-273e-4d1f-af5f-2eee1160dec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff79231c-fe56-446b-bf23-dd074729a046",
        "cursor": {
          "ref": "1190c9ac-100a-40bf-bd68-aaabcb08d032",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32401530-15b4-49a6-9223-39900d113f5f"
        },
        "item": {
          "id": "ff79231c-fe56-446b-bf23-dd074729a046",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7808cae7-a5c9-400b-a367-d28211924e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115d83c7-6376-4e78-80e9-f3d572ff77d9",
        "cursor": {
          "ref": "f27b378f-d26d-4e65-b267-8d9d083d4ff0",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cbbb40ae-5711-44f1-ad18-8771d9b86bd5"
        },
        "item": {
          "id": "115d83c7-6376-4e78-80e9-f3d572ff77d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2a76e837-ddea-4e48-9bc6-0a7f3ea309cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac844f30-6eca-4d1b-8f6f-5e496628963e",
        "cursor": {
          "ref": "7807988c-598e-46a0-954b-c36ec14c9f0c",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bd10b405-e8d9-4020-896b-ea32cad373ce"
        },
        "item": {
          "id": "ac844f30-6eca-4d1b-8f6f-5e496628963e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4b3c5d2-db7a-42d9-8886-f48dec1d1e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c65b29c-321d-4151-ae76-4526d1d6fe0f",
        "cursor": {
          "ref": "b1cd66a0-7c30-42d1-8adc-a92b5c07e0da",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7267efd-04e5-4e37-ba1e-223883b180bf"
        },
        "item": {
          "id": "7c65b29c-321d-4151-ae76-4526d1d6fe0f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8abd130d-7de8-4208-bc11-257556f4fdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4694b826-36e5-4713-8ecb-a2af17f82a68",
        "cursor": {
          "ref": "5c5a3b42-e4bb-4022-a7a6-fd05f069b3d9",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c0b4a41c-022d-47ea-858a-0af6252943f1"
        },
        "item": {
          "id": "4694b826-36e5-4713-8ecb-a2af17f82a68",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f131cfd-c14a-4835-b22b-17472f7dd65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a418c9-e9b4-4cfa-9533-286a250c990e",
        "cursor": {
          "ref": "0b07736e-f7db-43cd-a9fd-06137de78411",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "41030c61-2a70-420a-a649-c5482ed5366b"
        },
        "item": {
          "id": "53a418c9-e9b4-4cfa-9533-286a250c990e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d8fa7ea-17e4-4774-934b-972ba5f912de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc36980-be4c-4f3b-82d3-320a63c11ef7",
        "cursor": {
          "ref": "f959d567-d93b-4c03-99ea-54ea7aed5651",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c5cffd01-37ad-4c6e-b68d-a2e42abc1b16"
        },
        "item": {
          "id": "adc36980-be4c-4f3b-82d3-320a63c11ef7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b8ea9e00-d862-4459-8190-383f501dfe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bab962-f8a6-4cb0-9b4f-c65727fdd2e0",
        "cursor": {
          "ref": "873884b5-f40b-4fd7-9d1f-4717d8a25daf",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19ff205b-0538-411e-8b2a-72c8b71a2db1"
        },
        "item": {
          "id": "48bab962-f8a6-4cb0-9b4f-c65727fdd2e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31be90c8-10d3-4d2e-b095-a01726ed118e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ce80f8-2cde-4b45-b411-5436c83160d5",
        "cursor": {
          "ref": "e2def33e-61a4-4ae3-a14a-017f53a05124",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0212afb2-e3e9-4a63-9321-d09dd0d329f5"
        },
        "item": {
          "id": "d6ce80f8-2cde-4b45-b411-5436c83160d5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b0065e87-45e0-4493-bd7b-7e7c937798e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64b8ba6-886e-4d8c-afce-fbbda2dc5614",
        "cursor": {
          "ref": "88b1a4d6-21a7-4f36-88e7-fe7ecb99c47f",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "40c6fcf3-4059-43b6-b3bb-964852a3942a"
        },
        "item": {
          "id": "f64b8ba6-886e-4d8c-afce-fbbda2dc5614",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2a64192e-06cc-45d5-ab46-def65b4f3922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40be173a-3e83-43d9-b9eb-1e850bcb342f",
        "cursor": {
          "ref": "e9daae4d-0fba-43d8-b85b-0a4340b4ea4d",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "36466428-418d-4cbe-963d-d8491c858e2e"
        },
        "item": {
          "id": "40be173a-3e83-43d9-b9eb-1e850bcb342f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0f3e80e8-5868-4b7e-b552-62e39780f953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23393242-b16f-4773-b2fb-c90b8223744c",
        "cursor": {
          "ref": "6b6bc051-895c-4225-ac31-38034a57370d",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bcd4a643-c29d-4f2f-9fd7-44e1d0a23c2d"
        },
        "item": {
          "id": "23393242-b16f-4773-b2fb-c90b8223744c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "55305291-3488-40ad-a795-99d104035e4e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 536,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe9a86a-dc6f-4a17-bfef-8b7d5e00cda9",
        "cursor": {
          "ref": "67b8398e-5ce2-43ad-bada-a2f8f33263a1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b95439f9-1044-4ed2-b6d4-f553c29cfc94"
        },
        "item": {
          "id": "bfe9a86a-dc6f-4a17-bfef-8b7d5e00cda9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb72af63-b175-4499-955e-8f8d3857fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe9a86a-dc6f-4a17-bfef-8b7d5e00cda9",
        "cursor": {
          "ref": "67b8398e-5ce2-43ad-bada-a2f8f33263a1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b95439f9-1044-4ed2-b6d4-f553c29cfc94"
        },
        "item": {
          "id": "bfe9a86a-dc6f-4a17-bfef-8b7d5e00cda9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb72af63-b175-4499-955e-8f8d3857fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263c209a-da17-4514-b9ec-9449b3970b37",
        "cursor": {
          "ref": "9b8fc78a-2cb4-489b-87eb-74641173fccc",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "361ed71b-f930-424b-b322-b490c9b85cb9"
        },
        "item": {
          "id": "263c209a-da17-4514-b9ec-9449b3970b37",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1783505c-6b59-41ba-b732-a3673f76a4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f8f7bd-e3c6-436f-84b1-b9ba1d08c132",
        "cursor": {
          "ref": "a39ea356-0672-4769-9cf6-605713d86462",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "789c391f-a7c1-45cc-9dd8-132aec40cf52"
        },
        "item": {
          "id": "d6f8f7bd-e3c6-436f-84b1-b9ba1d08c132",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9683bc6c-25b5-4534-b5db-7afe72563479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efe9204-b0cf-411b-a432-d38b3c001952",
        "cursor": {
          "ref": "0ba97d5c-e0ab-41ca-b420-04991faecaf7",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bf5bbf1c-48aa-409f-973a-017ad6abcefd"
        },
        "item": {
          "id": "2efe9204-b0cf-411b-a432-d38b3c001952",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1ccabaa9-7f96-4baf-b7ca-efdf02e0cf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db1b869-4310-4162-afdd-61dcd6c01d20",
        "cursor": {
          "ref": "f63375e0-9dc3-4826-8f2c-efecdf5e1d09",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cae89ccc-3c00-4601-9ded-733645780716"
        },
        "item": {
          "id": "2db1b869-4310-4162-afdd-61dcd6c01d20",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c756ff05-5498-4735-b39a-a3bcfa7de19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f10911-3c01-4a9b-84df-250bbec2af61",
        "cursor": {
          "ref": "9183a80a-bf47-4853-85c6-f84dc6b353e0",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "12024ce1-3474-4d00-8d99-ae3f628eee7e"
        },
        "item": {
          "id": "35f10911-3c01-4a9b-84df-250bbec2af61",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f6c6683-d125-49aa-86a6-1103e4fbb319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed282e68-4b95-4cc8-9981-2c3dc6bfb6ca",
        "cursor": {
          "ref": "884fc541-597d-4895-a249-88d023b16f08",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "90c82bbd-9562-4989-abd3-d497f57c9c7e"
        },
        "item": {
          "id": "ed282e68-4b95-4cc8-9981-2c3dc6bfb6ca",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "febfec31-f47e-4ad7-87d7-4868051b13f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb3f0eb-b1c6-4ddc-b802-314bd6a6b3ae",
        "cursor": {
          "ref": "a8681562-3227-4759-b954-ef5bf05e7f4e",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a6f725a1-3e7f-4efc-a253-c5141732e3fe"
        },
        "item": {
          "id": "8bb3f0eb-b1c6-4ddc-b802-314bd6a6b3ae",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cf127fd3-2e31-472e-aea8-101b21bd01c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f081941c-680f-4d9a-92ad-d81d5ff1a647",
        "cursor": {
          "ref": "deb10333-67e0-4bc9-84a1-084df266a9f9",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a571cd93-bd9a-474b-aa19-d86752d26e0a"
        },
        "item": {
          "id": "f081941c-680f-4d9a-92ad-d81d5ff1a647",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "721e392e-0a31-4fcf-8332-36af2a113ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aec4da6-60c9-4777-8711-32fd643738b1",
        "cursor": {
          "ref": "a9cbbd3d-e3dd-49dd-85be-7f7e83585f29",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ac09dc97-12ee-4db6-b51e-c8181854b769"
        },
        "item": {
          "id": "5aec4da6-60c9-4777-8711-32fd643738b1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e285c800-a35e-457e-b40f-84e0a891e8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d3ac43-3f5b-4923-9143-91e83528ccda",
        "cursor": {
          "ref": "ba523ac1-09c3-4a86-a851-3e7d4990e411",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "80e23a26-6ef2-4abf-86dc-1f8e305f774c"
        },
        "item": {
          "id": "a4d3ac43-3f5b-4923-9143-91e83528ccda",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91d40c35-dd10-49ba-9c55-463537d3875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d2cd0d-8909-4490-9022-ca4107698f5c",
        "cursor": {
          "ref": "bc8c7c56-565a-4f1a-9ad8-41f30734fec7",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9378485a-6678-420c-a7f7-f9cbe41e985b"
        },
        "item": {
          "id": "98d2cd0d-8909-4490-9022-ca4107698f5c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1b9bdaf8-7a32-431e-8b0e-161210129319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13452b5e-1d5f-4041-b61a-3b682b77a0e8",
        "cursor": {
          "ref": "3f2763ab-2f30-44e2-81b9-4abdf8a694c7",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed60bd8a-35f8-411c-9863-a1438bad83f6"
        },
        "item": {
          "id": "13452b5e-1d5f-4041-b61a-3b682b77a0e8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "51b1c040-2e31-43c8-a029-26c8909b24d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed81bb7-4c8f-4946-96d5-cafde100a776",
        "cursor": {
          "ref": "64313d4b-d218-4e6a-8fab-64a8bf3aabbb",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b3781ffa-4996-41e9-b2ac-6570163fb970"
        },
        "item": {
          "id": "eed81bb7-4c8f-4946-96d5-cafde100a776",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c30aeafe-ba65-4a19-b921-b3eb252b1f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb28dba1-d6dc-4343-b90d-b8e46a88ec97",
        "cursor": {
          "ref": "157e031d-ddaa-4ba6-ab10-5ba82fb36dff",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a0bb32c4-6f25-4cd9-a234-180c5e34bb36"
        },
        "item": {
          "id": "eb28dba1-d6dc-4343-b90d-b8e46a88ec97",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "56695737-3b20-4aa9-bd9d-cd4f67b17042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a58e4ed-b636-4fba-a9b3-af1c2a9c7f23",
        "cursor": {
          "ref": "a82338cf-0939-4eb2-9f60-2b4ff820fdaa",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e8e023f-7cd9-43b8-a716-ca79955d0805"
        },
        "item": {
          "id": "5a58e4ed-b636-4fba-a9b3-af1c2a9c7f23",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "91ee9fe5-1b5a-429e-a720-03482e08685a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3b77d0-257c-4a47-88be-fcebc875e8b1",
        "cursor": {
          "ref": "5652fc3b-8ae1-41fa-b2f2-a3892c3b5031",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "254f7551-ea5e-4341-84c8-349828b71283"
        },
        "item": {
          "id": "ff3b77d0-257c-4a47-88be-fcebc875e8b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f31690c0-102e-432d-bfdb-698b8f021e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478915f4-8ffd-4e99-8c36-49dcf1e6a91b",
        "cursor": {
          "ref": "ef7d3937-694a-4fcf-8407-d4722dc8d9c3",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fb6daccf-731e-4662-b11f-8470ee47db8b"
        },
        "item": {
          "id": "478915f4-8ffd-4e99-8c36-49dcf1e6a91b",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "3f6a1433-ec96-477a-b25a-0f4b6051fbde",
          "status": "OK",
          "code": 200,
          "responseTime": 3252,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "d7fb6960-9cd8-445c-b5b5-b76bc563fcbc",
        "cursor": {
          "ref": "a10a25d3-32a2-4f20-b810-2a858ff84bd6",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d4704b26-cda2-4547-8376-6f3ba5d7e6e7"
        },
        "item": {
          "id": "d7fb6960-9cd8-445c-b5b5-b76bc563fcbc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "32d76a92-180d-40e8-9306-506e4c636c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bd8560-2175-41da-a73f-719e599b01c2",
        "cursor": {
          "ref": "226b5a89-3c0f-4304-aec2-55b49b330c6c",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ba0123bd-ddac-4805-95d3-f8572b7381d6"
        },
        "item": {
          "id": "05bd8560-2175-41da-a73f-719e599b01c2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e696eb15-e1c2-41ac-9da6-d2b854391ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf0ad71-df1b-4ad4-8ca3-c5f248683043",
        "cursor": {
          "ref": "4404488e-2a5a-4431-a4e2-ae3836ab4b9b",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de3b393a-b88a-4ee4-81ad-0fd1d03a81e4"
        },
        "item": {
          "id": "5cf0ad71-df1b-4ad4-8ca3-c5f248683043",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e59cc533-fd7c-4144-b9d4-aea113c932b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8176ee3d-eed0-4701-87a7-dfe33349636c",
        "cursor": {
          "ref": "14988ff2-3c54-4780-b634-db28027af9a3",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "98372945-4d99-46c0-9e9e-3d6b4b0666eb"
        },
        "item": {
          "id": "8176ee3d-eed0-4701-87a7-dfe33349636c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6c091f01-cbbb-4a5b-9c51-58597b8b0b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758f0ce6-5d90-4502-ad3f-e48807fdde13",
        "cursor": {
          "ref": "322180a1-1168-4101-b2b1-c1a5011e2d21",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "85b72682-19da-4034-9a49-421d99df15f2"
        },
        "item": {
          "id": "758f0ce6-5d90-4502-ad3f-e48807fdde13",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fbe73dde-e627-417a-8ece-119ab3baf119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244c5eb3-056b-461d-8a37-d002b0bf850d",
        "cursor": {
          "ref": "5f0198ef-ba23-45fd-a94d-7fc7657090f3",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c63d255c-9949-4786-94a9-11c6f6b160de"
        },
        "item": {
          "id": "244c5eb3-056b-461d-8a37-d002b0bf850d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "95537a62-77d6-4f47-b52e-d35509762106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933feab3-fb4d-48dc-bcd4-ecee0a2705ee",
        "cursor": {
          "ref": "35b5c113-5fb2-449b-9c3c-6294220caf6a",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "65eeccae-13e0-4854-8d30-f2d03132159d"
        },
        "item": {
          "id": "933feab3-fb4d-48dc-bcd4-ecee0a2705ee",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2debd0c5-1719-4339-80e2-f4838886b161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b829c6db-d67b-43ac-af69-5c0628b8d690",
        "cursor": {
          "ref": "ee64cf90-9b6e-4789-919e-287948bcb889",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f8906f30-eccc-477c-8dfa-266b8bf25092"
        },
        "item": {
          "id": "b829c6db-d67b-43ac-af69-5c0628b8d690",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "62541db0-d631-4bfa-9810-f28bd4d52584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37287c7-cec5-46f5-aeef-548c968e7090",
        "cursor": {
          "ref": "a7a93918-52bf-4936-b501-be8af4debeec",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "82bb5266-6c41-46ac-8ed5-6a7b57f14eb9"
        },
        "item": {
          "id": "c37287c7-cec5-46f5-aeef-548c968e7090",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6a7a4a77-5c3a-4b0a-84c9-68f3cd7cee2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa21d3-7236-4bed-861c-2d11aa8ecd76",
        "cursor": {
          "ref": "76aee30d-94e8-425f-aaa9-d70a63c5abbd",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "21a1549b-7eca-4a32-8169-ac7719a16ce7"
        },
        "item": {
          "id": "efaa21d3-7236-4bed-861c-2d11aa8ecd76",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8e65711b-c33a-440d-9876-d739f14434fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff5be09-4e44-49ae-a87b-0452fd40d363",
        "cursor": {
          "ref": "ab61e6f9-86cc-4a03-bec5-59a2172d40a9",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eeecd089-6df6-40f1-ae6b-38914e18b7c4"
        },
        "item": {
          "id": "eff5be09-4e44-49ae-a87b-0452fd40d363",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8731786d-3330-41ac-abb3-f6f0b9e7ed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a664b51-8a48-4966-a40a-ffa6d43b9d4d",
        "cursor": {
          "ref": "f56c7e24-61d5-418f-80ce-2bddf9662abb",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12add4f5-0b28-4908-a5ce-c35dfc9161ed"
        },
        "item": {
          "id": "3a664b51-8a48-4966-a40a-ffa6d43b9d4d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7ff5931f-cbe5-4f31-bcf5-39218c65d3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5bb395-39e1-437e-9366-e73aa769478e",
        "cursor": {
          "ref": "1feaaf4c-b89a-4356-89c3-7b5c9ee50302",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a4b550d-fc34-493f-9008-4217a3ac5276"
        },
        "item": {
          "id": "2f5bb395-39e1-437e-9366-e73aa769478e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9062f889-d115-402b-9e22-c0541e97c539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a388a6d-436b-42da-8506-e2b46a4c7472",
        "cursor": {
          "ref": "d9f4aac3-c606-4d30-b702-bd1ef9c9269b",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6f11b274-e9dd-4127-84a1-98b348794527"
        },
        "item": {
          "id": "5a388a6d-436b-42da-8506-e2b46a4c7472",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cf3c18ef-c543-455a-9135-3f004bc83e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facc85b1-e564-4979-8090-f73fe9954249",
        "cursor": {
          "ref": "341e8648-7f9a-4a7d-9d3b-5c14fa358e75",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "58c8fd4c-318b-49fd-926d-462d6845e3c4"
        },
        "item": {
          "id": "facc85b1-e564-4979-8090-f73fe9954249",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3dbba35b-4b9c-4743-a6f9-93a16073a1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc79bbf-2456-43a1-a282-018b41e5dfa1",
        "cursor": {
          "ref": "c86c1c83-3919-4371-a807-505ac5545914",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6e1d10d1-8d20-4c2b-bbee-ef3f0aaa1887"
        },
        "item": {
          "id": "dcc79bbf-2456-43a1-a282-018b41e5dfa1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3e897685-3f26-4105-be59-1f39c5b7c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5384a918-87ae-4b5e-a8e2-59ba715d992f",
        "cursor": {
          "ref": "d6482cc7-7ec3-4271-b3f1-5e9464aab8e7",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "12a31819-8229-4bdd-b9df-c5f9195e6fd3"
        },
        "item": {
          "id": "5384a918-87ae-4b5e-a8e2-59ba715d992f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d7c3abb5-b243-4a3b-9ed0-08f7c60106ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fa7025-aef4-483a-943c-3b1bbbadcd8e",
        "cursor": {
          "ref": "40739ced-5193-4c8b-866c-4fecac1fe358",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "970ad0c4-b4c6-497f-ad33-16191db87b75"
        },
        "item": {
          "id": "31fa7025-aef4-483a-943c-3b1bbbadcd8e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e115b442-0649-4294-8ac4-75c8e43ba5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d3aed0-262d-4ee2-87ec-c87f512716d9",
        "cursor": {
          "ref": "93ecd70f-fd0b-479a-b48c-59478f69d602",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e8d2935-06c3-47ae-bcc9-ccb7c5cfc69d"
        },
        "item": {
          "id": "f5d3aed0-262d-4ee2-87ec-c87f512716d9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ceefc4eb-9b6f-48bc-9e3d-a9b6c12d3e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571177ae-d9f3-475b-829c-d2ce186675eb",
        "cursor": {
          "ref": "a91c3cb2-573e-43e8-8137-cf1565eda43a",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "20b62bc9-a172-4052-a1f6-cb543043772e"
        },
        "item": {
          "id": "571177ae-d9f3-475b-829c-d2ce186675eb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3363d37c-d592-4b9a-83cd-b9636e89ef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fc82bc-490d-48f3-8387-f1f8ff1465c3",
        "cursor": {
          "ref": "b9581a1e-dfec-4b31-8c56-394449967b13",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "22bc6b51-5015-44d7-a722-d118378d9edd"
        },
        "item": {
          "id": "b3fc82bc-490d-48f3-8387-f1f8ff1465c3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "013c93c1-2efb-437e-b14a-e0627e18a853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b1135a-dbfd-4bfd-828f-be2124edcb35",
        "cursor": {
          "ref": "12a27ce6-59fb-438b-9c9d-acd34cc423d9",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b47aef81-a314-44cf-b4fb-fcc8835969e4"
        },
        "item": {
          "id": "73b1135a-dbfd-4bfd-828f-be2124edcb35",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0a449371-aa56-480d-a2f6-a66c72e6aa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5d1592-7aa4-4d44-9d35-9a9f9fa8c365",
        "cursor": {
          "ref": "b8399ea7-ec41-43ed-b81a-cd285699bb44",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "87fdbde1-de04-4d0f-b2b1-2dcbd4421656"
        },
        "item": {
          "id": "8c5d1592-7aa4-4d44-9d35-9a9f9fa8c365",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "27df7190-0a6d-46c5-a569-77ec18d80a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b5198-3041-4f3a-94e1-f8f1e2c93f73",
        "cursor": {
          "ref": "4ae33022-e0c6-4004-851a-9107c8db22e1",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0a64b95e-a5a4-4914-8f69-51b3f37e774e"
        },
        "item": {
          "id": "217b5198-3041-4f3a-94e1-f8f1e2c93f73",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dbb3c5b9-025a-4c47-8255-f6d2a55da76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f1980c-b12c-4afe-a79f-7244a80dfa00",
        "cursor": {
          "ref": "10dccf6d-feee-4a74-b7a3-f747fb4eb6e1",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "310bf12c-a29d-4d88-a83b-114b0b871ab2"
        },
        "item": {
          "id": "e5f1980c-b12c-4afe-a79f-7244a80dfa00",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e9abf369-0241-41ba-b767-619263146801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555d7e6b-7b5e-45c0-bb57-ed31546b70cc",
        "cursor": {
          "ref": "5fae4900-d01f-49f7-b396-fd700509198b",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a15be92-1773-4067-9a82-01e4327a7ded"
        },
        "item": {
          "id": "555d7e6b-7b5e-45c0-bb57-ed31546b70cc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e96f143b-177a-4d3b-8988-3422ddd41545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23ef0c-4cb9-4e8d-b508-fd62698198c7",
        "cursor": {
          "ref": "52af5a04-1079-4dcf-8bcd-77d1543092ee",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ecd27beb-fabb-4acf-92ab-b444eb7b5eb2"
        },
        "item": {
          "id": "2f23ef0c-4cb9-4e8d-b508-fd62698198c7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8225eed6-6c74-4e29-bc96-281d2702ced6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9baf16-12b8-4f23-9a64-a78fe0bf9e66",
        "cursor": {
          "ref": "6a3d0972-a4c4-4c5f-9dc9-772aa736e244",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "674f491e-b93f-497f-af13-e9cc64a7fe26"
        },
        "item": {
          "id": "cc9baf16-12b8-4f23-9a64-a78fe0bf9e66",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2a78d1a0-1cbe-4c1e-830c-3d4d8f8ea09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9db223-898a-4286-8395-556ee1aafc29",
        "cursor": {
          "ref": "d5c738bf-e155-43ca-b27f-0785823fa222",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6d21c2bc-8756-44d7-b971-9ac3e5e65613"
        },
        "item": {
          "id": "ec9db223-898a-4286-8395-556ee1aafc29",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9375e5dd-9de3-4e1c-b40e-c57411e47fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ec5881-1c62-40b5-abfa-e1b56250ab3c",
        "cursor": {
          "ref": "a3f60f5a-b10b-4b93-9447-8a6d95a47915",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4b626663-089f-4f13-b136-d3e55cd98700"
        },
        "item": {
          "id": "68ec5881-1c62-40b5-abfa-e1b56250ab3c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "99aec396-807c-4e82-afe2-36f981dba4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3073983-4f0f-4514-bd42-4b108d6fcb17",
        "cursor": {
          "ref": "7f1f1bb1-6a7c-4779-8159-08eb62a098a1",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "baf7d8ad-4b27-404b-8b16-82ce8c6eb27f"
        },
        "item": {
          "id": "a3073983-4f0f-4514-bd42-4b108d6fcb17",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9210359b-c572-47fb-be92-cb58a361a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989900a6-afec-4ebd-b480-02f794a3a4a1",
        "cursor": {
          "ref": "5d91f7f0-c4cd-42f9-8289-b479aa32d1a4",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "91d24426-2c5a-4f94-ab49-a0a5f22ddefb"
        },
        "item": {
          "id": "989900a6-afec-4ebd-b480-02f794a3a4a1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9242ed9c-f682-4a7a-8862-0136a58f6e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b05701-75e2-4de7-ae8f-f4d1b31ed1e2",
        "cursor": {
          "ref": "350ee3ff-37de-4f23-9e28-1401eb99b855",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b467eeca-a55f-48b8-9534-36b51644b3b6"
        },
        "item": {
          "id": "54b05701-75e2-4de7-ae8f-f4d1b31ed1e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "31934c59-7924-48c5-b9e3-5de7a5d753d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5259024-b495-48b3-964c-19b9ffb940eb",
        "cursor": {
          "ref": "23c39c67-15ec-44e8-a446-fa9d816195e7",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36dae647-25e0-448b-9d5d-ddc86056fc04"
        },
        "item": {
          "id": "d5259024-b495-48b3-964c-19b9ffb940eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0c538dfb-f054-4351-bd4f-968f7a944909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db55a330-4a35-4bc8-8ad9-c89c41153078",
        "cursor": {
          "ref": "00fa0561-c4c0-415b-a0a2-dc8d118adb95",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "57a8c868-6c2a-460d-ab13-af26137c3a93"
        },
        "item": {
          "id": "db55a330-4a35-4bc8-8ad9-c89c41153078",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "382b1e53-60a6-4f4d-8e25-3ef2b3981608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d371df9c-7fb8-4812-9cb0-f166d1697df3",
        "cursor": {
          "ref": "574342a3-466a-40fb-85ac-d853a4528f68",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2af6105b-3a9b-42a3-a6fb-591eaaa2fef3"
        },
        "item": {
          "id": "d371df9c-7fb8-4812-9cb0-f166d1697df3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb992f30-b64d-48ca-b3fe-bf0910c471ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550b6dda-2e9a-43ef-8aff-9ae4ff2c48c1",
        "cursor": {
          "ref": "49f0ccf4-fe16-4106-a30c-9e5305839b93",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e5babbc6-ec58-4e82-a5d7-77fea054319e"
        },
        "item": {
          "id": "550b6dda-2e9a-43ef-8aff-9ae4ff2c48c1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "794ef803-cc20-438e-b750-aca6daef58ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f3321d-f7c9-436b-abd2-edf6c87ca7c8",
        "cursor": {
          "ref": "e392b89a-cca8-4a68-8738-2cffb0eff37f",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0cf947e6-7bc6-43f3-bb25-63b6f673bd59"
        },
        "item": {
          "id": "e9f3321d-f7c9-436b-abd2-edf6c87ca7c8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0776349e-38fd-438d-96b1-dc61ebcd2f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83a5ac3-a6cd-407b-bb37-2d0820afa05d",
        "cursor": {
          "ref": "8d7079a6-f3a8-4373-89cf-19b2e6cc13e7",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bb5a3496-0e05-4b5a-abfa-da472b420863"
        },
        "item": {
          "id": "e83a5ac3-a6cd-407b-bb37-2d0820afa05d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2eec5c8a-a13a-40c3-9f8e-f49dd0d60999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4176265b-a397-4e20-97e4-658a2bcef504",
        "cursor": {
          "ref": "482a6f11-d341-434d-a955-70a2722c9226",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "397625d0-9369-469c-b6d8-e654b4024f22"
        },
        "item": {
          "id": "4176265b-a397-4e20-97e4-658a2bcef504",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ec979c63-dbf2-4264-8560-a629f433988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d2f05b-1005-41b5-9896-c3a787690a20",
        "cursor": {
          "ref": "3d97b04a-538f-44f6-8183-14dfb65abf7f",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "40fb5ba3-58d6-4aa1-8b16-117cbca3be1b"
        },
        "item": {
          "id": "c6d2f05b-1005-41b5-9896-c3a787690a20",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8dbd70cf-f217-423e-bf16-b90ee8f9c167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4f8366-5200-4c67-9948-68648e738f73",
        "cursor": {
          "ref": "8c1fe290-c9c0-465a-9099-310b69c5d230",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "208bc3dd-7e18-40fa-b666-53a7c6ab4d36"
        },
        "item": {
          "id": "df4f8366-5200-4c67-9948-68648e738f73",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9f1ffae0-94bf-46c3-a7fc-36660ed4e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b229ef7f-7a14-4826-8535-7f0ee3646f5f",
        "cursor": {
          "ref": "afd68a87-5b2f-4cfd-b9b2-2000bbeba3d0",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "57d40515-7754-4ad9-94d8-dadc7c5e8ca9"
        },
        "item": {
          "id": "b229ef7f-7a14-4826-8535-7f0ee3646f5f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fbb90c8f-f534-48ea-b174-b118450b806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6653158-3912-4abf-ad0f-a6ff104322a1",
        "cursor": {
          "ref": "2954c711-c988-4b19-89ec-7c3f73ba67df",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fa03bddf-3dbc-47af-9cf5-0518450d70b8"
        },
        "item": {
          "id": "d6653158-3912-4abf-ad0f-a6ff104322a1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3d433c9b-005e-4d17-8159-381741e269ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeb0aa3-7d83-41a3-a4e7-71ea584975cb",
        "cursor": {
          "ref": "9a47a842-e086-4822-ad6e-2fbcbbc21757",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "902f918d-86ed-4f6f-aed9-e066971f63a9"
        },
        "item": {
          "id": "cbeb0aa3-7d83-41a3-a4e7-71ea584975cb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cc79c907-7020-4bc8-b522-e419ebde702e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bd6103-72d2-4812-9729-44471adad1ea",
        "cursor": {
          "ref": "39f2a3c6-3b39-498c-88e7-2f8e28eea6e9",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d174bd9f-5095-448d-8e6a-adc5a9ec124d"
        },
        "item": {
          "id": "65bd6103-72d2-4812-9729-44471adad1ea",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3a971e34-b58f-4b09-801b-c58a6e9cd97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f7e9f0-75bb-42a6-a75a-43d9b35a6652",
        "cursor": {
          "ref": "8e13abe5-ed33-4cfa-8b88-12fbe7d0ed50",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "941aaa50-37c9-4696-aa88-af43e02d4044"
        },
        "item": {
          "id": "79f7e9f0-75bb-42a6-a75a-43d9b35a6652",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90d55a92-bcc1-4c4e-b95d-5bd3acba6f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d03a4d7-4991-478e-9e7d-67396b3bad30",
        "cursor": {
          "ref": "68cb6c21-0803-4115-8cfe-b7b02369945e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "789b32b4-6079-4a01-8aa2-8a13c255c96a"
        },
        "item": {
          "id": "4d03a4d7-4991-478e-9e7d-67396b3bad30",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "baa9f780-b130-4e01-811a-c442976ce4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9374da-0b8b-471f-9f77-5c418612cf29",
        "cursor": {
          "ref": "cf57c9fc-dff0-4801-a74a-0838e0c4b98b",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5aa4c5a8-dadf-4faf-a747-a09f448ca518"
        },
        "item": {
          "id": "da9374da-0b8b-471f-9f77-5c418612cf29",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "77954f62-661d-453b-9307-28865f76709f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0398f198-e029-4eba-8112-92a63a640498",
        "cursor": {
          "ref": "355ee02d-e9cf-4f94-accf-314a9c1fdb99",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "331ea0d9-e360-450b-8ae0-c2fbba34b402"
        },
        "item": {
          "id": "0398f198-e029-4eba-8112-92a63a640498",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40c14216-f4cb-4efc-ae97-792e1ad0bcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc652543-bbb4-4a38-b1b6-69a2ec5d9eca",
        "cursor": {
          "ref": "6b2f5376-a7e8-4f9d-b4f9-2e892d40dadb",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b24f0cd9-ec4c-4a10-80bf-37263946c1a3"
        },
        "item": {
          "id": "fc652543-bbb4-4a38-b1b6-69a2ec5d9eca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bcf9e4de-dbdc-403c-b7d7-73c9d4aac4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579e9c4e-7b55-4775-8224-26a0e0e8c24e",
        "cursor": {
          "ref": "25e7e60b-b78b-44fc-b403-ca731b110c85",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3209d316-8b84-4e46-886b-e80e5b3a7381"
        },
        "item": {
          "id": "579e9c4e-7b55-4775-8224-26a0e0e8c24e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "743f4b06-def3-4b80-86d4-3de9345923e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c0a107-a9c1-4d87-b468-f6c91bd2a5ef",
        "cursor": {
          "ref": "fe403562-abb8-474e-a9ae-3896388f7058",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b22a411c-1633-4777-a0ac-cf8b39ca967f"
        },
        "item": {
          "id": "b6c0a107-a9c1-4d87-b468-f6c91bd2a5ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d43bbe1b-06b0-413d-b84d-ea072e98358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33b1463-67e1-4861-978c-3df71a988d09",
        "cursor": {
          "ref": "cd28a996-0781-49bc-b8a1-3f084c57207d",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e131eb2c-de48-47c0-8905-378cffa20097"
        },
        "item": {
          "id": "e33b1463-67e1-4861-978c-3df71a988d09",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a6180be2-295c-42e0-87a6-07947f0128f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51c2d95-05ef-4c85-a8b4-52afe23ab929",
        "cursor": {
          "ref": "17805b18-0e8a-4e4f-ba42-d5bfe6b71329",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "62b01274-4aca-4745-959c-869924dcdf38"
        },
        "item": {
          "id": "d51c2d95-05ef-4c85-a8b4-52afe23ab929",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ebde0ce3-8421-4b25-bfb5-9e92a4900393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f4a6f3-d5e4-47e5-ae13-2ec9e5045eb7",
        "cursor": {
          "ref": "79df06c0-a905-427e-8416-9740fab70eaa",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c56f9dbd-d004-47af-b194-a0967a3a3bce"
        },
        "item": {
          "id": "43f4a6f3-d5e4-47e5-ae13-2ec9e5045eb7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6cd18bd4-911c-4f66-b17e-b5638ada30a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc41138-5219-4c04-8c5e-c2543a8ff9e5",
        "cursor": {
          "ref": "d082d204-bf88-4c02-baed-028f6af3623c",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b52221f7-c3e0-4910-9756-6b708f54d0e3"
        },
        "item": {
          "id": "5fc41138-5219-4c04-8c5e-c2543a8ff9e5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c354904f-208f-4419-b8c8-adfe7b71d4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480f392c-74ec-4a60-a50c-2e5906003839",
        "cursor": {
          "ref": "2ba703af-d3b3-451b-b877-91467aff86b1",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dec73ab5-f8c3-4760-9c5f-3bafce4aa9c8"
        },
        "item": {
          "id": "480f392c-74ec-4a60-a50c-2e5906003839",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "642addff-3e01-4c0f-9da1-4ec85bf7507e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43f288c-7e29-4cfe-81b4-f885f87464f8",
        "cursor": {
          "ref": "48f37076-d977-4c6b-97d7-1961c5b039d8",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "875fb991-6ec4-431e-ab6c-469eaba20dee"
        },
        "item": {
          "id": "f43f288c-7e29-4cfe-81b4-f885f87464f8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "047da8db-b06a-4472-96eb-45da790af61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3ebdaa-f70e-4159-873c-074fb0c24d77",
        "cursor": {
          "ref": "008ba323-b788-40ec-a5a7-cbab98c12770",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8d66a413-8b67-4fc6-8637-f83c5ef4f311"
        },
        "item": {
          "id": "7c3ebdaa-f70e-4159-873c-074fb0c24d77",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "17926ea4-260b-4e45-974f-c16f2c453289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60778ab1-64ad-43f9-a868-44c55c3a7d44",
        "cursor": {
          "ref": "7a634fcc-a19c-46f4-9df8-7c0accff4a90",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "96cb9420-b38d-4a62-accc-dc501eba7192"
        },
        "item": {
          "id": "60778ab1-64ad-43f9-a868-44c55c3a7d44",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8c7c48d3-6dbf-4c39-9de2-48a8917cdbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a97b9c5-2e8d-4ff7-be4f-dbb4ce44e9a3",
        "cursor": {
          "ref": "8389d9a5-d3b8-4fe2-ad84-d31e44ac76b5",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1ea7d257-5abe-4e23-8e6f-e8edf8f1bbc9"
        },
        "item": {
          "id": "4a97b9c5-2e8d-4ff7-be4f-dbb4ce44e9a3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8226db21-7623-4322-bee1-0a11d6e0bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710e78c1-379c-41f6-a702-93da04b94dcc",
        "cursor": {
          "ref": "94a18912-f308-4452-946c-146b3050ff8d",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "87abd424-9d76-4655-bf97-01b9554ea90a"
        },
        "item": {
          "id": "710e78c1-379c-41f6-a702-93da04b94dcc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bbb84fc4-db5e-41c8-a669-46dbd51530ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fafa28-c45e-42e9-9aaf-78afe293c7a0",
        "cursor": {
          "ref": "0e6a57a6-729d-4116-96c4-057285dad676",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "efb95495-7982-4aaa-903a-0e7032d80bea"
        },
        "item": {
          "id": "a4fafa28-c45e-42e9-9aaf-78afe293c7a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "35cc82c7-29f8-4808-908a-5e5ff1b58af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b99de36-0d40-4fdd-bd24-173717f4a2fb",
        "cursor": {
          "ref": "c29091cf-53a7-4233-bab5-331f30091748",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f370f046-26e0-44c2-be50-806a6251dd2f"
        },
        "item": {
          "id": "9b99de36-0d40-4fdd-bd24-173717f4a2fb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ba8a0a34-f094-451d-b83b-e3dd5a167d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebf974f-52d4-4c0e-844f-be558caae719",
        "cursor": {
          "ref": "02eb9d28-6ed0-49a6-9c65-46d5f963b580",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bc74af2a-905e-4189-a7da-e143dd72ca58"
        },
        "item": {
          "id": "aebf974f-52d4-4c0e-844f-be558caae719",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d2fb3d4e-2823-4368-9643-ee234e9d7dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202b159e-dd35-4fe8-9f53-b5e301253aaf",
        "cursor": {
          "ref": "44c59d38-028b-4a8b-8725-b130e37a090d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b35fd0c9-6561-4223-923f-77c6435989e3"
        },
        "item": {
          "id": "202b159e-dd35-4fe8-9f53-b5e301253aaf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7487fb0-90a6-489a-a178-14a57759f53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160dadcf-b0e2-49ce-879b-54d5f63941fd",
        "cursor": {
          "ref": "1bda48e2-26dd-4ace-bb4a-92d686204a66",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "76611d90-3c2f-4c27-8c5e-b4fb696a579c"
        },
        "item": {
          "id": "160dadcf-b0e2-49ce-879b-54d5f63941fd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1bed265a-f0f6-43d7-aa4b-8664fded0d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65c87dd-5ada-488d-9149-4ab2ef7c83d3",
        "cursor": {
          "ref": "a48d8104-d790-4a6d-9da1-c48f477bb3af",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "93b8b7a4-6bd1-4b37-b0c5-09bea0d36d3d"
        },
        "item": {
          "id": "b65c87dd-5ada-488d-9149-4ab2ef7c83d3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c81046d0-cba8-424a-a4e8-39b29f08596a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7271434c-d94d-4da4-b3ad-ea7e30475fd3",
        "cursor": {
          "ref": "fbe463bd-0aad-470b-a947-02f5cee02a31",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9fbc0ca1-d052-4632-984a-872193afeadf"
        },
        "item": {
          "id": "7271434c-d94d-4da4-b3ad-ea7e30475fd3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3965928d-ea14-4e30-ae5b-12d14b092f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58e4c17-85fb-452c-91b8-4817315c7214",
        "cursor": {
          "ref": "04804e70-71b2-4718-a77b-73d5cf5d5a6f",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5106c3d3-bc53-4fa8-8d54-5d4136c95f41"
        },
        "item": {
          "id": "b58e4c17-85fb-452c-91b8-4817315c7214",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8891abb9-81b6-409f-bcbe-12953c4ea720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367934c4-07d3-4e2a-9828-5f332279be92",
        "cursor": {
          "ref": "7eaf8b60-fb57-43ef-af03-c751f17d38bb",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b94203fa-170d-474c-8b9a-959e987bcfd7"
        },
        "item": {
          "id": "367934c4-07d3-4e2a-9828-5f332279be92",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ccce1421-45da-485b-916c-7cc47e2e65c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740498a0-feb0-4f37-a040-7f8daa355f2c",
        "cursor": {
          "ref": "ac3067b6-8024-4ec3-a399-df5ac2ac3d30",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9cd1a6e9-5a8b-4759-aea0-befaeaca9065"
        },
        "item": {
          "id": "740498a0-feb0-4f37-a040-7f8daa355f2c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "96c1e6a5-eb75-4605-b24b-2a1ccb4b2090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5f5df0-23ca-4e74-8b82-e7c077f9924f",
        "cursor": {
          "ref": "843714c5-c9d3-4d14-aae5-97e7c4c09040",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4521cd0a-9d76-4e52-970b-65bd90b4283d"
        },
        "item": {
          "id": "9e5f5df0-23ca-4e74-8b82-e7c077f9924f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "069ceefa-2e9c-45c9-8c64-305d95ea7390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913d2641-d2f0-4910-a157-1076547ba1b5",
        "cursor": {
          "ref": "9846fc13-047c-447b-b926-402f9b8e26f2",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e42fce77-bb51-496d-be93-2cfbed80b811"
        },
        "item": {
          "id": "913d2641-d2f0-4910-a157-1076547ba1b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "faa5e93d-2ab8-45b0-a7ff-e0cfd7a4d9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced2d778-5dea-47a6-9063-0487e2fae53a",
        "cursor": {
          "ref": "65d96662-9f99-45d5-9673-977fc9b5b5c2",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "473dac2b-1985-4df4-9ea9-4789e66a73fe"
        },
        "item": {
          "id": "ced2d778-5dea-47a6-9063-0487e2fae53a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "27cc63fe-142b-4587-ac6c-ab45afd09982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401db490-1f87-4277-b4ee-b6728b128335",
        "cursor": {
          "ref": "3136fbd2-be96-4ee5-901b-edc6b972ec0d",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1cd6197a-c01a-4e48-987e-fbc4115e3301"
        },
        "item": {
          "id": "401db490-1f87-4277-b4ee-b6728b128335",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e99d7398-8f2a-42bf-a0ec-74633347eb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12c5b0b-58d1-449d-b53d-03b01db62741",
        "cursor": {
          "ref": "b7015227-784c-46f7-8612-3b3aa0aa904c",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a1a8480-edae-41ec-a0e7-8942b94f828b"
        },
        "item": {
          "id": "d12c5b0b-58d1-449d-b53d-03b01db62741",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bfe343b1-1f3f-4db9-9194-fcbca6bf6427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b31d070-6d33-4be5-8636-a845c5221d55",
        "cursor": {
          "ref": "ae443684-3148-4063-91cd-a9595a54803b",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f0ea7c0-70f6-46d8-9583-85654fe0c9e1"
        },
        "item": {
          "id": "8b31d070-6d33-4be5-8636-a845c5221d55",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9aab0e4b-c7e4-4e2f-bbc7-1c251a6e70fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33e9366-8cf6-4e12-bfb8-94cb4cad997d",
        "cursor": {
          "ref": "75746989-0434-48a0-9d13-9eb865a294bc",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "499940b5-676c-4905-a3b1-c7c94c56a3e2"
        },
        "item": {
          "id": "a33e9366-8cf6-4e12-bfb8-94cb4cad997d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "52ebb849-b211-4d8e-8fdb-2db2a0bba06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a21a753-1edd-455c-83b3-1baffc1efef3",
        "cursor": {
          "ref": "a7b0da87-8ae5-4ef9-84f3-fc27b76194ca",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "56cbb894-8bb4-4912-9628-83203f268093"
        },
        "item": {
          "id": "3a21a753-1edd-455c-83b3-1baffc1efef3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fe814357-ceb4-4ac0-a804-bcf16126df11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5359c7-01e1-4470-b62d-b21eb25b1289",
        "cursor": {
          "ref": "1d6735ed-3623-4026-8e55-d8b74ce2899f",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "958e7acf-7e6e-4266-bb7d-a150e97c7e9b"
        },
        "item": {
          "id": "fa5359c7-01e1-4470-b62d-b21eb25b1289",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e35cfb5d-61d2-4db5-85cb-e72ca435efea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 323,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d31f2c-6729-487d-a1f4-c4c84cb66833",
        "cursor": {
          "ref": "7d68683a-3690-4e2f-a92f-4a7f8b137c48",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "69c09437-b8cb-4b42-88c9-dd5178f0a0d4"
        },
        "item": {
          "id": "82d31f2c-6729-487d-a1f4-c4c84cb66833",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7560cd04-58dd-42f1-9a21-f2f3bbac5398",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "145a9439-a831-418a-a467-5dc60b43a67b",
        "cursor": {
          "ref": "8251a4c5-8b91-47bd-8eb3-36d9cb70df2b",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "343f1327-9e58-4e10-8f97-39712d2689dd"
        },
        "item": {
          "id": "145a9439-a831-418a-a467-5dc60b43a67b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4377e736-75e1-461f-8719-a0d62dbde9c2",
          "status": "OK",
          "code": 200,
          "responseTime": 3096,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc336a92-b14d-492e-bcc2-99c6738d5ea8",
        "cursor": {
          "ref": "b4551056-c9ee-4988-8e31-3ef062376ed6",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e835e8a2-7d2a-402c-bf11-b01beb43017c"
        },
        "item": {
          "id": "bc336a92-b14d-492e-bcc2-99c6738d5ea8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "382d120b-7aaa-4de6-bde5-e2a0c42d1c8d",
          "status": "OK",
          "code": 200,
          "responseTime": 3099,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
        "cursor": {
          "ref": "80a1615f-cc97-4af7-aa08-32161d8f88e3",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e702fb43-b881-4e44-82c2-79b91e1400e9"
        },
        "item": {
          "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bb4a07e-3a90-43e4-8076-e4a7210eb67d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
        "cursor": {
          "ref": "80a1615f-cc97-4af7-aa08-32161d8f88e3",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e702fb43-b881-4e44-82c2-79b91e1400e9"
        },
        "item": {
          "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bb4a07e-3a90-43e4-8076-e4a7210eb67d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
        "cursor": {
          "ref": "80a1615f-cc97-4af7-aa08-32161d8f88e3",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e702fb43-b881-4e44-82c2-79b91e1400e9"
        },
        "item": {
          "id": "de5ed066-b7b1-4f3d-85b3-14145749a5d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bb4a07e-3a90-43e4-8076-e4a7210eb67d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6358226-8d30-46c6-9206-7b33c1eb9db6",
        "cursor": {
          "ref": "fef30f8b-af1d-4d3d-9bc8-578180bcd148",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "37a1c087-ccc0-43f2-bb52-5aebdb6d692c"
        },
        "item": {
          "id": "f6358226-8d30-46c6-9206-7b33c1eb9db6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "61d9374f-01d1-4f43-bfb2-70c9965988f8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 489,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913d5099-f5bf-48f8-a333-4ddedd076a18",
        "cursor": {
          "ref": "075a1d4d-1232-4732-939c-f276e3df3250",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ed477da-9a4e-481b-af27-60616e443ca1"
        },
        "item": {
          "id": "913d5099-f5bf-48f8-a333-4ddedd076a18",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "662d850a-47c8-4c68-b958-b1531c9c0eed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913d5099-f5bf-48f8-a333-4ddedd076a18",
        "cursor": {
          "ref": "075a1d4d-1232-4732-939c-f276e3df3250",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ed477da-9a4e-481b-af27-60616e443ca1"
        },
        "item": {
          "id": "913d5099-f5bf-48f8-a333-4ddedd076a18",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "662d850a-47c8-4c68-b958-b1531c9c0eed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2961f51e-1a0e-4ea9-bff2-2a54b31a19f7",
        "cursor": {
          "ref": "ecdccae7-9c84-490d-b1b0-b6adb6e7d674",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "af35b2b1-5c7c-407f-91aa-3801a4a27dfa"
        },
        "item": {
          "id": "2961f51e-1a0e-4ea9-bff2-2a54b31a19f7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8ea42fa5-d0b3-43af-8371-e72d905c5c06",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3003bc3d-206b-404e-9489-df714c1bce26",
        "cursor": {
          "ref": "e46e2246-d742-48e9-af32-103dcbd15a9a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d15eef58-6d9c-44ce-8356-b33e745302be"
        },
        "item": {
          "id": "3003bc3d-206b-404e-9489-df714c1bce26",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d112a2f9-ab18-4abe-b4c4-7b92ef328009",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3003bc3d-206b-404e-9489-df714c1bce26",
        "cursor": {
          "ref": "e46e2246-d742-48e9-af32-103dcbd15a9a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d15eef58-6d9c-44ce-8356-b33e745302be"
        },
        "item": {
          "id": "3003bc3d-206b-404e-9489-df714c1bce26",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d112a2f9-ab18-4abe-b4c4-7b92ef328009",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad5ae64-f030-461f-bfce-ffc2c9646695",
        "cursor": {
          "ref": "04f1237b-c86c-46a4-a9af-7413973eb93d",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f160505c-e3e4-4a3b-8fd3-8debd3a9834f"
        },
        "item": {
          "id": "1ad5ae64-f030-461f-bfce-ffc2c9646695",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "97f35809-1ddf-441c-897f-3e5090ab0f51",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 553,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}