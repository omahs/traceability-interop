{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5fc0a9e3-c7e7-4902-9dc5-6dfbe974e21a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70f035a7-0a41-413f-856c-e2c451e67fa9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51b4d55e-2645-4937-a092-e347859fe505",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "16f6934b-f1ca-47f8-9026-9855fce6de8d"
                }
              }
            ]
          },
          {
            "id": "4733528b-7485-432d-9fc7-f456947be58f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc9d7b80-88ae-435f-867f-1a38957c6fe0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7db54fd5-dcd2-49e3-b560-2b3a338ccc4c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "23aed2bc-ee21-4a9c-86e6-acee8706e533",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7ec4dcd6-1f48-49cf-a598-d6286aa84d13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d9e489f-626a-4054-9328-3a546b69e1b5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b62c9c5-e79b-4001-acc8-b307d17fe55b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7be770fe-39ed-4622-9677-10a02bd22520"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0e1a72d-fd9a-428e-ac7b-e08be4047ed9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "792c9b17-8ecd-4a09-ab21-bd03ddfcecca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "892f8690-ee40-44eb-a955-277e2136275c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b97c3ad9-22d6-41dc-9262-a85ce5b24096"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "384f29e2-40c6-46d3-aace-8f5329cb78eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3129e34e-6c8b-49a5-b421-5ecbd811f3a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68dc5f7a-1203-47bd-ace0-b58c44ba07b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43a2fb07-d040-438f-903e-553ece16cd5e"
            }
          }
        ]
      },
      {
        "id": "d72189de-6408-45ef-a690-0320d48ef120",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "84604bd3-1d7a-431a-951a-3684de26da41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa0fdf9f-b980-4618-a5a3-99f27f93547f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4c28007-be7e-4241-8864-706cb3770598",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df058631-ca95-4bb0-b7ae-d73333c1e690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dd8360e-4c0c-4932-b2d8-bb4078b86020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b32dc2-93fa-45d4-9b3f-cc1f1daa1864",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55ccca8-3a91-4585-b62e-44450c4a0803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a812307e-8ca0-432f-b389-4189ef27435f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f90bf4-4c87-4a92-94bb-acf768e3c23a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79a33e9-ecaa-4973-bb21-a3a12202914a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49865450-6043-4e67-abfd-2c2a18a0e6e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70d59ecc-9f14-4282-b134-d5fc432c4da2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c5f5620-8053-460c-bc7e-4387e76fc3e1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b86e05e-6e6d-4c04-8503-ea3248d29cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "998ea347-9779-4e65-a14e-adda8b0d6f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0872e32b-4dd0-4e37-b534-7314b2d637bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcce4fd5-280f-4971-9607-c182b066ac33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bd6fcd-0cc0-48c3-aabc-dde1501f89e8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3a58e6-bfbf-47a0-8ac7-8ab31a7e8f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903ef204-a239-45d6-bc43-e26e090c9f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c81ea48-6526-4c27-be1e-76bdc7dd52f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "204db266-e3d0-4d6a-912a-758211f933f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72ca20e1-3f4e-44a8-8980-04cf976291b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8db7a8b8-3fd8-42eb-bb82-560ca4e5f16f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0423b250-227d-419c-9039-53d787807ff0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "50e81b6d-7c7b-4bab-8f41-8d6f66d4b55e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83ef1e56-3ba3-4b36-8414-c0d944c0fbdd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a113138c-1c8b-4ac0-9194-edb57e2506f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b514d1a3-7510-4b0d-99b5-aab9dada3fe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33a0b4ee-c273-452f-9fd3-fdc34390a54c"
            }
          }
        ]
      },
      {
        "id": "53813a68-2f5d-4599-a7b1-1603d6737769",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ac465b92-5fad-4a77-8acb-79631d0d5536",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7b730a8-2dd1-4816-9090-79d84aa2f122",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4bac7ea7-3d8b-4f00-b111-3e5e954f3ae6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e2b940-97e0-4db7-a0de-ec939e892557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9865200-0c4e-460d-9126-794307e489b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f07766-3656-43ed-83d0-86e1b0c16dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad4be8d5-0c08-4f63-a081-d14f72b42a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee61b6ef-ccc5-4528-b79c-d9c3e963db38",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4451b688-61ab-4f53-93cb-743dfe364e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9561e094-3e41-45fd-8046-008b89455f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf1ba21-6d0a-430b-94c4-59be5f098646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eddb8f9-511f-4b95-b186-cd400ee0b327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dd3b61-970f-4739-8be6-71eb8ab9cc3c",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c32db5-4aba-4481-952a-67a6f75809cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e193f07a-9422-4db0-addb-b87639ccc425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbab9a19-2439-407c-9c13-c98d05e21601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9124f0cf-6bf1-43cc-b3fa-655930c8885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fb9585-2ae5-425b-8c86-c894e9a77215",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0541c44-7900-4372-b48c-3ec3db6ded06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286e39b4-79f7-43bd-b230-d8ecbb7dc72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588f776b-5201-4a62-ba8d-144da61895a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bf353e0-c183-4b70-9c44-d75380beb562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6719f650-8339-4deb-b213-50379bc31ea1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b13e905-6a8a-46c5-9c44-cf7260bab181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7a5665-9ff0-475a-b6a5-9125dcda0c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29c2cf9-c9a1-461f-8afd-3abb6104a194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef770747-0955-48e3-9501-6d8904561f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fecb53-fdb4-466d-b7f8-a828a98624ca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f27754-11de-4d3f-b190-3d97995e9895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f2e267-e36b-4a7d-a429-662a074f3dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1980f0c-b6bb-40fd-a67d-a0958e1b14ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ebc5c1b-2e34-4f04-8f15-111ab0ea43f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e09999b-0285-4d56-a67e-03fafdd85c4b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf68aac-d7cf-4615-893f-671ce1ce979d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80de4082-f415-4f50-89f5-dfb3aaff895d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7d355d-2053-404f-bf3c-5e9550575dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4941846d-bafd-4ebf-9458-231eedc85866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b4cda5-56d2-403c-aef7-203aaeb7cdff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff152d90-430b-4c7c-abf2-2154ac39405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec63dbeb-cf42-424e-a071-10ab5600c8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea7aa10-e9f3-4506-85f5-659272f33f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3500172-7188-4e31-bf4e-8a6e33a693d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ff74ae-e72d-4306-b967-fc6fac68db66",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3eccfb-c53f-4354-94e8-7bd869791a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1a44e5-12ca-48fe-8c93-2d97b301ec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2743b120-8f53-409f-8401-a6dccc5aa146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e575b0f0-03c1-445c-b3c4-dc3642614706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9729188d-4a9b-4c21-9a72-9664869d886c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bbd085-e0e0-4187-a89f-36743abc1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291a13c5-df78-414d-9cdd-ee5eeeaef5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea4d854-9ad8-4aa6-ab8d-42bafa6235ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "012264e0-9782-4a62-aafc-fab200061bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a43c08-e2b5-4204-bdd8-6f38a098c5b1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f048c86-d29b-4fcd-84d0-ea689191cb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9719cd89-68f9-4fd7-9442-6f50683fe329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a104dd-8d88-48c4-abac-ea63e9ca4b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33e19409-4e4a-4b01-8040-795d6f2f8c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ca08ef-b5fe-4ff1-9ac5-754cb5e24259",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff8d63d-95a3-4418-91ff-c06ae27977ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b8e1ce-95bb-4e06-a07b-0c01742a1220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc73bff-a048-4613-ac92-80881148ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b41cfb-8866-475d-9ab7-69ea632ecfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8a071c-6f85-4468-9369-9bd165127651",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1067bd05-352b-4d37-ae64-4d2424d399df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eef9b30-8d3a-4e3c-945d-bd1ca47fe126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6b2c77-ae81-4b4f-916d-1cc306e63627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f1f3acc-1893-4012-a238-6b5412b56501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb58af5d-7ad2-4297-98ef-cc755998042d",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1fbf94-14cc-4792-b12a-c88daa5ba29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ee425d-7c35-4e32-9629-e8b0d996b689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbec48a-2766-49f8-826b-24f667a0614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ee27b7-0d1f-4fd1-a8b8-2c92ff6bbd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7fbf36-4080-4194-b9f3-2716a5c8b945",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf37a2-78a7-4d7c-af2a-7a7c7f4014d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826c3a36-705b-4943-b60e-a256e064d8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a662f58b-440f-4b4d-87f4-e2949ee9b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c6f5d8b-b5b7-4877-9107-54bdb703b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c225d79-4e64-4205-89a8-9e83ed106136",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd287e5-7d4f-4632-96b8-9fe9c0bea271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b87dc6e-a6ba-4dcf-9cda-0e34647eb261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89cc6b6-65cf-4f4f-8496-330b0cacb9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e822a81e-da5d-49b8-bc36-c99a4a8e7858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475d5dc4-9398-4f1a-b4e0-0a6446f1768b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6678649e-ddd4-4f4e-ba4c-58938be0ce91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56841570-b518-4986-b22e-dc5443aa6ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca6a835-153e-4827-bf67-9d660964c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63237c2d-e831-4163-a4e5-d251a2041531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab0de75-1d00-4f28-a6a0-dbcefb8e76d6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b131352a-730f-4552-bf2d-1dcd1987865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a159c2-401f-41ee-8151-63f4fe0b445a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de59c663-9f79-42d0-bfdf-962da0f96b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5620ec86-1505-4f54-b90d-774cf3a1aa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b70a68-695b-460b-aad8-86934910d543",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc005652-a48d-4b49-85a1-7b0118cf756d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ce17d0-f1a2-415a-95de-414b5bcb45dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10da8b93-c851-4563-9aa0-b36f4088e75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed8ba23d-3556-4b82-8537-838aa7534ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f120de-069a-47e5-93c8-8bd6ba6e29cf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1927c1fd-b8da-47d8-b809-b2c1d70b6a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea48a25-36e2-4c0f-9bdb-166075405e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e05904-7336-43fb-b4bc-c49bc562aaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed048be7-a4fd-48ca-8a3f-cd32216a84b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8f3fd8-8879-4e6a-b2cd-4f0e468a16f8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad749e7-4bcb-4c7a-ad00-5f65da49fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5a97cd-fb45-4cfd-9aa1-8e3019b6ccb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc59d9a-40ee-479f-b864-1ffba87d7846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01cbecd1-d4e3-4d6b-955c-85dae1ec32d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b17370-6ff6-402d-b9f2-b1982bb18604",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e2e95-f062-4842-8533-bef8ccc85abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a25d2da-d29a-4c97-8037-d22241169261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61903288-501a-4b51-8d57-f32bd0f7b245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56589dca-e893-4770-be37-290fcee69e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dba4a6-9f2e-4f68-b0f4-a782b5992cb3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c47297-6e36-4d75-9bf1-48de2aaca392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86688d5d-894b-4f37-9dc8-771e3f781c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105787f7-2a9e-4026-8363-9abd1b179f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95875557-7c43-4991-aca6-992f8788d14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab53fe-0a51-48ff-81c5-b4f3ddc8227f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd1c328-ed8d-45c3-9f6a-fbee730c9de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf510139-9f3a-4966-ad71-c82daab4d85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1159b7-8016-45bd-a174-d625f8afc6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb0274e-6a2c-442b-9924-3d8be7fa27f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93351724-298b-47de-9fa5-099c7d29e2ca",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33e509a-52c0-463f-ab45-d884a6e3aad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07def827-3b60-41bd-ad5a-54088a937e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50e3113-0d88-42f0-b07f-a71f971241e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd3a584-cf08-453d-a800-419e8f1d0c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2b60c7-57d4-4646-8bef-f53f0768287b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0379869-e90f-4b3c-8758-d50831c8e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b21a9a0-c192-476f-902d-20a5513459d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8281ce-f4ea-425b-a35c-69f0945af0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "762e84d2-e1f8-4ca3-bb3c-c83c7edb517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d46f89-15f9-4fa7-b63e-68efef5360ad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c138e3-fb35-44f8-9c91-ec61724544b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95501454-b4aa-4aa6-98c1-cd8d5db3ff3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d24c4ae-e6e9-4ef8-9560-b2ffaef03165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b78e6dd-183b-4737-8acc-e09c045c00d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cced90b-21fa-4512-8a7e-f453fc2002f4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d673e755-8b13-41bb-a098-51226615e1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d33a199-b72c-414e-9a10-9993caa6dbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83650a2b-b81f-42b1-8243-f77416769867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef2180e-d3aa-47a3-baec-d502406905d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddc34b9-6342-4048-a020-579ced061f2a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922c7d15-ff2c-4372-9419-7e821c9b6b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12c95f1-9a7f-4b20-8d09-3cc7924e44b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e019158f-e454-4ff2-98c1-62a9204b4fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c55bc7c-9141-4adb-a66c-a01308234584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8cb4ad-983d-4ced-a7c9-2bc26a3790c7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c864bb4f-efe5-4816-92c8-5f546a8e5e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0b8a4f-b54e-4229-9797-0f7c8c7fbe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db104eca-5d73-4120-bc4b-bf7085e88cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f031d69-9daf-4664-ab72-a7c6a1d57dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aa6d92-db7a-4476-a1eb-d7bf0af3f29f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf453ce0-32d9-47df-bd5d-5055ca4c0799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75574bc0-3120-4ccf-9826-50a0c553d90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50336d93-f6c6-45aa-b4f6-40cf7aa63046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be5febe-2bd1-456a-a735-0530fc825b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8292b75-552c-4d0b-8faf-97ab9e33b8fd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926e57c-3e89-4faa-88e6-e756fa665ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dbff6d-36a3-4dd0-82ba-122157d4eec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea8e6e8-aac8-4436-8357-ef4b3d7bf3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "02083354-bf7d-4eab-9346-3809eb786ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbc25bd-b299-4060-9f01-7bfd51074a83",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0220918-836a-419b-9434-2c942488112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b31b1be-40c2-48fd-9915-9f01149def5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191bd83a-9643-4ea1-bb99-0f1e4903467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46592f46-e5ab-4277-9047-b72a7822313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce34df8b-be8f-4ac7-88d6-58f0235c5e5d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d8684d-87ae-4dad-9aeb-52f40673e758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d43029-ca76-48b8-9196-bd8fac454c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a918387-6a76-4ca7-962c-53c85023b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e926cb6-b472-4380-95fc-33f4ea2ff0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1438f14f-2e76-4434-bc64-8378e7d02c0c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43aa8c66-f6f2-4dba-9ae9-dd47ca19de9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0ad1fb-d270-4838-8019-546224c9c03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62bea97-48ac-4f05-a1ec-63e048ac8285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1d15f9-2916-4eab-8cea-64029c457c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb34cf7f-e6f4-42d2-b589-c161d5c40f2b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f9f6bb-41b7-4bf0-96a0-832c56bc45e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f88bfe-ce88-40ad-bd50-773156110c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce6831-cd51-4fdd-bf4e-6b89af6c5cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f529ca-26eb-4f1d-8c91-b042dcb8bef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44e983f-1789-4b07-9887-f5a8255def5d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e4c3c4-82ba-44c2-98d1-02304a44c0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8abc48-fb3c-43a6-9b7e-265062432ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d2f88e-0c1c-4031-b43a-677e77610ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "92efbf23-6758-4547-8fa3-44d94aed508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade18f9-7b42-49cc-bc8d-d19213f39c71",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a87d20-e4af-435e-9ac8-374f80000129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ac853e-1c5e-4d71-b5d3-ac7e6c1b26ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60487d47-bd7f-4ee1-af29-10e591f61666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37dde793-19dc-46c1-a22f-6a73891bfdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2b3f2e-248c-4b51-aecd-b592803b9a9a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aae076-eb5c-4802-bce5-9189f8b183f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27700d6-9ec9-4b85-8d4c-2e1739abe8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c922de4d-3010-4016-81e1-b8010f51bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75f9dc3b-fec8-4b2f-9bc0-2a83656f4ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5897d45f-f4af-442a-a999-54c1d7ebf6b3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9d81a0-0c70-482e-a83a-eb843f4abe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75e22a3-4d1b-4382-8d40-24aa23c14bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9f826a-af20-4b97-9bb8-71b2f9dee7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d720555-0d90-4c1f-b409-4c24cfa8bbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640997e1-4e47-462e-8e8d-02a48ae12771",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90271797-948c-4e8a-b216-179289fef28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f401bf94-4499-4e69-a6c1-a7e22a2054b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f0e064-1af6-445d-acb1-572ee8744b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36574f8b-b081-4a9e-9131-751c976219a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee89bbfe-1a1c-43e5-8ac2-b3d2285b6af3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f734317f-9f13-4c1e-bf5d-d5d1cdba0f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7e8a9b-ac2e-442d-b922-70be9de3297d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e13a7d-c155-4e55-8a3a-f3fc5ddfa850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8746252-7f5e-4d4d-a36f-31183b1a81ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98781ae7-0ebb-49a5-8ddd-f6810637c31d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56058d0-4345-4755-a874-ee5f93f5d90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6678d5d-3d02-4b32-b201-83ea53d592e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eb98b2-c733-4da4-aab0-536e7e48a7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e48e25-c706-4720-9be0-3609a1af7d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286fff45-f408-4304-9fe3-27c59305b343",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff37229b-3e00-49c9-b0a9-468470393e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fc7e98-0e92-4b08-be82-7bd4f3106868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a6e547-47f4-472a-83fc-63354f4faa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc39a99-de5b-40cd-8906-846576a32baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6237d2-ddae-4e47-8fc1-9b0c8f4d62de",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0576b3-8afc-462a-a684-09d00e2e1cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47532a9-8bcd-431e-8556-44d27f310164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0f39d5-8f9a-4c44-9fc0-28d308e2aba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "71e853a1-ab25-4346-b6fd-adb27a5fc2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2143428-7a1e-4427-b82d-27520f9a86a9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c412a5-01da-49e8-8d59-4fff0702d123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a404509a-6e14-4ca1-bfe2-d6848cdaf98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325f3bee-3cbe-47d8-9383-053176478c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "452b52f8-7e28-4f32-98f6-3e93348e60dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31cc3ad-9c05-4dad-b642-92c3f3278374",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633f1087-c23d-4405-9936-56acb07ae398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1017d654-e4b3-4ec0-9d18-c3dc95a3849d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868bd31b-6fd4-4aa4-8ef3-813d5d451ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67bb2bfa-b203-4931-ab30-ec36cea3f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f76ea9-d931-4f51-8805-53d5cf294dff",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047fab09-89ab-40f0-bee5-caa1ef05f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce69314d-5e3c-4e92-936c-91985ba1e543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2015be4e-7aa8-4bc2-b3c5-71a4c9ea71f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e26ed7-9085-4189-9697-296470a82258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dedff3-3ddc-4aea-bae4-3271e54f5942",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beff18f-162f-44e5-8347-abb44d0f595f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6ed9b4-ff80-4b1f-aa76-762fece84b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5e6fe6-ef66-43ab-8c48-fd03c05e1112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3d9753-9ba5-4767-b045-dc49f9232a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4299328e-e772-42f8-bc62-cf21dbe97ce3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d07d651-c1b0-4593-aac8-7376fff613b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efb3ba7-7280-4fb6-9d3d-c1a4166397cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0906636-90ac-44ac-b719-b3d83c9af3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "019c8cb1-8c05-4c6f-bbde-1d1a6c68d37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89cadb2-2ef1-4135-b753-87f4478714cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c1da07-ae47-412e-a278-cbe42b737d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8828fca9-127b-4e90-aac4-3d370fde832d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8075791-9fec-4a1e-ae8e-f16eb535c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1916e0-8cc6-4ab9-a394-d92f9a70a03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab354a3-6e1d-4581-84b2-c9adf8ce026a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1af8fb9-c7f5-4269-b25a-8a97390f5aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b16e2b1-f373-4894-bff4-6e1ebb5785d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40a6316-f917-4c3f-a3db-792be14d4f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3028651d-2b35-4ec6-a176-bb39d9a170c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcca50f9-561e-4098-b5ba-29d1b3d14eb6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c0ec93-37a5-441a-9597-c011cc870a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5392200-69b7-4d1f-bd3b-932c2e3ff295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042d21f8-b8c7-41ae-a0c2-4ef7b40d8c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d268f6-fe08-440c-96ef-b4d28be871d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3569b4f9-cb50-4628-b56b-645ace92a7f0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713853f6-ef6a-459e-a8d7-f5e5acd5949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe9496f-5306-4b10-99c5-bea4577aafaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92847af-4e93-4f31-936a-a54a2149416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2162706e-d2ed-41eb-8439-473f0c94f0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d435fa-16d8-4940-a656-550a05db61ba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756bbaf2-23e8-40fd-af17-980b836f81c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc97688a-db07-4ec5-bda0-db5e924217a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b55c55-8984-4721-8acd-41bcd1fe758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea891bdb-c76c-4194-b802-383e80fcef17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5814f817-d8ab-40ad-a003-dd006473dad7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54469cd6-7a09-432c-be6b-e7315b6fb86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59b92d7-a646-455f-bbb8-3a169269dd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73faeea-829a-4ace-9b22-9b980b13d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "234a9a5f-869f-486d-a739-1fb533bdfe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581cd18b-4b84-4a9e-8536-4252f16eda5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e90257-52bc-4ef6-8c5f-ab65342b06ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0406dc22-898d-4055-a5d6-5e92377824a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3999e578-3c45-41ca-b084-8ff9037e2c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e1e687-c4c2-4871-be7a-370799de7680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081d3f61-3e25-40ef-a2a1-023968e7f8f4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb64583-30bd-4084-9f67-7f5650cbebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6ad398-8bf3-4c2c-82d7-9aa1de6784f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809aae1a-4ce7-4ddf-bee2-e4c7ab669132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d36f82b2-5d79-4970-a278-81eaf99ff9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3834bbd5-979a-4b20-8211-3125aaf8b65c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f7e367-4cf5-4024-b0af-934d1bbd94d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53041502-ba55-4fbc-89cd-80c5686bc67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d1ecc2-a111-4365-987f-8e492751b95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "930dc46f-85b1-4dc8-942c-7726ff203ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8131c-0302-4a93-a623-0e4ead431fc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb188e4-902b-4842-8032-509be2fab771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c5eb9d-c116-434a-accf-340d44702aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e8000-1c75-4e08-8991-0c7edc6839bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3ce627-f063-4875-b971-15d097f670b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a465e8-c99f-460c-89c1-73d6cfd88895",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8263d38a-5c6c-4a9b-b654-b9c23a0d0ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55127d9-086c-4880-92bc-9514a2aebbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea1f289-71b5-4e55-8a6d-c4626573d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c77e209d-6b71-4f06-8312-86ab7944f3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59a2507-3223-4982-b113-0ccdacef2a8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc160b0-9d2c-4588-95d1-e7f9c6b82cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f90147b-5e61-4e49-8495-88d6575f8955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b1edb-d90b-4ae7-8cf5-b043f52e8071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4503b0-c319-4166-a5ee-f5661470cc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9f4905-060b-4f25-8223-0ce0941454cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f76988b-687f-48f5-a6ff-acd5d93a2713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498795d3-78de-47bc-87ce-1731d3497252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea43d6ad-e138-4b54-8280-de20bad225b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f43d20-97c4-4a4c-80b2-2a5d32f2709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f78ab0-798f-4d5e-997e-a5ed228a9bf1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309499dd-b360-4ee7-9919-9d42634e6570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57a18f3-93d1-403c-be48-583fe5aa7400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37e7372-1fbf-4bff-84ec-ed216ef8197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5012ae40-88c1-4d04-af96-e7f7e0ae4e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5466e-fee4-4501-a42c-10bf1e22be2a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e34250-220f-4290-9f06-f3f16d1ba8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0126639b-2898-4c51-a64b-e56ee13929af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afc256d-5af5-49df-b839-56de6ef6e9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e0ecbf-52d3-46bc-aba0-e3278cfc2f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d6b4cd-795c-4867-a4e0-32f3f793b5b6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02c91ae-e637-4275-b79b-490749f639e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb23e3a0-eca6-4c6a-9029-14ebf9312a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58d0ef6-32c5-4ecd-a88c-9ca7668dda90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd044cb-9274-4866-b5b5-d446fcaf57ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5946c22-6598-4825-9592-ca64be688f88",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9cddb1-13fa-4849-8c0f-b5458df749a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fd34fa-86d7-4ef7-abbe-b6c0cadd5509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08877ef-f331-4dfd-ad31-4dd3e0235f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2e4856-e2f5-494d-b4e7-6278dbf6d041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e9a864-5baf-4786-ab69-293263f8818b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b958d7d0-503b-4fd8-83fe-4609fdd34daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442f0b2d-2da2-43ac-807d-f002adfd6323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f5721-1dd7-4ec1-902a-cf0115c54720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b74e85-6314-4f6e-a28c-65df8fe2a214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb53df9-d170-49be-8004-15b614d64074",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596cab86-9d48-4ec2-8360-28e95aefb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec92624-93d8-4d80-adcb-bfaa72ff6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eafab4e-6965-433e-956f-a2dda8a30a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04a4cb4c-9d64-4cd4-8d6b-f400e4d360bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34ee050-2a13-4596-b6aa-1c0994b97538",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365bf7e4-f07d-48d3-b4cf-1f07594dc51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126d79c5-d54a-4f39-86ac-0e56a5a2742a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680b351d-7bcc-47ea-bdd6-db1d127ec72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "470a22fc-605a-4674-ac68-35e6d3af3d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55709d88-626c-4e13-a1a6-7b64d14a2273",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c098cca9-a95b-4f5c-8cdf-4a4725ff0311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb26962-7ac5-4014-b599-05dd99a09e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeb2ec7-3a27-45be-b9f8-a122f9092c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6322248f-f88e-4265-b36a-463b131eeb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc2c51b-a467-4eef-b4b7-bb89ec0b1487",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248b02b3-859c-4410-8086-59faec0d1997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1cc17d-c0d8-4b19-89d9-dafcd27a7a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3824cbc-adb0-467c-bb2d-0358449e4a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4005a017-2e7e-49dc-8495-3741b5852dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2a6acb-2e69-41a2-a175-fe6b975f221c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85910ca-c6d3-4c3b-8162-1ef15289adf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2ce2ee-21a4-4aed-9db7-3d136ffae064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc42a1d8-5f5b-4115-8372-64e043016af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8543d093-0449-4c8a-9b1a-30e83040390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f6751-2718-4635-9bb6-b99699bb6c5e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9901ceec-760e-4091-8b2a-df861b95857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d6bbfc-a8be-4f50-b9e3-ac49c13496f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e3c536-29de-4693-803c-5c77c639a09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce708798-e96b-49d8-b97c-62a458ec66ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3a6059-27eb-4546-970c-b0be25c83b47",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab61956-81a0-4e0c-9063-cee408612ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b85150-61c9-46fd-b047-7b62570e8eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5273547b-4a50-4031-a05f-320d9d15af13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c0365a-ffdd-410a-8604-29136bc41b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e6ed1e-95e2-48f6-8ef3-c5406b8a3ee5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec62f8a2-38bd-4b1d-b034-c3db4c106561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95853f57-83ce-4079-b435-a7015917b89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447bacfc-ac8e-4fc2-bc91-394a6276ffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2d3d93-75a3-4399-9db2-00a31c03dba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2366b7a3-158f-4ff2-aa1d-f62afe5458c0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505a969e-7bbb-4040-876d-cd7566c29048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de14b977-6830-4b2b-8f65-54f62363f8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908ba141-02b0-4eb9-aba7-82c40c2f9624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46acd97-7db7-4947-af8a-a9d2f8040fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2a942f-882e-4df6-93e8-1d1bc28b35ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a8a4fc-8a24-40de-aed0-4f3ec516f14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd17dc3-1f10-435a-a88f-5ed7962c9f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c934528f-c8ab-4636-a37e-4738bd3dacda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa3fac2-201d-4ce2-91da-d358f8dd529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca7b622-72c0-4e41-9823-1aa769cb4db1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1ae1fd-b871-4398-b9ce-67498ab6c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db02b892-e6e3-4959-be5b-d4d42c96a49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894c303e-0e94-478f-b54f-377bbdc92384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca9f3c5-e10f-476d-b74e-468a776e2488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271f4497-b102-429c-ad0a-1bc1f6c8a59c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dda3ff9-6657-4ace-8625-51b26afe9f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d2536c-7a52-4389-b5c4-afa823166127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6574cfd5-aa63-4914-b752-e1f21ab36189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba51fc1-478d-42e1-811f-18411bbe5629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53515cb8-15e6-4062-b70c-c0b200c8da0a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b9033-c159-4397-82e8-662d2f6acccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12319dd-38bc-482e-bec3-0d9bc1ce1bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae09510-7a35-4386-a45b-ec420ecd0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "167e1d5b-e8a9-414f-b33d-01dccb3b3c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3c7230-dbd2-4e34-b95f-4ce6068ed617",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872201ab-9a64-4807-816e-058faacf83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9793671e-7a95-40a8-9261-24341896c08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2978c4-26ec-4d5c-b4c2-4be6ee3e6a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dee6f143-931d-4249-ae49-6f56ebe48663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fadb29-516b-4497-94aa-938ed12cc2f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e945166f-9bce-47bb-bb6b-457ffaed4b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7a195d-f4d1-44d1-b3df-f82040365c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500c04f7-3e54-4c5e-b1b4-922219ac6619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d39fb9c-8e63-4db6-97e0-35d651e28cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ee6a9c-ee6f-4f24-be97-04459e883d82",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03c663f-17c0-4a8a-b30b-d57be94e7d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99934ec-7b64-4cd2-8e27-92183474ab27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1cbb53-c6e2-4d51-856e-4ccd3a8d7185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d409036d-9c8d-4831-bcb0-cfb442b12910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83544fd0-8191-4781-871b-715d175b52f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42db0fca-9043-43d7-abc6-470713a8b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d11ffa5-1e46-4de0-9b30-91199e8e3acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afdfc2c-131d-4705-902c-a65f1472e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a160f209-7746-4cd2-8aaa-56c9339dc282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5789974-11e6-4837-a6c7-ebc5f1ea5605",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2634ad0f-75a5-452a-9612-45d151057829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc630c70-912a-4c1d-ba48-cd4d7ac08dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd76e6-6f19-42ed-a642-fc2fce2abef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a34f9a2-c5c2-4545-8915-122de83ac99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22953a6a-f466-4975-8355-026e8e55d761",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3125507-3cf4-4d9d-8f38-36653e82ec07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd695644-7de3-4401-9a41-f4957831b14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63a06ed-5b81-4493-ae0e-719e7ac26063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18b1a984-5413-4d7e-8a44-c9c549649156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015250c5-1857-402c-b3e8-d9ad0798bf50",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d5e87-2f98-4784-b73e-57d9b42b8ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3784ee4e-82e6-40bb-943a-9c7c03479690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136a865e-14ab-4220-9424-ca3c4cfd4586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cafc8b60-b44f-400c-8eda-7733058340ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece0b873-bb21-45fb-ae8f-78aff8374099",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f71af3b-be5c-4cfd-b5cd-aa7520113831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36077495-6bd2-414c-88d4-dfa4003f6a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2270803-18b8-4240-aea9-05b83eb06f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "378c3cbd-d5db-4e1d-a0ee-6d40d7751a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20ba25-7502-4003-9ad7-3d187b4d3c9b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4058db-24cb-45a6-9492-e9d0091073ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0ecaa2-0bfc-4de3-a677-cf4dcb77a4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b5dd90-755c-4283-bb26-8bfbb70375b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc28b060-146e-4e63-bc3f-0a58ac024879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1991e9-1851-4be3-9026-c3257e0f059d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022b26c-4313-4a24-9a39-98596ea2d951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fe8794-a889-406d-82dd-4a800f4e1cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc502ed-c29d-45bc-a917-e84344c82347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e34be3-66ff-417b-a652-2fdfbafda24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6bda0a-3027-4a3d-9f91-03eb1efe8be2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2de3a8-bd5e-4a73-bb6b-6a65f48dc2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755a0656-d0d9-42dd-853e-d507c10ac796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7ee395-acde-42c4-9c05-12386fdb99ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f695e921-a074-44c6-b8cd-82c33f3f81a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2107edb-6191-46a4-8835-9aa9a692cf7a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e6472b-fb17-4146-89e2-c58ffe54c51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc2ea0f-5f87-4d56-abbd-7dfba3721dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de601556-2a28-4f17-827d-aacf82b344c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aae52e5-3bd5-4267-bf20-2b6bcb89c2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8716380-c35c-4f57-84ac-84879e6ccf44",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e64dac9-2cc2-4084-a4d4-9bc143e5be39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac22cc1f-e1ff-47d8-9397-8901e145d7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0115a745-2391-43a8-a6c7-b41b0338d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "335f893a-6281-45ee-94ca-9ebc3b2cff57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa7ae4a2-0590-47a2-aad0-b0de5ae1756b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da1b17fc-3869-45a7-92db-b49ec4808069",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff65e0ba-5c8c-4dbe-a58a-048bcd29d467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01d320e0-7d58-49ba-b145-c190cc15f57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6654fa8-66cf-4c7b-a181-a536c8662de4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4d93c5ed-58ea-4323-a8ef-9db4fe91f394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab41960-dcb3-4267-99e9-ed410edf33d4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5557729-286e-4dd8-a3af-265ebcdb2841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9dbc38d-1764-4eb2-b934-f56577fe20af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1538c138-8a05-4c3c-a5f1-42ab45878e3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6fdfbed9-8e90-45a5-a6d5-77e7d637ff17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d99567-af21-4c41-b260-322d54da90b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a6ecf43-d3ca-41b3-a1a8-3c0b8cec6fe1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69ce593a-a8cf-4432-815f-f831f4463ee2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c84e3075-7aa8-4934-b196-535e33c78232"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4358436e-a468-4bf1-a36e-1ac9b891eda0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c0f5cef-2406-4010-83df-17e175421934"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b2cf2fe-dd44-4019-8eee-32f77b0155ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01f3ef15-0f1a-437d-87f2-f967582cd977"
                }
              }
            ]
          },
          {
            "id": "9ca63fab-13ba-4f8e-8dd8-f85b496ca7af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33b102ec-b7e6-4d1d-9a10-1b4dd606d418",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e50365b9-40ef-42bb-8a80-dee70d9a4762",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2212226-66ca-4d4a-83b0-62d1fb42ad3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6379d37-e1e3-409a-8736-e4424c997960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c335474f-70ef-42b0-94b9-9314642db9bf"
                    }
                  }
                ]
              },
              {
                "id": "9c17b1cf-cd6f-4235-ad2d-99a94dc0da10",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72f539a7-7118-4517-bcf8-4117410f4abc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47f896e1-c49f-4ac1-9fa0-91e26acaf3ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bfa2fe1-fa9d-409b-b936-5a029ef3977f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "805b6f85-f669-4e40-9fed-ca57f1f6d9f5"
                    }
                  }
                ]
              },
              {
                "id": "61577d2c-5681-4249-95d1-7104563c00b1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a6e7d7-4918-4c20-a45d-5552efd51f60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "068cd5af-9db5-4392-87b0-09698e6bd72a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c2ba9e8-7a24-404f-9644-8e91838509eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "046c0961-b575-463d-b878-fe058f1db954"
                    }
                  }
                ]
              },
              {
                "id": "5adfb30f-05cd-4c5e-8c67-00885254c434",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "798e64e9-dd7c-4bdd-8cfc-3d7f58bf15c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "117982b5-62b8-4378-ac91-42149048ba60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78b33ace-be6f-4307-b87c-23016ba3c620",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc16c729-3967-4fca-af96-ff82f795c06a"
                    }
                  }
                ]
              },
              {
                "id": "1438ef61-8469-421c-9c14-48738d9e1f12",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "016d332d-db8b-47db-993b-9515be17f292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d74baac-ae9a-4b71-a02d-90d6c23a056f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38d95308-38de-4d98-8773-7b8075107612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c29568da-3d1e-4829-bf69-3f69d6c54810"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5457f48-0def-4c77-bba4-49e5a5e3422e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7b6cbd0-abb4-412c-83bd-e905c552d47b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13b29689-57d2-441d-a7cb-60a8544c9b19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2496c292-c5a0-404b-8be5-5f574aa61e80"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03696309-db74-42a1-ba51-9be74024392e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ac69af12-5126-44a5-b2fe-8de3c6d6d296"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57e0385a-0339-4e14-b854-4a8af58f51de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1498ee84-6997-4b5f-a812-8776030be400"
            }
          }
        ]
      },
      {
        "id": "a8460c7e-3b78-4e07-90ce-73c431916c3d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e963813c-680f-43fd-ace6-56279e22b04c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eecba2ef-f550-4a97-ab12-aa0935758e68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "728ba9d3-0164-456a-b4d7-73f99da6b07b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fc192f-c5df-4176-bb89-1f6dceddd9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5ea499-daee-41c7-8a6e-bf0024b2d414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba89ed20-ebe7-41c1-9b45-0b7270463002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a42a86-12d6-4ce4-9b9a-944a5b3e7489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f6f0b1-834c-4d8c-a1aa-4846f76e024d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9683b2f2-3904-4551-aa0a-5b9afa4a966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e797d7-ae34-4ec3-97d4-ecf09e902a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f25da2-27ff-4aec-acf5-bd6e3c79f85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bb9318-8617-4f50-9249-f7d4d0e1ef7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a399de-73b9-45d6-b249-ad5f66fbdd31",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b2cd73-fde3-4d58-b1a7-b5e1744f3ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c7bfe6-0857-4689-a46e-11f4b1db77c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff545c29-907e-4fe1-8561-26ea31f85e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "879c3654-4174-4b8f-ab31-3568fecf384e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb6e779-c92c-446b-b88b-f9672126e85b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d93881-498d-4e81-9d9b-d0c79b2f9c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be9b61c-f894-4c4f-be12-805b2b4752e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2050e65e-2c02-4a26-b464-2dec5dd900c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6900d4a-5102-4d1c-93fa-fc7948eab0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4902aeda-2ec6-47c4-b9e6-78c08d271acb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb8cde-bed0-422e-bfc7-9e60d20c4323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76de84b4-d5e0-4b74-b8e7-3e2d9538fa9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfeddfb-b832-48eb-bf15-d9a8eedcacc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fe6360-e679-4e55-8d92-faf0297e81b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ce273b-ba8c-497d-9af1-7d7ffb8cd1ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6fe5a4-48c7-4253-824c-b15f32626109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5281d825-e23a-4d98-b381-cad02c41d486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550408e8-61f8-4c5a-bb59-1f6c8f5ed411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46310cf9-37b5-4965-824b-67fb757d1c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331d751-73d0-4994-8815-36e6caca6e36",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e769441-90d0-487f-868f-2176c5d79589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908971a7-e2fd-4c97-a1f1-0164dc4fdef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69555639-5baa-4a4e-b64b-b1b5fbba5407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b536590-51b5-4921-8500-f8add9cf256d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d2a744-c570-4c6c-b184-1697ec9f669d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a306bd-8182-45cf-9428-b859b032e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52105d08-cc35-45d6-8544-1a80c8dc0df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cd815e-8eda-4a7f-882d-5bea9bd7ff4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7db2d3-a615-4e18-8741-539bf39b363a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d381bb2-a750-4c2f-8e6b-5ef732e5e088",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a387f1-9e07-4e2c-8af8-c66cbf7cf9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01d1b18-db85-4ab8-8397-63ae1d758e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7627d57-7a99-4170-bdfe-0e5aebf71208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f535d075-d18b-4d49-aca9-46bb8390b3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba0832-912c-4694-9f0e-b10ffce79f90",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de76a00-2a12-462b-8be9-cbfb2ec33508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e6a01b-f165-4a94-b123-2a718c52ba7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b93ccb8-8190-49e5-b59b-a76097a78c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09fd427-0777-45eb-b34f-fcac1db5b135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7413a-dc6b-41f5-82ce-a2f072879427",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1236868d-cd26-405b-81fe-c2c92bc26c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d2de04-693b-4a5d-8be2-67867563060c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7563f97-67d2-4a30-934a-2e312d6622a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "00854fc8-bc82-4c8e-8bcd-953a20814504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f84a177-fe83-4b98-879e-730545afc088",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5ad124-a0c1-4283-a8a9-05d4f57c4008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559f936a-e269-44e3-9b9a-735d9490dda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e25387f-1a39-441d-8efa-aa0465c3704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eb4089-131d-40cd-9495-bdefc270499a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de267cbc-2ec7-46ff-8c0d-9d9094b1083d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94754052-9236-4d86-8052-6acbe8c53ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c82e0c-6f5b-4d77-ab00-bbdddfd5adcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df62b5a-a909-47d3-9172-6dea8bcdb914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca993578-2f58-4695-95b2-d7a2ef4caed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bafb6a-dfb3-4811-a3df-715b2ccc6390",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b2cf48-66c6-4578-829d-b83937071fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7a6d06-e64a-424e-9ad9-f21f16384ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dabc50a-d9a9-45e4-abb0-3dcc82c93fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4eaf2b-2c2c-4ce2-a6cc-4a8c75edcadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0732c855-f323-415b-80dc-80321d61abb7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b5039-9c68-4807-9816-820a4d5fbf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cc19b1-0838-4c51-9cdc-aaa936197276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d151d013-d768-48a4-86d1-43c81d88972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c548963-1c83-4591-91ce-7009f8c0ec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521b96bb-ea6c-48c2-8a40-8fabf9a4cb3d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41f0124-e5a6-4216-a516-48aa8427afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ae62c3-e486-4252-9a23-3c9b5f5a5059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbd78ea-0b00-40f4-a8c1-422aa6e48da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e4fa4f-5c61-4551-9ef1-b77d2958a714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c671d6-9a8a-441a-9397-ca3b166f72af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c507e4a-9870-4774-9b76-eb83f0ac1a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722e5969-e57b-4778-960f-96c9e6da5564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07b0f6d-4454-414e-a04d-2cebb0505d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43cc6a7-a718-4333-923f-ce9ba4cc9919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37074d36-2b80-4ed2-96b5-90ad32597bbd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910fd75b-7c7d-4b90-8949-f6940f311b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb57b24e-1a43-47d2-aefc-9ebc13479fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90631c1b-896b-4193-ad18-9ea96c8b5478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0302a1bb-5728-4750-838a-5e7f8125fdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74be597b-443a-43bd-abe4-ed17ee848843",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e93b11-7d39-430d-871b-cd9e22ced2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bad4cd-fff3-4b80-a3da-9879e5778273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c371b16c-2fc9-4025-95cd-e85544b6223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e370d7d7-77a9-4ef2-a069-a83b1717dd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c49cb2f-9c5d-4ceb-b936-e01d9d82e268",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff7ba60-89d5-4ed5-bb0b-f0c21fc3aac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef2437e-bf84-4612-a558-0cf614641643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9500a97d-5cc6-4b21-8ace-d43daf4e64e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a988976-4fb4-46f0-8282-b9b8066d1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233a1690-442c-4b31-8fbb-fa98825019b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77af7392-963b-4939-941d-d3fda8d3f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295a7107-9bcb-4f22-a0e8-8a5a560384b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a643dcb4-095f-4453-96fc-30ab70f2b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88651e3c-df96-4dc1-af24-fe50341f0ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4449dfb5-1747-45ca-93ff-886849e2f606",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8749e1-b09d-480d-9b10-88b42faed08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cab9c73-4181-4b59-9b70-bd1f6b785431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c14160-c17f-44d7-b5cf-ad88fe710993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e16f4c5-9e40-465a-8993-2b6faab2b803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caeeac6-fc83-401c-987c-59713df61e86",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c99f731-fac5-4664-b7cb-764250b6daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c435d9-ccc5-4cbb-92a9-6d9c80e54b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a6ef42-fba8-4f3b-9613-32721f07aeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2f8e21-60be-4204-a263-315c116c309d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91806646-deaa-4a10-a41a-390945dedd1e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a794fba-3b59-4fca-8f30-d55616c17ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7139f4-c2c0-414d-80b0-d7a1f594ba2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f470d7c-2a1e-4c0a-bdc5-64e7a1388e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a016d36-5977-4700-9151-e41db58688dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d9f4ce-e58a-4296-843d-0df3ead6d62e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d765e813-a8b6-4024-bbfe-36bfccdb4d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ec4774-8bfd-4993-8f96-4f93b210ef06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eafdd00-ce68-4ab8-a8db-30760dd5bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "269b477c-702b-47d1-b0d5-f88ad8d9d6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d481116-8b86-4b24-b9fb-dfc1b486fc7f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf72b2b-75a1-48f7-b1f1-475621fa5fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae521f8-1169-44ba-8bf3-2331d94c975e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307b2749-ea35-418a-a5e3-d26f19bc6b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d34e1d5-489e-4bae-a0fa-3d64602108af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef87af5-a936-4bb5-8e82-609cf3e5e192",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cb4020-e896-4a34-96fa-e5e9d48ee20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dab26f-940e-4f87-a189-35a08aba64a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b344251a-0a3d-4cc5-901d-954bae54703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ced5b56-c5d1-4385-a562-c102599af0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8d2964-683d-4e03-9f9f-ec5ec9c1e481",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f035ba-8c4c-4b8a-b27b-acd06c17ae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e0e336-2bb9-43f4-bce2-c6a7cce53322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df0e00-daad-4eac-9339-0bdfe65de231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c63056-e032-4302-87d8-2d1d117a3623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22819b3a-b078-4dab-9144-d54daf3cd20e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b34e56-86ed-44fd-922e-5a799f2256d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797ab625-02ca-4c9d-984f-53ba9384f0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f89b5b-864c-4f55-be48-adebcfc9edf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ef3204-7998-4796-a331-2df7d6f5ed3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4d4261-cd0d-4135-b92a-e6c7e9ab4d03",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a8dd9-8db4-41d5-b5ab-561a2ca989f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e453a6c-a1d0-47c6-b152-b688f4dd7156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adbf430-c176-4548-bb1e-04f2271cb827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "650a9bed-5980-44cb-84ce-2f19a79bf05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4872e5-ecad-4b9e-a4f0-b415ede955a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c39f90a-61e4-4c2d-bc2d-3d097ac52243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f71326-ce8b-49b9-bb44-94cfff5d34ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ad4e4e-40e2-4955-9de6-8117cf1ee1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28acd98a-702d-4fd2-85d8-a285569cab98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68362712-3516-43c0-96ee-4b4e614f0170",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78018c0-ee9f-432c-819c-810b5d58428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10feb416-9daa-4128-b1d0-861f0fcbe550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98623d24-ab41-4fa7-a84e-4345b4404dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420ce4a4-0995-4d9d-97d4-d051012e1e2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3e0893f-ef7d-4e70-8da9-778d08932b2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74dc5874-15e6-4cdd-a989-67a3de2599d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d05b6eb-f85f-4cd6-a248-e3bd44291974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62dc7cf-4016-47a8-8dd9-d878c1672533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f7d5c7-c747-4e7c-b095-0800797600ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17d5acfe-e5d2-4ca5-bb50-013fad935094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ab02b8-43b3-40b3-ba50-47ed9efb0177",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d16e10-06e6-47bc-b3f1-fb014cc3c40f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "75ea2002-4a55-46db-b27f-e44db55ff024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f617cf88-8588-4405-906b-88ccd3eca679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08227efc-030e-44fa-8dc6-43bc800e8a3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0578c763-30b7-4eb9-a006-039304f0e9db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a98f5bd2-1b6f-44a3-a024-1aded709f7b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30e6fae8-ac0a-4339-9df3-8595c74b4b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efae3f85-fb3d-4568-b000-f909bfd46a53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "178fb4d8-f51e-4b50-9f65-5c83e052ed93",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b706e0df-2fd9-49d1-b22c-45212ba2b9b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73d2c1c2-2712-4f3f-b3e8-32fe0c590079",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ede66ce8-f7fe-4d3e-b9ff-5ae97ce51e4a"
            }
          }
        ]
      },
      {
        "id": "49a025a9-edb3-4ad5-93f6-6eca1a91774c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "885bfb1c-bd33-4fa1-b3ae-e99f9930f9d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09674053-4590-4a05-b378-9132176498e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d1ec61e-9b94-4462-8e90-f709bd9a228b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1b162d-727a-48b0-864a-c45d0c760a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf6fc64-ec26-40d8-b86d-027b5e7df6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ac9155-c029-4a86-a954-d90705ea865e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f3b9c1-7fe9-4d34-b18f-7f79fed3eb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1d38db-f755-4d06-9971-1bf2890b3734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb476a5-9a34-447b-aad1-d9be4a181fdf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c532a-2143-4597-827a-d0f575591d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e64d89-551a-4d49-b66b-aafcbedadfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeed1f91-a725-4e1b-8646-120caae2d425",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889afed7-73dc-430f-a26b-5867f0c53c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6f169a-182c-4da1-9b7b-72827e8878b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c84a82f-c408-48bf-b098-89553d5fd192",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133031c3-a7b5-4b15-8aca-251a66b86192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda46fcd-31ea-49fa-a7e6-9ce6fa0b33f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8d3f1b-f47a-44e1-ac5a-a1dfbcd6f66e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f865e25-24fb-4643-9848-ef0988262830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a999b0-b3ee-4eac-9cca-46043434cf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb74532d-3be7-407b-acf1-4c6ccf2b9d6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31061371-5c44-4ac3-a506-9c9a3042bb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df55561-bec5-414e-b974-8de6e22af21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2dc09-3bf6-4be8-95e8-07d9d8e81ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99c3322-78fd-4db4-9a22-2ef384a4998c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af79bdeb-2c66-49b8-bba1-71fa8aa933c7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cb64ad-cf9d-4488-b4a3-ecbe8c534e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733a3f8b-9da4-47a5-a933-42123c718267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3741e219-7240-4de1-a0bd-57b41e563cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b31c148-50ef-4ac5-a932-cda0f78328bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f76213-1a39-450e-99bf-fcdf27b8ecc3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c2945c-07a2-4cca-893c-9f9dcdbf2925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534e6c1b-c22d-450a-b1b8-4bdde83f6f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3224a95-5171-463e-b13f-db6cbb4ca141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ea5e67-195d-404a-9548-2ce65ca62403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2123502d-f4fc-43b1-885a-26d5bb7a7ff4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b97326c-fdf4-48ab-8f3a-b85ab086172c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded3ba2a-35f9-4d30-86e9-b334d996e545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b4e06-2b68-4443-9489-31c471e906f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f640594-f38e-40cf-901d-ae1cedb3db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111bbba6-bedb-407b-bc05-51f25bb656fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcfdc0e-3fb2-4e66-8a24-a87b9e2e225e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9115d2-254b-43ec-969c-1cff7aab5da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cd6e82-bb51-4833-a490-5dae88f23dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471b231c-67b1-4998-801e-514af4bf5e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cababa2-1b34-412a-af4e-d31b9b877d90",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2ec606-c004-4f09-85e7-8ee5d2b7e636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2f48ee-f71a-458b-b518-7213a8045dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cda92e-c3f7-4987-995f-3b7d203bc07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c680e6-9094-4cac-9c0b-2894d023947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4334f62d-ad56-48df-b7a3-1457e390b693",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba1ddaf-c877-4c86-bf63-07613f8b5bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94903926-00d6-4dd5-b260-72133cc1c9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3621c668-91d0-4572-8991-3b93ce47866a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa8c9e9-92af-4c03-9573-9b65500c198f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16748e76-23a5-4641-9c25-654ad212b0fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be013cf2-24a3-45cd-a9d7-bd5f467443a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3574d907-7a70-4326-904f-8f829d341928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89055c06-7e67-4b33-8fd1-129e51625a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e916d2e-6e83-45be-b2b1-3af2c238d178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f9e61a-2d5b-45e6-9023-fe01c7bb8062",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48cf51b-9dc5-4826-81f0-c4ed48b8f976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6698e15d-99b0-4272-81e7-3044f0c2356d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df8a89-f3ab-4070-8b68-e97d29330adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae07898-caae-432e-9866-89371d87ed9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703e2b46-690f-4125-8bd1-b24010b2bbf6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e954d0e-5aa8-4d74-86c7-23606b01a8c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00387490-15d1-4972-8968-5f28fd054a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f894da-f58c-430c-949d-3f6fb4b43c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49d0ad2-cfd4-4a74-8a9e-d8a74cc38924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0028ecd6-7e6a-4603-b588-e35bd0b65247",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeabb14b-2c6c-4580-9c33-9fc5dd7b664a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317919f9-8149-41f3-a948-71641778bc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036f54d4-d31f-4ba5-84dc-ba14029a3cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5f4d4d-fe65-405e-ad93-41d506693c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5580c5-689e-4f32-b272-180bbb43ea24",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9828167-de4c-4b65-b27c-ac98c1ab44fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826e487a-cf62-4812-af1d-3ce38812e1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c9ada2-b143-417b-bf3c-0f4cb995fdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4addf4ac-1d28-415a-86ec-5ca211c2d7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07003d5-0e61-435b-97e3-b10534936bc8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d81d3d-764e-493d-8e0c-5d23284cca30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a51b8a8-a091-46ce-a246-28cf2844e9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d05a03-2f53-47fc-8ca1-027b57131998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ae8372-158b-428e-ad43-e9f69e17708e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4276be-881d-4e9d-8567-172e5b8a985a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d06dcc-d097-41c9-a4cd-eb05c68e4af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a1d137-8af3-418d-8755-15fe7cc7468e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e2c2b9-c3cd-4a03-a1ee-fa8a59956b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4dc044-5718-4bb7-840b-07cdc0f24701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865e8746-d5fa-42e0-8ec3-dc5acc43e978",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50447d9a-eb5d-4cc2-a3cf-41cff47ab7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f824a60-65c1-47ce-b5aa-3dc8a549dbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bda23e7-66ed-4b2e-a6b3-2fc2a6842266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecff726-9392-4970-9a16-d2e32c3650c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b0429a-bbe6-4220-955d-aeedd436d7db",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11517513-b465-4766-a3f2-dec15189bd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9861b467-ffb4-449a-8a42-4ed9e6d56f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af29dd2e-163a-429e-8ce7-da3b68be9115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc03f56-477b-4b07-8012-787265d04965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ebfd53-b9c2-4758-ad02-0316e5eb1875",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e17cd8-ce71-448b-8bd9-421ec43e2ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b59f64-6f2c-486d-8733-f292b4a9267a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c2d76-4e66-454f-a893-583d882e7a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdbeadd-7e0f-477d-a04d-24493515be65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90520197-5b5c-46d4-bc1b-025677f0822f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34a1d90-24c0-4835-867b-6a4a6ac00190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b540b4d-e54e-4fff-97be-e91df02290e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931ac3c-694b-4901-91a0-69957306b29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f26a3ef-9a07-455e-a7e7-bc4fec7df03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c11fbd6-477d-43a1-a240-b3225932f0d1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feee3b8-766e-4e2a-a116-62d72013de65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9da596-04c7-47b1-8e96-889531df9fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc372699-b62f-4523-bd2e-37ca8d93c02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec68d7b6-f107-4334-9ec3-21ca7e64b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751edcff-bb30-4024-8713-740d69ab44cf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b42748-418c-4d53-a7d8-ea569932788a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7f2395-c5d5-4a32-a6d5-ddb47cfcb89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013a93f0-f928-4394-8719-28d0b39e4b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cc6472-a8a9-430e-b043-2fb85f397c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce40a1-90be-420f-bc2c-24a21ffb22bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad65eee7-9cda-49b8-ac94-aee427a7abeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df2eca9-ada9-476f-a9ed-85e5abef47ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ba7702-78a5-40ff-a3fa-ee898921c732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d086136a-0558-4f90-ac3f-ce607d51235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831f38e-090e-466b-8498-da98d3b82188",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe197b4-5d82-46bf-b50d-f0b987d06811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35ce634-166e-4964-a1e9-f600fb97b590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd55f91-3cd6-4890-bf50-25e5338b6f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cc8fea-7f57-4eac-8486-1ea6734186bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2366a65a-c9f4-4535-b805-c2586ddb4f46",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302c5d5-7aa3-4ed0-8dad-70157514175d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c5a6d0-0c78-4796-bfb7-0d91ba68ca85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3187009e-cf4c-44f3-9d2f-e2ad2ecb6034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f182df6-6791-4810-8360-2d8d4890317f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373e7ebb-ea97-4ee3-865e-31e7139a8646",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cab0db-ac7b-4f7b-842c-136708b984a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1af40f1-46a3-47bc-9551-b36c281ebf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0d6316-9ce7-4411-83c1-e59240780593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10406f54-1d1f-43e2-a790-3cd80f7c4eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009a3490-1f28-4266-aab9-b424f1a72270",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e612b401-e70a-4126-8c20-f083438cd516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bab985a-6d47-4cce-8cb2-00d5db376a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a3080e-0250-45e2-b34f-4210cb1808f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b02f7c-567f-4ae2-8b0b-995d236a9a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df6d425-fe37-441b-9a82-5718e8c3d76e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a61999-d54e-421c-9d83-399b5889a3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c98708a-1ced-43e8-a1e4-216024d04a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd600ca-1003-4fb9-9830-f8e23f9e6ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcf6526-f715-418d-bdb4-5add04a65b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eb8dd9-f36c-47bc-9fca-179b6707b575",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01c960-e879-42fa-9f3f-04f932a6e91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ec48d9-8485-475b-b37f-3c74cd373213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aaabd9-3033-4c7d-aa05-1caae4fb234a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e840178-980d-43ba-b674-016fbf9a25bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd86b67b-2e8d-47d3-9f56-e2fe6fcdd7b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08fcdc2-03c6-4cdb-a81a-7c1824d3f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37bfcef-2153-4029-a074-cec2dbab19d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c81068c-1a72-4734-995a-8c1ba0b94e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c8a8a3-260c-4e9a-af34-cad4ede159a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faed7e0-2f19-4924-9dbe-dabc5beb2c87",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fe03a4-da8e-448d-851d-f632fa1cde92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af4101a-a044-4c6c-8264-5d34954fe018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b816170-7604-4c2b-93ba-e19f0527ff8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ea0a24-296e-45a2-89e1-f23b24109502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b8d1e1-f604-4735-8365-0a7db1f7588f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d47af5-c926-48d0-b765-84c349ee8e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518c30d6-fcae-40a1-ae80-766c873bbd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5465e86-d20f-44c6-93d2-1e919fd854ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd187b3d-a270-4bbc-b84c-7735225edf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7037c094-ad80-4b1b-a814-06c0d40c01b2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c057b1-4b0c-4e5e-a769-28079f4f80c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2b85f7-0692-4cad-98b7-bcb4f1fe405c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2555b4-5fab-4674-b494-c69073d33c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7f297c-7ccd-4dce-a47a-cede61ff0ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80837205-a55e-4fd0-a360-875180d156c1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dee0125-1705-40f0-a75e-9747957b3fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac72b4f-b8f4-42b6-9270-411d55296145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad05d94-fbdf-4fed-9c7b-582c63e4848f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628b7ede-8c70-4750-8580-aa7c3f0b7419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fe7cd4-e436-45e3-bf25-83c7a9f07c90",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed6e145-01e6-41ad-a011-d7328218431f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c4c9f5-477f-4b9a-a0b8-99e8dd269885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79342bdb-e88f-40a6-9420-2ce6bb32aece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca03cb10-efd0-411b-893f-c402858fc6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1753341-4bde-4a1e-9391-32de50af01c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f1f7bf-8913-4132-81d0-b1112a1f23e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a38746-d294-49f2-8914-6719934aa886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4058fc0d-0c80-48fa-9377-ac7ac3384344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114e47ad-b867-45a9-a433-724ea8a3407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c312c5-e096-40e1-b07e-308653ae068b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea0a36c-8101-49de-86ac-eb2b78e9511b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f32545-5de0-4f75-8744-9f99c840b2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cac1f5d-5cbb-4075-bb6f-46eca5040ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f646a3-0da4-4947-9797-0436cd378307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8675d8ca-21b5-4de8-a1cb-ea2d578a255a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390b8686-8901-4c0d-b524-a6ecde282c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d87e10-d5d2-444a-8c79-f3a079765b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a3e7ee-fb7b-4049-9d8a-f2194fe7bfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f58b2c3-d3c2-47f1-9ad1-26f67696836b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e938dd9-b51a-43b4-af09-06de03d1de89",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3a0b2e-bed0-410e-ac9b-8794004344df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66eec587-3ec9-47d8-b9bb-7ff0de8a0508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1697c40-1445-4866-b0f7-75d1ea561375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a76151-7b2d-45d9-b4ff-b524a4004386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268bc29e-d36d-43ec-9508-edeecfc91b70",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e140bd-4149-4ebe-b3e5-b76e16a9beda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9e5dd3-40fd-4c7c-894a-eb993bb93e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0631587f-6d1e-48ea-b09c-97f49e2f3cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377bfbf5-5a5b-4341-8812-e783c6092f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf87f7-143a-4465-8719-e80b76d16907",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34d435-16d0-41da-a381-78eb243a9c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2f2182-6339-410c-b973-b6a7a11be12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697fa576-76e5-454a-bd73-40819f746349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7f23a8-6e35-4e45-a611-5d374dcaffa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66ef7b-6b7e-4708-aa54-2c2bf3eb19ea",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b57f03-3b70-4c33-92d5-d26d0af71654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97be148-2c4f-4078-b4e0-9c8b8538ac53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7191f-3a77-419d-bdc0-e52ba140f961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5fc264-483f-4b7d-b9f8-3ece901defd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99b4244-4fd0-4af7-930e-d6f6f017b330",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c826e2-8650-4240-8650-ef79fbc7fb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4638ed4-14dc-477c-9d21-a3740f6c0c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56535e9a-76a6-4534-8b15-3881fdc1ca36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cea293-40ae-4759-bd83-ac59aa958ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc11a82-711a-40bb-bc0b-5378b7996103",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae9a4ee-4b30-463d-a9cc-d1452987194f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8704d185-51ea-4ef1-ac43-0e4d16df2067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd11f7b-41de-4e60-a1b2-edc8ce840854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cf8155-115a-4dcb-a250-2ac0b1e5e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6b60f8-fb10-46f5-9d3d-13c0f15ccb6f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a924925a-8d95-47e6-8bb4-6c302260b57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46e8107-dafe-48b7-9b93-067ed35164a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3bce79-b9b2-451a-8df6-7466355c0287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631f0d97-1187-4f0c-98fe-1459834cdbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfd8cc3-5c7a-4051-ace5-41b5d5e76482",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eff380-910d-4e18-bf8f-e15ec7b00687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fd3804-6d47-4923-8b08-a5412ae91c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b731e57-826c-4451-89aa-6c5c5876e249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8729c2d-aeb5-4af3-927b-e692d83a2a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e29af1-e165-474d-a52e-402332553190",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7691fd0-fc83-4af5-bee7-065c985bbd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4893234-e0ee-4616-869f-95c98214b7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7329d742-4741-464a-a84f-1e8e5ef5002c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60651cd-5817-4ae6-a6e0-923eff8d9aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e7469a-fed6-4352-a7df-9a9e87036e65",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb596251-4e50-4989-99ce-39baa22b33ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd34c028-03cf-4782-a55d-3399832549a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35958d3e-22d4-49d0-b958-67bb0b66a46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff9b10b-836b-488f-b5c4-1b62ac36af17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc9d154-39b7-4220-976e-d89a144be4f6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0023da8-19d3-4617-b872-d0062dfb0c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf434a1e-59d7-41c8-be24-3666a4cddecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b192192f-9d07-4d80-9f62-becf80bfdbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e615a2c-a910-4ab7-965e-bb9d0181b50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ab5da2-fe37-43d6-82cc-1ffccc1ec96f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495bba77-b7a0-4c26-a8f6-80191f144bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b26dee-e3a0-466b-868a-92ff520a200a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d3cc6e-79ca-4271-9159-0693ee77ab22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba725b7-7ac2-4a65-b34e-4a8fbad83925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18124ee0-74f1-4cc3-bb52-3285f6eb339c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a77b311-5148-4650-a091-178c047156da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459ce6a7-4fa3-47f4-bc68-7971fe0e3903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3772432c-ae01-498e-949d-d7b79d11c741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8c3abf-7b99-4800-81f1-b9e9b826fce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02614c26-6f7e-4016-9254-fc7485c3cbbd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc79bae1-e0de-476e-9587-262db96e3d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8d5f44-9e2b-4120-a9ed-c4b5d6fb4f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8842a24-2823-407f-b64d-d2a207de5329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e4af90-dda1-42c5-a3aa-610a59c72a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f59132-a1c6-4458-8156-1a313ad57ffc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cf26aa-8035-4b84-b7ab-6062ef8382c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dfda51-97f2-4a6e-8860-8c75d8f9f514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaac2399-147d-4226-92e8-b29b0ce02f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705d4025-50ef-4b3f-b65d-82d45ccc5b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df031e75-20f5-4de1-b380-72a9d1d6ddcf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941061b7-3230-4b2b-9449-62fd84c53a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f096f36-d88e-42bd-b2b3-489f2981e666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bedd148-d63d-430d-81ef-94ce6934b284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5693c5a-0ba0-4a4b-b6bf-39ad7e6cd5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f5bc93-a60e-4319-a8af-c54b0b021967",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e338311d-be1e-45a0-b088-4d2f86f5ace9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a00aced-addd-45c6-b2c2-177573819691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5280fc80-57bf-4c76-b91d-707c6a615852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b42489c-c7b4-4dce-82b4-cb0881a05036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe6c1dd-637a-4821-ba72-c6431ae3c57b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df571ca9-11c2-431a-9d9e-d47d7e7b957c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a228ba7c-65a3-4a51-83c9-f12335fd96b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e404d8a5-b776-41f1-b2fd-0d6420b32494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015d442a-295d-4cf3-a4cb-a78d1a2a7396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d528873-1979-4352-ad78-b39621912457",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008635e4-4a77-470d-8fc1-1274c7d987a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0430b9-2ca5-4b1c-874d-4853ab47b74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8976b0c6-9047-42f8-a80a-3d6a73f85a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dec715-4e67-4788-886f-8bac0e9b6063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b3a7f-704d-486a-95d8-b27ff22d9825",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93a4dfc-7852-4532-957e-ec1be3305e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4140201e-6f6e-4cee-9237-1798b3bc455c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc909bf2-d822-41aa-add8-ddac46d0024a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8122a35a-69d6-434f-8ea4-fe1fd1c2cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7e6e20-69c7-41cd-861e-9844a5f6bb9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcb183f-583f-4f8c-8842-5a9f30ec6cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1f2be8-113a-4c64-a864-9820d0ce88b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26022d50-2f3d-44cd-ba86-f838b0a54b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e82d08-adb6-4aad-8c2d-f6a82894f713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5aba19-b7d4-466a-b78b-57f700e24e68",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92cc802-ce74-445d-86d5-995c27a09a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dfeeb3-cdd9-4319-9684-22d83d6207d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636d8415-1f36-48d2-bd23-213db30f9599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92278fa7-f2e9-45ff-8aa8-58ea8a32b78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143a49d1-68f2-43ca-88a3-4277cbd17854",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a66538-d656-4200-b36f-b0209356a536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b2f7ff-7aac-4997-b25d-6f0d8753b618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5659e6df-d640-4412-9f68-27e7322a08ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54accdc-b667-4379-96b3-385760a14828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b2cd0b-df89-4826-afee-014dd79ba966",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3071f3cd-26a6-4c1c-a7d4-30b028f94455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d21f5f-1167-4900-bfed-776e25da0bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c49dca-f4f9-4647-80c8-127565b35c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20028ccd-009e-4d24-a0d1-e3613fb17c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe7ebad-2e46-44ea-9078-fbc0b8784ef4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512cd41d-9852-449d-838a-3b65afab45e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b6e92b-e504-4d70-b1cb-90276d144d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e061f106-fbe5-4784-aa51-fa31bba7bfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccf67eb-aae0-493a-8d43-315643fccedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faae563-bd9a-4f3d-bfcf-62b453428dd2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40495ed8-788d-4ad7-b876-a4378fb8aca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8342ddf3-1102-485a-b916-65e802e77b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f846ce1-dc8b-41eb-81c0-ed7a6ccbbd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7affcfc6-a508-4a87-8de8-e958811487c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d053a5c3-a35f-4151-b8c1-9f457a831c39",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c606cd-cb5a-4399-9343-265c03bf4e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1567574e-3ccf-4342-99fa-eb695df24054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820d733b-a7e0-48c1-aa21-757fb09318d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b0704b-2287-43a8-be32-0caab475ae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987cf111-c621-4fc9-a741-773ebf2e1643",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62605f85-b54f-41e9-b9cc-6fdfe7b7600b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15b94fc-fd96-487d-a363-4e50a5bf3afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb1ce28-aab1-4144-a0a5-bf3d9aa6f58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f88f661-2902-4d30-aa8a-fe33f85a50cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02b5661-68b1-435e-84b4-3c5c900f1a47",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874407d4-8ca8-4218-bce1-72f407461268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf79300-22d1-4a03-8d51-840410f3e89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29a5d74-fb24-4237-8a66-4c0c63b5240d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cd6723-4a50-4933-b9f4-c995edccd768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5608d2-fc3c-4872-aa93-230439c4c8df",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e8e34d-f68f-4af4-8481-b70b6deff480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6628a424-818d-4c7e-b421-c6a9d16685f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc66759-970f-4c6d-905a-c5a0d48aef8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e52b4f-2f88-402c-ab72-e5e0e36727aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc15b278-2d5d-468c-ad40-2498a66fea40",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d42ec1-4e96-444e-b0e8-a3e45ec2f281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c3e1cd-fda3-4eae-8c40-8508c07f8fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a68811-385c-4597-925b-2ae2a980c940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadac2b8-de06-4890-a269-a436c03c9b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6cb05f-12d4-43d7-8eee-9845e63945e3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd3bb23-b670-40f6-afcd-b7bdf3c6c74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad98659-2860-4310-933e-bc9f7d06bd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a824736-2c48-4166-92b5-1f278f1a7b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c789dab-0ce6-4c10-852e-dc6f3351a485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c677d684-700e-420a-bd52-10213c99fa23",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759156cf-a0f6-4af9-b224-c85142e751d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba513bb2-a496-4dae-bd84-a899243daba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7176f5f-de1e-43b1-b9ba-57f14c0662c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c52be44-8952-4164-99db-1b4b69307647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb49af3a-c70c-44fe-95d8-ad7b13d8a9d7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2fd1f0-e0c3-4298-bff5-641d8d056abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d941ee7-d0b8-44bc-bd19-7cf4fb9cbac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00a3ac6-7dc9-46d6-b710-b48c843ef7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7f8f4e-a72f-495d-a4b6-b0c971497a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64098efc-bf7f-4f3d-ab3d-80cf4df7c038",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9880f5-39fa-4f7e-b06b-2955395104ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "122bfbab-54d7-484d-8994-1ccbe2462a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f67a4d8-4f47-43ba-a613-5b8eefc3fe37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52af11fb-b740-455c-a930-7ffc0cf8398c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7830cc43-1558-4ce5-bbc1-68d14f7b10bf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a46a7c-c1ec-4ef6-9bd6-b1279ef58009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb84da9-5c8f-4203-bbd4-1f6d1195e705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a0d19-013c-407b-aab3-842b6408b753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b1470f-14e7-4fe9-8097-4925b2dbf5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850d9359-a107-4fc6-8492-8eaeccee9848",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c3bf39-e68e-41dc-8ec8-0f9921cbf1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8efb302-cdaa-453a-840b-8970267082ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e52fcc-8e82-4b6d-b1a8-157165670b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652ca5d1-b300-4e14-8688-4a441ad101bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ec90c-43d3-4e05-9d32-37e9d4ecb5f8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9636af25-a59d-4f82-80d1-43f9edc4976f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170c779f-1d2a-400e-b992-dcc6a59e7d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a2336-1a4b-4022-a7a4-b9336109499f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef34774-9ee8-47d8-9628-4729b11a41a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e928339-67df-410f-a563-5b15e8be2832",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324ef618-cc45-4775-8e8f-f63f8cc68563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdab343f-f9ac-4d2a-a7b1-6e295ab2da83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b88e1-9827-4940-b22f-0d7a17a07310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae51983-e1f8-4968-9b8d-a5d05109cbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d60fcb-90ca-41b7-ad67-2f07746bf42e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34461861-90c1-4ac4-aa7c-cedc3180d316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c04b066-f94b-431b-aa30-9aed969e7c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed10e17d-a922-4268-b55d-ad015b4c7a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3163b5-ea4c-4dee-840d-e0170dfb0e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8547453-838a-4f21-bd66-3024ea72ab33",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403162d3-0dcf-4610-8787-7819746638cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29937db-ed1f-45cf-bb87-f9b0004dfc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf09f88-1632-4e4c-85f1-8e1d52e92aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54744b7b-20fd-4530-8779-83a819601df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dc88bf-de7d-482f-82fe-66ec1cf00c3b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6612d055-8464-4ebd-b498-e4e70eab4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccea52a-7464-4436-a6f5-86f34a93568b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ea7eed-e27f-4866-a5ff-ba67ba26de11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5746be5e-d346-412b-893a-223e872564ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673d17a4-e02e-4bfd-b1ee-7a1a763a5958",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897ad8f6-0753-4d74-8b27-b2f8271e23f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "facc881c-6f64-4e2a-bd5e-3b5337209f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dff0e46-5c66-4fd5-a943-2b7abd0a3287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4ae5ab-0653-4cec-8706-003273e965be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84f533-77bf-4dba-be1b-2b23270eb22b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255eb2f7-da22-419f-964b-10799c838abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676d51a3-2d89-4053-ab9c-149dd26c177e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1b0de6-85ea-4d8b-91d2-c7dd7fe526eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1d4f0a-331d-40c5-b66c-e8c9b2b7efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eb76f6-ad4b-4d3d-ac74-a9c8e342a747",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6411559-7ce7-418e-b8e5-25e950ca951a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5616a7-715f-4a02-b3d1-0706410acab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fed905-8339-4901-ab91-6905915a0518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667d7c7f-136d-4437-808f-f511a1eb12a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a90622-561c-41b0-beba-fa966760f969",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef75c112-0bb2-4141-85b5-882b48310483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb1ee10-f325-48c8-9ded-6fdc44ce2d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b561592a-7b18-43d0-b01d-e51250462d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fe227f-86c1-498d-9bd1-e7a8561f883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4153c1-3144-4633-98b7-680429fd70d3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeedf92e-4a9f-4bb6-964c-855335f50bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55697d5-c829-4cc7-8de4-5c706f8fb9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43796e3-04eb-4d23-898a-227adc8abb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df20f13d-3400-42d0-bdd3-e0f5eb22109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4d1065-190a-4ce9-8f0b-db87c3aee546",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a876fe-e847-4faa-ad17-e21fdea4c849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd69696-03a2-4861-9cc8-ac8a3f96da6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcbef11-0faf-428d-849f-e60e69f66a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a70d716-30fd-4aab-9a2d-e138737e10d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6422f43-ab57-480e-bb63-479332cf8e98",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b312a-9018-4b59-99c3-01b526a9ac00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfbf58cb-a88c-4667-8eb5-7730e53548e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f3b3f1-775b-4e1f-934d-006101e07526",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d416ef16-e281-4bf4-97b0-ac037cf8fbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b54b39a-9420-4634-b8ad-e81e8240b78d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c46320e-bea8-4cdf-aba6-b769b33230ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109cbfdd-8412-4f2b-af5b-2a66cc965bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c40a5-a88e-4bb5-a8d9-bfca054cc549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e48b74-cff5-4653-b500-458d3dd6dc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0722da3-8ea2-4a7d-b4e4-1aa430c2d3f7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffb2ee6-4342-4a7a-ab58-a905fb0f7824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce84efeb-6767-4f8b-ad20-5d7a95f1f12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d19d78-cad5-4140-bd7b-e17d5e8a7c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f38c594-91d4-407f-afa9-3aa6644c89be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230bc478-c41b-40fa-872e-43e7add4d73c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed67e107-97cf-4263-8686-8f11ac6b4311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552d0997-e4d0-414d-bbc6-70a223c2b674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba384b4-3a07-435c-a075-4cc5ff95d09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0fcd69-4435-4840-8926-2a8dcac759f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc43ee-acbc-44df-9709-bc115f908e7c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3999b1b-bdd4-4318-b492-34c9365e2882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df5fa1a-3996-4401-9fae-1abfee0ffc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc94e4b5-0709-4923-8d5d-954537d22db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271ec734-911e-401e-9174-50a74a0902a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a476c6-d488-425c-b82b-d75938fd5e50",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea3d63-4e58-40e3-bf3a-bb2b04b9a0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecedcd53-bb2c-4ef4-92c1-8c72d437bad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c703f8e5-9f2d-43cb-b564-71541705b1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3918e14a-0c45-424b-9ca1-b8e0cc4c8b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c75aa3d-bbfc-4306-963b-be800a1851de",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1275a9bf-bf91-4fae-9e59-9392e2b67043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacf6c45-16e1-4d29-afc4-dbefcc61c947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6ff8fb-8604-4d36-b698-1dab4120c1b9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a35fde-6c16-4861-99af-c77a738b6b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16d9561-5427-4c4a-b58f-e0fae5cddb3b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3508d2a-0365-45cb-a109-8782c1f09890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e076ea31-0ade-4120-af85-02078fff0ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5599cf2-5c76-4176-917a-8f531e762587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f13e87-84f7-401d-b25f-913a1232b5b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6513b1c-da5c-493f-8798-70073ca578b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2152716f-d3a3-48d9-9ca5-4b2362e27a23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b474525-c284-4c9a-8f91-ecadf546fbc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "103f105e-3da0-46bb-8713-da3653df8d4e"
                    }
                  }
                ]
              },
              {
                "id": "2866962c-9de4-44db-9d97-093767331d65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28f22429-ca3c-49b0-a302-23af997bc8c8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaced36-a340-4793-8222-32bc3495952c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "09a1aea0-9a52-4385-9b72-ee04cfdca9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5970875a-00c8-4d93-8086-9a95697fb1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3905e5c-f61d-4f21-8334-2d22c11bddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33335885-141b-45fc-ae30-022ce12b6abc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979c746d-8fc8-482a-9f3d-f8a608b83201",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "265073c2-1117-4276-8320-76495910ddcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68f3dbf-f005-4989-b73d-0e287b4dfec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c127d0d-87c6-45cd-aeaf-60634547e88c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4f63cd-6b94-4224-b48c-57e06a52c390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "482a6519-b333-4eb4-9141-f82af9daa371"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ddfd09-fd66-4b2c-98d7-3f7ae3ca3e06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92f8d3d5-8652-4ba0-8cb2-98ca3da23158"
                    }
                  }
                ]
              },
              {
                "id": "0d6f0f7f-bb51-432b-a736-e59ea0001caf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4e254b52-b74f-42cf-87b9-c199dd082640",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a810ae-7f6b-4eb8-8258-20737ba7c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "10267ba7-e3a9-4039-baa3-6dd22218fc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba29107-2802-4169-abf5-c38fdbdc3575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8a051f-fefd-42cc-a45d-94c16933678c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8fe3a16e-aa59-41b7-a56f-61119ed32067",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94984a4c-689b-4d1f-a254-1be70f3ec25e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a1fa53a-8150-4efa-9cdd-58e5fbffb2d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a2190023-a2d9-43c3-b972-cee569c0a26f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d35ddc41-b4e6-489d-8ed0-49a11ced57a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19d7ad2b-bf82-484b-b789-cd5f1bce9992"
                    }
                  }
                ]
              },
              {
                "id": "18d65e01-349f-4b77-a1c1-ff8acb859cd8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ae9836f-a401-4af5-a61e-03d462c50813",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7eb47ba5-e0b4-4fab-8faa-4fbd2c2e2d6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5423d137-cb34-4ad5-bb66-feb2c4ab9db1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2117b464-ba95-454b-a625-d799991d2c47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13e6cf3c-5449-4a1b-8fe7-e6a5af884f08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ea16d016-cff9-457e-b112-5d07801275ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82ea3832-3fdf-4a36-b477-a4edc5ffe67e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc893ad2-afaf-41b3-bb83-0807ce91477b"
            }
          }
        ]
      },
      {
        "id": "91a0c57a-a8de-4ce3-bc8a-0733cfdb449f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c1b34be-cbca-44f1-9d09-b375f4ce81d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50182e00-e0e6-48c8-9a27-d44f831102c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7eb086-a728-42ea-8644-a7e96add9ff3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "350e313d-61a2-40f7-9d70-cf6fe7090c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed788ba6-0251-4d27-a1d7-711c9e03d578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb2a2864-52ba-4683-b042-6bea53c949af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6409bfcd-4578-4471-bd86-a9d51ae19bef",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5db19b6-3694-482c-8fef-fd58ae7de94c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "36be3fc5-bc4a-407e-8aa4-221a9bdfca3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45b758b-6c54-4021-98b0-39e6d14b725e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3de7319e-3ea7-4a23-8149-e6b10e170697"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f275b64-f6b2-44b6-a3f6-d9bb6165a3da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e6ebf15-3090-477c-adfa-ac2f360480ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d98c55a-5a51-4ccc-b008-6cc166197c4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "851a3675-ac59-49f8-917d-c3ffc9fbc2c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a3b1bd8-6de2-493e-932a-96669e10301b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b76c98b4-169d-44ef-a3c9-528b03426bb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "743f0d92-563c-4838-ac2b-72604daad1b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40b04d60-d21c-4991-a046-d956a08518bb"
            }
          }
        ]
      },
      {
        "id": "967f4e52-96f1-41c8-aa16-7b10662c1ad2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f3978786-d5bc-4f9a-a2fd-c8954b0e74af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c7f6d38-7b11-49ba-bde1-ceb8d7559071",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08f8dd62-921f-4095-b9ad-b7af3ffcb05b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b6f617-4876-4d64-95c1-b34b3e0d6311",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3025f6cd-2819-4c5e-b469-9ee14fcb5716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72391bf4-1719-4eb1-9bc0-615769d4500d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7a68634-505b-4738-84ef-214719bb1389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed24789-5829-487d-862c-3ebb5456ba26",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae04e5b-f517-48e1-a218-da34a8b41e31",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c46e487a-9169-4493-a34a-55a81ba2a645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009cadcc-b597-4048-8da1-954d0926aa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e064d2-ed3a-4b48-abf2-a98c478e539a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "815d88e8-ed99-45d0-98b6-03b3f37e6ae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f372dbaf-9379-473a-93f8-5470ea39c7e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e658d79e-62a9-4d36-952e-9bc014424252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c558908-0817-4b05-99c5-74c74a3bff0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f69079fe-b050-4229-9ee5-498222fcd710",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8cd1cb82-2ab9-468b-9121-8b9785c842fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbaa5a62-ea4c-46e2-9f6c-ab185f59dc17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc53402b-c41a-4696-aa9e-1df177ca4b59"
            }
          }
        ]
      },
      {
        "id": "8d1990d1-c68a-45fe-a580-03e93e042a9d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "14a2300e-647b-412d-bf4d-395767e4cb9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d892a10-32dd-4a7d-93c2-669896b1f01d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9781b877-579f-43c3-aa2e-2ce528708cf1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee41d6ce-875e-40a2-bed4-cd874b2bb53c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d87a4596-742f-4652-b12d-0dcecda85ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec157714-24cf-49e1-b2e6-f07e03ad7360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "733226a2-0a0f-4459-8608-eb983567471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23297e96-c473-4656-8ed8-3a3771e174eb",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1c9177-d182-430c-8548-c3b1802486d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "47061e71-3515-4336-a9eb-737c72f59018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e81b74a-6a22-40ec-9056-97fe2fa13c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7381dfc5-2f3c-477b-bb0d-3c1f882636e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af995702-c6e7-4a07-850f-ca7a52d314c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc26f355-25d1-4d8a-af05-770c3feba2e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f92b2ea3-9d14-4f5c-b19b-b3b59a9d1e3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0bb9012-9b46-480c-ac68-83f2b1f078b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a60b8986-8ebe-4eeb-9cd6-f7680944fe35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f9d0813b-6dbf-4a2a-8b4e-5ff16b43d3ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b155195-8dc5-4917-8c92-a79014e68b1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbede1f2-0470-4d74-9919-79b63912a908"
            }
          }
        ]
      },
      {
        "id": "442f055f-933a-423a-bfff-295cd95f1098",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e30f3c4f-7ac1-4af8-bb60-75e08b198bc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "265a6ab3-7a1a-45cc-a559-bfa2d37402d3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d66dd7cb-d118-4881-aad6-6e25e2eba46f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0cfb384-7272-4be3-ba5f-c92ee0c0f08c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f763142-8632-4b20-ac3d-387744427f87",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 580.4580152671756,
      "responseMin": 7,
      "responseMax": 4794,
      "responseSd": 661.2683424725295,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672187840994,
      "completed": 1672188007205
    },
    "executions": [
      {
        "id": "70f035a7-0a41-413f-856c-e2c451e67fa9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d9df56b-88fc-490f-bb4f-8043a8c230c7",
          "httpRequestId": "cb6b9857-1cdb-45ae-93f8-390b9603b992"
        },
        "item": {
          "id": "70f035a7-0a41-413f-856c-e2c451e67fa9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c5239876-34bd-429e-b2cd-ea3467488dc9",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "4733528b-7485-432d-9fc7-f456947be58f",
        "cursor": {
          "ref": "e84f8151-99d6-4737-a3d7-77b2f8951cb3",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fb6f145d-93a5-44d1-912d-29041b9a86a8"
        },
        "item": {
          "id": "4733528b-7485-432d-9fc7-f456947be58f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0e510c22-86d4-4a79-86ad-1cdc79472fbd",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1d9e489f-626a-4054-9328-3a546b69e1b5",
        "cursor": {
          "ref": "55ea8c2a-0ea7-4b90-90f3-09d5e6df3f5b",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2480e55a-da7e-4d94-a471-a08fcbfee6b6"
        },
        "item": {
          "id": "1d9e489f-626a-4054-9328-3a546b69e1b5",
          "name": "did_json"
        },
        "response": {
          "id": "2d8b91f0-5b73-4ad1-8681-6e910996feec",
          "status": "OK",
          "code": 200,
          "responseTime": 868,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c28007-be7e-4241-8864-706cb3770598",
        "cursor": {
          "ref": "edc772af-1b57-40b6-88da-cd62d784b19e",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11328d30-16bb-4255-86e2-75e582570fcd"
        },
        "item": {
          "id": "a4c28007-be7e-4241-8864-706cb3770598",
          "name": "did:invalid"
        },
        "response": {
          "id": "f54f1e0a-05a4-435b-a907-7c3797b481d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c28007-be7e-4241-8864-706cb3770598",
        "cursor": {
          "ref": "edc772af-1b57-40b6-88da-cd62d784b19e",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11328d30-16bb-4255-86e2-75e582570fcd"
        },
        "item": {
          "id": "a4c28007-be7e-4241-8864-706cb3770598",
          "name": "did:invalid"
        },
        "response": {
          "id": "f54f1e0a-05a4-435b-a907-7c3797b481d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b32dc2-93fa-45d4-9b3f-cc1f1daa1864",
        "cursor": {
          "ref": "068bd792-940b-41d3-abd4-33a822a85cd7",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3ca79503-a97d-4512-a081-5358f527cd2d"
        },
        "item": {
          "id": "10b32dc2-93fa-45d4-9b3f-cc1f1daa1864",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e6a405e8-16a9-4853-9e2c-50b2e33accbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 615,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f90bf4-4c87-4a92-94bb-acf768e3c23a",
        "cursor": {
          "ref": "21fcd759-7b4b-4c2f-9e5a-173d1d2e9240",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b6e8bf27-071a-4ded-85f6-b7313549f778"
        },
        "item": {
          "id": "07f90bf4-4c87-4a92-94bb-acf768e3c23a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "193b2ce9-779f-4deb-96a6-d9cc28a1d45c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 515,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5f5620-8053-460c-bc7e-4387e76fc3e1",
        "cursor": {
          "ref": "b2cbd331-cc84-4056-b7bc-905f5ea2de9a",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7249e2b5-81b2-4f8b-9e8d-8f6ea94cef0f"
        },
        "item": {
          "id": "6c5f5620-8053-460c-bc7e-4387e76fc3e1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "488cb152-036d-469a-ad9e-d3dae09f501b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bd6fcd-0cc0-48c3-aabc-dde1501f89e8",
        "cursor": {
          "ref": "e8beb4fd-2cb5-45da-82b5-43d968a4cd34",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f8c6ffe9-f063-49f0-b966-329ee06829ea"
        },
        "item": {
          "id": "07bd6fcd-0cc0-48c3-aabc-dde1501f89e8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e9cf64f6-ac9b-415e-aab0-376bda23607e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bd6fcd-0cc0-48c3-aabc-dde1501f89e8",
        "cursor": {
          "ref": "e8beb4fd-2cb5-45da-82b5-43d968a4cd34",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f8c6ffe9-f063-49f0-b966-329ee06829ea"
        },
        "item": {
          "id": "07bd6fcd-0cc0-48c3-aabc-dde1501f89e8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e9cf64f6-ac9b-415e-aab0-376bda23607e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db7a8b8-3fd8-42eb-bb82-560ca4e5f16f",
        "cursor": {
          "ref": "e289f931-eade-453a-a10f-def90c8d82dd",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b97db852-abb5-4616-aeff-e506338d4e93"
        },
        "item": {
          "id": "8db7a8b8-3fd8-42eb-bb82-560ca4e5f16f",
          "name": "identifiers"
        },
        "response": {
          "id": "a8c2ba87-70c2-45b4-b067-377af9419a52",
          "status": "OK",
          "code": 200,
          "responseTime": 792,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bac7ea7-3d8b-4f00-b111-3e5e954f3ae6",
        "cursor": {
          "ref": "738a4d18-7363-4050-b96e-1d9885873ee9",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "db990e7f-cf6e-4d1d-97d0-579f9783d6fe"
        },
        "item": {
          "id": "4bac7ea7-3d8b-4f00-b111-3e5e954f3ae6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "891a5cdd-bae5-4222-aa49-787dbeb844b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bac7ea7-3d8b-4f00-b111-3e5e954f3ae6",
        "cursor": {
          "ref": "738a4d18-7363-4050-b96e-1d9885873ee9",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "db990e7f-cf6e-4d1d-97d0-579f9783d6fe"
        },
        "item": {
          "id": "4bac7ea7-3d8b-4f00-b111-3e5e954f3ae6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "891a5cdd-bae5-4222-aa49-787dbeb844b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee61b6ef-ccc5-4528-b79c-d9c3e963db38",
        "cursor": {
          "ref": "6ef4350e-4ea3-4d95-ab51-0791ef031f27",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "768cbae9-2a69-4bd9-86b0-5ac774b20876"
        },
        "item": {
          "id": "ee61b6ef-ccc5-4528-b79c-d9c3e963db38",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab1764fa-61bf-4702-b297-873b8d4668b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dd3b61-970f-4739-8be6-71eb8ab9cc3c",
        "cursor": {
          "ref": "33eb3cf6-6895-492a-881a-81f4595e6e8a",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "abff4ba2-1523-4289-bf9d-d1761c82d036"
        },
        "item": {
          "id": "02dd3b61-970f-4739-8be6-71eb8ab9cc3c",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "a4427df6-70fd-459c-ac75-4f6be4070e06",
          "status": "Created",
          "code": 201,
          "responseTime": 2527,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "e5fb9585-2ae5-425b-8c86-c894e9a77215",
        "cursor": {
          "ref": "5abb3a55-d697-46ee-8b4b-47a7509d60e1",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "652c88b6-2170-48dd-87a5-62f1f34ecf4e"
        },
        "item": {
          "id": "e5fb9585-2ae5-425b-8c86-c894e9a77215",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "78d85e56-2183-4caf-9286-004fb13cb4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6719f650-8339-4deb-b213-50379bc31ea1",
        "cursor": {
          "ref": "7ccc3acd-956c-41b0-b753-91b6329d6e5f",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b1c480a2-b402-4c57-bb31-8c27d7713bf1"
        },
        "item": {
          "id": "6719f650-8339-4deb-b213-50379bc31ea1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "539f923b-062d-464c-a02a-6eb0318b0c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fecb53-fdb4-466d-b7f8-a828a98624ca",
        "cursor": {
          "ref": "bd7d26d6-37c5-4a5a-b225-9d4a165be62b",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a9635aef-cfa5-4bde-81a6-a3224783d886"
        },
        "item": {
          "id": "51fecb53-fdb4-466d-b7f8-a828a98624ca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1222c82a-c0cf-4eb8-ac66-c59b8b6245ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e09999b-0285-4d56-a67e-03fafdd85c4b",
        "cursor": {
          "ref": "98022e19-998c-4f79-92ef-f635c27112b7",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a532883d-bc84-4a04-94b5-b5a11a1f438e"
        },
        "item": {
          "id": "3e09999b-0285-4d56-a67e-03fafdd85c4b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "76727420-fc39-44e3-90ba-c016245c0c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b4cda5-56d2-403c-aef7-203aaeb7cdff",
        "cursor": {
          "ref": "8a0db3b1-916a-4622-a1b8-71e89d335710",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8a5417a0-0b3f-4135-afbb-738580e4c901"
        },
        "item": {
          "id": "61b4cda5-56d2-403c-aef7-203aaeb7cdff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "55e0b3d2-52c2-4a80-9bf4-ca0ebb438dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ff74ae-e72d-4306-b967-fc6fac68db66",
        "cursor": {
          "ref": "61f3a499-cc23-48a9-80a6-7dc8bdcfb6e7",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a6099099-6aa4-4d1a-b600-e4a24fbf98f7"
        },
        "item": {
          "id": "d2ff74ae-e72d-4306-b967-fc6fac68db66",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53e436d0-8f7a-4730-8686-9c34f378d37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9729188d-4a9b-4c21-9a72-9664869d886c",
        "cursor": {
          "ref": "f5f90b18-d0f5-4bbe-af38-0a6479418fc4",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "172e35ad-b916-4a28-b04d-d0c532925e7d"
        },
        "item": {
          "id": "9729188d-4a9b-4c21-9a72-9664869d886c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95807524-b7c3-48c4-9435-c7b752e96df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a43c08-e2b5-4204-bdd8-6f38a098c5b1",
        "cursor": {
          "ref": "24734cac-4e17-419a-bbd0-b11ce094d08b",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "19238bd5-ee33-4a5f-9741-e0549bd513fb"
        },
        "item": {
          "id": "41a43c08-e2b5-4204-bdd8-6f38a098c5b1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4f58f703-ae0f-4116-b96e-7c0094f1dadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ca08ef-b5fe-4ff1-9ac5-754cb5e24259",
        "cursor": {
          "ref": "690b87ff-f043-4af6-bc11-9fa897a0ff91",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4f370595-baaf-458b-9420-888487188fc7"
        },
        "item": {
          "id": "86ca08ef-b5fe-4ff1-9ac5-754cb5e24259",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "52c1c9d5-5b45-4715-b563-d337ee809602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8a071c-6f85-4468-9369-9bd165127651",
        "cursor": {
          "ref": "e1f7c400-0a44-45f8-b50e-951e7f39b65d",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "04998c6b-7d09-4579-9f32-25f46a606173"
        },
        "item": {
          "id": "3e8a071c-6f85-4468-9369-9bd165127651",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1649d36a-fc6d-45fa-bc81-b958d5c45774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb58af5d-7ad2-4297-98ef-cc755998042d",
        "cursor": {
          "ref": "155d5cb2-0bc9-4413-8e85-019cc03a0cbe",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f1e1aed9-3ea7-4f67-8927-1a48e62c1b33"
        },
        "item": {
          "id": "bb58af5d-7ad2-4297-98ef-cc755998042d",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "923ba34c-4ae8-4eaf-97d9-451ef83799a8",
          "status": "Created",
          "code": 201,
          "responseTime": 4346,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "ba7fbf36-4080-4194-b9f3-2716a5c8b945",
        "cursor": {
          "ref": "9e669fdb-8bf7-4ce7-ae9f-0ee78fff0647",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bab2eb53-9c51-4ca2-9192-092a8ba4cce8"
        },
        "item": {
          "id": "ba7fbf36-4080-4194-b9f3-2716a5c8b945",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "054e7b0a-8f7b-44d2-a353-63570ffe8cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c225d79-4e64-4205-89a8-9e83ed106136",
        "cursor": {
          "ref": "3d769169-36d4-4e8b-856d-2d13038fc241",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e1213995-7f10-4db6-bcc8-e1c7db3c7b76"
        },
        "item": {
          "id": "6c225d79-4e64-4205-89a8-9e83ed106136",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "48d03175-b770-49aa-9ed8-5564d21dd39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475d5dc4-9398-4f1a-b4e0-0a6446f1768b",
        "cursor": {
          "ref": "44f6752d-fbbe-4d50-ab42-d044033a6d8e",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "99d62198-5177-4fe1-966f-877a156070ea"
        },
        "item": {
          "id": "475d5dc4-9398-4f1a-b4e0-0a6446f1768b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fa212121-66aa-4fec-8aa4-0d86e0bd79b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab0de75-1d00-4f28-a6a0-dbcefb8e76d6",
        "cursor": {
          "ref": "d73ce743-bb2b-454a-8ba7-7431deeb8b4f",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f036ed61-d19b-4a2a-b62f-e4b2068244ee"
        },
        "item": {
          "id": "cab0de75-1d00-4f28-a6a0-dbcefb8e76d6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bc6c1225-a433-4173-924b-66b6e1542aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b70a68-695b-460b-aad8-86934910d543",
        "cursor": {
          "ref": "1925f044-1803-49d8-9ede-cdfcd109a2d2",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e40ffcb9-c637-4e69-b819-bf26970dd5a8"
        },
        "item": {
          "id": "31b70a68-695b-460b-aad8-86934910d543",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "01a22da2-6a54-469a-9654-3031797879d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f120de-069a-47e5-93c8-8bd6ba6e29cf",
        "cursor": {
          "ref": "864d05b3-20ee-471f-8aa3-ef73237da10f",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8db24022-7a10-4cbb-8404-11eccbfc21c8"
        },
        "item": {
          "id": "33f120de-069a-47e5-93c8-8bd6ba6e29cf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ea0f97af-5da6-4e8e-a861-d553fc773003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8f3fd8-8879-4e6a-b2cd-4f0e468a16f8",
        "cursor": {
          "ref": "f0b14e50-da1a-4bb4-b005-d23ff81a6756",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a5214002-e5fa-4acb-8c05-cc6f1bd94d6a"
        },
        "item": {
          "id": "ef8f3fd8-8879-4e6a-b2cd-4f0e468a16f8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "56d7152f-3bfc-40fe-88d5-adff6479b413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b17370-6ff6-402d-b9f2-b1982bb18604",
        "cursor": {
          "ref": "a7172b42-d499-4652-abe2-43ef72f46f95",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "28a1e0de-dafc-4ffc-a1a0-6cb4dd1abeac"
        },
        "item": {
          "id": "20b17370-6ff6-402d-b9f2-b1982bb18604",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0815f589-178f-453c-a82c-04802ab9928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dba4a6-9f2e-4f68-b0f4-a782b5992cb3",
        "cursor": {
          "ref": "5312284c-c09a-4ab7-bd54-18d850a1a2c1",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1bdb65ea-56ad-4d9a-a6cc-dbd17e57e7b0"
        },
        "item": {
          "id": "35dba4a6-9f2e-4f68-b0f4-a782b5992cb3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c81fcc40-3d83-4408-9d73-b653c2f2856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab53fe-0a51-48ff-81c5-b4f3ddc8227f",
        "cursor": {
          "ref": "9ac138db-918b-4f2e-b275-e8d67f4cfc6e",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43ee0f1c-3302-42b3-b2c7-5330194ba413"
        },
        "item": {
          "id": "f2ab53fe-0a51-48ff-81c5-b4f3ddc8227f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "24d8be44-c434-4632-9de7-d941f7dfe75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93351724-298b-47de-9fa5-099c7d29e2ca",
        "cursor": {
          "ref": "f60b20f2-d8b7-422c-890b-83ed1b325993",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "46232d48-af34-4e17-b7cd-f087f17a43ad"
        },
        "item": {
          "id": "93351724-298b-47de-9fa5-099c7d29e2ca",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3bfc7e10-bb16-4da0-ad3c-0c559c9f5956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2b60c7-57d4-4646-8bef-f53f0768287b",
        "cursor": {
          "ref": "9b8bfb86-43ae-4f18-9030-d069a527dc35",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1c5c7e2b-e978-4ada-8d02-9c6bcc9c7f7b"
        },
        "item": {
          "id": "2f2b60c7-57d4-4646-8bef-f53f0768287b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41a867de-f581-4429-8bd2-046dabe9fe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d46f89-15f9-4fa7-b63e-68efef5360ad",
        "cursor": {
          "ref": "37213d39-fd73-4e90-96a6-e718fc5d6d14",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0549b03d-8858-4e97-a4c1-1c7e1aaecab9"
        },
        "item": {
          "id": "49d46f89-15f9-4fa7-b63e-68efef5360ad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "73a984b4-e860-4844-8a38-dc1e5734229a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cced90b-21fa-4512-8a7e-f453fc2002f4",
        "cursor": {
          "ref": "55947997-56f5-4ac5-b28e-55d2ef7dbed4",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d6f81a16-f097-4148-922a-c5ace66641c0"
        },
        "item": {
          "id": "4cced90b-21fa-4512-8a7e-f453fc2002f4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "232a41be-f098-4f55-a4dd-662df43023e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddc34b9-6342-4048-a020-579ced061f2a",
        "cursor": {
          "ref": "d371d946-1463-4c0f-95bb-8a18db6f442f",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a1350e50-38ff-4bbe-9840-219196646c0c"
        },
        "item": {
          "id": "cddc34b9-6342-4048-a020-579ced061f2a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e21ee50-b5ac-46d0-b280-92fd36f440ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8cb4ad-983d-4ced-a7c9-2bc26a3790c7",
        "cursor": {
          "ref": "48d5e287-426d-47cf-8a05-e1ecfd848b10",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8af468cc-88a2-400b-aa12-bec3c20581cd"
        },
        "item": {
          "id": "7d8cb4ad-983d-4ced-a7c9-2bc26a3790c7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6db7390a-2a12-4d69-a379-06dfae7a187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aa6d92-db7a-4476-a1eb-d7bf0af3f29f",
        "cursor": {
          "ref": "32589af1-477f-44c9-84ac-79ae93f2545d",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6b2c3d70-90cf-48c6-aacd-d95d32d68140"
        },
        "item": {
          "id": "10aa6d92-db7a-4476-a1eb-d7bf0af3f29f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5600a3ec-a3de-4762-9cf8-0596389ff1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8292b75-552c-4d0b-8faf-97ab9e33b8fd",
        "cursor": {
          "ref": "c0c5a988-d409-4881-a9d6-d4eb6b59b815",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "39258aca-bb11-4232-8e03-7e6b535d8a14"
        },
        "item": {
          "id": "c8292b75-552c-4d0b-8faf-97ab9e33b8fd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "08c35213-1d73-4c1a-b7da-75c1f147f9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbc25bd-b299-4060-9f01-7bfd51074a83",
        "cursor": {
          "ref": "44beb760-3eb5-4366-828c-95a39647c457",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "716eb31b-3f5e-4779-87e4-14b8705f5e48"
        },
        "item": {
          "id": "dbbc25bd-b299-4060-9f01-7bfd51074a83",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "97814b59-54ca-4116-af19-3b7498be0646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce34df8b-be8f-4ac7-88d6-58f0235c5e5d",
        "cursor": {
          "ref": "ebe2574b-e357-4234-932c-da76905f9238",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "acf13679-0a3d-4cd3-96b0-c8010704bf76"
        },
        "item": {
          "id": "ce34df8b-be8f-4ac7-88d6-58f0235c5e5d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a7d2ce8-80dc-4331-8896-82d968fead17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1438f14f-2e76-4434-bc64-8378e7d02c0c",
        "cursor": {
          "ref": "405e7973-966a-404e-b20b-f2106720f85b",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3618f27c-401b-4df4-8de4-8802b11a8de7"
        },
        "item": {
          "id": "1438f14f-2e76-4434-bc64-8378e7d02c0c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "36745b99-cb5a-4776-bc2b-5df37e80f2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb34cf7f-e6f4-42d2-b589-c161d5c40f2b",
        "cursor": {
          "ref": "9779ed7d-f9d6-4642-9c55-d075c8bc74de",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fb772c22-2c67-4fdb-a47a-f73c9a3f13c4"
        },
        "item": {
          "id": "fb34cf7f-e6f4-42d2-b589-c161d5c40f2b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "254334a5-56b1-4e08-8992-7333b2c3619a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44e983f-1789-4b07-9887-f5a8255def5d",
        "cursor": {
          "ref": "bd2febd7-087e-4c2b-808a-61452d32de15",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5a77c647-8aeb-46b6-9d6e-39c42606df08"
        },
        "item": {
          "id": "e44e983f-1789-4b07-9887-f5a8255def5d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9727a13a-8c4a-4e27-a6f2-50906dda7380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade18f9-7b42-49cc-bc8d-d19213f39c71",
        "cursor": {
          "ref": "9592cb83-7d1c-4d14-81f4-9245efc80258",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e8053f43-93c9-469b-9f46-f87c6c459620"
        },
        "item": {
          "id": "4ade18f9-7b42-49cc-bc8d-d19213f39c71",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aae7b64b-1485-4138-89d3-f36f736d6ee4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 548,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2b3f2e-248c-4b51-aecd-b592803b9a9a",
        "cursor": {
          "ref": "22b1cd8e-84b1-423b-b416-bd017c77ca1b",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e22ed529-4a74-4b81-8c34-8be675423a36"
        },
        "item": {
          "id": "ea2b3f2e-248c-4b51-aecd-b592803b9a9a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "94b3504f-35b9-425d-b754-15a6784dab30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5897d45f-f4af-442a-a999-54c1d7ebf6b3",
        "cursor": {
          "ref": "3245c68a-5ea1-4799-a83b-516726b1bac5",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2dd8f11c-cc5c-49d1-89df-9e461f2a83da"
        },
        "item": {
          "id": "5897d45f-f4af-442a-a999-54c1d7ebf6b3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7d7e3b9b-3e57-42c1-bcab-f08e0c8edcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640997e1-4e47-462e-8e8d-02a48ae12771",
        "cursor": {
          "ref": "04a8450a-178c-4430-a03d-ce086c04418e",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a69cd11c-b223-4028-9a46-d102d6866ff1"
        },
        "item": {
          "id": "640997e1-4e47-462e-8e8d-02a48ae12771",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8186a0b6-e2fe-4b13-856e-b9fb78df4878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee89bbfe-1a1c-43e5-8ac2-b3d2285b6af3",
        "cursor": {
          "ref": "6e6c8b8b-f350-460b-ab3d-7ede2269974a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "15f6c017-07c8-46a2-b290-a4c16ab73910"
        },
        "item": {
          "id": "ee89bbfe-1a1c-43e5-8ac2-b3d2285b6af3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "febb9082-faeb-42cf-9cc2-4f4e75640d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98781ae7-0ebb-49a5-8ddd-f6810637c31d",
        "cursor": {
          "ref": "828d4bb7-979d-4aa1-a9d0-573e6749ad97",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fb1823ed-6fa8-4dd8-b272-0fa6d9ae880f"
        },
        "item": {
          "id": "98781ae7-0ebb-49a5-8ddd-f6810637c31d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1e108d82-d697-4113-ade2-29195d5aaf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286fff45-f408-4304-9fe3-27c59305b343",
        "cursor": {
          "ref": "9062ec66-a5af-452b-8c36-e69c4e745628",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ee86696c-fd14-4e38-9194-c677f29db9ef"
        },
        "item": {
          "id": "286fff45-f408-4304-9fe3-27c59305b343",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f4134f87-4495-423d-b1a7-403930d07f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6237d2-ddae-4e47-8fc1-9b0c8f4d62de",
        "cursor": {
          "ref": "fb443ba8-6ffc-41ce-a45a-9714b8cdf164",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ed50cc45-aa5f-4c5f-b273-fba572f8028f"
        },
        "item": {
          "id": "1b6237d2-ddae-4e47-8fc1-9b0c8f4d62de",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "54dd1b2b-1fbd-49df-a34b-4bb75e784f93",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 574,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2143428-7a1e-4427-b82d-27520f9a86a9",
        "cursor": {
          "ref": "bdc33d3f-8079-4062-8fd3-6df2fe595299",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "55695de1-d1d0-48b0-9d5d-41583a844a77"
        },
        "item": {
          "id": "e2143428-7a1e-4427-b82d-27520f9a86a9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "819940ce-9142-47fd-9b61-2131f54f7b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31cc3ad-9c05-4dad-b642-92c3f3278374",
        "cursor": {
          "ref": "6042e79a-633f-4f15-847b-5a4de6011a47",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "601e65f3-129b-4a3f-b35a-c7eafd379828"
        },
        "item": {
          "id": "d31cc3ad-9c05-4dad-b642-92c3f3278374",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "26a7650d-63cb-44ab-8217-5fa496331556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f76ea9-d931-4f51-8805-53d5cf294dff",
        "cursor": {
          "ref": "7c9cd88f-c1a3-4e83-8695-70ade3319d1c",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e94f9dec-792d-46c6-8e11-f58331b7b849"
        },
        "item": {
          "id": "83f76ea9-d931-4f51-8805-53d5cf294dff",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "617ccd36-cdd7-4a03-ae51-2e7c0964d331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dedff3-3ddc-4aea-bae4-3271e54f5942",
        "cursor": {
          "ref": "0c8fe0cf-a42f-4d59-b79a-70f24ea8b6bd",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c988cd2a-3a3a-4d8e-ba3b-7d267b5dc66e"
        },
        "item": {
          "id": "e2dedff3-3ddc-4aea-bae4-3271e54f5942",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ecf111d1-0a6e-43c8-b114-d495a64a44cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4299328e-e772-42f8-bc62-cf21dbe97ce3",
        "cursor": {
          "ref": "b8c09ea2-fc45-4485-9e35-293fc3e412d5",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1ab35926-0717-49d9-ad5f-dd6b61e48528"
        },
        "item": {
          "id": "4299328e-e772-42f8-bc62-cf21dbe97ce3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3776bc03-0823-433f-95b8-fb10ca38cdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89cadb2-2ef1-4135-b753-87f4478714cf",
        "cursor": {
          "ref": "04dc3d86-b944-4199-9fd7-e595b6ae1712",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bcd81ca4-227d-4e2a-b6c1-5d46592150c8"
        },
        "item": {
          "id": "b89cadb2-2ef1-4135-b753-87f4478714cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "80179a8f-5064-4187-9dd4-36205591b4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab354a3-6e1d-4581-84b2-c9adf8ce026a",
        "cursor": {
          "ref": "99388ac3-4484-43e1-8733-2fe099314313",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef9b112d-87b8-4d4d-8784-01cf14829df8"
        },
        "item": {
          "id": "2ab354a3-6e1d-4581-84b2-c9adf8ce026a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "15a7dc56-4fe3-4b95-8d7d-68380f6bc6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcca50f9-561e-4098-b5ba-29d1b3d14eb6",
        "cursor": {
          "ref": "b23c5930-b494-43a4-b8b1-4c5bba86924e",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cad7f126-71b1-49e4-818d-bf67c7f6d9f5"
        },
        "item": {
          "id": "dcca50f9-561e-4098-b5ba-29d1b3d14eb6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "099328e8-3854-4dec-86af-6bd232287fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3569b4f9-cb50-4628-b56b-645ace92a7f0",
        "cursor": {
          "ref": "abc032d9-77a1-4e6b-85fb-a2e453ecf0fe",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8d3d04f0-87b5-47ec-9883-6fbee867bb6c"
        },
        "item": {
          "id": "3569b4f9-cb50-4628-b56b-645ace92a7f0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2a472d04-2dee-4fcb-a7e5-b98bcd67be60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d435fa-16d8-4940-a656-550a05db61ba",
        "cursor": {
          "ref": "61562c8c-8924-4fe5-86a8-6da6b602bb98",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f725629f-8bff-46fd-9e2f-0252c36a632a"
        },
        "item": {
          "id": "b1d435fa-16d8-4940-a656-550a05db61ba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0993fcf5-21e3-4db1-bd13-a769f7c3fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5814f817-d8ab-40ad-a003-dd006473dad7",
        "cursor": {
          "ref": "8b7b6325-83b6-4692-9402-e8187e97bb64",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e67c8d3b-9d4a-4f33-8c3b-305cb435b9cf"
        },
        "item": {
          "id": "5814f817-d8ab-40ad-a003-dd006473dad7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1aaef41e-24e4-43b9-8946-9c90ced5ad1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581cd18b-4b84-4a9e-8536-4252f16eda5a",
        "cursor": {
          "ref": "b04f3810-981d-430e-91a4-7e474dae18f7",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "22e72e1d-2f33-4586-8118-7af6e70ff22d"
        },
        "item": {
          "id": "581cd18b-4b84-4a9e-8536-4252f16eda5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0818925c-8ac1-44ce-8a99-ad2d08a78dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081d3f61-3e25-40ef-a2a1-023968e7f8f4",
        "cursor": {
          "ref": "ae0aade4-76d0-43ec-a26a-33ba6d5a1d98",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb331ccd-8835-417f-8fd3-2b0fc3e2d137"
        },
        "item": {
          "id": "081d3f61-3e25-40ef-a2a1-023968e7f8f4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bbe28aca-16b9-49a9-b3aa-647b2c4ef23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3834bbd5-979a-4b20-8211-3125aaf8b65c",
        "cursor": {
          "ref": "19c02bb1-77d2-4cce-b625-204ce2f37394",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "25c9b505-a8d5-407c-9b8b-fee5ee2e5ad2"
        },
        "item": {
          "id": "3834bbd5-979a-4b20-8211-3125aaf8b65c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f38eee89-6fae-4edb-82c8-6d4d19be1979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8131c-0302-4a93-a623-0e4ead431fc2",
        "cursor": {
          "ref": "2ab2b008-7729-4675-8d64-493177776597",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b2bee7cc-ce6e-429d-8cf0-1bb2d9f2693e"
        },
        "item": {
          "id": "eaf8131c-0302-4a93-a623-0e4ead431fc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ab609261-2612-4065-b1b9-30b3ea7c9abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a465e8-c99f-460c-89c1-73d6cfd88895",
        "cursor": {
          "ref": "d4f9e5bb-0d5b-43c2-ad8f-04f85052077d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "78170884-62a3-4d75-bf34-e05e228b7d88"
        },
        "item": {
          "id": "53a465e8-c99f-460c-89c1-73d6cfd88895",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3be54c8b-2621-4662-ac50-b79817d036a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59a2507-3223-4982-b113-0ccdacef2a8a",
        "cursor": {
          "ref": "e80796e6-9129-47ad-a175-b84b8cdad48a",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "28e8d828-3a4f-4374-a945-f26528b09f38"
        },
        "item": {
          "id": "c59a2507-3223-4982-b113-0ccdacef2a8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "08792539-bfdf-4337-9fdf-f7e7fbfd1e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9f4905-060b-4f25-8223-0ce0941454cf",
        "cursor": {
          "ref": "f4ee4639-8fbd-4550-9a9a-0724af9591d7",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3911e3be-2c3a-49d3-bf70-284629f6a98c"
        },
        "item": {
          "id": "6c9f4905-060b-4f25-8223-0ce0941454cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "da0975ed-eaf5-4709-8e4c-2d1ebcd1bfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f78ab0-798f-4d5e-997e-a5ed228a9bf1",
        "cursor": {
          "ref": "1019e73b-c432-41e3-b916-6fe577d35734",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "04ae4be4-c962-4563-abf6-0180238eb3af"
        },
        "item": {
          "id": "e2f78ab0-798f-4d5e-997e-a5ed228a9bf1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "faf6dbb4-5718-4f55-be84-97c9fb73c55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5466e-fee4-4501-a42c-10bf1e22be2a",
        "cursor": {
          "ref": "0c9e22dc-52d1-4411-b9be-dfbed74193d1",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8ea98315-8da3-4670-916f-c49bbb5a97ee"
        },
        "item": {
          "id": "fdd5466e-fee4-4501-a42c-10bf1e22be2a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae712878-6ffc-4634-8216-8b8b90cc64ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d6b4cd-795c-4867-a4e0-32f3f793b5b6",
        "cursor": {
          "ref": "c598fcf1-fad2-403f-a285-b155c9694bdb",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1564cb46-be0f-4191-9f2b-cb49ae64b6a2"
        },
        "item": {
          "id": "e7d6b4cd-795c-4867-a4e0-32f3f793b5b6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c8d3537b-3d7e-4eee-89ac-6ed0284aa570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5946c22-6598-4825-9592-ca64be688f88",
        "cursor": {
          "ref": "b6d0ca42-2bcd-4179-9bc0-4987583d02a7",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8cdd195b-8eb1-4572-99c6-16e2db2c96ad"
        },
        "item": {
          "id": "c5946c22-6598-4825-9592-ca64be688f88",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "170cfdc2-7e7a-4ca6-af94-ae9d6f30560a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e9a864-5baf-4786-ab69-293263f8818b",
        "cursor": {
          "ref": "88c99a5e-bce9-4983-9e39-49ce5280cd5c",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "864c7689-b3eb-43d5-a068-c2a261e2d025"
        },
        "item": {
          "id": "37e9a864-5baf-4786-ab69-293263f8818b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f422bc82-7f56-4b90-9683-aed3edb8b868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb53df9-d170-49be-8004-15b614d64074",
        "cursor": {
          "ref": "ad08646d-3111-47c3-a744-301ac1d97614",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2ddf8593-c27f-404e-b7ff-f2ee5e74ec91"
        },
        "item": {
          "id": "7eb53df9-d170-49be-8004-15b614d64074",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6c59f224-0991-43ce-b9d1-54267bc05fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34ee050-2a13-4596-b6aa-1c0994b97538",
        "cursor": {
          "ref": "d79d2eef-1677-4d98-8d95-21ba8e750918",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "812b02c3-4d20-4061-a9ac-417c8231bfec"
        },
        "item": {
          "id": "b34ee050-2a13-4596-b6aa-1c0994b97538",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b200fef8-4291-432b-9eb3-47b72c5b8842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55709d88-626c-4e13-a1a6-7b64d14a2273",
        "cursor": {
          "ref": "b500ab69-f21a-48e0-af9b-3ed61d7473ef",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6c2cb298-8c7d-48ca-97f6-d15dc12fb7ed"
        },
        "item": {
          "id": "55709d88-626c-4e13-a1a6-7b64d14a2273",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b88d3723-ea2c-4175-8e8c-5db3076ca1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc2c51b-a467-4eef-b4b7-bb89ec0b1487",
        "cursor": {
          "ref": "63d3dd53-752f-42e2-9feb-371cb4d19805",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b1fe42ab-46cf-4d8b-9981-5a241681620c"
        },
        "item": {
          "id": "2dc2c51b-a467-4eef-b4b7-bb89ec0b1487",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "38062a44-de42-4a6d-8221-98111d2e9a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2a6acb-2e69-41a2-a175-fe6b975f221c",
        "cursor": {
          "ref": "65d9c0fd-90b7-4ba4-acb4-6a253a720b30",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4d2816bb-a2a7-44ae-a7fb-3ec550cfd8e8"
        },
        "item": {
          "id": "7d2a6acb-2e69-41a2-a175-fe6b975f221c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb105330-ad70-4454-87db-5b4e6f9b78e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f6751-2718-4635-9bb6-b99699bb6c5e",
        "cursor": {
          "ref": "bf5faf3f-2496-4a3b-852a-5cdb438c699a",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6abca038-90ca-4148-9ae8-a93862620a94"
        },
        "item": {
          "id": "2d8f6751-2718-4635-9bb6-b99699bb6c5e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5a1b676f-51b5-4ad0-8610-19c88b5cbdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3a6059-27eb-4546-970c-b0be25c83b47",
        "cursor": {
          "ref": "66ef4a2f-e650-4e0e-b764-dc6e6bb4f095",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0fd3e8b4-c61b-4428-b00b-c2f71e79dbd7"
        },
        "item": {
          "id": "2d3a6059-27eb-4546-970c-b0be25c83b47",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "63c423d6-c44f-4755-be59-e8ace694201b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e6ed1e-95e2-48f6-8ef3-c5406b8a3ee5",
        "cursor": {
          "ref": "c58eb556-7931-443e-b716-e58f37d8ec35",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a690e3b1-41f5-4f6b-8b7c-83ffd8980d01"
        },
        "item": {
          "id": "a7e6ed1e-95e2-48f6-8ef3-c5406b8a3ee5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d18557e3-7545-483b-8dcc-8714b5974ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2366b7a3-158f-4ff2-aa1d-f62afe5458c0",
        "cursor": {
          "ref": "58e00b70-1cff-438a-8de6-dfae02086fc4",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2dab6ad2-5486-4c02-ab2e-ec367c285d2b"
        },
        "item": {
          "id": "2366b7a3-158f-4ff2-aa1d-f62afe5458c0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "69341f92-8a20-4730-b48a-a4b591885e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2a942f-882e-4df6-93e8-1d1bc28b35ab",
        "cursor": {
          "ref": "959f44fa-3d37-4c36-a004-0571017b61f4",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "97251861-a325-4602-a7c2-f201e15f16ba"
        },
        "item": {
          "id": "7f2a942f-882e-4df6-93e8-1d1bc28b35ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a3490cda-a713-43fd-8102-54cec02326c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca7b622-72c0-4e41-9823-1aa769cb4db1",
        "cursor": {
          "ref": "598f4bbc-2dce-4c0d-8b20-03ea020f8e6f",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1271221c-4b02-4b37-88fb-0c10182db75f"
        },
        "item": {
          "id": "1ca7b622-72c0-4e41-9823-1aa769cb4db1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c3425ef3-5a26-4cac-8f16-d76c975e37e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271f4497-b102-429c-ad0a-1bc1f6c8a59c",
        "cursor": {
          "ref": "89251052-92ff-4e73-b36e-c5f60ab0bf4d",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "afee9ada-5736-4381-948a-2be438eba795"
        },
        "item": {
          "id": "271f4497-b102-429c-ad0a-1bc1f6c8a59c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "23f960ec-2dc5-4501-97ed-d4b516d642a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53515cb8-15e6-4062-b70c-c0b200c8da0a",
        "cursor": {
          "ref": "7fcfd2b3-f829-4d19-9c59-8954db0ee734",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6c505460-35b9-4e86-a825-94fc8ca35f54"
        },
        "item": {
          "id": "53515cb8-15e6-4062-b70c-c0b200c8da0a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3d61b70-10ea-45c4-a33f-50f4db9ac043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3c7230-dbd2-4e34-b95f-4ce6068ed617",
        "cursor": {
          "ref": "d7dc5433-eee1-4e19-a7f6-435a50ce0c2c",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2c6ec218-d860-4194-a4bc-9414018f5c2c"
        },
        "item": {
          "id": "0c3c7230-dbd2-4e34-b95f-4ce6068ed617",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b814e307-19cf-4fd7-b11b-88f9c4c81905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fadb29-516b-4497-94aa-938ed12cc2f9",
        "cursor": {
          "ref": "7753feb6-7dc2-4721-ae59-29f9529975a5",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "79b9012d-53de-4feb-a59f-e598cf393810"
        },
        "item": {
          "id": "15fadb29-516b-4497-94aa-938ed12cc2f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf6c9f6a-d682-4693-bc1f-595cf439a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ee6a9c-ee6f-4f24-be97-04459e883d82",
        "cursor": {
          "ref": "417c9aca-1f4d-41f3-97a3-190a79155eb8",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "63f0ee0c-e2be-4f97-8512-970381cceab9"
        },
        "item": {
          "id": "d1ee6a9c-ee6f-4f24-be97-04459e883d82",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "72271e13-774b-40c9-b25b-dc416fe446c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83544fd0-8191-4781-871b-715d175b52f2",
        "cursor": {
          "ref": "b7af15d4-5825-48a7-99d1-51dee5c1d2b6",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1135aac4-cf40-47e1-95b0-a57b36435183"
        },
        "item": {
          "id": "83544fd0-8191-4781-871b-715d175b52f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5199f6c3-fbfe-4731-b411-0bd3d325a6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5789974-11e6-4837-a6c7-ebc5f1ea5605",
        "cursor": {
          "ref": "20c6a713-5e6b-4d2f-8190-f3331ebbf833",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d2e2578f-c7f8-4eba-90f8-325eca797a43"
        },
        "item": {
          "id": "b5789974-11e6-4837-a6c7-ebc5f1ea5605",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eecb0226-fc48-4ad7-b747-dcaeef767cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22953a6a-f466-4975-8355-026e8e55d761",
        "cursor": {
          "ref": "c07ccb05-93ac-4ca3-a965-da33f4a505ab",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "07ac0e3d-ae20-4b35-90ac-4f4ed7578e91"
        },
        "item": {
          "id": "22953a6a-f466-4975-8355-026e8e55d761",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cf18db8e-07a9-4f82-a049-727121a7eaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015250c5-1857-402c-b3e8-d9ad0798bf50",
        "cursor": {
          "ref": "1986dc89-6918-46d0-8a0f-7bfe873e170e",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "093814ed-c673-404f-84e2-6fa804435d10"
        },
        "item": {
          "id": "015250c5-1857-402c-b3e8-d9ad0798bf50",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "22d1af8d-0b68-4899-929a-4ab2f6cead81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece0b873-bb21-45fb-ae8f-78aff8374099",
        "cursor": {
          "ref": "62da864e-adf2-477f-865e-8a048ce24edd",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1a5590c3-04c9-43c2-b55d-30902d3ea182"
        },
        "item": {
          "id": "ece0b873-bb21-45fb-ae8f-78aff8374099",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "646a3dc5-f092-4e2f-84a3-92e0b373c6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e20ba25-7502-4003-9ad7-3d187b4d3c9b",
        "cursor": {
          "ref": "4311af4e-915b-48e7-add1-76ec1bed9348",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4d926171-491d-48bc-a020-b416a3e625ac"
        },
        "item": {
          "id": "0e20ba25-7502-4003-9ad7-3d187b4d3c9b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3a776544-fc37-42da-b06c-8b3424286bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1991e9-1851-4be3-9026-c3257e0f059d",
        "cursor": {
          "ref": "40ade2df-4b1f-4131-9a83-9ee0dfbb276f",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "28a446ac-b4bd-4dfc-b886-724203f47e8f"
        },
        "item": {
          "id": "de1991e9-1851-4be3-9026-c3257e0f059d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8e4153aa-2b0e-4d91-820b-50bb93a68890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6bda0a-3027-4a3d-9f91-03eb1efe8be2",
        "cursor": {
          "ref": "f36cbd18-5381-4247-b5a2-4e4cbb1c8cc6",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3502d52c-61bb-4cd5-a22e-89c812db560f"
        },
        "item": {
          "id": "df6bda0a-3027-4a3d-9f91-03eb1efe8be2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7363184f-6c2d-436c-9f5e-ed299fc5b721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2107edb-6191-46a4-8835-9aa9a692cf7a",
        "cursor": {
          "ref": "f7494e8b-d7fd-41a6-9e24-3ccee7628f48",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4d871c9c-bf88-4b0f-bc35-980824a395ad"
        },
        "item": {
          "id": "c2107edb-6191-46a4-8835-9aa9a692cf7a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "10ddbbb5-0b1a-4454-803b-60d52bda7d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8716380-c35c-4f57-84ac-84879e6ccf44",
        "cursor": {
          "ref": "1f96dc37-c02c-4682-a52a-2a7ed03cb193",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8869cc6e-c23f-494f-a4c2-fadb007a0c56"
        },
        "item": {
          "id": "f8716380-c35c-4f57-84ac-84879e6ccf44",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bcd3de45-19ca-4073-bb2f-ee87ddc17a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b17fc-3869-45a7-92db-b49ec4808069",
        "cursor": {
          "ref": "7c56a93b-e682-47ea-9a05-6587705da163",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "57207f6a-8489-4642-b16b-2ff832d9d816"
        },
        "item": {
          "id": "da1b17fc-3869-45a7-92db-b49ec4808069",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8088eb1b-1aa6-4eb6-ad39-b9c40c845517",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab41960-dcb3-4267-99e9-ed410edf33d4",
        "cursor": {
          "ref": "1635147c-c108-4ace-a58c-d9764fb64e39",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e3a30c28-2006-47a6-9c7b-509e8514b40e"
        },
        "item": {
          "id": "0ab41960-dcb3-4267-99e9-ed410edf33d4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "230708fa-c7c6-40ac-9c5f-f0a2a009ee67",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b102ec-b7e6-4d1d-9a10-1b4dd606d418",
        "cursor": {
          "ref": "9b03ed65-4952-4fe5-aab8-5e4e658e25f9",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cccf447d-b831-4091-9ad1-dbc8777344b5"
        },
        "item": {
          "id": "33b102ec-b7e6-4d1d-9a10-1b4dd606d418",
          "name": "credentials_issue"
        },
        "response": {
          "id": "70fbdbdd-0fba-4321-9f28-f1c9501a34b3",
          "status": "Created",
          "code": 201,
          "responseTime": 3807,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "9c17b1cf-cd6f-4235-ad2d-99a94dc0da10",
        "cursor": {
          "ref": "7e1a2f83-ed98-48f7-a984-526183016366",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4b49856c-b68b-43e2-802e-dc29178b8b59"
        },
        "item": {
          "id": "9c17b1cf-cd6f-4235-ad2d-99a94dc0da10",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7221a05c-603e-4d0b-b1c3-f57fa49e7d7e",
          "status": "Created",
          "code": 201,
          "responseTime": 3715,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "61577d2c-5681-4249-95d1-7104563c00b1",
        "cursor": {
          "ref": "6f86c5a9-5890-4bbb-99b2-55b12d4b69ae",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "056e66e9-722f-40a4-8817-1ff96175c6e0"
        },
        "item": {
          "id": "61577d2c-5681-4249-95d1-7104563c00b1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0e3e13a0-5ba5-4368-9232-04262c6e14f4",
          "status": "Created",
          "code": 201,
          "responseTime": 3837,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "5adfb30f-05cd-4c5e-8c67-00885254c434",
        "cursor": {
          "ref": "257e7ced-7a3c-4a35-9636-34f7356842bc",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f43865d-9fed-41f5-87c6-ee1de01dc78b"
        },
        "item": {
          "id": "5adfb30f-05cd-4c5e-8c67-00885254c434",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4397382f-b749-4007-9b8e-98c3a08c572d",
          "status": "Created",
          "code": 201,
          "responseTime": 3986,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "1438ef61-8469-421c-9c14-48738d9e1f12",
        "cursor": {
          "ref": "c3d4c371-b4da-493c-83a6-da4b208d5ccb",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0aeaa228-02b5-4433-9523-d9ffd83f60e7"
        },
        "item": {
          "id": "1438ef61-8469-421c-9c14-48738d9e1f12",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "88e11feb-0f47-467c-b10b-c66f12ec7872",
          "status": "Created",
          "code": 201,
          "responseTime": 4794,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "728ba9d3-0164-456a-b4d7-73f99da6b07b",
        "cursor": {
          "ref": "0d2de66d-4b55-47eb-9025-00840ed89f10",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "833a4f39-d259-443b-9703-bd86878706cf"
        },
        "item": {
          "id": "728ba9d3-0164-456a-b4d7-73f99da6b07b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "175f546c-2228-4df6-afd5-1b1ca02bf89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728ba9d3-0164-456a-b4d7-73f99da6b07b",
        "cursor": {
          "ref": "0d2de66d-4b55-47eb-9025-00840ed89f10",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "833a4f39-d259-443b-9703-bd86878706cf"
        },
        "item": {
          "id": "728ba9d3-0164-456a-b4d7-73f99da6b07b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "175f546c-2228-4df6-afd5-1b1ca02bf89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f6f0b1-834c-4d8c-a1aa-4846f76e024d",
        "cursor": {
          "ref": "0666898e-7185-4725-9d07-43410733a4ac",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e053a1cf-2149-459a-9904-9548aefcf8ef"
        },
        "item": {
          "id": "46f6f0b1-834c-4d8c-a1aa-4846f76e024d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6cebb49b-5cc1-41b2-9eff-f6e55fbd7b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a399de-73b9-45d6-b249-ad5f66fbdd31",
        "cursor": {
          "ref": "9e54460e-92d7-4f26-9d0f-bc008e929b4d",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "83e7d3f3-3135-48b6-b134-3efd958ae8a8"
        },
        "item": {
          "id": "e5a399de-73b9-45d6-b249-ad5f66fbdd31",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8ad206df-033a-490a-ac56-60855b7d7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb6e779-c92c-446b-b88b-f9672126e85b",
        "cursor": {
          "ref": "9b852277-4a93-4922-bbd8-80ed07b7ceb0",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "005826a4-07ee-4bf7-9e44-e4eb955db1f0"
        },
        "item": {
          "id": "bdb6e779-c92c-446b-b88b-f9672126e85b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "39485295-63b0-40bf-ac35-5602e80d8e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4902aeda-2ec6-47c4-b9e6-78c08d271acb",
        "cursor": {
          "ref": "823f8860-1497-4ecf-9e34-77d59680bc67",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1cc0bb70-5666-4694-b09e-4277026b23bd"
        },
        "item": {
          "id": "4902aeda-2ec6-47c4-b9e6-78c08d271acb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f56998ad-5148-4e0d-98c9-7381346bb9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ce273b-ba8c-497d-9af1-7d7ffb8cd1ac",
        "cursor": {
          "ref": "917fff9a-47eb-4f34-9207-0434fa82d7b6",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d79501bd-b8d0-4410-83c4-53baeee3d8bf"
        },
        "item": {
          "id": "47ce273b-ba8c-497d-9af1-7d7ffb8cd1ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "53268579-921e-460f-887e-4ed2b7e8d295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331d751-73d0-4994-8815-36e6caca6e36",
        "cursor": {
          "ref": "99672b1f-1c55-4be1-807d-f733153256e1",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d4f5f82d-73fc-4eb9-aba0-7921b3279c1c"
        },
        "item": {
          "id": "6331d751-73d0-4994-8815-36e6caca6e36",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c644aed4-b8f2-4b31-8232-c5531840691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d2a744-c570-4c6c-b184-1697ec9f669d",
        "cursor": {
          "ref": "a015e505-e685-481c-adea-afa2ebce6d75",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "af866ebb-a311-4da3-a0c1-f0f15cc260cf"
        },
        "item": {
          "id": "37d2a744-c570-4c6c-b184-1697ec9f669d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8312ebda-8e18-4be9-a855-f02936e6ebd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d381bb2-a750-4c2f-8e6b-5ef732e5e088",
        "cursor": {
          "ref": "50db0322-e88f-46af-8d4c-8fb26d732f99",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "951dc122-ee8c-45bb-be55-745d75ec22af"
        },
        "item": {
          "id": "2d381bb2-a750-4c2f-8e6b-5ef732e5e088",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "06085947-16b6-40bd-a98c-a22a5034563a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba0832-912c-4694-9f0e-b10ffce79f90",
        "cursor": {
          "ref": "3d61cba2-b14c-4520-85d4-9a586ae3d947",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e29e635a-a5da-4302-a3fb-21f66b16b7ba"
        },
        "item": {
          "id": "ecba0832-912c-4694-9f0e-b10ffce79f90",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5f72bab-1266-42eb-aa6d-8bc5b86dcdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7413a-dc6b-41f5-82ce-a2f072879427",
        "cursor": {
          "ref": "950fcfc8-f0f8-4c89-8e11-39fe31e9df23",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "995a7942-91dc-4dd0-864f-2feac229df76"
        },
        "item": {
          "id": "17e7413a-dc6b-41f5-82ce-a2f072879427",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9d33c261-ee05-46a4-b030-ea76c205f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f84a177-fe83-4b98-879e-730545afc088",
        "cursor": {
          "ref": "7d850ae6-bb42-4d93-9483-10bedf53b707",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ddbce352-b5ab-487b-94c4-84ed82c40847"
        },
        "item": {
          "id": "7f84a177-fe83-4b98-879e-730545afc088",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd98ae5e-661b-4521-9079-2785f8f42d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de267cbc-2ec7-46ff-8c0d-9d9094b1083d",
        "cursor": {
          "ref": "6c5cb5cc-f0f4-4080-9143-9104ef644346",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a391e14b-7f31-447f-9b58-b3774d7bd5b8"
        },
        "item": {
          "id": "de267cbc-2ec7-46ff-8c0d-9d9094b1083d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4eb18dd9-3894-4e2b-9424-f31701ea12c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bafb6a-dfb3-4811-a3df-715b2ccc6390",
        "cursor": {
          "ref": "9faf7aa2-b34c-4934-9b42-a3f0cfd8e3db",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1f9d84d8-293f-42ed-9930-1391de83b2da"
        },
        "item": {
          "id": "94bafb6a-dfb3-4811-a3df-715b2ccc6390",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "82dc468f-83e4-4c94-ac30-842d9e57ef3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0732c855-f323-415b-80dc-80321d61abb7",
        "cursor": {
          "ref": "feb71f62-4f03-4f90-a15e-3f55e93ab549",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "514e8ad4-fb75-45ab-8c4c-7060bcd517c8"
        },
        "item": {
          "id": "0732c855-f323-415b-80dc-80321d61abb7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "07b4e839-9aae-498e-bfd3-3dda86f4b96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b96bb-ea6c-48c2-8a40-8fabf9a4cb3d",
        "cursor": {
          "ref": "62518155-bfd3-4794-aa04-db5acdec9cfc",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e64a85ac-4a29-4300-b464-51acf7e668d4"
        },
        "item": {
          "id": "521b96bb-ea6c-48c2-8a40-8fabf9a4cb3d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ebc4995d-c0d8-42f8-abf8-713f4dca8c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c671d6-9a8a-441a-9397-ca3b166f72af",
        "cursor": {
          "ref": "d713f2ef-b969-4574-bb10-3ed19cfa5848",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0961bff6-fff6-4f52-987b-c5459ae8f5a7"
        },
        "item": {
          "id": "c8c671d6-9a8a-441a-9397-ca3b166f72af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "57ae5cdb-20c6-42e9-93e7-7334a9e083b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37074d36-2b80-4ed2-96b5-90ad32597bbd",
        "cursor": {
          "ref": "9b6a29b1-ff6c-4b7c-8524-d70a9a3d5ea7",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2cecb0f5-158c-4c12-a632-a6b6803c5e05"
        },
        "item": {
          "id": "37074d36-2b80-4ed2-96b5-90ad32597bbd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ab8312f-bcca-4574-a71d-2b92816f7847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74be597b-443a-43bd-abe4-ed17ee848843",
        "cursor": {
          "ref": "edc43484-d4bd-4ba3-a22d-d5a9aaaac7d4",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2c9d94db-a8f4-4a70-a4ec-c6c235eab4fb"
        },
        "item": {
          "id": "74be597b-443a-43bd-abe4-ed17ee848843",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1938f8eb-eba8-4c4d-a327-b9605f56f278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c49cb2f-9c5d-4ceb-b936-e01d9d82e268",
        "cursor": {
          "ref": "1c92c5ed-2c1b-4c19-96fc-6208adf06559",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c479160f-9a2e-4d8a-b098-a08cc6c812e8"
        },
        "item": {
          "id": "2c49cb2f-9c5d-4ceb-b936-e01d9d82e268",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f51136b7-67d3-4d71-a8b4-2cab2d560ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233a1690-442c-4b31-8fbb-fa98825019b8",
        "cursor": {
          "ref": "cbd0a122-8e5b-487c-b60b-0829157fd6ca",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "18e9550a-cccf-4616-9f93-dd7750219c95"
        },
        "item": {
          "id": "233a1690-442c-4b31-8fbb-fa98825019b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ea6add86-a674-41d1-925a-f5d5fe322a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4449dfb5-1747-45ca-93ff-886849e2f606",
        "cursor": {
          "ref": "7036eb91-f935-4f55-a02e-bbb36c0a1ea9",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "201f7643-7e96-4b6a-99a3-1aaea785d90f"
        },
        "item": {
          "id": "4449dfb5-1747-45ca-93ff-886849e2f606",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ee8199c-71b7-44a6-8262-c601bd342d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caeeac6-fc83-401c-987c-59713df61e86",
        "cursor": {
          "ref": "6bb79939-3aff-4f51-810b-115f249d31dc",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1f3133e5-1f7a-4a48-aba5-6c4284a2c62c"
        },
        "item": {
          "id": "2caeeac6-fc83-401c-987c-59713df61e86",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0009fe1-9786-41f9-b91a-f2265a246deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91806646-deaa-4a10-a41a-390945dedd1e",
        "cursor": {
          "ref": "9aeefbcf-2fc9-4b7a-b421-d72911ff6929",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5ef6ccc-65bd-41e7-82b6-38be0a0dc03e"
        },
        "item": {
          "id": "91806646-deaa-4a10-a41a-390945dedd1e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a069b874-492a-40b3-9dd8-8858c1c381ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d9f4ce-e58a-4296-843d-0df3ead6d62e",
        "cursor": {
          "ref": "162b7ec3-7d17-4097-9568-3811df983d69",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "31b3652d-f510-45b6-9f25-04e2815123a8"
        },
        "item": {
          "id": "e7d9f4ce-e58a-4296-843d-0df3ead6d62e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fe552a43-b365-400a-aca9-7d34b152355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d481116-8b86-4b24-b9fb-dfc1b486fc7f",
        "cursor": {
          "ref": "6abbd22c-663a-4805-8753-cace1ad3e1cd",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "746c207e-bbb1-4912-9400-62860fb324e8"
        },
        "item": {
          "id": "1d481116-8b86-4b24-b9fb-dfc1b486fc7f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71eb8c31-90b8-4369-8436-8f974d6d0c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef87af5-a936-4bb5-8e82-609cf3e5e192",
        "cursor": {
          "ref": "8991064a-6e49-4647-bb32-bc4690a0f6e9",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4bad8daf-6f03-4e3a-86e6-434742eff0f7"
        },
        "item": {
          "id": "8ef87af5-a936-4bb5-8e82-609cf3e5e192",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7ce4be08-78df-4732-bed8-3be9ccc4f292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8d2964-683d-4e03-9f9f-ec5ec9c1e481",
        "cursor": {
          "ref": "fc82402a-7292-4a65-abe1-8c89fad4467e",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2bb34619-439a-4d5b-bc2e-5d57bd22ef69"
        },
        "item": {
          "id": "ea8d2964-683d-4e03-9f9f-ec5ec9c1e481",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a3370b4d-c05e-435d-a404-3f4020700891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22819b3a-b078-4dab-9144-d54daf3cd20e",
        "cursor": {
          "ref": "63c11ed8-93f7-455b-aecb-52998f783f64",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "14b038db-9991-41ab-946a-edaefe5a069a"
        },
        "item": {
          "id": "22819b3a-b078-4dab-9144-d54daf3cd20e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2fb0fc8b-9708-42ef-9619-cec23e37c12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4d4261-cd0d-4135-b92a-e6c7e9ab4d03",
        "cursor": {
          "ref": "598862ff-759b-4f41-94e1-d8fb2e4bfd41",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "88b8d8a2-a3e5-4d29-8f41-4f08e2c0f4b1"
        },
        "item": {
          "id": "6f4d4261-cd0d-4135-b92a-e6c7e9ab4d03",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcdea667-5306-45bb-a4ba-1403769d4714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4872e5-ecad-4b9e-a4f0-b415ede955a4",
        "cursor": {
          "ref": "dc113e80-31ae-4f72-a88b-9ccefa581123",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "98200544-07f8-4b91-a525-f7bd26d3ed10"
        },
        "item": {
          "id": "0e4872e5-ecad-4b9e-a4f0-b415ede955a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "131b6f17-6bfb-49c6-9b5e-2a69439a3247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68362712-3516-43c0-96ee-4b4e614f0170",
        "cursor": {
          "ref": "d4193c8b-b6d3-4b31-8fd6-f70959626ee1",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "06644e69-41b0-4b7f-8e7d-0db2fcf7ddca"
        },
        "item": {
          "id": "68362712-3516-43c0-96ee-4b4e614f0170",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9ac0122e-8a41-4412-b179-cf04b6699e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dc5874-15e6-4cdd-a989-67a3de2599d9",
        "cursor": {
          "ref": "01c380a4-803a-4a24-84a6-8b93a4373a19",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f6085103-6750-41ea-a1d1-28e8b13164f0"
        },
        "item": {
          "id": "74dc5874-15e6-4cdd-a989-67a3de2599d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5654e013-d06a-4d86-97fd-7b6c66d13e8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ab02b8-43b3-40b3-ba50-47ed9efb0177",
        "cursor": {
          "ref": "90a9c0f3-f7b3-41d2-ac15-b9b041f3483d",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a205b533-6932-4c42-8e46-4f69c3970c86"
        },
        "item": {
          "id": "d6ab02b8-43b3-40b3-ba50-47ed9efb0177",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f2f5d341-5300-4257-9410-48e1e9993d0a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 537,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1ec61e-9b94-4462-8e90-f709bd9a228b",
        "cursor": {
          "ref": "a8f595ec-76e4-494d-afe5-068fca991a1f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "263f67b7-f55e-4525-bc86-967dcb6001eb"
        },
        "item": {
          "id": "1d1ec61e-9b94-4462-8e90-f709bd9a228b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "53d3a9db-a70e-4312-8059-72b56286a1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1ec61e-9b94-4462-8e90-f709bd9a228b",
        "cursor": {
          "ref": "a8f595ec-76e4-494d-afe5-068fca991a1f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "263f67b7-f55e-4525-bc86-967dcb6001eb"
        },
        "item": {
          "id": "1d1ec61e-9b94-4462-8e90-f709bd9a228b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "53d3a9db-a70e-4312-8059-72b56286a1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ac9155-c029-4a86-a954-d90705ea865e",
        "cursor": {
          "ref": "0b5568d5-7472-4f4a-af56-ad438be7efd1",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2dd33ee9-6609-4242-ba98-faabd2698c09"
        },
        "item": {
          "id": "21ac9155-c029-4a86-a954-d90705ea865e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e7c770cb-c2bb-4da2-bbae-47c3801e3d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb476a5-9a34-447b-aad1-d9be4a181fdf",
        "cursor": {
          "ref": "03a6a883-87b3-454b-a014-a11f8521d44a",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "788ef83b-596d-43e0-abad-0a0233332eee"
        },
        "item": {
          "id": "dfb476a5-9a34-447b-aad1-d9be4a181fdf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3db51f9a-9f12-4a2f-85aa-4680a79bcf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeed1f91-a725-4e1b-8646-120caae2d425",
        "cursor": {
          "ref": "3d415272-9acf-4dd9-acb4-a37b16d4407f",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "46190c57-a4c9-4735-bdf1-66606b34945b"
        },
        "item": {
          "id": "eeed1f91-a725-4e1b-8646-120caae2d425",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3fc56684-de0f-4adf-bb30-62ca914dc564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c84a82f-c408-48bf-b098-89553d5fd192",
        "cursor": {
          "ref": "eaaf6f2c-2562-42dd-aa28-cd6e0de56a9e",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3cbb43c0-2b75-4e63-a94c-33758cd32b64"
        },
        "item": {
          "id": "1c84a82f-c408-48bf-b098-89553d5fd192",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8f56b8c0-d589-4c1b-8a7b-426d0b6b5cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8d3f1b-f47a-44e1-ac5a-a1dfbcd6f66e",
        "cursor": {
          "ref": "332bf474-0e30-4df2-aee3-a0194109b4c1",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3f26f49c-b34e-46c1-8e8c-0c497093f49b"
        },
        "item": {
          "id": "4a8d3f1b-f47a-44e1-ac5a-a1dfbcd6f66e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "06b1316c-d7c3-44f9-bd54-96199b5483dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb74532d-3be7-407b-acf1-4c6ccf2b9d6b",
        "cursor": {
          "ref": "f0b86f36-b121-417c-b8ac-2c2f7f51c812",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "97bb7d93-2d9b-4b30-b7cd-47f1f7c5fc74"
        },
        "item": {
          "id": "fb74532d-3be7-407b-acf1-4c6ccf2b9d6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8869aad1-19c5-43e8-a6b8-15d52bd2700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af79bdeb-2c66-49b8-bba1-71fa8aa933c7",
        "cursor": {
          "ref": "30171230-1587-4ed0-9ed3-e79cfd84befe",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9c71beab-8450-4e1d-b7f0-46d8f582a03f"
        },
        "item": {
          "id": "af79bdeb-2c66-49b8-bba1-71fa8aa933c7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "520347e7-9e5e-4c3b-a31d-76a23584dbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f76213-1a39-450e-99bf-fcdf27b8ecc3",
        "cursor": {
          "ref": "9730c609-e667-4cad-a710-7953019a9627",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "203dfbf2-1641-42bd-897e-0ffd703535cd"
        },
        "item": {
          "id": "a4f76213-1a39-450e-99bf-fcdf27b8ecc3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0541b133-4478-48a0-9f16-5dd26f7f8516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2123502d-f4fc-43b1-885a-26d5bb7a7ff4",
        "cursor": {
          "ref": "f96e8131-432f-4c7a-9c59-9055b2fc39c1",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "692db047-e7e6-4431-b745-dec7cfab91aa"
        },
        "item": {
          "id": "2123502d-f4fc-43b1-885a-26d5bb7a7ff4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fe3888f2-764d-496b-94a7-e07533603a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111bbba6-bedb-407b-bc05-51f25bb656fb",
        "cursor": {
          "ref": "c203cc07-3f55-4ec5-a808-031b574f33f7",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4c14649a-d812-41b3-81f8-a05c15389f72"
        },
        "item": {
          "id": "111bbba6-bedb-407b-bc05-51f25bb656fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0dbdd868-80ba-4c9b-af45-2d20521fe366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cababa2-1b34-412a-af4e-d31b9b877d90",
        "cursor": {
          "ref": "95c25ecd-d240-418e-a46b-e281a09fe64d",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d1dee413-a4c0-454d-853b-7d1fe4cf6161"
        },
        "item": {
          "id": "1cababa2-1b34-412a-af4e-d31b9b877d90",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "30d84c09-6e84-4f7d-b3e1-bd5b62b09628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4334f62d-ad56-48df-b7a3-1457e390b693",
        "cursor": {
          "ref": "1c8178ac-70e7-4e99-aaa6-3498d9238c5e",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8b04bee6-c48b-41f9-bded-6e7f2545c01b"
        },
        "item": {
          "id": "4334f62d-ad56-48df-b7a3-1457e390b693",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f51a2a8a-550a-418e-8fad-7a741c69f2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16748e76-23a5-4641-9c25-654ad212b0fa",
        "cursor": {
          "ref": "b30d0d37-8960-4282-87b1-abc0686804cc",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "90956a98-15d0-4e0c-a076-7a4a07c5e8b8"
        },
        "item": {
          "id": "16748e76-23a5-4641-9c25-654ad212b0fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "325e1bac-f481-47ac-a2ed-60c86ce608c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f9e61a-2d5b-45e6-9023-fe01c7bb8062",
        "cursor": {
          "ref": "7c66fe37-c08b-493b-ae54-fb6f65804d20",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e5480924-02c0-410e-bee5-10af45da82f9"
        },
        "item": {
          "id": "92f9e61a-2d5b-45e6-9023-fe01c7bb8062",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3dc700fe-dc0e-4484-af52-9ef88318e419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703e2b46-690f-4125-8bd1-b24010b2bbf6",
        "cursor": {
          "ref": "ea0e271d-6904-4019-a0ce-6b4d9c5e229d",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dbabd4c0-c5e9-40b4-88ff-4213904383dd"
        },
        "item": {
          "id": "703e2b46-690f-4125-8bd1-b24010b2bbf6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "55b4f434-1336-417a-b6a1-3d7ee36a556d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0028ecd6-7e6a-4603-b588-e35bd0b65247",
        "cursor": {
          "ref": "3073d50a-a429-4db3-8880-a1d553c20cb2",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7a6a6e11-6943-4fcf-a8c4-803843901bb0"
        },
        "item": {
          "id": "0028ecd6-7e6a-4603-b588-e35bd0b65247",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7c7a3ae2-f31f-4cb9-90fe-42af38a2dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5580c5-689e-4f32-b272-180bbb43ea24",
        "cursor": {
          "ref": "375306df-fc48-4d21-881e-45dec693983f",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e89b53c9-874f-49b1-9510-c8dabe608cb1"
        },
        "item": {
          "id": "6b5580c5-689e-4f32-b272-180bbb43ea24",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "f0d907b0-8f5d-435d-9be2-dd4ef0c01fce",
          "status": "OK",
          "code": 200,
          "responseTime": 3453,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "d07003d5-0e61-435b-97e3-b10534936bc8",
        "cursor": {
          "ref": "b49bf175-2f0b-48cf-897f-e2c7b90f04ba",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "21bfb6b3-7628-42c8-a794-af89742190b0"
        },
        "item": {
          "id": "d07003d5-0e61-435b-97e3-b10534936bc8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3ac8aac5-0836-4059-8dbf-c0bdae331d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4276be-881d-4e9d-8567-172e5b8a985a",
        "cursor": {
          "ref": "6694501c-3749-4165-9ce7-5eac3bcb25fa",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0e4265cb-379c-4066-a76a-6f2fa2155316"
        },
        "item": {
          "id": "dd4276be-881d-4e9d-8567-172e5b8a985a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a735c5c2-4640-4889-9960-c269c211402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865e8746-d5fa-42e0-8ec3-dc5acc43e978",
        "cursor": {
          "ref": "dc49bac1-12bd-45cb-9a80-ad1c3ebe4e01",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "311d518b-0dd7-4ba5-a0ae-bf9443cca79e"
        },
        "item": {
          "id": "865e8746-d5fa-42e0-8ec3-dc5acc43e978",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a3fb4968-588d-4a8d-967a-1caec29c2f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b0429a-bbe6-4220-955d-aeedd436d7db",
        "cursor": {
          "ref": "cc54a564-2b20-44da-9235-4de6fb5657e5",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ba7dfd6b-04a6-47c3-a88c-dadffa617bd5"
        },
        "item": {
          "id": "81b0429a-bbe6-4220-955d-aeedd436d7db",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8807952f-d12b-44a8-b72e-ea4aa3347881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ebfd53-b9c2-4758-ad02-0316e5eb1875",
        "cursor": {
          "ref": "f338e82e-ffb1-4283-bae9-a77261008e16",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ef3269aa-ba1f-445b-88af-68f6a8d9d8c6"
        },
        "item": {
          "id": "65ebfd53-b9c2-4758-ad02-0316e5eb1875",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2726228b-ffaf-4a4b-a005-ff935f015c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90520197-5b5c-46d4-bc1b-025677f0822f",
        "cursor": {
          "ref": "df097ffc-c49d-43c8-a1c6-c33ebe3da6ae",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "216036f4-34b8-4cea-84da-4ce81fcf527e"
        },
        "item": {
          "id": "90520197-5b5c-46d4-bc1b-025677f0822f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e7018dd-c675-4ebc-a4bf-8006295add5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c11fbd6-477d-43a1-a240-b3225932f0d1",
        "cursor": {
          "ref": "ac5d7aab-8102-4aa8-8a5a-9fb7f2597aa3",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "048954b0-8964-41ec-a518-8227bd051928"
        },
        "item": {
          "id": "1c11fbd6-477d-43a1-a240-b3225932f0d1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3fb27844-ccfd-4f22-8464-a00c6cba8eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751edcff-bb30-4024-8713-740d69ab44cf",
        "cursor": {
          "ref": "78ba0502-a036-4fb6-b07d-d89837c440b1",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "10aaee83-593b-437d-a7c6-a2c707f3d26f"
        },
        "item": {
          "id": "751edcff-bb30-4024-8713-740d69ab44cf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1cf35269-f349-457f-a1b9-bde642200417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce40a1-90be-420f-bc2c-24a21ffb22bc",
        "cursor": {
          "ref": "6d7c7990-a8ca-4279-989d-637c155f2ff9",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "498ed118-7468-46ff-8fc6-f70b67fc0840"
        },
        "item": {
          "id": "c4ce40a1-90be-420f-bc2c-24a21ffb22bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6d440d71-e964-4cda-b22f-ff6ccfd3b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831f38e-090e-466b-8498-da98d3b82188",
        "cursor": {
          "ref": "eb4196db-3642-4397-8e0a-8b8216e57e97",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9557498a-6e89-4792-b003-19eb930c8af3"
        },
        "item": {
          "id": "5831f38e-090e-466b-8498-da98d3b82188",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "49f60aaf-165f-4bdb-bc12-64fd004a1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2366a65a-c9f4-4535-b805-c2586ddb4f46",
        "cursor": {
          "ref": "8016ac8b-dab5-4b5a-8076-44f63625d061",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "40779512-098a-4e45-991a-e399438cd694"
        },
        "item": {
          "id": "2366a65a-c9f4-4535-b805-c2586ddb4f46",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a8e5a49c-b62e-4c60-b7b0-da45056e079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373e7ebb-ea97-4ee3-865e-31e7139a8646",
        "cursor": {
          "ref": "f6408566-539a-4d08-a25e-9b13a876c692",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9622c18b-2244-470a-a7a4-7a2eaa7d15bf"
        },
        "item": {
          "id": "373e7ebb-ea97-4ee3-865e-31e7139a8646",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0caaf066-afe5-4c84-8eb5-139ebfff6716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009a3490-1f28-4266-aab9-b424f1a72270",
        "cursor": {
          "ref": "5a3bb0ba-96b3-4559-9768-54cb9b4d08c1",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bd0e46b3-4272-4fe6-8e84-538ba49742bd"
        },
        "item": {
          "id": "009a3490-1f28-4266-aab9-b424f1a72270",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d36d160e-cf09-4e9c-ac64-7c12fef1ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df6d425-fe37-441b-9a82-5718e8c3d76e",
        "cursor": {
          "ref": "481b3446-97f9-4788-a698-6ef8fce1608c",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c0d32e4b-0498-46f9-9e17-593c39e122aa"
        },
        "item": {
          "id": "8df6d425-fe37-441b-9a82-5718e8c3d76e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0db1d213-c2b4-4d14-9784-d09fab3a5804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eb8dd9-f36c-47bc-9fca-179b6707b575",
        "cursor": {
          "ref": "f0916f81-54f1-42f0-bc75-f66b2f7bc016",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "47af9ed6-86ad-43ba-9a8e-ce14b41f296e"
        },
        "item": {
          "id": "a8eb8dd9-f36c-47bc-9fca-179b6707b575",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c005c339-dfe5-4556-9a64-533f536e3928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd86b67b-2e8d-47d3-9f56-e2fe6fcdd7b4",
        "cursor": {
          "ref": "f1314dec-0ccf-4d61-a4e0-993880aa2e95",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bc583a66-6124-48cc-a9a4-87c9db771e7a"
        },
        "item": {
          "id": "bd86b67b-2e8d-47d3-9f56-e2fe6fcdd7b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "52500115-bc89-4c04-81d3-acbe611a031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faed7e0-2f19-4924-9dbe-dabc5beb2c87",
        "cursor": {
          "ref": "484e06a5-7c24-4df6-9708-d002f8c0f3f9",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "37a919ab-4904-46e5-b022-115ad4f91fe6"
        },
        "item": {
          "id": "9faed7e0-2f19-4924-9dbe-dabc5beb2c87",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c48cfd66-d00f-4eeb-9bdd-4b3386fe8116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b8d1e1-f604-4735-8365-0a7db1f7588f",
        "cursor": {
          "ref": "ba80267e-d60a-413e-836f-bf1f2128a889",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2cc7ca58-ba8b-4255-80a1-76cdd901d35a"
        },
        "item": {
          "id": "12b8d1e1-f604-4735-8365-0a7db1f7588f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c743edca-8f10-4ef4-8fdb-ed3b992088c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7037c094-ad80-4b1b-a814-06c0d40c01b2",
        "cursor": {
          "ref": "15374eef-f7d0-4df5-a7c1-b4c26957ebf5",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1165735f-ce51-4237-b312-63c27c45759e"
        },
        "item": {
          "id": "7037c094-ad80-4b1b-a814-06c0d40c01b2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "da04e432-23ab-4b95-943f-f6ef9058c06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80837205-a55e-4fd0-a360-875180d156c1",
        "cursor": {
          "ref": "7ba382ff-d9a5-4f1e-9ddd-8dbb0bbf8686",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0fbe7616-8acf-487a-8b21-0ebab73ecbe8"
        },
        "item": {
          "id": "80837205-a55e-4fd0-a360-875180d156c1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d8960bee-e8a7-4a01-80a9-277ba9560926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fe7cd4-e436-45e3-bf25-83c7a9f07c90",
        "cursor": {
          "ref": "576eba5c-8447-4172-a74f-4865a9833029",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5bc222dc-9ccb-4741-ae91-12bfbdc2e335"
        },
        "item": {
          "id": "f4fe7cd4-e436-45e3-bf25-83c7a9f07c90",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "95e481ff-b39a-4aee-8ea0-740e222072b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1753341-4bde-4a1e-9391-32de50af01c9",
        "cursor": {
          "ref": "45b780e7-aaa9-4e6d-8c51-27665947152f",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f009addb-a63d-4227-ac7e-128398a5d687"
        },
        "item": {
          "id": "e1753341-4bde-4a1e-9391-32de50af01c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ba903bd-b6cd-4bce-9705-15923f2115e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c312c5-e096-40e1-b07e-308653ae068b",
        "cursor": {
          "ref": "8263b16a-951a-45f5-beb2-962377228856",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d15f4dea-208f-4536-a392-b1ee1511e144"
        },
        "item": {
          "id": "a8c312c5-e096-40e1-b07e-308653ae068b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9775124d-a969-4494-b9ec-7228be3a6799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8675d8ca-21b5-4de8-a1cb-ea2d578a255a",
        "cursor": {
          "ref": "484eec35-033e-4ad0-8030-dbac4605ce0f",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2c7a47f3-d78d-4c62-a9bb-a8e04810fe9c"
        },
        "item": {
          "id": "8675d8ca-21b5-4de8-a1cb-ea2d578a255a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e03cd417-fc4e-4357-8a45-1c9ab7e0be4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e938dd9-b51a-43b4-af09-06de03d1de89",
        "cursor": {
          "ref": "b328b17e-8a4c-4dc7-8607-720999a9434b",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7e6194ad-db63-4195-b823-d6760f688f3d"
        },
        "item": {
          "id": "6e938dd9-b51a-43b4-af09-06de03d1de89",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ac0069d-7ea6-4a6e-9461-b54397a3b17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268bc29e-d36d-43ec-9508-edeecfc91b70",
        "cursor": {
          "ref": "481a7b68-9675-4fce-93f1-66936bf0a245",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d6d7c54c-1eb7-4318-b145-80baf715f557"
        },
        "item": {
          "id": "268bc29e-d36d-43ec-9508-edeecfc91b70",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ee31cc29-f682-43e8-8370-f25d64ac79c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf87f7-143a-4465-8719-e80b76d16907",
        "cursor": {
          "ref": "73f2acb0-72dc-465e-b8f9-cbaca31de7d6",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bb95bd50-a2c8-4e5b-9980-6cfd48ded34d"
        },
        "item": {
          "id": "cedf87f7-143a-4465-8719-e80b76d16907",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9088ecce-6128-47ec-bbdb-e6fd9696cf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66ef7b-6b7e-4708-aa54-2c2bf3eb19ea",
        "cursor": {
          "ref": "f44c4902-bc19-444c-b9fe-78e3a91a6e0a",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "02bcb9cf-8ff5-4c4d-9ac1-e1fa78162e0f"
        },
        "item": {
          "id": "4a66ef7b-6b7e-4708-aa54-2c2bf3eb19ea",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a5858eb1-7ade-40aa-8dd5-6efb913f365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99b4244-4fd0-4af7-930e-d6f6f017b330",
        "cursor": {
          "ref": "6272e543-7810-4588-a37d-d31e7a3c4924",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9971c0b1-fb3f-49d4-9f49-26aef0b8ed5a"
        },
        "item": {
          "id": "d99b4244-4fd0-4af7-930e-d6f6f017b330",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3f883867-c862-4923-beac-32bb043699b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc11a82-711a-40bb-bc0b-5378b7996103",
        "cursor": {
          "ref": "78183a45-182b-404e-8369-c570afff4256",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6444b252-d043-4a2d-aed3-eb2cf5146bdb"
        },
        "item": {
          "id": "4fc11a82-711a-40bb-bc0b-5378b7996103",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e9d3e094-0a0f-4f8f-91f4-a41b1a307379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6b60f8-fb10-46f5-9d3d-13c0f15ccb6f",
        "cursor": {
          "ref": "d791ca91-9ed2-497b-bbc7-705ee5cb20aa",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "617af2df-e375-4c8f-a028-14b99bdc507d"
        },
        "item": {
          "id": "8f6b60f8-fb10-46f5-9d3d-13c0f15ccb6f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fb5d7884-5415-4d9c-9de2-9d1e510f8c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfd8cc3-5c7a-4051-ace5-41b5d5e76482",
        "cursor": {
          "ref": "e0ace60f-32c0-4686-a4eb-a5d7ef620c24",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6b939584-c761-45c4-8a75-9656411c7d19"
        },
        "item": {
          "id": "3dfd8cc3-5c7a-4051-ace5-41b5d5e76482",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "65fd9267-6728-4638-aa35-77a241f0ae3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e29af1-e165-474d-a52e-402332553190",
        "cursor": {
          "ref": "bc3e948c-188e-41c5-9f47-aef0057f3900",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "92ca5a46-c42e-46ef-93ab-529f43dcfe1b"
        },
        "item": {
          "id": "98e29af1-e165-474d-a52e-402332553190",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "57c0d899-d96c-4dc0-80b9-d19faba6d0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e7469a-fed6-4352-a7df-9a9e87036e65",
        "cursor": {
          "ref": "73864d5c-25c1-4f10-a282-53d586cb8f8a",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e9936e95-aed5-4d4b-9be2-3ae119d829a1"
        },
        "item": {
          "id": "f7e7469a-fed6-4352-a7df-9a9e87036e65",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9578aba-aa00-4edb-b492-422fbcfc0115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc9d154-39b7-4220-976e-d89a144be4f6",
        "cursor": {
          "ref": "eaac62f5-c639-4024-a1a8-64339a40461f",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7b422a4e-5338-4c2b-8155-a808b982dbb1"
        },
        "item": {
          "id": "bbc9d154-39b7-4220-976e-d89a144be4f6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f45e265d-155e-4be8-9816-1e055ce64310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ab5da2-fe37-43d6-82cc-1ffccc1ec96f",
        "cursor": {
          "ref": "fbaa9a94-716c-4dbc-87cc-f205a53083b0",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f10e3062-7561-4868-ac45-4a648f29c264"
        },
        "item": {
          "id": "76ab5da2-fe37-43d6-82cc-1ffccc1ec96f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2fc624d8-3c6c-490a-9d6b-b0f9373590a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18124ee0-74f1-4cc3-bb52-3285f6eb339c",
        "cursor": {
          "ref": "79f53a93-d547-4b3b-a4e0-2e86cb3002c3",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "472b0dde-8e90-4e3a-b011-122bdc56e55d"
        },
        "item": {
          "id": "18124ee0-74f1-4cc3-bb52-3285f6eb339c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7be1930c-0163-43db-bbb9-0c051fee69d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02614c26-6f7e-4016-9254-fc7485c3cbbd",
        "cursor": {
          "ref": "95faf725-0b8c-437a-8232-67bfb318bea5",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "284d0b82-4a54-4911-825a-eb0e5c071274"
        },
        "item": {
          "id": "02614c26-6f7e-4016-9254-fc7485c3cbbd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "77361af8-2e1e-462f-89c4-c22646d2d679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f59132-a1c6-4458-8156-1a313ad57ffc",
        "cursor": {
          "ref": "527b6ffc-7863-4e87-acf6-09d801eacf6e",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ebdcbae0-5eab-4b85-9953-5e1cd97d2c02"
        },
        "item": {
          "id": "40f59132-a1c6-4458-8156-1a313ad57ffc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f699a1d-6d0f-4374-8d72-6f827425083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df031e75-20f5-4de1-b380-72a9d1d6ddcf",
        "cursor": {
          "ref": "0d333203-21c9-4536-9a43-b6667280658d",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a707df44-2099-4930-99e8-f825c3b7e262"
        },
        "item": {
          "id": "df031e75-20f5-4de1-b380-72a9d1d6ddcf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7399b50a-966e-4c84-9795-004064db7016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f5bc93-a60e-4319-a8af-c54b0b021967",
        "cursor": {
          "ref": "f678ef23-1de4-4fb0-8ead-fd4186306d91",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ecf3dde0-3d85-4017-a9d9-66c200d074db"
        },
        "item": {
          "id": "25f5bc93-a60e-4319-a8af-c54b0b021967",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "703cba34-8d0a-448e-b34c-f14993b51dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe6c1dd-637a-4821-ba72-c6431ae3c57b",
        "cursor": {
          "ref": "16f4b452-d44c-4232-a0b7-aeff7a60a189",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cc7ff0b6-079c-4bf9-b758-61438b1e646e"
        },
        "item": {
          "id": "fbe6c1dd-637a-4821-ba72-c6431ae3c57b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f54e016-4b66-4306-8a14-1a73570f7e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d528873-1979-4352-ad78-b39621912457",
        "cursor": {
          "ref": "a9a543f7-3753-4756-9662-bb3758cf6212",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "456dc562-47d7-45bf-ba0f-48e3f7add68d"
        },
        "item": {
          "id": "8d528873-1979-4352-ad78-b39621912457",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2ceb14dd-44e3-4e93-b244-d4c880088e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b3a7f-704d-486a-95d8-b27ff22d9825",
        "cursor": {
          "ref": "24d890e5-7877-4044-83a9-ade6df5679d9",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ec850a78-dfe1-4ec5-b20b-281f5ec0407b"
        },
        "item": {
          "id": "ef1b3a7f-704d-486a-95d8-b27ff22d9825",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a845a876-32a2-4de7-af6b-26ab53b99244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7e6e20-69c7-41cd-861e-9844a5f6bb9c",
        "cursor": {
          "ref": "d4a3ce60-4993-4989-bb8b-6b3613318f71",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dc32d26c-5c87-4f3c-b91b-d5dca066c1dd"
        },
        "item": {
          "id": "5d7e6e20-69c7-41cd-861e-9844a5f6bb9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8fc1d274-b190-4433-8390-04045f213a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5aba19-b7d4-466a-b78b-57f700e24e68",
        "cursor": {
          "ref": "f3a7c257-14ab-40c0-bd75-327125fa9bd6",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6b11403a-05de-4f50-af5a-d5e72a5ee90d"
        },
        "item": {
          "id": "dc5aba19-b7d4-466a-b78b-57f700e24e68",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "863a9470-6b09-4087-ac98-1b1552756712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143a49d1-68f2-43ca-88a3-4277cbd17854",
        "cursor": {
          "ref": "757570d1-2112-47fa-8465-80cde36fd694",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f67713a7-66d4-4598-b30f-08f7b7fcdba0"
        },
        "item": {
          "id": "143a49d1-68f2-43ca-88a3-4277cbd17854",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9d2cea71-66cb-42f5-b565-7fc8a821e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b2cd0b-df89-4826-afee-014dd79ba966",
        "cursor": {
          "ref": "02a71fa1-ac9a-4abf-a72f-58baf4a75fef",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "884eafe4-6604-4491-8ab4-d25e6ae34dbb"
        },
        "item": {
          "id": "54b2cd0b-df89-4826-afee-014dd79ba966",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0811144f-76db-4df0-bd1b-7ecfe7d4349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe7ebad-2e46-44ea-9078-fbc0b8784ef4",
        "cursor": {
          "ref": "7a16ff37-4117-4af7-a9e2-bbb0e8d66ff6",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cfc8b6ef-ccf8-4261-ae03-12358b3afef1"
        },
        "item": {
          "id": "1fe7ebad-2e46-44ea-9078-fbc0b8784ef4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3c8997b1-af5f-4340-9ad7-f400719bd53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faae563-bd9a-4f3d-bfcf-62b453428dd2",
        "cursor": {
          "ref": "d49f3b95-8194-42cc-8558-feb663fdf8be",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1baf0afa-7f65-4f4e-affa-12d1c633f858"
        },
        "item": {
          "id": "0faae563-bd9a-4f3d-bfcf-62b453428dd2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ce03d023-0fb0-4b7b-8acc-62903a592d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d053a5c3-a35f-4151-b8c1-9f457a831c39",
        "cursor": {
          "ref": "34c4bd6c-56cb-4b56-8382-c61409080581",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6372fec8-a6f7-4b36-b96b-41caafdb2a46"
        },
        "item": {
          "id": "d053a5c3-a35f-4151-b8c1-9f457a831c39",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "90c98e0e-bb5e-4a84-9d1e-f0a862c7315b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987cf111-c621-4fc9-a741-773ebf2e1643",
        "cursor": {
          "ref": "efc3aa4f-26fe-487f-8d9c-4a4d4bd1361b",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "220f1b95-07f9-46f6-bdef-eedb7f24e566"
        },
        "item": {
          "id": "987cf111-c621-4fc9-a741-773ebf2e1643",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f382d643-a4f3-44d2-8448-9b5d4d8b8ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02b5661-68b1-435e-84b4-3c5c900f1a47",
        "cursor": {
          "ref": "1cf890f0-e40b-4514-ab1c-49514894101f",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cd3f1d7d-5a0c-4aaa-a86b-31a57b1dddab"
        },
        "item": {
          "id": "b02b5661-68b1-435e-84b4-3c5c900f1a47",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a0c36e45-90a1-41f8-a83a-59f477f360cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5608d2-fc3c-4872-aa93-230439c4c8df",
        "cursor": {
          "ref": "fce1576d-00ae-4476-842d-01623e3778f8",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bbf0b432-59d0-492c-aa83-9bcf3a643994"
        },
        "item": {
          "id": "6f5608d2-fc3c-4872-aa93-230439c4c8df",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "41485518-1114-4ed8-bc3e-43088926668f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc15b278-2d5d-468c-ad40-2498a66fea40",
        "cursor": {
          "ref": "c25869e2-9fa7-463e-8e80-0dff4115c562",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6fdb3e8f-60bb-481e-aef6-37824b6ed14e"
        },
        "item": {
          "id": "bc15b278-2d5d-468c-ad40-2498a66fea40",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "986e4ff8-9d60-4bbc-a220-feee61ec0fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6cb05f-12d4-43d7-8eee-9845e63945e3",
        "cursor": {
          "ref": "b6a4cfc7-19ca-4b4f-9fc0-9657c4d5e308",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "15c246ec-e8a6-4645-aa30-cd878544a421"
        },
        "item": {
          "id": "7d6cb05f-12d4-43d7-8eee-9845e63945e3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bf8617a8-94c7-4a1e-a1e4-28050178c93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c677d684-700e-420a-bd52-10213c99fa23",
        "cursor": {
          "ref": "03764b90-cab5-4c6b-926f-1236d598901f",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3ccb1766-4ea2-46b8-988c-523fde381046"
        },
        "item": {
          "id": "c677d684-700e-420a-bd52-10213c99fa23",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "36c93ae2-c24f-4b1b-84a9-b45595d61bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb49af3a-c70c-44fe-95d8-ad7b13d8a9d7",
        "cursor": {
          "ref": "29295eea-3234-4ab1-a245-9ca8b0bfde1c",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7aa0afec-9896-4e22-9b49-61931f074657"
        },
        "item": {
          "id": "eb49af3a-c70c-44fe-95d8-ad7b13d8a9d7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "793cd011-3c85-4745-9033-17fe7ceac7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64098efc-bf7f-4f3d-ab3d-80cf4df7c038",
        "cursor": {
          "ref": "d47855e9-c5e5-4d02-a5b6-1fd16392ad7a",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "91f042ef-1a49-4989-a6b0-000277ea38a3"
        },
        "item": {
          "id": "64098efc-bf7f-4f3d-ab3d-80cf4df7c038",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c5fb948-71a1-4772-badd-ec2f7c5ccae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7830cc43-1558-4ce5-bbc1-68d14f7b10bf",
        "cursor": {
          "ref": "23bbbcd6-dfc2-43f8-bc17-ae2c78952b37",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "14f1388c-a6e7-46e6-9328-68b4ca4a7fb6"
        },
        "item": {
          "id": "7830cc43-1558-4ce5-bbc1-68d14f7b10bf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c877a1d-3ca3-4a14-985b-902aca515ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850d9359-a107-4fc6-8492-8eaeccee9848",
        "cursor": {
          "ref": "862fceb4-9d6f-4ad1-b6b5-67a315a1ff6b",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "48e09417-9536-414a-a4e8-3b3343a862bd"
        },
        "item": {
          "id": "850d9359-a107-4fc6-8492-8eaeccee9848",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "416ce7b8-b8aa-4c30-a8a3-f0fbe3b13850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ec90c-43d3-4e05-9d32-37e9d4ecb5f8",
        "cursor": {
          "ref": "2cdeb3e3-fefc-44c6-aae4-03420e06cfd8",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eecde57e-ef55-4fa9-9e88-a0cc2d93bb90"
        },
        "item": {
          "id": "b38ec90c-43d3-4e05-9d32-37e9d4ecb5f8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "06d936e1-4550-4427-be22-ddeb0a8836fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e928339-67df-410f-a563-5b15e8be2832",
        "cursor": {
          "ref": "c654ac33-6691-4ab2-a33a-51b8bc8e6ded",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08af5491-bbaa-420b-a677-65753c7d2cbc"
        },
        "item": {
          "id": "4e928339-67df-410f-a563-5b15e8be2832",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2731fe50-df1b-4b44-9891-6ac2934a3486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d60fcb-90ca-41b7-ad67-2f07746bf42e",
        "cursor": {
          "ref": "03dd55f3-6460-474c-89bf-41bf70bdec22",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7a9a4cf8-1a35-4d6b-9116-3810a2ce2252"
        },
        "item": {
          "id": "d2d60fcb-90ca-41b7-ad67-2f07746bf42e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "983365be-07ba-4b53-83dd-d64e4083e521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8547453-838a-4f21-bd66-3024ea72ab33",
        "cursor": {
          "ref": "8d921099-c02e-4484-a7a1-90824eeabed6",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ff19c3c7-87eb-46d2-b2f5-5e1663af5d09"
        },
        "item": {
          "id": "c8547453-838a-4f21-bd66-3024ea72ab33",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "249dc6bb-1755-49eb-a9b8-65c2b8f1c6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dc88bf-de7d-482f-82fe-66ec1cf00c3b",
        "cursor": {
          "ref": "545b76a1-9d43-41eb-b787-0f78bb2475f7",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "03d8a7cc-5050-4695-aa1c-576060b1ce31"
        },
        "item": {
          "id": "21dc88bf-de7d-482f-82fe-66ec1cf00c3b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "42cc3406-55fc-4ceb-9b4d-5e1f7cd18265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673d17a4-e02e-4bfd-b1ee-7a1a763a5958",
        "cursor": {
          "ref": "fa94b5d9-0d93-4d70-832f-68a73e872a37",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "09013d5b-ea2f-45d2-89c1-cb522b7981ca"
        },
        "item": {
          "id": "673d17a4-e02e-4bfd-b1ee-7a1a763a5958",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1ec7d016-6562-4e40-91f9-6af59230128c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84f533-77bf-4dba-be1b-2b23270eb22b",
        "cursor": {
          "ref": "c03e11df-8f23-4e0b-8dcc-01e5b404e188",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d7309b6f-70f2-42cf-a6a1-81cd8df6ee0d"
        },
        "item": {
          "id": "db84f533-77bf-4dba-be1b-2b23270eb22b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e9874576-57c3-42c5-a402-c8ecd6c4a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eb76f6-ad4b-4d3d-ac74-a9c8e342a747",
        "cursor": {
          "ref": "980bc332-40da-460a-9000-a547b49e2ea7",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e515e574-b9bf-42e1-8c26-7585538f9453"
        },
        "item": {
          "id": "d8eb76f6-ad4b-4d3d-ac74-a9c8e342a747",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "62557f0f-ae05-45c4-a5e7-6a9b124cd955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a90622-561c-41b0-beba-fa966760f969",
        "cursor": {
          "ref": "8d95410b-d8f4-407b-96a9-dbb7ce7fb06a",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a5cd8d8b-340b-49a6-b67a-b6cf1c6ad677"
        },
        "item": {
          "id": "f4a90622-561c-41b0-beba-fa966760f969",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d87810c6-aa28-4549-a4df-517bdedfce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4153c1-3144-4633-98b7-680429fd70d3",
        "cursor": {
          "ref": "8420a34d-859a-4d1d-b619-5eb951563755",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a2ebd75b-043d-4bdc-90b4-385e7d482abd"
        },
        "item": {
          "id": "2f4153c1-3144-4633-98b7-680429fd70d3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d30582d5-9b58-490a-9974-bf3a5d13c870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d1065-190a-4ce9-8f0b-db87c3aee546",
        "cursor": {
          "ref": "1e5c045e-8b0c-44b5-a6ad-9e3cd7a5b969",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0fb9dd26-ef5d-4132-a083-4f74bb80b48b"
        },
        "item": {
          "id": "bd4d1065-190a-4ce9-8f0b-db87c3aee546",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "df2b1639-dcd3-49c8-9eeb-3f6a26cfc2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6422f43-ab57-480e-bb63-479332cf8e98",
        "cursor": {
          "ref": "dcf028e2-bd11-4f7c-a28e-925516532aa1",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f5e826d-78ca-4644-960c-874959bc67ae"
        },
        "item": {
          "id": "d6422f43-ab57-480e-bb63-479332cf8e98",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ca56086e-56cc-40f8-899d-9ff3d1a21432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b54b39a-9420-4634-b8ad-e81e8240b78d",
        "cursor": {
          "ref": "de793e11-5e99-4b7a-a476-5e1505b35fb4",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5e1fc3ce-f8d5-4842-8c54-4860ae8c42ec"
        },
        "item": {
          "id": "2b54b39a-9420-4634-b8ad-e81e8240b78d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8111b1da-7518-46d8-98e4-9628c8ceb782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0722da3-8ea2-4a7d-b4e4-1aa430c2d3f7",
        "cursor": {
          "ref": "7275d96f-ad23-49f8-9ecf-70dcdd672f58",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b98b8dc6-bf31-4321-affc-313f0f5a1669"
        },
        "item": {
          "id": "a0722da3-8ea2-4a7d-b4e4-1aa430c2d3f7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ee46b653-f63e-4b34-8bd6-ba1d1140714e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230bc478-c41b-40fa-872e-43e7add4d73c",
        "cursor": {
          "ref": "f0330993-467b-4b9e-8f49-b617ef886a0e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1ba7244c-8dc2-4a6e-a60b-bffc4ce14b17"
        },
        "item": {
          "id": "230bc478-c41b-40fa-872e-43e7add4d73c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d890e6ae-253c-4707-ad4d-aa7b99efcd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc43ee-acbc-44df-9709-bc115f908e7c",
        "cursor": {
          "ref": "7114002a-f142-43b5-bb6b-0739f6fbfd06",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1d878382-8e96-40db-865b-4dc55b5ca875"
        },
        "item": {
          "id": "e8cc43ee-acbc-44df-9709-bc115f908e7c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "202d27fb-b2db-4bae-aceb-8b44c453f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a476c6-d488-425c-b82b-d75938fd5e50",
        "cursor": {
          "ref": "d3464f05-bf56-40a0-a1d9-c45da6485eec",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5f7f298-2435-4900-9f95-237cf1f7568e"
        },
        "item": {
          "id": "f6a476c6-d488-425c-b82b-d75938fd5e50",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e00daeb9-1252-4e53-bf04-9737e6902bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c75aa3d-bbfc-4306-963b-be800a1851de",
        "cursor": {
          "ref": "e9f04df8-afd2-4acb-a6c4-aa722eebe029",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e951dcf6-b695-4630-a1c2-125d07e127dd"
        },
        "item": {
          "id": "2c75aa3d-bbfc-4306-963b-be800a1851de",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "77157cb8-719c-4020-a2d4-ebaecbd34c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16d9561-5427-4c4a-b58f-e0fae5cddb3b",
        "cursor": {
          "ref": "d55c79a0-7894-422f-9246-336526f3a058",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "21adf457-3104-40eb-a234-1cb7f9b242f4"
        },
        "item": {
          "id": "b16d9561-5427-4c4a-b58f-e0fae5cddb3b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "163229c6-4485-4b04-a248-dcd5cf8ee5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f22429-ca3c-49b0-a302-23af997bc8c8",
        "cursor": {
          "ref": "08cc8f33-daec-4928-b148-54ba3808faf3",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "87f16b14-0b92-4ee2-a9a3-331b0dfca93b"
        },
        "item": {
          "id": "28f22429-ca3c-49b0-a302-23af997bc8c8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f9c8b3b-86b5-4e92-a002-58acb19f2dfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33335885-141b-45fc-ae30-022ce12b6abc",
        "cursor": {
          "ref": "63c2236c-0e75-46ab-90fb-9e1999534907",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8ffb2e3c-63e1-4926-997a-85b69184cb49"
        },
        "item": {
          "id": "33335885-141b-45fc-ae30-022ce12b6abc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "23646757-ebf8-467a-a216-35c7efadf718",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 296,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e254b52-b74f-42cf-87b9-c199dd082640",
        "cursor": {
          "ref": "1ca6f99c-08a8-41e5-9b42-cedead6ee898",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "20072059-73a0-4215-97b0-3b993f09c38e"
        },
        "item": {
          "id": "4e254b52-b74f-42cf-87b9-c199dd082640",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a57427b0-3473-4708-9a72-c86078f132b2",
          "status": "OK",
          "code": 200,
          "responseTime": 389,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "94984a4c-689b-4d1f-a254-1be70f3ec25e",
        "cursor": {
          "ref": "dc605aa7-6143-4b8d-b801-702f104e35da",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f366e351-b97d-4c30-9a56-87265e7c5a6a"
        },
        "item": {
          "id": "94984a4c-689b-4d1f-a254-1be70f3ec25e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dffd8f10-2766-4c05-96aa-2c5e148f4bec",
          "status": "OK",
          "code": 200,
          "responseTime": 3644,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d65e01-349f-4b77-a1c1-ff8acb859cd8",
        "cursor": {
          "ref": "539c9341-6c02-4a41-994f-bbc6a4aa5e01",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "122fd8f0-494f-478d-b9c8-9d21e4a35b0c"
        },
        "item": {
          "id": "18d65e01-349f-4b77-a1c1-ff8acb859cd8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "759aec04-3811-4fd8-9f1e-06f9bd212773",
          "status": "OK",
          "code": 200,
          "responseTime": 3706,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
        "cursor": {
          "ref": "378a66e9-1d40-4821-84f8-da25fed45b59",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "430ba399-57f0-4a03-a706-95eb17f3d8eb"
        },
        "item": {
          "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "852e4e9c-d6f4-4c5f-b44a-e5f8155e132c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
        "cursor": {
          "ref": "378a66e9-1d40-4821-84f8-da25fed45b59",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "430ba399-57f0-4a03-a706-95eb17f3d8eb"
        },
        "item": {
          "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "852e4e9c-d6f4-4c5f-b44a-e5f8155e132c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
        "cursor": {
          "ref": "378a66e9-1d40-4821-84f8-da25fed45b59",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "430ba399-57f0-4a03-a706-95eb17f3d8eb"
        },
        "item": {
          "id": "b2c02ad7-92cb-44ce-ab60-3349793b7d83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "852e4e9c-d6f4-4c5f-b44a-e5f8155e132c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6409bfcd-4578-4471-bd86-a9d51ae19bef",
        "cursor": {
          "ref": "cabd9ec1-cf4f-438d-8f03-f54d7580e2ec",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ffb3b83-c517-400b-8c29-b2f1cd025fb0"
        },
        "item": {
          "id": "6409bfcd-4578-4471-bd86-a9d51ae19bef",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4d3d3db1-df27-498b-a780-589d6b9a5ce6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f8dd62-921f-4095-b9ad-b7af3ffcb05b",
        "cursor": {
          "ref": "9f70ba96-1eef-4f25-9a59-ac50302cd32d",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5737571b-de86-4b40-b2fd-ede31dd05c2d"
        },
        "item": {
          "id": "08f8dd62-921f-4095-b9ad-b7af3ffcb05b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58ab7475-b8a3-4559-90a3-c2e91bc3f7b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f8dd62-921f-4095-b9ad-b7af3ffcb05b",
        "cursor": {
          "ref": "9f70ba96-1eef-4f25-9a59-ac50302cd32d",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5737571b-de86-4b40-b2fd-ede31dd05c2d"
        },
        "item": {
          "id": "08f8dd62-921f-4095-b9ad-b7af3ffcb05b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58ab7475-b8a3-4559-90a3-c2e91bc3f7b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed24789-5829-487d-862c-3ebb5456ba26",
        "cursor": {
          "ref": "0cd23d09-0921-44c3-86c8-262859874154",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b2e9f93a-e0d5-4ae7-9180-00888d39aa82"
        },
        "item": {
          "id": "6ed24789-5829-487d-862c-3ebb5456ba26",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3bcb6f09-0a68-444f-949e-cee800dd9d7d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9781b877-579f-43c3-aa2e-2ce528708cf1",
        "cursor": {
          "ref": "f7b9188c-1a4d-42fc-800f-28cce0ab4d64",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "712cad82-f1d5-4e3d-807d-2d1ca7eb830b"
        },
        "item": {
          "id": "9781b877-579f-43c3-aa2e-2ce528708cf1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f538e8f1-21bc-4d3a-abc4-a309b4b4ea02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9781b877-579f-43c3-aa2e-2ce528708cf1",
        "cursor": {
          "ref": "f7b9188c-1a4d-42fc-800f-28cce0ab4d64",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "712cad82-f1d5-4e3d-807d-2d1ca7eb830b"
        },
        "item": {
          "id": "9781b877-579f-43c3-aa2e-2ce528708cf1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f538e8f1-21bc-4d3a-abc4-a309b4b4ea02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23297e96-c473-4656-8ed8-3a3771e174eb",
        "cursor": {
          "ref": "6cbb5283-5102-4859-be6d-712787593a29",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "878fc4e8-8fd6-4957-b428-976f5a141c85"
        },
        "item": {
          "id": "23297e96-c473-4656-8ed8-3a3771e174eb",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7abeac34-4dac-4a5d-906b-2706eea1d637",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 695,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}