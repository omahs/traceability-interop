{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3a8b1beb-3f7c-4d55-9ef6-f5c2c46b340d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ab666ca-ca7f-4fc3-ba55-1c4e95cfa676",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca797c19-a6aa-405e-a23b-d0be38ae04ba",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4108c9d-502b-4d2e-bcff-eeef1ae3add6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ae3d17e-5472-4b7b-9d5f-633549fc8200"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "e722f0cb-e57a-4d1d-a42f-629bc15b0647",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6caaa1f5-aa2e-4bb8-9544-8a7fbbff6c4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e088cd0-d9dc-4dc3-a914-a4f4addfd37a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79e046b6-fbb7-400c-ba37-7f9ad07a1106",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a9462-7428-4d9e-9e42-d8795e5681d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31472ba3-0068-4f19-a3b2-ffd4ca4f07ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5816d3b0-b37b-4973-b9df-7ccfab16884a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2852a449-25a9-4206-91d4-0bf863ce5d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "230195eb-403c-4edd-a329-910f29780cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0677c6c-2304-4920-a0f7-42cc96e8a084",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e4ecad-c01c-4209-9ab8-1f3e8497ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eea35eae-c761-44ca-b49a-89f18b489b8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ad12e2a-f002-4ecd-bc39-f24fb3383a6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28350c97-c5dc-4c3d-821c-8544a1e20d7b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418547e2-5c06-4ec9-8939-4cb27545460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65ce2d91-6a87-42af-a76c-e8e7eaded05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf13a2e-1534-4685-9dfb-4baef506a661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00aaa40-397c-4f50-9d55-dc542c601f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed4f5e1-bade-4a91-99d4-07034aef8156",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04fb001-ee54-4dcc-8f9b-0541d6de52d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "175455b4-f444-4d8d-99e3-05030b09f29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265684fa-2412-42be-9ff2-de0fe461ae90",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "20537108-4f10-4134-ba3e-84405aa3d05a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c2b0fbe-2060-4941-9e4b-97cdf572b7d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a48b6a9e-7492-4ca9-8faf-310de0ade13e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c67383f4-aefc-4872-b7c5-4e95c59c896c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ec6a6504-f13e-45b0-b6a5-57eb70a1e3c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "985fedfe-4be1-4e02-914b-10e8bf7efb7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "7defef9a-a1f4-4590-b716-ce7c0f79cc31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ddd504-baba-4379-8fd0-ba6b8ee814ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c01ca1df-01dd-4a62-935d-00e3d675af6c"
            }
          }
        ]
      },
      {
        "id": "2058ffb8-ea67-4771-ae25-c02fb8fd964a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5b4430f4-f45b-4c0f-8a76-76c86696a0f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65a4d6b9-f58e-42bc-ae9f-7bbcf0fa9fbf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5167e84b-234e-4a12-8152-2d3277433c53",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895f9a93-12e6-4282-8c1d-ec289f3a4426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4daf30fd-9d6a-45b8-b81d-0eb2d16adc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb1d086-1e01-4cce-8e82-03fbb190f73f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52752c3a-92a7-4a03-bfd0-fb47bb74bdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f98e595-d375-45ac-ab0b-080722b8b6a8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf15b05-1fdd-4777-86a3-30e9dfcc681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dee3cfc-818a-47ff-b8bd-406d6af5efdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ebd5f1-f905-4605-a273-1dcc79b24a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5a9337-1cbc-46b8-9fb3-ab3c2c564952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda2236d-731c-415f-b7d3-2a974d46d406",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c3cf97-d6bd-4147-941a-e34525e10467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c6386-1af8-4564-b631-ecb862947b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd90bca-a90d-43aa-9775-0ee076dbbcb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b55e015-7868-43b4-9fdf-89001ccd0714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7930ece5-54cd-4b0f-a0e2-11e33a0033dd",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f53b282-e674-4da0-9f3e-ac92bd95e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a7c150-6072-4c76-be8c-e7f40b147068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb62b0e-f65f-4c33-932e-3bdda2c332d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccdcfc75-8798-4abc-9571-074bd69c20fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebc3698-41ec-4a9e-8179-77db0fe4c07f",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6c4861-1230-4b41-9d43-aab45afe0000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821433ff-147a-4161-800c-f6678907229d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10086ba7-c41d-4b9b-89be-a5b9b8ddae2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5cb89ec-fd1f-4838-902f-f20ae33bcac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318aea83-5930-4249-b0a0-ef2ed25d9623",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb89457-55ad-4049-879f-7c4010dff25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a66348-dd03-4f5e-9069-3146249705f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab61ebfe-ae17-4ea5-9bdd-71b03c39ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb0d56c-61eb-42f2-b71f-c9bd5a710330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd015abd-c825-42a7-af63-a41c8f2c6cdb",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c049105a-eb34-4982-bf29-d9acdc3cb67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060b0fd5-a034-4a27-9d7c-eb3ddc8a2e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bc29fb-8373-42cd-a478-b7f5ed170362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb0025c-0467-4b93-8952-3d16a21c9811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6448b06-cfbc-4696-945e-43546e84e80d",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9382474b-3773-4bd2-914a-9ef4fcc557a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26da0cb-11f8-4ca5-8693-18266cc43d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485afd1b-fe51-4902-beea-fd5a11a27da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e61bb4-83de-4d44-97b1-b0b1447ad459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c981fba7-8420-4a5a-b607-0e9ee51d2fe2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d11661-b0d8-4c5e-97a4-47cccde4f6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c32cb1-9b2d-4ea1-81f6-717a0e1f190f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67692e2e-621b-4f8b-8f74-87ac75e1169d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9d44b6-e449-4562-b0f7-6309999c7562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f84efe-8010-4699-a282-1b2692062974",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47db2d07-3837-4208-a763-419f0d7944fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5910cc-013e-4371-8e46-b64f8ddb69fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a340b7-1247-48f2-86ae-951a85857bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2baa150e-1dcc-4cb4-ba9a-08f8f858529f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a576b8-ef31-452d-a128-13a067c4274e",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cbe168-c67f-4af2-9d9c-e69674794bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fd5e2f-a4d7-40f5-aaf3-78c06230cb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de45e0e-fb56-4615-8682-8923a89263b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "b916e214-a865-4756-9b8d-60068479d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5a41bc-4307-496f-8e49-c40c30b4ddc4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b5387d-079e-43cc-80af-4d1d2f3cd94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cabedf0-e4ca-4fb0-8f3f-a10619e3af3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9436d320-c373-4c13-afd9-dfac7cb22b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7c427dc5-3bc5-4eba-8c18-39f0f48ccb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6619011a-6020-46da-9b02-aa31b764c8e1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fa001c-ba75-481f-87a5-8529c6d1f4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5b84cf-76fc-4243-8361-998664e1d3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef0fc6d-504d-48cd-a657-be080a1ff665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586aff8b-09e5-4645-96c5-40b5c5c5af74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6a1095-ed8d-4bbe-a09e-e5220ce0c3a5",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3844d67f-ff06-4a3a-b3da-ed4251f06a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69574f81-ead5-4e5e-91a2-923da8f57c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680ed508-8214-4df0-9647-8f051c048781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013449ae-51e1-47db-b2c1-43fea6ebbf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8f7a18-b879-45ae-8632-d871a86c9d78",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d53354-641f-448d-b5dc-c73e551d0479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03730b12-37dc-46cf-85ad-8b0a3e912587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f9c938-48de-4500-b530-c9ebc4ee6832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "a8a7227d-9616-4d89-a74e-338e42c433d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7625a961-33e3-4a29-b4df-d872a6dec6c7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6402b3bd-e746-446d-a010-298613272723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea72509-9c44-4b3d-932a-d4f6b11e4406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b803c2-79ec-4a75-9fd3-22d2296b254f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "efc8e178-b2b9-45a2-8225-c0882199c56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26056527-8e5e-4142-80f3-4915bca9acb4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5411e8-4f1b-4753-98d3-347faea80428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88a5e9c-d9dd-4399-b755-e583a8d68852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc6b420-30d1-4193-8f8a-afc5a0db0d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6102cfae-6bb9-4ae6-8ce2-80aa68b83d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db25271c-6684-4a63-ac02-77cc1ea9b6ff",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c1f598-c677-425d-98be-ba21127c272b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dab0123-b891-42ae-9d41-41ab35e448ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c8123-6e80-4ae8-b5fc-43067bbcaed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297e5112-82a1-4874-8bd3-667053a6419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eab1cda-4280-48cc-b4d4-9d2b947598a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b933e1-01c7-43e5-96e0-207c190e198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ab92a9-5d56-4eb9-b2ab-671a13740509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854085c-993d-4175-9a31-635a122b596b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05c0490-fb72-4294-8fdd-69064896ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa533d2-9a45-4a9a-9083-82694d7d3ed5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64829bad-475b-4429-9e10-f22fe8416ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d779a8a3-2261-424c-90ef-a3862c36495e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a908c8-8703-43f2-8b61-bcc13022de1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c7a5fd-4e45-48ad-bd11-1fb458e17646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2c8021-211d-4a19-b53a-22a15ee0303a",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211cb48f-d9d3-4387-9945-cb21bf3b376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf07514-6691-48c9-89a5-094309e3449d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cec9db-d2aa-4b69-be44-4a1fbc6d4e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803f2f80-ce16-4422-b20e-835b98a9378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75a0a81-7516-4aea-8478-42a0e379bd14",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc2a41c-edfb-45d8-b49b-a44d882a1c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac3fbec-a840-475f-b2c9-314b3ba7f97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fa8d22-edb2-4b64-b48d-46982aa6d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad23e6c-7c51-43e3-9532-4f3010e2429d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510a4702-b124-4ac3-b3a7-e83c631efb0e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c15ae98-37eb-4cd2-b028-12ed766f1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ab2f7c-7140-45df-bb51-358f6f1e5dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd7bb23-9564-4f51-a249-b2e85b4de3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a7119b-f0b2-4924-ab14-df44fecee61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f083f6f2-2470-419d-9fb2-3fba8ebdbca4",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b73419b-bb35-4401-9108-be82429134fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3146e56-000e-4d7a-8deb-adf5b49684ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa65b44-b2bc-42fa-9e75-6509be8216e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e118b41f-fc84-464a-83fd-14308b4e12d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f7d211-15ef-4e48-b004-542bd4cf2549",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be664708-7417-4ae1-95f7-a067f12cff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bb2b0b-2e4e-4b83-a9a5-20e6d9f3fb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661ed85b-0a4f-4f16-ba28-642d594895e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef6864f-b0c4-4cf0-928c-9b59ae78ffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eb59ff-748b-4e4f-a9b6-3ef98bd744e4",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd160f33-a164-4bbd-8bb3-67c0dd3d1030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f37dbe0-37b9-4a8f-a9be-f99e089c30ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8799b254-eb66-48c7-99bd-aa28c9ae4884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331a5b4d-2174-4b61-8c5b-8a1abf67b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36c2dd1-4012-4e27-9533-5bba14dafffc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7a4ff6-567d-4165-9120-78b6de8b56dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268770d5-bd4f-42c9-858e-32f92f920768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc657b9-6ddb-4b11-9a0f-8ee5a9d73f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719919ce-06b9-4a30-ba13-42af2305dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027072e6-59e2-4f19-a0f4-bee9724674b2",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8582b367-8ba2-48aa-be6e-501317701fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f517cad-52ad-49f9-bfd9-af8a7f16aeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe9c814-6965-4918-9cd3-a18e0dc1c84e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ffff5e-706a-4ff6-9bfe-fec513e02e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2225fbb5-3c09-4134-bbcf-2289662db6de",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6140843d-0c3c-4cc2-b35b-21278c16db9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec25e34-fe1f-48c8-a95b-a4397c5318ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9db6a6-098a-4826-ba54-18cac3993d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1d1911-55ba-48f8-8826-0de7485d09cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec73c23b-6ad6-4807-886c-ce386cd85654",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b2e713-d91e-4ce8-88fe-b5adacdb2f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1483be-7fb8-4b0c-8a6d-4639ed4864e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278e96b0-c30e-45d6-85db-c92e981d64fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f940dea7-977c-475b-8867-74c3f4a795a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77d3a64-2c7d-442b-80b8-d378885ad6b5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d823bef-f8dc-452a-895c-6fd8df266424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44262814-2189-43b0-8c20-4cab47ac0d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4965ef-149d-4427-ba24-049607521c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "589804f0-03c8-4202-9264-2c57136dcfdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d92712b-34c5-4569-abeb-e4185d15ac32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e08ed0c2-83c9-43a6-9ba1-cf5b03eb4cdc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94174ea3-200d-4c54-a8b2-998ff1a12ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3a024dc-41db-4c71-b4c0-f6f6edf23644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ac891b-97f5-4a79-954a-f2560ae83075",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3fec3106-5bcc-4d04-98d2-fee4f96f679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b74ca1-c714-4e97-b38e-8f00f9b98330",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2cc61d-6d8b-4380-85c3-d1d3e4192a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b0738b0-2bc1-4328-9116-3bdf4d19ee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d48e8d3-22ec-4da6-b882-d34c9f2fa82e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4f88c510-c031-4d83-bd35-d7f6db4eb46c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8588b96f-a30f-4645-9079-74484cc14bb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "896bff92-98a7-4754-b9b7-f53269a2c7d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc0580b7-c54b-49af-8893-c6ea66b80a16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "340cfdfe-155e-4543-9935-0ad1862d1dc1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf569296-1a79-44e5-8670-306b5bfaf9d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28651d24-5705-4089-9e71-1fd8ea2f93d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9035f955-2c45-4445-a296-d0d4060bf1d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7cc9fbf-0b1a-4844-870e-a9d3f05cde27"
                }
              }
            ]
          },
          {
            "id": "cadc89fd-f3e9-47ab-9436-2ba416d5dd3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03da21a4-4fda-47cd-8677-4f478ee3b6f1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ce4f700-51f4-46fe-a008-5ba5236476f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96a7084b-9efb-4d0d-8298-d8293aba7d48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d764882-24f1-49e3-9f1b-06f1c1504c14",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "0fe69f17-eb2f-46e8-8667-cbec8111f6eb"
                    }
                  }
                ]
              },
              {
                "id": "004becfe-f74a-4249-9e1f-3a8fbb796ed8",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f5c5209-f7e8-410a-bf52-4f504d82e8a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9458dff8-c174-4fb6-8f13-0ec817ccf1cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cbaa2b8-2b75-49b8-99df-b19d5c823a87",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "4a6e68a9-41ce-421e-89db-ec986775f044"
                    }
                  }
                ]
              },
              {
                "id": "4e2157e1-8268-4639-a5d7-764e504cbbb0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e934a9f-4045-4370-a46e-b72f6eecec45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06da436e-329c-4b59-8d87-f2a953ae14b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5417fcb8-bbdb-4582-ad59-8491f9ef050c",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f18563e6-7b6c-48cf-ba78-b953ea67e5b5"
                    }
                  }
                ]
              },
              {
                "id": "6222c78e-a42d-4aed-a266-be08de15a7f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f21557-12eb-4e3b-ac27-1bbea77efcec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a652fb81-3f08-4119-af8b-ebf90e0bfaf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05095aec-eb6f-42f2-8a2c-de8476d07484",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "0ea7deaf-db65-4ed3-a056-b5a6996408e5"
                    }
                  }
                ]
              },
              {
                "id": "0de7c107-a426-43fc-99b0-a93b89cbfc63",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7263bb7f-9bd0-4b08-af44-f5e23b6065bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea877679-14b3-4d78-9a50-8d8c0f7dad9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbf16a16-2bf3-436f-a142-bdb2807ad0f1",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d8aa912e-8e91-4339-9e81-a27d5b9b14fa"
                    }
                  }
                ]
              },
              {
                "id": "fe5978f3-38e8-4616-ba69-3d16d2a93aad",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99715654-9638-4371-8bbf-8a239dd2065d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4806f72-bbb6-4a18-8b69-61329a90b279"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f41be22b-d082-4b15-8f91-287d396706ee",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "727e4abd-c3e8-454e-bf85-60161aec2c44"
                    }
                  }
                ]
              },
              {
                "id": "d62e1c4e-4606-4cf2-989c-9b453f8c93ac",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "694704c3-477e-4178-8761-7d8c4686439f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5caf3d7d-aa9b-437b-b626-44d4b76ba523"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d3f9a3a-ecef-4961-b639-82eb2312efbe",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "1debd2c3-c462-4074-8c51-b6f4076c2caa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c22e7421-a7ea-419d-80a4-8dc805035e82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22e6dfc9-4274-4a08-83da-327ff7f3816f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07e623bb-b7b4-4a3e-a1f8-0b77e67dc33c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ffe0f48-b129-495e-8a74-5453c35cb7b6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f033bbb-305d-4e5a-b4ec-b4b571a7f4fb",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "64d7ee64-42d6-4ad8-9566-d893e3d8bab2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d31fe239-5719-4886-8ca5-23835bc72313",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67c7ba49-1b26-4643-aec9-e156bcde9e06"
            }
          }
        ]
      },
      {
        "id": "0ee5424f-34fb-4163-a2fd-386bd1a123ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0615b168-945c-433e-a150-2e7216e8dd6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8267ff4-9b24-4e49-90ce-1ec50cd42449",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f5720c3-d8de-48d5-8c38-b117c50059b8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbaddc5-590b-47ff-a5df-8d21cbf427be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c4e680-520c-4003-9728-8bf02297046e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f35dd93-9354-403b-bf8a-f1ee266df3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de89f86c-2dc5-4e0d-8353-e3416f2c57a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b3ddc2-251c-4b9a-8038-583fd2171700",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c57676-8215-4eb7-8dee-cd7d4dca152b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "65e2c69c-67d8-4e0b-8006-67681c694edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a9dd7d-4803-4c15-9f22-4f7e4b8a6abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f207aec-0d43-494c-bd99-8b1ba43bc2f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d286033-2b9d-4ee8-912a-6ab79b6b34d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a55aa62c-cd5c-4d23-8701-ad292db7b5d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eabc1455-cdbe-4dcd-930c-daf7c13ec4dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3de3365-67e2-430e-a9cb-66ae5ddd6f59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "098eed5f-c92b-4e03-aa8a-5907b7227704",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "31e69db8-b8b5-475e-9866-93430816fb25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38e8d973-bce3-48a5-9e5b-f26d17336231",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2e7e61e-1d17-4a3b-8471-18999ae76f16"
            }
          }
        ]
      },
      {
        "id": "20854abb-332d-4b15-880e-4072de41851e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "71d351ba-3918-493c-af63-d9997f8eedf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d05d772e-9735-4f7a-9d0b-2f5e570bc75d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f924b6bd-4d1d-41f4-b5a6-30a4f3c1f6ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d65a58-feb7-4cd9-a025-eb9dfb1f87b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc0b1a7-09c9-450b-bc98-7d577d64c0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31aca1c-b0ab-4a86-bdad-477f38fba149",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f55186-84f8-4d6e-bd32-673c9dd4be8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed2cb81-8b3f-435a-bd4b-ff15cfaee91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9c2b52-f138-4d6f-9c3b-6c2ab3ebfb28",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79296f9-6ea2-4b0e-8af9-3bb3a2e25f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c55fd5-6dfe-4a67-9671-69a250a012ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaee79e-41f0-46af-8cdb-e520ff26f216",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841ab543-9a7b-4acc-98df-48f452e92a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8493500-32c9-49c0-9f70-a13a73088964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad543809-bbf2-41eb-8fd5-368dd700dc13",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aacf31f-c8a4-468d-86aa-96ca43152d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41f78f5-ff84-4cee-812d-704025d5bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e196458-6645-49fd-a297-d636c48c34a1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fc20df-b778-45e9-b62b-167ffd9dfae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecf8b1e-99a3-4894-adeb-4dde365475a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80251aff-0c0a-4f20-a4df-db5a8d96431c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd9a065-3afa-478a-8bce-af6e66a1fb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7de5b41-9eea-42aa-8f9f-e74bf21085af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea28459b-f2f6-4e75-b599-902e324f20f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec14e0b-ec86-4cba-a3c2-98363c5e0c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612228cb-436e-4db3-82cd-18c6b6d7ee2a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc60592-af80-4e1d-9fa1-a72c40ffc3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecef3cf-74c2-42df-a07c-a80b5d5c0a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c048e8e6-84a3-4323-9aa9-129c2281dcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47052e9e-e5b7-4dd4-afc3-1fa26ffbfa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62538c6-9ab8-4228-b836-113994082b3f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1668b1-bf38-4411-a34e-a45747c78538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae46c76f-6973-470e-b082-398a55ca77c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25e8c83-3180-42af-babe-ca612c29515b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242b209d-a750-4ce0-98fd-44701efd6e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15b993e-30a4-41ae-929a-8299f9054189",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a4910a-bf4b-4812-9f36-f0e174c7515e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd034bd-da9f-45ed-b719-bf8869086755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b276073-3dec-4716-984a-6899fdf2dbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e7c3cf-24ca-46cc-8496-ca361b276d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a4d581-d2a1-443a-8ad0-eb9e81150e76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85698b43-c04a-4747-a453-1c0fa1a53f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d271495-b785-4b9f-8589-4160b16c704e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cf0c2b-bd30-401b-95cb-bd0fb622ccd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e3671d-5f69-4172-bcdb-57a0504d41ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111d75ab-e8f8-4f18-b34f-51b0d789e4dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832719b9-d9a5-41d2-9056-943dc2c7d114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2482f581-c469-4938-b696-92112300ece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf051e5-6539-4ccb-87d3-a707b0215231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d172a55e-a142-403d-85ea-31954d0f3bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0001e3-c65a-41e8-ad46-f88c7645a429",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a4a70c-f289-4091-ba1b-2dd298e98ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cceaf9bd-6b8e-4d57-af11-97657ef5499d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728d3ec6-6212-4cd1-893f-f147607754dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5d9c23-034d-46e7-8e8e-09e5fb416def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20cba31-5f54-421a-bcd5-0942b42ae30b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a275cdc5-4636-4a7c-a617-03f068a13582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c425ba8c-b641-47d3-8226-444b153a763b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e39c66-5cf5-4488-b43d-1d2951f7c860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a9bc3f-ec70-42ea-8715-1b5f0abbe43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6c6be-b81a-45ac-a767-4efc47a5922a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd772538-f660-4d6f-9453-1e39eede37dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa83a808-8b99-4b81-9425-17de5aa60ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cf620d-5f33-4c62-b1fe-3445b2762fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a8dd7b-1318-4128-ae62-5dd5b8f982ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fee68a-87b9-4b6a-8130-3932b85ff312",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ecaa6-55e6-404c-97ca-e52dad6c3ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f87f9b9-ef45-44e1-9eae-f7ed4a67fab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4a638e-b0b8-4bd9-836c-570261c01c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65d266f-1316-4ddb-aa32-a5a79ecd3bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdca424c-72bb-468b-b24d-1994e390187b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d3feef-0c55-4759-8346-18f483746517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed6c6d7-f0f1-4276-a1d1-cc80e7305d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca647411-7257-465f-b499-10d78eecdb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9ec7bd-e52e-4be4-85a2-9fe61aa9dba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a37af8-803d-42a0-a7e5-0d6a0801d20e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53da6a2-6a7b-4e9b-8def-3b14fa64f360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e88187-085b-498e-a1b7-dde1cc66d641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75318c1-c8ae-41c7-b14e-d41624f2b69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950b715f-f339-4400-b12e-ee5af87d5479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83447f85-0801-48c6-9f94-799d9c600f09",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6128561-1adb-4333-8ca5-9cf2927599a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e4661a-8cf9-487d-8ffa-5b213b09d383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efc31e8-f6b8-4190-b3c9-c7250ed2951c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d661ff29-2006-45a2-9402-cfa7e05e8fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6430677-d4b4-40ee-ad3b-94920d3cd712",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6087d2ff-df97-4b0f-b2f0-a727efd5dd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a29517f-e5c7-4bac-8d00-44d04d74802c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089ca5b7-8673-44a5-bf7d-f7d5965db600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3519e967-0f00-44fe-a158-8b246569609b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaec69df-c311-4761-969d-22fb43f10069",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516fb796-bc7f-4731-b4bb-fe655af03fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ab5d99-9018-4cd0-a7cb-af5ebee1ced3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecc52ad-fbfc-4abf-bc76-eb86d844cb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb7a6f4-b75d-487b-901c-6cbf8c31d6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f6b429-4b22-403b-8faf-d8367f2f5224",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eb2ab8-3355-4bbb-8a6a-91f7d10ef87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0692a72e-942f-4ae8-9c27-34f59a6a8bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5888c71f-8463-48cc-9f1d-11cebe1dd6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd3547f-7baa-4782-b18c-2b15de94002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a09592-4d4f-4416-b44f-c7b64919d4b1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138864cc-745d-4487-b4e1-3a7acedb8c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d24c1c4-1576-43f3-a9c3-fcfbbedc940c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d0a26-f7db-449f-9784-c1110ca60388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8eded83-f63e-4c6d-8320-10317ed5d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e5226d-8317-4a0f-8dc9-9d2bfd15edc4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0deb3e2-3d4a-4145-8873-bfd77bd16a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b45f443-7b4c-4b38-a91e-aaab53b4be4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b08bff-5d3a-4209-9d99-08149785f42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654cadda-e4b8-481c-9129-7d3b4d6d2e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39d9e7f-2ad4-4f43-b1e1-be556a9dd093",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4fed85-bf5a-48a5-8f5c-2f09fe874a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4899ea-d9e7-4da3-9fee-1ddd8e9e15d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97431e03-c7e9-4112-b72e-e0fce30404af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c050a8e3-24cf-4048-ab91-3dc0c3b64725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59da7a2d-054d-4c8b-ae9b-21c774f38783",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5f5306-f31e-44d3-9b7f-4431b8d31e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee8d383b-1274-4b99-b08e-2f59d40b6f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8694c2c7-343d-4ab3-8159-af5107004a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57984d4-4bc0-43a8-aa19-8684ac8f05b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9198e244-9b6e-4564-ab18-a4767e404313",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba1521-55bb-464b-b413-e27bb79b62db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7dd88f-da27-4c7f-af1f-1c33537ee470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6934b3-be07-4901-a2d6-d7f256b716cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e21dd7-521a-4d52-8d79-5fbe423496d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4189e218-31ba-4f2b-8bd6-28d6076a57a5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb801df3-0fd4-47e1-8aa6-6358a3da6336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2d65d8-86a4-4d24-83dd-c5e2469bee66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122e07e5-d8a6-4c70-a4c1-42e5585e02b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28b2b41-05e3-458e-8ad9-00802561a4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9fa888-f353-49bf-88fb-5afd05450025",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df277089-e800-4110-9786-76821f90acaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af82d41-b105-4124-a56f-e45f41b27dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e84fa62-e907-4a85-b902-78106ed83bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabcb15b-704b-4c40-95fc-15289d615db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa69f955-3ba4-449e-af1f-d4d23b815a24",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ae41ce-8b71-4429-a6bc-62e3e8090ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bd8c8f-01fb-4edc-abae-f884dd2b187b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fd542f-9471-4be2-8774-ec40a489b31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4220a3f9-1623-43f7-8384-dcca743c7aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa68cd5d-9c4a-4902-82b7-f2b9312c1c4d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc8773b-7071-40c8-8ad7-7edbe9e11264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c640a2e9-29d4-4405-9696-73f09359151b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3e561c-16b1-4786-ab1b-d611839d5398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5b297a-1986-4873-a054-9d78dc318683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7a3bb1-a772-4be3-972a-2922be12420e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8580d239-ba40-4fca-a22b-76dfbc31672f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c45988-471d-4648-8708-6bbc9d4f8019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa259870-a85c-467f-a8c3-cea625437137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e176f0-c45a-4a97-88af-3eb780995912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cdac35-15e1-42e8-ba5c-ea0699ce4bc3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755bf9e-83e4-44a1-9365-dd8238f45bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e39c85c-143c-4bc5-950c-e7eaa77ec175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3df004-97a9-4448-b58e-1d7fcaf8ceba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9651785-e5e1-40cb-bf0a-2b30f41d7906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335edad7-b2a7-4aa0-af6d-1f6cd38e0ba3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd79a305-cf35-419c-b7ca-71bd7322d7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380185ac-0533-4eb7-ab7e-7fe3d3f027e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb055332-0cd0-439b-99a3-5ec71eb6629b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da5fe78-1d09-4d6f-b2b7-68e0316a3367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81692a65-4f91-43e1-843f-7ec7bc00128a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e98348-097e-44e6-b24a-f6c0b2bb5364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0c1263-6f91-4f85-847a-f0eabec7ed71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d360a66-eed2-4fc4-afff-e5477bdf170e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c3c313-4a7b-4e07-80e1-77aeea9af9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17efedc1-41b6-4006-8392-fb313ebfb6fa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91154e7-7c6f-4b58-b951-026ca45f1aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9246f69-97c4-4510-a5c3-eeb9dbab464c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97977d46-4ad4-4c2f-813d-0d3fdaecf303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14d0986-f7dc-40ed-bafe-c69001f99720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2a586e-54b4-4357-88c9-642b0a1974e3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edb06d1-43ff-4a9d-b708-7937d7517fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbbeafb-fdc8-4e05-96c9-7ed67c68388d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9459a36-1d0e-46c3-bd7a-c0a4dd0e8143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260675ca-fa6f-4946-9a63-aba1a1bfe55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd918cc2-d8a9-4b87-91b5-f945d8e67acb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c912f4-7478-4840-b90f-bba06d7ca0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0dec961-7ee8-49dd-8092-835c0c7a2110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3d8fd-458f-43d8-8186-5ef8c6b29d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57342ae4-e136-4218-9c68-fb4c8c55ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04097c32-7d83-430d-817e-adf2d0281af0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd68fe67-5c0a-4b8f-8aa1-e6b93786bcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b88c7e1-8407-4916-a052-ba9fa7452b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baff774a-e46d-4bf9-9d99-114ed5f99e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc07638-87fd-4c4b-8bb8-7930b10a69c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45308667-1279-4f48-a0c7-f4169f4209bf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cfeb5c-51f2-490d-b342-e7660ea87f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ee06c9-2da6-4187-a245-f7c3bd6a09b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6061ac2-415b-498f-b7ab-24e0ec86a166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d3554f-2509-4caa-8151-c1295a53e196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dcafdd-d2ff-4880-8992-0f579b49faec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbc492b-63be-489a-838a-3e54e13a0a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f201b2-9722-488c-94a5-fa7d6bd01e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee7f90d-c811-4687-9d80-d961a17e28bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a44207-71c5-482b-ae0e-92725aff7506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864d8434-751a-43eb-be8a-bd42778c82af",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d66fe2-4a7c-4502-841a-def8c086f992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c47bb8-1395-4493-804e-12695985c2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea38db0-e0c0-4c06-b89d-25d48611dc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bb2523-c881-433a-820e-94bf77bba64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f8b53f-b505-43e0-9dbf-54d854a92918",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9796674c-94f4-4ad9-88dd-93d7e68160a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37e062c-4a73-4a6b-92f4-e5ccb1e697d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26b9707-536b-4aed-b53f-a25f82854167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb3eeb0-d3d3-43a9-8efa-933295a72019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ab230-0f7b-4d51-9f55-7afc4f699db5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7b789b-4ada-4e9d-a052-3315c7bec863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540f650c-d953-4865-afc5-51242026102c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad3fcf1-38f4-4771-be38-0368fc9f9ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52256a9f-f54a-4988-a7a0-35dbcfd5f6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d279fa39-1524-4107-9fde-b5d3d3b8a71f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0290a1-fa6a-4f16-a3cf-27c096c9f9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcf894a-5e4d-4a5c-a631-45f5212c3119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae09fb-7088-4f74-87fd-47e46af51264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf7d451-0107-45cd-9abf-a394709ee803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f621a-aac0-41e7-85c3-6a7b3f8ab255",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9e473e-e456-424a-aa12-2c556334d22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c497ab-f141-4287-aa7b-4c1dcc0f79b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986f9804-474f-483e-97cf-ab8199c3f0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d779c069-99a3-47e3-bec7-e33e22e25612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e50f25-aa40-4578-adc0-27b54aa516bb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b35634b-01a9-40bd-9686-781e66ff0b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280fbc65-4063-4f42-bd5f-d5e9d714a793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7be304-b6a2-4ed7-805e-605f749a4bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64de650b-af6c-4e93-8c2a-a7f183249540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70f00d0-2a3d-4b7b-a76c-d8f1883f9c9b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cfbb04-04f4-4340-b590-12411e89282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960b1b3f-cbf5-4699-af04-ad7b64d6298f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3d3800-faa4-4ba4-8ee2-9d7f07f04881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fc70b0-f800-456a-826a-f1a1043c04d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b344d61f-1d5a-42cf-9e5a-61452a3c0bbe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e964a9-ef86-4eb1-b5da-f6bb04ec05fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79f2841-0200-4af6-be74-2c42d773bc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8694a99-198d-445e-8267-a013bcf6f645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d244ed2-4c13-4873-bc4d-ee1e5b221768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e34f7f-0ea6-4c90-a7d0-1ab7b35cbd8a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8209eb4a-57da-4edc-9884-90c7ea85178d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52605b92-535d-4dd9-9c14-eff8fe12ea49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33d9cda-f1e3-4de3-9938-6882cfc0ba30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad84b03-c51e-4fc0-b809-e1a776af77d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e17ad0e-912a-4307-bfc1-48c1604f3bfc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7757d22-5b36-473f-96bc-5f5c17712ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8870d7b6-6cfc-4596-8c16-8614b0b66dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40600ab5-b1e3-4427-8511-1361f5c1a59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554b4632-7ad3-4dc5-b40f-bc815e507438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f64ed3-b2ee-4971-b478-174952c10975",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6eda6f3-a79e-44a8-ac1c-fd30edb2a61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054da9c6-1c3e-4d72-bbcb-10fb581c4dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264b6923-2751-4154-9b4e-db813104fd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb32c03d-cc06-4ef9-ad8d-d6ba8ac58ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d831491b-6dbe-45aa-86a7-7fc962172657",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981cd52b-f351-4a46-9b85-1e4d2d0dcb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b40cb8-a501-49e6-bd6e-b1eec5cfbcfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b7d389-8912-4d33-9363-8dc62142dd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1e858d-cd87-4ee5-b9cf-2b24c3debd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153e6529-f89a-4a2f-b4df-0b11c374dbe4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843eb45c-fcdc-40a1-9d16-91011133bf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56213c0-cc54-4fa8-ae51-273bb684b0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd30066-5dce-4b97-875c-2403f0b3bab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a3c287-0cec-455e-8cd7-fd59e0747049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7196ab40-3f76-4e57-ba46-cbafe35310b4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a2c7c4-5eff-42aa-b613-d7703018e040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6436f16-9424-4aa8-ba7d-b81174402b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd9d222-7f3e-463a-87ad-c9066b599d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861079c5-cf6f-4173-88f4-0d8c55e0a5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09278b13-4882-488b-85df-73beaf3e9100",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00010b94-6963-44b3-9bab-b8e846644cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563be30f-d4d3-4e73-8408-eed3bc5db30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3adae-1fe6-48ff-bf2e-3f7b8772760b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bd0885-8518-42d8-a73a-bf21c99c5fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b7718-06b5-46e5-bcb7-9e6bd34ea2b7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb1db60-f79e-469d-b36f-1cdc69c8f25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac715a7-417c-4a4f-b000-8774c184ee86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e491d395-bd79-4316-a521-72b80aab2364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87fe61d-4697-4197-8de5-7fa99564860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a7838b-47db-40af-be0b-4e8f7f0c251f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e8e12a-c1a2-4151-a7f1-3250576ccf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a11262-6fa7-41c6-b04a-491f1d80bbae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c00323-e6d0-4ecc-9c72-96cdef1d7837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf96bf0-4781-49b0-9834-b8a3aee07dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701fb40-c207-48a4-8391-d1aacf6b7710",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8328b4-0136-4083-8951-ea40b7e19f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56e8442-995b-47aa-a145-c2021ed78170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f46b822-b3df-408c-b35b-371194ffe9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11533e62-a2cb-41b8-a785-bad66710695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5b529a-d126-44da-b60c-8e2c7db1a76e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c381dc-f2e1-4a89-894e-6758c96831a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874c5792-8b68-4f59-96eb-def3de996b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634b175-7920-46fa-bdda-0cb1403d3afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120ee628-4f4b-4a92-91ca-48d383300077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cd7a8a-4a84-4539-b551-fe0bd18231cb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a069c85d-ddd8-4693-b03e-4d5e4561f3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc119c6f-48f7-4d61-8591-c1ff7c5ebcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1004c4cb-2dac-49b6-8187-adaf3a4cafa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0762ce1-7fa9-4a40-baa2-153c4b950c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67da1d1-4242-4dbc-9093-c4cdb0271db8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89a1978-33b1-43df-9d7f-fc9a649135d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d032b-9662-4296-bcf4-623970eebeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb6aca8-a211-4fa2-95b9-a8d0baebc3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b88746-0fdc-4db8-abfd-13260728d4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c38646-74a0-4db0-94de-228bdfe57b05",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fcc4c6-96d9-4363-b95b-0573ba3f14f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76eead13-eae4-4527-8de6-fbd163016550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e3f91f-0f8d-44b8-974a-e98f59819092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5dd05e-c9ca-46db-af54-8a24e42a217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8afef76-468a-4cfa-bb18-b85f75ad3e6a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9688428-7b0c-40b7-8baa-0c74c102c8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228993b3-4199-42e3-ab4c-46c130eb158e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c08518-1408-470b-8e32-0c326ed11e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe458861-ea3e-49dc-b7e4-b44f97aedb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc19a4-380f-4454-98e9-7434cf2806da",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e446ef4-04c4-48ad-95e7-0fa1b001756b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f9f7ba-6cf2-469d-8d1e-5972db66a15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d528cf-cdaa-45f8-bc72-c1426c3c4631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8833c10a-1952-4c5b-b3d1-91ff1f797d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9786be1f-0a78-4e59-8353-429b406feb0e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b447869b-978d-44be-9881-5a528d6dad62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bc61c5-fe00-449f-9056-312b4f97c37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f555caab-7ce4-4ff2-8a34-101a58153e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00048c7c-fbd2-4013-974f-792c107e7db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd462fd-9ff6-4f40-b00d-0d6a5098092d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37737d8e-2460-4aa5-b9b5-96a548190e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1773034-0b44-4e7c-b51b-b2eba2ded20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f4b97b-8d26-43e3-ab96-4f9079da5663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ae3e3b-ff0d-4ad9-9940-344f4872ad90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d3f546-ecdc-4440-94bd-9f6201e1547f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca0169a-9bfc-4174-bd49-8c5f9ba9af7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faffe95f-a4f1-4386-a6f5-6aebc61870d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c47cdc3-9826-411e-9f5c-2cd3be8ba377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baefbd8b-46ad-4a88-b236-e44fc29c029f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7517bca-41b8-490b-bfba-ad74373ae621",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ebaec8-3f38-4c5d-9f11-69701952902d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e62df2-cc8a-4294-978b-7e7b62915adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e414cf10-ad40-426e-9799-1cec307f35f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388c1958-9ee0-4ee0-bf39-37f6a62072c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38718355-7c8d-49d1-a94f-6afff14ca4e1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3337b97d-03de-417d-b85d-4278f24b547f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37910c9e-513a-4488-81a1-ed1e5b450d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb81af-5306-45f7-bce6-1630b5c371ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015cbdaf-6478-4ed2-8ef6-01de549c81e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f80e6c2-d3c0-4709-9f27-414d5c7dee5e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a227f6-f19b-4cc6-abc2-c70daf8ddb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3fe4a6-a79a-4f99-beff-18c6c95d379b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d90b7a-e037-46c7-bdd8-ad2cf55470c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b57652-3ad7-4fab-86e9-3030a7f04404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb7e5ef-4508-4604-acf3-aea6d10da66e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b293a50-a72b-46f1-a70f-45ba7bedec43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3c3cc8-5bb8-48a3-9ef7-0e799454bdd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f794e5dc-8336-4498-afe2-bd9bdefc24e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1415e55-c7ea-4e90-a125-59f3aaca3cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d4dfd-e1fe-436e-894a-c169e8c4a21a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6476f0ea-4abe-4cae-8db5-5da22c481452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5139a5a6-ddec-4ba5-9c5a-f80d1848ae6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fd2fa5-3206-4dbc-963f-efac98ece825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf3ba13-d0bf-4b3d-932c-c71ff437802f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d375c20e-8e68-4049-b3d4-b4c4b8abd941",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007e6c44-6548-4e38-85ec-db624a679fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "488540f8-c511-47c2-9218-343037288f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb993888-1bac-4736-a950-126d31b22288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1e7109-5ec2-42ff-8119-7682f5e1feb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2df9f18-be39-40c3-9845-8bb0d685e342",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06ffc36-f82a-43ac-8c61-af216b5524e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e011377-9d92-4981-a6ae-5161ae1ece1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b72e45a-5d49-411d-9fa5-18e3512d2a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a38f44-0bb4-4890-a5cc-87cfb93a8618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702b4766-3c83-4665-a205-c127392edf16",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b0ed44-63f2-4b82-a3cd-342e2d7ec88f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa4c8ba-7c46-41ac-81ae-2fd8b4d6c7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd957f7d-7a67-4614-8221-c0f6dfdb0c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4696a469-7c4a-47e6-83cc-6523fe3bf548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf05b97-6e43-44df-bd91-1eba1c7d68b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd24949-276d-44e1-91f5-4ff237cd4c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65aab893-d355-4333-bbfa-1c07943ed11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050afdcd-876d-482f-b5ad-669c13d65c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a828d3f3-407e-40c0-a7d5-f164d3ddfcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5249fb-a26c-4cd0-b593-dc4a6693c9db",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62be01b6-1979-4bba-bc0a-e01c5fd60003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ad7b721-6333-4069-b5ba-6cde952c3996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a99b5e5-f2cd-4e56-869d-5998df8ff2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aa1117-e5f5-4474-94e8-ad379af9d8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22434e98-2e77-4a6c-a116-69276b9644a7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd5205e-6d5c-4a00-bd23-ef3900cf59e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af12ca13-714a-4615-8611-99471d42f965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9934e8e2-299c-40e6-8745-3ab548cdd3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab600063-0e52-4b33-a216-b056883feda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228e3673-bb9b-4d3a-b5e1-d760180ec7c5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598aa5c8-9a42-4442-8b8e-e8b503d6067a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7367132f-4920-40ac-90f5-8dfa6b018303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37431448-489d-491c-9fea-5e458cd6abdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3321d8a0-2c9c-4201-a145-05e7f951dac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3a9bb5-9b0e-4aa7-9cd9-1a8c4f646a62",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826cc7ca-53f4-465c-bf05-82160910bd49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019f9eb1-8efc-4279-a6b9-94a84b5d8ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcfc662-52cf-4167-a598-8c355e7f6513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe7d670-afdf-4052-9166-5a1f59a1ae5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1aee03-29f0-48f7-a02c-6cd0bc4fae24",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b76c49-02da-45bc-9ad5-ffd6ea3c8003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b993d533-ba88-4a6a-bc56-8525a305d520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3973f2-495a-41f2-8214-7c642e93b39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d475e0-f45c-4a30-ac2c-a0247bc74e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327f1c70-09e5-474b-89f8-261715f3c621",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1878e172-530d-4c1f-a696-43bb587fcf5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc95f05-2cf8-44d1-b65e-61bed9d896b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5e2a75-16c6-43a9-8d0a-b4b057b30a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569357e4-9de3-4629-b479-d1ec83da2782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abbf3c8-9626-4e4c-9c02-6e3b360c15d1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb0b73a-1516-4c4d-b748-12276548207a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f926cb1-578f-43f0-853a-b3eefe4e8acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5090369-ffcc-433a-ac89-7ee085d7be9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06205787-6937-46e1-9c07-61fe5a68a511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa816ffb-20c6-4bcf-abac-a623b51f82b8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbd4c88-9ed4-4b6a-9ab3-b7af3313fe25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ad549b-32c0-4d0e-b84c-30da2b670129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912bf547-e303-4f48-851e-c8d73e1deced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6bc582-29ce-43ff-a08e-a0574c853383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e020c17-aa48-4c56-9767-a8945d054c55",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113d6549-6a90-4de1-acf4-bcf485e5bb43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdb6eca-3bf5-46a8-bd6e-f6f6480d6d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d775ce-6269-489d-8c28-4731bc21fd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd8690d-c120-4df0-981d-775a104ed984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0338721-d7f2-41ac-b782-0954bc000e7a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acad8587-7238-4dd8-850e-04b02e772b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f0cfcd-d463-4ac3-ba45-b9ace227fd15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff731dfc-f4fb-4438-8483-525f975ab035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8354392-03b2-489c-ab44-bffb2d5a8a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102ad926-be71-4ae5-9781-4d7e38392f45",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86259da2-7dce-48f8-a4cb-2c12ad26945f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b640f36-ca21-4d2d-85e6-05888915eb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef728c07-1a18-4d5f-bafc-b9c6fc3199e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa1a55d-b253-418c-9c5c-67c83fdaa3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12859417-549f-41f5-a7c6-716bab232113",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d328b5-953f-4afc-ab58-b26dbaaf721b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c8a20e-357b-4c08-aa62-425aa5e3ed50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e19d4fc-9e23-4edf-9afd-c69ba522ac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf182cd-caec-4160-9eda-c7118ad9bdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aa5a1b-eff1-4580-b880-4051f09fc187",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82466eb5-ccce-43b9-a01e-7e85bff80d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af0f81c-b236-4f4f-9132-59bc4302d1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30131f2a-fbe3-46ad-abea-f6526b3294f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b6f2ee-d861-4de4-a41a-b7489ee8f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153ba0c8-ae51-439f-88c0-2f21ca64d9ba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ebcd12-9b90-4f45-8f20-901c4d2d85a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5b2da1-66ac-43c6-a7d5-b281859cf89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dd1fef-9ea0-4c22-b279-3956ba6d04bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bac9d1c-81b8-45e6-907e-1cd626d6e8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd7b256-9fb7-4071-ab1c-2d4e55c40c88",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf4cb44-095b-4146-96e5-329bad18de40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4aa498c-7404-4da8-8586-4481915ca848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bdb070-7dfd-47b5-a2dc-b8b83bc6f5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c92503f-3c93-428b-afed-0a4b349b972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246ff7b4-6b11-41f0-a2ef-41b68cf8e424",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2f9f62-2396-4848-8d19-b16905804c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c98a9c-2cd2-44e9-baa0-fe7cf9263bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0933eeb-195b-406b-93e3-4622ab0bef05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f669250-edce-4a53-b75b-1fbfa11a3807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4995674f-a642-40b4-a0cf-b4283fc4bcff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2428a5-674c-42fe-b9b7-c3a5fc4d16dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6930c63-a5a7-4683-a73e-13ada1e14085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c51907e-fac9-4285-8c0f-a3eeaee901c9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e958bd-4879-4c1a-b6e1-b49dad03c8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5263e7b1-3c2f-4349-8a8e-1db105b99d15",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7623f071-b1a3-45c1-b149-3149444fcff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21899f18-b7da-4de4-a4ea-d2caa8831cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dd266c-b187-4640-8cd9-206aa0d4b140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf918c2-49d6-4302-91ff-8d51dcacd01d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72cb1d49-558e-414d-b4d3-b770dafcde0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b142903-de0e-49fc-bf89-471c6ff3fffc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1d5836a-5a22-405a-9308-f0beca5770f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "487a324b-4c88-4b7d-8f0d-9948ddbccf8d"
                    }
                  }
                ]
              },
              {
                "id": "e3e8bb86-cca1-46fa-a864-55618f6a3f81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c74ca0f0-8f2e-41aa-a760-2ad1b29fae8f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc253f-6589-41d0-979e-ee6c4a06fa25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "024fdf82-19b4-48bc-851c-d2f8b37f9602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8ddfda-a422-49f1-9ff2-5cfc151695f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2b9acb7-243c-4ce6-92eb-225693e87930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b42ed0-4fbc-4ade-a441-0cde04bb42ac",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e0b7f7-899c-4470-a896-c2e7eaefa1af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb0240ac-b708-45bc-9801-12fe7beacd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d38fc6-1b49-49e6-a16c-52c6e04324dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be968858-d40a-4b36-bdc7-2c6c17e29ed1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "477db3fb-fa86-4da2-8aa4-1fbdfe67018f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b758bf87-98c3-4a41-95bc-63d1c3ba9c99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee13a697-1801-4eb4-bd46-cc820c89cc07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d25f183-a780-49dc-ab70-470f3ac236dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "b25e53a4-dfaf-4862-905e-bcfa70b53fda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a05a1f1-0235-49d0-a7c1-67dcdeb8b214",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0adc88ce-db24-4655-ad68-9926d12fa9ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5790541f-ba78-4b9a-9df8-2b17c18559fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac3f020-7dac-4c2f-bc37-ac52ae8c26cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49dc8305-4d5a-4469-b415-ff6caae87616"
                    }
                  }
                ]
              },
              {
                "id": "8e53fb15-8db9-4c29-9f51-3825487853d9",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4af11632-fbea-4bb0-8e38-4758b70497d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45ff7717-4d94-4253-9888-b20bc57ef06a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d44de896-4db9-43b2-8c8b-97bb67a90049",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00516dff-c6f3-4ee6-98df-400e3cc1a066"
                    }
                  }
                ]
              },
              {
                "id": "6acca004-7ace-4d21-9281-9eb4d09785e3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a30711ab-8c24-4094-a018-abd7f6303761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d30840dc-b7c2-4c85-a5e8-bb6c6e5cd9af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e03ea21-2221-4d3f-a505-b4c6cd6800b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d03f93bd-0904-45ab-8728-34c1125e0286"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c462c447-622a-4762-9181-132b6bb8e1fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a37834d9-764b-471e-ae08-4d55836e7c97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c9ec71f-0278-440d-b2db-a3281aedc744",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "317364a3-ebce-4b35-b8f2-cdf6ef0cd548"
            }
          }
        ]
      },
      {
        "id": "15b6a367-dc89-43da-829f-64f5026abe16",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a535f07c-2ff7-4297-b095-d111c02c7de1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d149f87-0e4e-47a9-b7b4-24e3e7052659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d16bac4-36ae-48f3-8a6b-84deaebee06b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29428e87-7f7b-4326-a1d9-39ee11e4b102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddb1dca-71b2-46d8-9cfc-1dba002071f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4db972-c2cd-41b0-901a-50abbbb32c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3f8a4d0-4766-45f7-bc3e-393e82c27b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ac423a-7baa-4b2f-b6b3-25eba73eb50e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181000d8-346a-4e99-8619-29ce5f5f5c5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "3df1ed36-9178-4800-9f12-cda113464147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1702c1-f219-438f-a4bc-e4a8d9f0a819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a62cc4de-eb83-4261-8e94-ceee841a333f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa078bd0-90c3-45f3-83c3-2916d83329ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "112fe075-35a9-43cb-8c5c-69d38119fd36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e12fb3-5ac3-4c94-9455-fe10ac202805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "384155a1-59d2-4b15-8280-da64fcd77c2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4118228-c2cf-4195-8686-783d77f46499",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "a9e9e255-ed04-4370-9677-95b4846d0bbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a45e3d22-517f-4ef7-a96b-bd382316ab40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0406e818-d493-4dbc-8cfc-7c33ea9d482a"
            }
          }
        ]
      },
      {
        "id": "e7fa35a6-f31c-4a1d-860f-5fd26972f9c7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "db9a1680-384b-46fa-b567-d0d164835d8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b9fabd9-c500-4a48-80eb-1ef6b27047c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2af87c5-63b9-4d5e-b685-277e5b9d0688",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a207bb-1549-459d-91ea-078dddc0da77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2fa39f-9798-436c-a114-242715576536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe3115a-ec38-4123-8326-96eef2c8f893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f74480fa-2e6a-44fd-b655-3de714f3f841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91781426-1de7-457d-a420-0ecccf820391",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0ef54a-70c0-4bb3-9115-7d7c6cc82044",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "b42d712d-f3de-4fb9-9342-e88a88d0b770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf4a556-e0b7-4067-91ce-e2deffef0499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e6efb67-15af-43ad-96c0-89a3b2beb700"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3e85e2b-c981-42c7-a805-aad5194b9695",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "459ee1b7-caa3-4da8-a422-3d6f7c014454"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb12fa1-564e-4c44-a55a-3684371b99d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ec2e4c7-4455-4af5-9b9e-6340edb46d51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a91455bd-2176-4352-929d-5e7e93140ce1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "27db3bf2-a813-4b34-8ce4-bc8633418add"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbcd4017-6eb3-4012-8745-107814967a2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f805d06e-af6d-4ac4-8720-97ff30edae1f"
            }
          }
        ]
      },
      {
        "id": "31a617a7-d2c1-4f66-b856-d806871dcec2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9419b4e6-ab72-4bc3-831b-fc71b51a3470",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10b84af1-1aca-49e2-87fb-fa85a2a1cb0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "deab2b4a-88f4-4656-bb00-1d21fc7314c9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abd2292-1af2-4a8a-92d9-7876fc05db26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5119d704-4d25-46b9-9005-8c9aab62e6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d64eded-acdb-4b53-af6a-1f286b40909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5697633f-5ce4-405d-87cd-5ca91b7408bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7561249-0750-49a6-9cf9-80b3d5c38ace",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224b9d41-fcd7-4226-b38c-cd463d3af7b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a98dde5e-6254-4b81-af0c-3d360a21e72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8effad49-c93a-475e-aea1-af71ab94f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddbdba85-9d02-47f8-9b63-fa1ff495094f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af43caf6-ac8e-4674-8a4a-09593dc9b14d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c70cfc-dd52-42fb-84bb-5983066b9750"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1136ecaa-ab42-4f9e-9b03-11fd9c7c022f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05d5e541-3e4f-48b1-b2db-fd48c9b67714"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "363e4448-e7f8-480c-b6ce-43dd43ffa77f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "08e86f82-29d0-4a0e-8413-e419aa262aa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce55713d-5841-4720-9e17-40ed62c78668",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01db0707-9016-4f07-829d-2020beb5b752"
            }
          }
        ]
      },
      {
        "id": "24b7f673-5008-401e-9d20-6f8abe4d5ce1",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "fbcdc747-1421-478d-8d13-1a1a400e68f2",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 214.34975369458127,
      "responseMin": 31,
      "responseMax": 2130,
      "responseSd": 345.47415954559114,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664586579545,
      "completed": 1664586630140
    },
    "executions": [
      {
        "id": "ca797c19-a6aa-405e-a23b-d0be38ae04ba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4668e50e-f011-4e94-b231-95600b034230",
          "httpRequestId": "e7cfb246-ddbe-4f7d-9c75-ae17a1031165"
        },
        "item": {
          "id": "ca797c19-a6aa-405e-a23b-d0be38ae04ba",
          "name": "did_json"
        },
        "response": {
          "id": "cd8ef986-57d2-4874-95c8-367d57584277",
          "status": "OK",
          "code": 200,
          "responseTime": 1412,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e046b6-fbb7-400c-ba37-7f9ad07a1106",
        "cursor": {
          "ref": "839daf1e-63c6-4454-85f4-4378f70ba243",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "deba1fc7-7781-4f0d-99e1-e4394dffa259"
        },
        "item": {
          "id": "79e046b6-fbb7-400c-ba37-7f9ad07a1106",
          "name": "did:invalid"
        },
        "response": {
          "id": "741ce38f-ddf3-45b9-a3a9-98e9895dd199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e046b6-fbb7-400c-ba37-7f9ad07a1106",
        "cursor": {
          "ref": "839daf1e-63c6-4454-85f4-4378f70ba243",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "deba1fc7-7781-4f0d-99e1-e4394dffa259"
        },
        "item": {
          "id": "79e046b6-fbb7-400c-ba37-7f9ad07a1106",
          "name": "did:invalid"
        },
        "response": {
          "id": "741ce38f-ddf3-45b9-a3a9-98e9895dd199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5816d3b0-b37b-4973-b9df-7ccfab16884a",
        "cursor": {
          "ref": "ad1ce7d3-97a6-4354-857c-5ac01e28b8fd",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "278a765e-aeda-4851-b47f-bf1d17eb1327"
        },
        "item": {
          "id": "5816d3b0-b37b-4973-b9df-7ccfab16884a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "13060512-aa80-4153-90a9-a17168ed79b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 419,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0677c6c-2304-4920-a0f7-42cc96e8a084",
        "cursor": {
          "ref": "d6f3689f-79d8-4741-8817-2a8e321f656b",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe9246ff-5356-4e68-aded-de112cb099a8"
        },
        "item": {
          "id": "d0677c6c-2304-4920-a0f7-42cc96e8a084",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9654c9a0-6145-490c-bfcf-a14bc36c33c3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28350c97-c5dc-4c3d-821c-8544a1e20d7b",
        "cursor": {
          "ref": "23836cda-c210-49b5-bacb-e9b68e47f4cc",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3aece8df-cb03-4d57-b044-fde0a6441bb2"
        },
        "item": {
          "id": "28350c97-c5dc-4c3d-821c-8544a1e20d7b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "52f40b36-cec9-4402-a2e9-1d95b120e971",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 186,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed4f5e1-bade-4a91-99d4-07034aef8156",
        "cursor": {
          "ref": "c9c145f0-ac4d-44af-a877-62a4861abfec",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9e9eaa8c-1860-4e7e-ac83-23ef1559dbb7"
        },
        "item": {
          "id": "6ed4f5e1-bade-4a91-99d4-07034aef8156",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "666f104d-5d49-4193-8cff-201b139743e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 60,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed4f5e1-bade-4a91-99d4-07034aef8156",
        "cursor": {
          "ref": "c9c145f0-ac4d-44af-a877-62a4861abfec",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9e9eaa8c-1860-4e7e-ac83-23ef1559dbb7"
        },
        "item": {
          "id": "6ed4f5e1-bade-4a91-99d4-07034aef8156",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "666f104d-5d49-4193-8cff-201b139743e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 60,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48b6a9e-7492-4ca9-8faf-310de0ade13e",
        "cursor": {
          "ref": "b24f923e-c64c-44a8-9c74-6009a1899357",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b20049af-4152-45c6-88c1-48306db95de2"
        },
        "item": {
          "id": "a48b6a9e-7492-4ca9-8faf-310de0ade13e",
          "name": "identifiers"
        },
        "response": {
          "id": "1a620690-a4c6-44f5-bfa0-b477b81b8f81",
          "status": "OK",
          "code": 200,
          "responseTime": 275,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5167e84b-234e-4a12-8152-2d3277433c53",
        "cursor": {
          "ref": "bd8c6ec1-4e13-4102-a8c6-6e99eeefa0eb",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "74d3a1e0-d35b-4041-bf76-559e88ea257a"
        },
        "item": {
          "id": "5167e84b-234e-4a12-8152-2d3277433c53",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0802fad2-9da8-413c-a3fe-f675e2adfd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5167e84b-234e-4a12-8152-2d3277433c53",
        "cursor": {
          "ref": "bd8c6ec1-4e13-4102-a8c6-6e99eeefa0eb",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "74d3a1e0-d35b-4041-bf76-559e88ea257a"
        },
        "item": {
          "id": "5167e84b-234e-4a12-8152-2d3277433c53",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0802fad2-9da8-413c-a3fe-f675e2adfd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5167e84b-234e-4a12-8152-2d3277433c53",
        "cursor": {
          "ref": "bd8c6ec1-4e13-4102-a8c6-6e99eeefa0eb",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "74d3a1e0-d35b-4041-bf76-559e88ea257a"
        },
        "item": {
          "id": "5167e84b-234e-4a12-8152-2d3277433c53",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0802fad2-9da8-413c-a3fe-f675e2adfd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f98e595-d375-45ac-ab0b-080722b8b6a8",
        "cursor": {
          "ref": "223cfd41-6ea3-45c7-84f7-062853cccfbb",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d994c366-71ac-40bb-ba23-a3cbabc3ab24"
        },
        "item": {
          "id": "9f98e595-d375-45ac-ab0b-080722b8b6a8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "edc8631f-d7d7-47be-9fb0-34391cad5860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f98e595-d375-45ac-ab0b-080722b8b6a8",
        "cursor": {
          "ref": "223cfd41-6ea3-45c7-84f7-062853cccfbb",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d994c366-71ac-40bb-ba23-a3cbabc3ab24"
        },
        "item": {
          "id": "9f98e595-d375-45ac-ab0b-080722b8b6a8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "edc8631f-d7d7-47be-9fb0-34391cad5860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda2236d-731c-415f-b7d3-2a974d46d406",
        "cursor": {
          "ref": "4a34e46a-42d7-453d-942e-98dd0e25c71d",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7134a47e-6f69-4f99-86cc-ea5716631093"
        },
        "item": {
          "id": "eda2236d-731c-415f-b7d3-2a974d46d406",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "8d26cf08-02b7-46ee-82ad-02e8d6a00a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda2236d-731c-415f-b7d3-2a974d46d406",
        "cursor": {
          "ref": "4a34e46a-42d7-453d-942e-98dd0e25c71d",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7134a47e-6f69-4f99-86cc-ea5716631093"
        },
        "item": {
          "id": "eda2236d-731c-415f-b7d3-2a974d46d406",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "8d26cf08-02b7-46ee-82ad-02e8d6a00a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7930ece5-54cd-4b0f-a0e2-11e33a0033dd",
        "cursor": {
          "ref": "a9aca2d8-fcdc-4e79-8deb-0068ea93be7c",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "02c67341-089a-4368-8b22-c5a68ad8d4ac"
        },
        "item": {
          "id": "7930ece5-54cd-4b0f-a0e2-11e33a0033dd",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "b4e50f7e-e6fa-4df0-ba82-a3583013a856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7930ece5-54cd-4b0f-a0e2-11e33a0033dd",
        "cursor": {
          "ref": "a9aca2d8-fcdc-4e79-8deb-0068ea93be7c",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "02c67341-089a-4368-8b22-c5a68ad8d4ac"
        },
        "item": {
          "id": "7930ece5-54cd-4b0f-a0e2-11e33a0033dd",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "b4e50f7e-e6fa-4df0-ba82-a3583013a856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebc3698-41ec-4a9e-8179-77db0fe4c07f",
        "cursor": {
          "ref": "756b21ca-6613-4463-b02a-758c394231d1",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "401a98ae-6d74-484a-880b-2a880445f73a"
        },
        "item": {
          "id": "1ebc3698-41ec-4a9e-8179-77db0fe4c07f",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "e0856385-8ebe-4959-b472-2969da030ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebc3698-41ec-4a9e-8179-77db0fe4c07f",
        "cursor": {
          "ref": "756b21ca-6613-4463-b02a-758c394231d1",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "401a98ae-6d74-484a-880b-2a880445f73a"
        },
        "item": {
          "id": "1ebc3698-41ec-4a9e-8179-77db0fe4c07f",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "e0856385-8ebe-4959-b472-2969da030ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318aea83-5930-4249-b0a0-ef2ed25d9623",
        "cursor": {
          "ref": "c48d88df-4ce2-4e96-82f9-81ec083ef742",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "712ea008-61a4-4665-9b28-ffa7a6329f4b"
        },
        "item": {
          "id": "318aea83-5930-4249-b0a0-ef2ed25d9623",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "db958967-60b7-43e6-b249-8736edbcf139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318aea83-5930-4249-b0a0-ef2ed25d9623",
        "cursor": {
          "ref": "c48d88df-4ce2-4e96-82f9-81ec083ef742",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "712ea008-61a4-4665-9b28-ffa7a6329f4b"
        },
        "item": {
          "id": "318aea83-5930-4249-b0a0-ef2ed25d9623",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "db958967-60b7-43e6-b249-8736edbcf139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd015abd-c825-42a7-af63-a41c8f2c6cdb",
        "cursor": {
          "ref": "6a6ae88c-8f3b-47f3-9769-57530c38b596",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "630369a8-6f12-4234-a0d7-692edb4cdd73"
        },
        "item": {
          "id": "dd015abd-c825-42a7-af63-a41c8f2c6cdb",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "d928a201-c6f1-4a36-9806-2969ed316971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd015abd-c825-42a7-af63-a41c8f2c6cdb",
        "cursor": {
          "ref": "6a6ae88c-8f3b-47f3-9769-57530c38b596",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "630369a8-6f12-4234-a0d7-692edb4cdd73"
        },
        "item": {
          "id": "dd015abd-c825-42a7-af63-a41c8f2c6cdb",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "d928a201-c6f1-4a36-9806-2969ed316971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6448b06-cfbc-4696-945e-43546e84e80d",
        "cursor": {
          "ref": "46887204-be07-4ab5-a3b3-4be94a324385",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0299f61c-dd64-469e-bc01-79b214e57922"
        },
        "item": {
          "id": "d6448b06-cfbc-4696-945e-43546e84e80d",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "f223cade-2a9b-4bb7-91f3-13d403607131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6448b06-cfbc-4696-945e-43546e84e80d",
        "cursor": {
          "ref": "46887204-be07-4ab5-a3b3-4be94a324385",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0299f61c-dd64-469e-bc01-79b214e57922"
        },
        "item": {
          "id": "d6448b06-cfbc-4696-945e-43546e84e80d",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "f223cade-2a9b-4bb7-91f3-13d403607131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c981fba7-8420-4a5a-b607-0e9ee51d2fe2",
        "cursor": {
          "ref": "53ba37b9-853d-476c-8ca4-b6bc021f290d",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "677fd968-97e0-484c-8bd3-29df13b20b16"
        },
        "item": {
          "id": "c981fba7-8420-4a5a-b607-0e9ee51d2fe2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2ba22b39-d0b2-482b-b2fe-c5a328d455af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c981fba7-8420-4a5a-b607-0e9ee51d2fe2",
        "cursor": {
          "ref": "53ba37b9-853d-476c-8ca4-b6bc021f290d",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "677fd968-97e0-484c-8bd3-29df13b20b16"
        },
        "item": {
          "id": "c981fba7-8420-4a5a-b607-0e9ee51d2fe2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2ba22b39-d0b2-482b-b2fe-c5a328d455af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f84efe-8010-4699-a282-1b2692062974",
        "cursor": {
          "ref": "e7079fcc-d99a-4283-96ca-7837fa9ce244",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b61d0faa-4052-4cab-9d2f-a48bcccc1e4e"
        },
        "item": {
          "id": "b2f84efe-8010-4699-a282-1b2692062974",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "8c8015d4-3458-458c-b881-20a0f7eee6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f84efe-8010-4699-a282-1b2692062974",
        "cursor": {
          "ref": "e7079fcc-d99a-4283-96ca-7837fa9ce244",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b61d0faa-4052-4cab-9d2f-a48bcccc1e4e"
        },
        "item": {
          "id": "b2f84efe-8010-4699-a282-1b2692062974",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "8c8015d4-3458-458c-b881-20a0f7eee6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a576b8-ef31-452d-a128-13a067c4274e",
        "cursor": {
          "ref": "66b2e5f2-7d4d-47bb-af7c-7f663a5a91d9",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "71c75718-e8e1-4cf3-ad82-4ace1a7941cd"
        },
        "item": {
          "id": "d8a576b8-ef31-452d-a128-13a067c4274e",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "d396e48d-5e33-4d72-90fc-5245d2eaa1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a576b8-ef31-452d-a128-13a067c4274e",
        "cursor": {
          "ref": "66b2e5f2-7d4d-47bb-af7c-7f663a5a91d9",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "71c75718-e8e1-4cf3-ad82-4ace1a7941cd"
        },
        "item": {
          "id": "d8a576b8-ef31-452d-a128-13a067c4274e",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "d396e48d-5e33-4d72-90fc-5245d2eaa1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5a41bc-4307-496f-8e49-c40c30b4ddc4",
        "cursor": {
          "ref": "1e4c9c86-ea64-43f3-a029-316f7c159f99",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e75170b-8b34-43d8-b617-9ced59b6e190"
        },
        "item": {
          "id": "6c5a41bc-4307-496f-8e49-c40c30b4ddc4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "44d6d9f6-667f-4dd0-a180-39919ec30796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5a41bc-4307-496f-8e49-c40c30b4ddc4",
        "cursor": {
          "ref": "1e4c9c86-ea64-43f3-a029-316f7c159f99",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e75170b-8b34-43d8-b617-9ced59b6e190"
        },
        "item": {
          "id": "6c5a41bc-4307-496f-8e49-c40c30b4ddc4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "44d6d9f6-667f-4dd0-a180-39919ec30796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6619011a-6020-46da-9b02-aa31b764c8e1",
        "cursor": {
          "ref": "00618a6d-0fd4-4e60-987e-aab1408ce0d0",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "67aa5649-1c05-4437-8262-f9b3020c84e4"
        },
        "item": {
          "id": "6619011a-6020-46da-9b02-aa31b764c8e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1bb31670-3cbe-4dea-9a95-90299a29c39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6619011a-6020-46da-9b02-aa31b764c8e1",
        "cursor": {
          "ref": "00618a6d-0fd4-4e60-987e-aab1408ce0d0",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "67aa5649-1c05-4437-8262-f9b3020c84e4"
        },
        "item": {
          "id": "6619011a-6020-46da-9b02-aa31b764c8e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1bb31670-3cbe-4dea-9a95-90299a29c39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6a1095-ed8d-4bbe-a09e-e5220ce0c3a5",
        "cursor": {
          "ref": "c619636b-c5ef-4c3b-9cdd-9b626dd59447",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5377b071-aeb4-4bba-9ad6-4e94a240cb2a"
        },
        "item": {
          "id": "7e6a1095-ed8d-4bbe-a09e-e5220ce0c3a5",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "948dc0a3-b35a-448b-8f53-8a7f4aaf5d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6a1095-ed8d-4bbe-a09e-e5220ce0c3a5",
        "cursor": {
          "ref": "c619636b-c5ef-4c3b-9cdd-9b626dd59447",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5377b071-aeb4-4bba-9ad6-4e94a240cb2a"
        },
        "item": {
          "id": "7e6a1095-ed8d-4bbe-a09e-e5220ce0c3a5",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "948dc0a3-b35a-448b-8f53-8a7f4aaf5d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f7a18-b879-45ae-8632-d871a86c9d78",
        "cursor": {
          "ref": "bf8fcc91-5774-4da4-91be-5c91878fb1fc",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f34b57d-079b-41f6-b8db-8b0b37552aca"
        },
        "item": {
          "id": "3b8f7a18-b879-45ae-8632-d871a86c9d78",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "f85ddfc9-da99-4981-a21a-0d04c8255bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8f7a18-b879-45ae-8632-d871a86c9d78",
        "cursor": {
          "ref": "bf8fcc91-5774-4da4-91be-5c91878fb1fc",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f34b57d-079b-41f6-b8db-8b0b37552aca"
        },
        "item": {
          "id": "3b8f7a18-b879-45ae-8632-d871a86c9d78",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "f85ddfc9-da99-4981-a21a-0d04c8255bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7625a961-33e3-4a29-b4df-d872a6dec6c7",
        "cursor": {
          "ref": "cb7af4bb-b759-47df-b85d-20683e18544d",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3489eac6-1ff9-4af2-96f6-21c52d3113f9"
        },
        "item": {
          "id": "7625a961-33e3-4a29-b4df-d872a6dec6c7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8ad31bf7-3204-48da-b363-926ecf243b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7625a961-33e3-4a29-b4df-d872a6dec6c7",
        "cursor": {
          "ref": "cb7af4bb-b759-47df-b85d-20683e18544d",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3489eac6-1ff9-4af2-96f6-21c52d3113f9"
        },
        "item": {
          "id": "7625a961-33e3-4a29-b4df-d872a6dec6c7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8ad31bf7-3204-48da-b363-926ecf243b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26056527-8e5e-4142-80f3-4915bca9acb4",
        "cursor": {
          "ref": "02fcbb26-31e2-4cae-ada3-39c119171948",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "673d645b-086f-4b5b-a0e9-c2cef7a7bd10"
        },
        "item": {
          "id": "26056527-8e5e-4142-80f3-4915bca9acb4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d70cd1b5-7b94-4061-9505-d62477c9afc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26056527-8e5e-4142-80f3-4915bca9acb4",
        "cursor": {
          "ref": "02fcbb26-31e2-4cae-ada3-39c119171948",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "673d645b-086f-4b5b-a0e9-c2cef7a7bd10"
        },
        "item": {
          "id": "26056527-8e5e-4142-80f3-4915bca9acb4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d70cd1b5-7b94-4061-9505-d62477c9afc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db25271c-6684-4a63-ac02-77cc1ea9b6ff",
        "cursor": {
          "ref": "deaedc22-ac1f-421f-b1b7-e86697a83f89",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dbd5103b-d93e-47cc-bf0b-c610632398ea"
        },
        "item": {
          "id": "db25271c-6684-4a63-ac02-77cc1ea9b6ff",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "8c9393e3-5967-425c-aa43-4b437dadf2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db25271c-6684-4a63-ac02-77cc1ea9b6ff",
        "cursor": {
          "ref": "deaedc22-ac1f-421f-b1b7-e86697a83f89",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dbd5103b-d93e-47cc-bf0b-c610632398ea"
        },
        "item": {
          "id": "db25271c-6684-4a63-ac02-77cc1ea9b6ff",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "8c9393e3-5967-425c-aa43-4b437dadf2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eab1cda-4280-48cc-b4d4-9d2b947598a0",
        "cursor": {
          "ref": "c7ec4f32-2dff-48ed-9c1e-12c2ac28e176",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51c8189d-536e-4561-82c4-f2a7a44113a6"
        },
        "item": {
          "id": "8eab1cda-4280-48cc-b4d4-9d2b947598a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e496efcf-d8b7-4ce3-bed7-5f4261203adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eab1cda-4280-48cc-b4d4-9d2b947598a0",
        "cursor": {
          "ref": "c7ec4f32-2dff-48ed-9c1e-12c2ac28e176",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51c8189d-536e-4561-82c4-f2a7a44113a6"
        },
        "item": {
          "id": "8eab1cda-4280-48cc-b4d4-9d2b947598a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e496efcf-d8b7-4ce3-bed7-5f4261203adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa533d2-9a45-4a9a-9083-82694d7d3ed5",
        "cursor": {
          "ref": "2cb4d820-7a06-4d4f-8880-33b06fb893be",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e5aa9694-f744-4997-8cf7-609250fefeb7"
        },
        "item": {
          "id": "5aa533d2-9a45-4a9a-9083-82694d7d3ed5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "82ed5d3b-0087-4c65-acd6-30b2da1a406a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa533d2-9a45-4a9a-9083-82694d7d3ed5",
        "cursor": {
          "ref": "2cb4d820-7a06-4d4f-8880-33b06fb893be",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e5aa9694-f744-4997-8cf7-609250fefeb7"
        },
        "item": {
          "id": "5aa533d2-9a45-4a9a-9083-82694d7d3ed5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "82ed5d3b-0087-4c65-acd6-30b2da1a406a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2c8021-211d-4a19-b53a-22a15ee0303a",
        "cursor": {
          "ref": "3abdb8c9-c96d-4541-8841-f6d901134e0d",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea207d22-7f7b-4394-a79d-615b554a4c39"
        },
        "item": {
          "id": "3d2c8021-211d-4a19-b53a-22a15ee0303a",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "e9f0f5af-299b-4386-b38e-1d5715aa0042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2c8021-211d-4a19-b53a-22a15ee0303a",
        "cursor": {
          "ref": "3abdb8c9-c96d-4541-8841-f6d901134e0d",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea207d22-7f7b-4394-a79d-615b554a4c39"
        },
        "item": {
          "id": "3d2c8021-211d-4a19-b53a-22a15ee0303a",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "e9f0f5af-299b-4386-b38e-1d5715aa0042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a0a81-7516-4aea-8478-42a0e379bd14",
        "cursor": {
          "ref": "bbbb4274-8b8a-43d2-9f38-d85e23eb168f",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "187d908b-5dd6-4966-bc55-c5b6168a0adf"
        },
        "item": {
          "id": "d75a0a81-7516-4aea-8478-42a0e379bd14",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "0cb66025-de90-4075-ab39-f1a73894ec53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a0a81-7516-4aea-8478-42a0e379bd14",
        "cursor": {
          "ref": "bbbb4274-8b8a-43d2-9f38-d85e23eb168f",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "187d908b-5dd6-4966-bc55-c5b6168a0adf"
        },
        "item": {
          "id": "d75a0a81-7516-4aea-8478-42a0e379bd14",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "0cb66025-de90-4075-ab39-f1a73894ec53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a4702-b124-4ac3-b3a7-e83c631efb0e",
        "cursor": {
          "ref": "80ed5f07-3a25-41e4-bea4-e8f37caac772",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5174e038-927b-4fa9-9a98-2078f8ee2a29"
        },
        "item": {
          "id": "510a4702-b124-4ac3-b3a7-e83c631efb0e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b6bf9cac-376d-43cc-9fe6-a7a9fd0c4f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a4702-b124-4ac3-b3a7-e83c631efb0e",
        "cursor": {
          "ref": "80ed5f07-3a25-41e4-bea4-e8f37caac772",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5174e038-927b-4fa9-9a98-2078f8ee2a29"
        },
        "item": {
          "id": "510a4702-b124-4ac3-b3a7-e83c631efb0e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b6bf9cac-376d-43cc-9fe6-a7a9fd0c4f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f083f6f2-2470-419d-9fb2-3fba8ebdbca4",
        "cursor": {
          "ref": "89ec8b75-2bda-4479-aaf3-ff1807480dfa",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "845d2a8a-034d-4569-aa6d-a249c841787b"
        },
        "item": {
          "id": "f083f6f2-2470-419d-9fb2-3fba8ebdbca4",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "a5152657-e2f2-4fc1-b731-90c7356947ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f083f6f2-2470-419d-9fb2-3fba8ebdbca4",
        "cursor": {
          "ref": "89ec8b75-2bda-4479-aaf3-ff1807480dfa",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "845d2a8a-034d-4569-aa6d-a249c841787b"
        },
        "item": {
          "id": "f083f6f2-2470-419d-9fb2-3fba8ebdbca4",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "a5152657-e2f2-4fc1-b731-90c7356947ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f7d211-15ef-4e48-b004-542bd4cf2549",
        "cursor": {
          "ref": "381d39e8-fc7c-4248-baa0-8f69bdf7d31d",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c6969d05-c721-4bec-a836-d609ff72eb19"
        },
        "item": {
          "id": "96f7d211-15ef-4e48-b004-542bd4cf2549",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "495979e5-dbf4-4129-b2a2-3092e654cdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f7d211-15ef-4e48-b004-542bd4cf2549",
        "cursor": {
          "ref": "381d39e8-fc7c-4248-baa0-8f69bdf7d31d",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c6969d05-c721-4bec-a836-d609ff72eb19"
        },
        "item": {
          "id": "96f7d211-15ef-4e48-b004-542bd4cf2549",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "495979e5-dbf4-4129-b2a2-3092e654cdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb59ff-748b-4e4f-a9b6-3ef98bd744e4",
        "cursor": {
          "ref": "1f31bedc-8443-4948-9eaa-3fb184a355c6",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2db20598-fbf4-412b-b575-15683bcc1662"
        },
        "item": {
          "id": "f9eb59ff-748b-4e4f-a9b6-3ef98bd744e4",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "43495162-f935-4bc3-9688-e93f9b699dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb59ff-748b-4e4f-a9b6-3ef98bd744e4",
        "cursor": {
          "ref": "1f31bedc-8443-4948-9eaa-3fb184a355c6",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2db20598-fbf4-412b-b575-15683bcc1662"
        },
        "item": {
          "id": "f9eb59ff-748b-4e4f-a9b6-3ef98bd744e4",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "43495162-f935-4bc3-9688-e93f9b699dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36c2dd1-4012-4e27-9533-5bba14dafffc",
        "cursor": {
          "ref": "59ac991a-1881-4c45-a000-2606cf1333c2",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c6e224b8-c8a9-43a2-9526-13ee4b5d7fc9"
        },
        "item": {
          "id": "b36c2dd1-4012-4e27-9533-5bba14dafffc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f4fc80bc-b6b1-4fbf-bc4d-2d8f67e6e164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36c2dd1-4012-4e27-9533-5bba14dafffc",
        "cursor": {
          "ref": "59ac991a-1881-4c45-a000-2606cf1333c2",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c6e224b8-c8a9-43a2-9526-13ee4b5d7fc9"
        },
        "item": {
          "id": "b36c2dd1-4012-4e27-9533-5bba14dafffc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f4fc80bc-b6b1-4fbf-bc4d-2d8f67e6e164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027072e6-59e2-4f19-a0f4-bee9724674b2",
        "cursor": {
          "ref": "b84a0528-6900-434c-b0c5-a1cdcd5b35c5",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb08aa37-a02d-4b7a-b154-16c65ad45e59"
        },
        "item": {
          "id": "027072e6-59e2-4f19-a0f4-bee9724674b2",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "41ae7948-cf17-46a3-81b0-4a22c8a963df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027072e6-59e2-4f19-a0f4-bee9724674b2",
        "cursor": {
          "ref": "b84a0528-6900-434c-b0c5-a1cdcd5b35c5",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb08aa37-a02d-4b7a-b154-16c65ad45e59"
        },
        "item": {
          "id": "027072e6-59e2-4f19-a0f4-bee9724674b2",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "41ae7948-cf17-46a3-81b0-4a22c8a963df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2225fbb5-3c09-4134-bbcf-2289662db6de",
        "cursor": {
          "ref": "2448e1a8-aa8e-423a-a6b7-97f7e3f26b0e",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a1e8167-ee21-4233-8f4d-52c6c38507a5"
        },
        "item": {
          "id": "2225fbb5-3c09-4134-bbcf-2289662db6de",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "57f263a3-1b27-4efb-89fd-3f905cc0838a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2225fbb5-3c09-4134-bbcf-2289662db6de",
        "cursor": {
          "ref": "2448e1a8-aa8e-423a-a6b7-97f7e3f26b0e",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a1e8167-ee21-4233-8f4d-52c6c38507a5"
        },
        "item": {
          "id": "2225fbb5-3c09-4134-bbcf-2289662db6de",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "57f263a3-1b27-4efb-89fd-3f905cc0838a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec73c23b-6ad6-4807-886c-ce386cd85654",
        "cursor": {
          "ref": "e2554fac-8ac9-4ffc-84a6-3f1f610de89e",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c733ecf-4a76-49fa-8cb2-67be94d18d83"
        },
        "item": {
          "id": "ec73c23b-6ad6-4807-886c-ce386cd85654",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "9e021814-02a8-45ff-b090-dbb0d3b76d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec73c23b-6ad6-4807-886c-ce386cd85654",
        "cursor": {
          "ref": "e2554fac-8ac9-4ffc-84a6-3f1f610de89e",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c733ecf-4a76-49fa-8cb2-67be94d18d83"
        },
        "item": {
          "id": "ec73c23b-6ad6-4807-886c-ce386cd85654",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "9e021814-02a8-45ff-b090-dbb0d3b76d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77d3a64-2c7d-442b-80b8-d378885ad6b5",
        "cursor": {
          "ref": "1d6741f3-ac93-4a95-84ec-a20e1a19b316",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78838db6-1f2a-4574-8df6-039b0180a3a5"
        },
        "item": {
          "id": "c77d3a64-2c7d-442b-80b8-d378885ad6b5",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "67c29fe4-7ab7-48c4-8ce1-8c8b10151fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77d3a64-2c7d-442b-80b8-d378885ad6b5",
        "cursor": {
          "ref": "1d6741f3-ac93-4a95-84ec-a20e1a19b316",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78838db6-1f2a-4574-8df6-039b0180a3a5"
        },
        "item": {
          "id": "c77d3a64-2c7d-442b-80b8-d378885ad6b5",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "67c29fe4-7ab7-48c4-8ce1-8c8b10151fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ed0c2-83c9-43a6-9ba1-cf5b03eb4cdc",
        "cursor": {
          "ref": "08e01f9c-dba0-4bb2-8603-8420bd921203",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "711acf96-f582-492f-af58-8085200834e2"
        },
        "item": {
          "id": "e08ed0c2-83c9-43a6-9ba1-cf5b03eb4cdc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0391ff7e-7173-4c3e-bb0f-2c2f6f7f30d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ed0c2-83c9-43a6-9ba1-cf5b03eb4cdc",
        "cursor": {
          "ref": "08e01f9c-dba0-4bb2-8603-8420bd921203",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "711acf96-f582-492f-af58-8085200834e2"
        },
        "item": {
          "id": "e08ed0c2-83c9-43a6-9ba1-cf5b03eb4cdc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0391ff7e-7173-4c3e-bb0f-2c2f6f7f30d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b74ca1-c714-4e97-b38e-8f00f9b98330",
        "cursor": {
          "ref": "97343735-0739-4dd9-9cbb-84cc84f0a70e",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "19052cf2-7872-40a2-b9a8-18dda9d478bc"
        },
        "item": {
          "id": "d6b74ca1-c714-4e97-b38e-8f00f9b98330",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8f3ee38a-98b9-4c47-977b-2c7f94b998a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 137,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b74ca1-c714-4e97-b38e-8f00f9b98330",
        "cursor": {
          "ref": "97343735-0739-4dd9-9cbb-84cc84f0a70e",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "19052cf2-7872-40a2-b9a8-18dda9d478bc"
        },
        "item": {
          "id": "d6b74ca1-c714-4e97-b38e-8f00f9b98330",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8f3ee38a-98b9-4c47-977b-2c7f94b998a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 137,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03da21a4-4fda-47cd-8677-4f478ee3b6f1",
        "cursor": {
          "ref": "8fc55b66-42f5-4fdb-8f98-7127185b49b0",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f02bef48-4bbd-4f57-ba3c-48806893d4e3"
        },
        "item": {
          "id": "03da21a4-4fda-47cd-8677-4f478ee3b6f1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "70e40484-29bf-4aa7-9335-13965bcfddc3",
          "status": "Created",
          "code": 201,
          "responseTime": 953,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "03da21a4-4fda-47cd-8677-4f478ee3b6f1",
        "cursor": {
          "ref": "8fc55b66-42f5-4fdb-8f98-7127185b49b0",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f02bef48-4bbd-4f57-ba3c-48806893d4e3"
        },
        "item": {
          "id": "03da21a4-4fda-47cd-8677-4f478ee3b6f1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "70e40484-29bf-4aa7-9335-13965bcfddc3",
          "status": "Created",
          "code": 201,
          "responseTime": 953,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "004becfe-f74a-4249-9e1f-3a8fbb796ed8",
        "cursor": {
          "ref": "0415dd9e-4b66-4f96-9858-f1eeeafda494",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b1574047-f23a-43f7-920d-36c890401926"
        },
        "item": {
          "id": "004becfe-f74a-4249-9e1f-3a8fbb796ed8",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "372fa936-ffb8-42be-ad18-889cdd63319e",
          "status": "Created",
          "code": 201,
          "responseTime": 470,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004becfe-f74a-4249-9e1f-3a8fbb796ed8",
        "cursor": {
          "ref": "0415dd9e-4b66-4f96-9858-f1eeeafda494",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b1574047-f23a-43f7-920d-36c890401926"
        },
        "item": {
          "id": "004becfe-f74a-4249-9e1f-3a8fbb796ed8",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "372fa936-ffb8-42be-ad18-889cdd63319e",
          "status": "Created",
          "code": 201,
          "responseTime": 470,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2157e1-8268-4639-a5d7-764e504cbbb0",
        "cursor": {
          "ref": "424a6cc1-afbc-4753-a21c-1e10eac5bd3a",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "680e0105-d364-4467-bb75-4246659b3583"
        },
        "item": {
          "id": "4e2157e1-8268-4639-a5d7-764e504cbbb0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4f175455-544c-4773-9ec5-379e49f01180",
          "status": "Created",
          "code": 201,
          "responseTime": 344,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2157e1-8268-4639-a5d7-764e504cbbb0",
        "cursor": {
          "ref": "424a6cc1-afbc-4753-a21c-1e10eac5bd3a",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "680e0105-d364-4467-bb75-4246659b3583"
        },
        "item": {
          "id": "4e2157e1-8268-4639-a5d7-764e504cbbb0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4f175455-544c-4773-9ec5-379e49f01180",
          "status": "Created",
          "code": 201,
          "responseTime": 344,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6222c78e-a42d-4aed-a266-be08de15a7f6",
        "cursor": {
          "ref": "f9b7a27e-1f19-4ab8-b682-0b7855927726",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "86dc212d-5424-41c7-b323-2a2b479da33a"
        },
        "item": {
          "id": "6222c78e-a42d-4aed-a266-be08de15a7f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ad63cf8c-52ef-4886-b0c3-7dd603d47b0d",
          "status": "Created",
          "code": 201,
          "responseTime": 440,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6222c78e-a42d-4aed-a266-be08de15a7f6",
        "cursor": {
          "ref": "f9b7a27e-1f19-4ab8-b682-0b7855927726",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "86dc212d-5424-41c7-b323-2a2b479da33a"
        },
        "item": {
          "id": "6222c78e-a42d-4aed-a266-be08de15a7f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ad63cf8c-52ef-4886-b0c3-7dd603d47b0d",
          "status": "Created",
          "code": 201,
          "responseTime": 440,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de7c107-a426-43fc-99b0-a93b89cbfc63",
        "cursor": {
          "ref": "1fcfa976-d02b-4982-9719-b7fcd86862e8",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e0705f9e-66cb-4f87-837b-961fe0880808"
        },
        "item": {
          "id": "0de7c107-a426-43fc-99b0-a93b89cbfc63",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "61c77c41-5209-4bb7-9ac4-a7ba387f15b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "0de7c107-a426-43fc-99b0-a93b89cbfc63",
        "cursor": {
          "ref": "1fcfa976-d02b-4982-9719-b7fcd86862e8",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e0705f9e-66cb-4f87-837b-961fe0880808"
        },
        "item": {
          "id": "0de7c107-a426-43fc-99b0-a93b89cbfc63",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "61c77c41-5209-4bb7-9ac4-a7ba387f15b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "fe5978f3-38e8-4616-ba69-3d16d2a93aad",
        "cursor": {
          "ref": "8cdee01a-fea8-4ca4-9ec5-2719cad9f81d",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c2b5f243-e5a9-4355-a065-c54d95bce56f"
        },
        "item": {
          "id": "fe5978f3-38e8-4616-ba69-3d16d2a93aad",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b00f9b4e-b06c-4fea-8bcb-25b8e3f615fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "fe5978f3-38e8-4616-ba69-3d16d2a93aad",
        "cursor": {
          "ref": "8cdee01a-fea8-4ca4-9ec5-2719cad9f81d",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c2b5f243-e5a9-4355-a065-c54d95bce56f"
        },
        "item": {
          "id": "fe5978f3-38e8-4616-ba69-3d16d2a93aad",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b00f9b4e-b06c-4fea-8bcb-25b8e3f615fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "d62e1c4e-4606-4cf2-989c-9b453f8c93ac",
        "cursor": {
          "ref": "91f8f3a7-c9a1-45b0-98ed-dc2883a853b6",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "07c0779a-76a0-4598-9d84-9f0e56d290f3"
        },
        "item": {
          "id": "d62e1c4e-4606-4cf2-989c-9b453f8c93ac",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "9237e0e4-e3da-400e-9359-8542dc781a4e",
          "status": "Created",
          "code": 201,
          "responseTime": 402,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62e1c4e-4606-4cf2-989c-9b453f8c93ac",
        "cursor": {
          "ref": "91f8f3a7-c9a1-45b0-98ed-dc2883a853b6",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "07c0779a-76a0-4598-9d84-9f0e56d290f3"
        },
        "item": {
          "id": "d62e1c4e-4606-4cf2-989c-9b453f8c93ac",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "9237e0e4-e3da-400e-9359-8542dc781a4e",
          "status": "Created",
          "code": 201,
          "responseTime": 402,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5720c3-d8de-48d5-8c38-b117c50059b8",
        "cursor": {
          "ref": "08316110-d794-4343-997b-50b54166c040",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a304ec7d-620d-4094-880c-838d0838bee2"
        },
        "item": {
          "id": "9f5720c3-d8de-48d5-8c38-b117c50059b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "896e7e3c-946b-4e41-9d08-e1fcecdf0d49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5720c3-d8de-48d5-8c38-b117c50059b8",
        "cursor": {
          "ref": "08316110-d794-4343-997b-50b54166c040",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a304ec7d-620d-4094-880c-838d0838bee2"
        },
        "item": {
          "id": "9f5720c3-d8de-48d5-8c38-b117c50059b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "896e7e3c-946b-4e41-9d08-e1fcecdf0d49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b3ddc2-251c-4b9a-8038-583fd2171700",
        "cursor": {
          "ref": "376701e9-a644-49f0-8427-92d00c5244b6",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9f81bfcd-d562-4d09-814a-3f752e09556e"
        },
        "item": {
          "id": "a6b3ddc2-251c-4b9a-8038-583fd2171700",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "106b2f76-b79e-459f-812c-606769f0406c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f924b6bd-4d1d-41f4-b5a6-30a4f3c1f6ea",
        "cursor": {
          "ref": "0e82cd0a-add6-4f83-8eda-fe0550750469",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5057d69e-bf25-439a-a21a-534f74311ee8"
        },
        "item": {
          "id": "f924b6bd-4d1d-41f4-b5a6-30a4f3c1f6ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "55739e02-1e35-4f90-a1eb-26abb3e561fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f924b6bd-4d1d-41f4-b5a6-30a4f3c1f6ea",
        "cursor": {
          "ref": "0e82cd0a-add6-4f83-8eda-fe0550750469",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5057d69e-bf25-439a-a21a-534f74311ee8"
        },
        "item": {
          "id": "f924b6bd-4d1d-41f4-b5a6-30a4f3c1f6ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "55739e02-1e35-4f90-a1eb-26abb3e561fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31aca1c-b0ab-4a86-bdad-477f38fba149",
        "cursor": {
          "ref": "f6b446f5-ce44-45e3-ae5f-be7cf1585b12",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4fca7eb1-e56c-4d69-bbae-ca1efa0d9cd1"
        },
        "item": {
          "id": "b31aca1c-b0ab-4a86-bdad-477f38fba149",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41196896-4092-4c5b-ad69-d3282009c67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9c2b52-f138-4d6f-9c3b-6c2ab3ebfb28",
        "cursor": {
          "ref": "951f7313-4161-4b03-87ad-e261444b3178",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e070d139-b83e-4523-9a1d-453819913091"
        },
        "item": {
          "id": "6b9c2b52-f138-4d6f-9c3b-6c2ab3ebfb28",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c9fa8ed0-9641-41ee-bc10-7952eeae7d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaee79e-41f0-46af-8cdb-e520ff26f216",
        "cursor": {
          "ref": "d12e752a-4529-4303-85b8-be161100691f",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "96aea99b-a117-49bf-9ef4-14b95513406b"
        },
        "item": {
          "id": "cbaee79e-41f0-46af-8cdb-e520ff26f216",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d3a22eaf-2375-4ac9-91db-7db84b2b03a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad543809-bbf2-41eb-8fd5-368dd700dc13",
        "cursor": {
          "ref": "f05062bb-c890-4ea7-9d5e-8d3bae8c6322",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c999d4df-438d-4401-a4ac-37ad5725bd23"
        },
        "item": {
          "id": "ad543809-bbf2-41eb-8fd5-368dd700dc13",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f7121b90-face-44e4-948d-48aa9c1315ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e196458-6645-49fd-a297-d636c48c34a1",
        "cursor": {
          "ref": "34ff0dc2-311d-4fc3-a334-496e12bacbd4",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "179f1d7e-8598-4760-b8f3-e32f4f0b05c1"
        },
        "item": {
          "id": "1e196458-6645-49fd-a297-d636c48c34a1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c6971eeb-8583-4112-81fc-bfb66dbd1966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80251aff-0c0a-4f20-a4df-db5a8d96431c",
        "cursor": {
          "ref": "adc9d193-866a-423a-9763-ec31bda3fc96",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c233f4cb-070e-4ef6-a5ef-773606cb00ac"
        },
        "item": {
          "id": "80251aff-0c0a-4f20-a4df-db5a8d96431c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1dc4729e-b750-43a3-b819-7bf9fc8ea076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612228cb-436e-4db3-82cd-18c6b6d7ee2a",
        "cursor": {
          "ref": "08237b20-2ec8-41f6-99d4-5a9991e4c69a",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b5087c43-a166-4e57-b763-776e9b0b4a7b"
        },
        "item": {
          "id": "612228cb-436e-4db3-82cd-18c6b6d7ee2a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a6ed3265-2041-45ab-8649-1de83689a6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62538c6-9ab8-4228-b836-113994082b3f",
        "cursor": {
          "ref": "f81504c7-ead7-46a6-a0f6-986c8b3f6b91",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "acaab919-8b54-44f8-ab01-37a5f453b949"
        },
        "item": {
          "id": "c62538c6-9ab8-4228-b836-113994082b3f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2060236b-043c-4a9c-b6cd-fbd4c1890d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15b993e-30a4-41ae-929a-8299f9054189",
        "cursor": {
          "ref": "c0839dc4-5838-4ca0-9b7b-36adb3537d21",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cd0b7158-f28c-4b6b-bf47-a3527cc0d3fb"
        },
        "item": {
          "id": "f15b993e-30a4-41ae-929a-8299f9054189",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f2a6b35d-714a-4b03-a8b6-d03b35743d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a4d581-d2a1-443a-8ad0-eb9e81150e76",
        "cursor": {
          "ref": "23d2a966-6c61-479d-b7b6-b738717ee2ba",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "429d2c9a-200a-4712-b66f-f8394448f3d7"
        },
        "item": {
          "id": "95a4d581-d2a1-443a-8ad0-eb9e81150e76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "55d00b58-7e0f-4430-95d4-b12b236df1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111d75ab-e8f8-4f18-b34f-51b0d789e4dc",
        "cursor": {
          "ref": "f0a97f3a-d809-46df-89de-4a09f6d0e84b",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a00f42ae-b7c3-435b-8334-c319738f31bb"
        },
        "item": {
          "id": "111d75ab-e8f8-4f18-b34f-51b0d789e4dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c27364bd-e9fa-4298-9eef-c003b87da862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0001e3-c65a-41e8-ad46-f88c7645a429",
        "cursor": {
          "ref": "088ccf67-e2c7-4176-82fd-ac7c1f06a94a",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "df2c4505-ec49-4838-9c5b-d3c198a194e8"
        },
        "item": {
          "id": "be0001e3-c65a-41e8-ad46-f88c7645a429",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "23149e55-32f5-479e-a2bf-b16cbf6c4224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20cba31-5f54-421a-bcd5-0942b42ae30b",
        "cursor": {
          "ref": "7bbc7b80-383e-4bd6-806d-32826edfa286",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "98c3e94f-d8af-4a8d-9953-731e4ef541d0"
        },
        "item": {
          "id": "c20cba31-5f54-421a-bcd5-0942b42ae30b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9cce9807-f1d0-45fb-80c5-dfdddfd872df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6c6be-b81a-45ac-a767-4efc47a5922a",
        "cursor": {
          "ref": "1d93bee9-652b-4d40-a2fc-f2cf96b99edb",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "155c891f-b660-48d9-bd7e-ac3aa29fb9c1"
        },
        "item": {
          "id": "26f6c6be-b81a-45ac-a767-4efc47a5922a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bd29e19c-feca-4cc8-8eac-703c25826e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fee68a-87b9-4b6a-8130-3932b85ff312",
        "cursor": {
          "ref": "033dcecd-a32e-4460-8635-c132a4e229e3",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a4a0090a-3e49-4f28-97d2-a02bb9ba0a3e"
        },
        "item": {
          "id": "41fee68a-87b9-4b6a-8130-3932b85ff312",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2d9cf28-ea9f-4413-b31d-e790d0cee5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdca424c-72bb-468b-b24d-1994e390187b",
        "cursor": {
          "ref": "9fe19aed-54d5-4e52-aa35-e6e034b86e0a",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad3f78ae-0928-474f-960d-78fe21c7fa47"
        },
        "item": {
          "id": "fdca424c-72bb-468b-b24d-1994e390187b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1650c560-aa36-4ec1-94d1-5564f7def9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a37af8-803d-42a0-a7e5-0d6a0801d20e",
        "cursor": {
          "ref": "cb4818e0-6c8a-4179-8e19-fb2ae716345a",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "65f0314f-2d76-4569-867a-d5302ff20129"
        },
        "item": {
          "id": "87a37af8-803d-42a0-a7e5-0d6a0801d20e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b1d2c332-4e82-4cfc-a491-d42de0359cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1225,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83447f85-0801-48c6-9f94-799d9c600f09",
        "cursor": {
          "ref": "ca86c079-3c5a-4bf9-ab9f-4d785e4aa719",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0b71987d-3cb5-469d-94f9-3cc4a1a85d97"
        },
        "item": {
          "id": "83447f85-0801-48c6-9f94-799d9c600f09",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "571d5463-0555-4094-b64e-0e0e85c168c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6430677-d4b4-40ee-ad3b-94920d3cd712",
        "cursor": {
          "ref": "de118768-7fbe-4f4c-ab78-9263a1fe58fd",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4a42f871-8d81-4550-aa4e-eb3904a602c8"
        },
        "item": {
          "id": "e6430677-d4b4-40ee-ad3b-94920d3cd712",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6ff7471a-dd0a-4596-a754-148e4e80085b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec69df-c311-4761-969d-22fb43f10069",
        "cursor": {
          "ref": "89a60671-dc01-4474-9444-6817c0caf22b",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eb8f50f2-908a-4887-891b-12a916f453bd"
        },
        "item": {
          "id": "eaec69df-c311-4761-969d-22fb43f10069",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37a87042-104b-4cbf-92c4-9af660e8af37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1608,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6b429-4b22-403b-8faf-d8367f2f5224",
        "cursor": {
          "ref": "f554f4b1-181e-4c0b-8841-5889d757440e",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9d235df6-36e5-4fef-a393-58360fbec286"
        },
        "item": {
          "id": "96f6b429-4b22-403b-8faf-d8367f2f5224",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "50778e48-1ae0-4bb8-b0e4-147622fdd6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1957,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a09592-4d4f-4416-b44f-c7b64919d4b1",
        "cursor": {
          "ref": "e861c6cc-45fd-4861-8ceb-ae5d64fd15d4",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8266906b-bf83-48c4-b2cb-95c88728738a"
        },
        "item": {
          "id": "80a09592-4d4f-4416-b44f-c7b64919d4b1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6c4b740f-25d7-4bb8-bb52-f4d2fed3748f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e5226d-8317-4a0f-8dc9-9d2bfd15edc4",
        "cursor": {
          "ref": "11a695cd-a8e5-4241-a6b6-29eba09294ea",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2db39c96-4ff8-4191-9b6e-79f744a9f44e"
        },
        "item": {
          "id": "13e5226d-8317-4a0f-8dc9-9d2bfd15edc4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fcec2ca6-db6f-4a63-812f-beeca821939b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39d9e7f-2ad4-4f43-b1e1-be556a9dd093",
        "cursor": {
          "ref": "2a62a9f4-076f-4733-a15b-851387ac46c2",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "144374f5-6e68-4b0c-8867-ad0efde2732a"
        },
        "item": {
          "id": "c39d9e7f-2ad4-4f43-b1e1-be556a9dd093",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a8e63a1-bfd3-4b21-b998-da2b9dd5ae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59da7a2d-054d-4c8b-ae9b-21c774f38783",
        "cursor": {
          "ref": "7efc80a9-4aba-44f2-8232-78a281ea2c08",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "25b8d588-3b17-48b1-ae67-6a637e466fe4"
        },
        "item": {
          "id": "59da7a2d-054d-4c8b-ae9b-21c774f38783",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3be1e2ff-17bf-485e-9f30-c03ac1148e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9198e244-9b6e-4564-ab18-a4767e404313",
        "cursor": {
          "ref": "37616dc2-c61b-4956-95d8-23678bb0841c",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fc31aa3a-43a2-4726-b74e-cc6b109e99b0"
        },
        "item": {
          "id": "9198e244-9b6e-4564-ab18-a4767e404313",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7caebebc-caa1-466f-a10b-9e73bba97aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4189e218-31ba-4f2b-8bd6-28d6076a57a5",
        "cursor": {
          "ref": "897e6ad9-6c61-49bc-b14e-50bbd360a339",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c25b7507-2716-414d-a30c-dbee355c910a"
        },
        "item": {
          "id": "4189e218-31ba-4f2b-8bd6-28d6076a57a5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9f0ae1da-0252-42b0-b8fe-f3f1e8b6880a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9fa888-f353-49bf-88fb-5afd05450025",
        "cursor": {
          "ref": "5937a13f-bf04-456a-9375-09e21cc87acf",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b69fe27b-d530-482b-8392-83a9ed8e3159"
        },
        "item": {
          "id": "0d9fa888-f353-49bf-88fb-5afd05450025",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "46d63394-517f-4071-b29e-e739a729d992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa69f955-3ba4-449e-af1f-d4d23b815a24",
        "cursor": {
          "ref": "3609b338-3706-4c9c-b9e8-b1db6d60b1c6",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ae9a7fae-55a3-4c6b-94cf-cbf99ce872c2"
        },
        "item": {
          "id": "fa69f955-3ba4-449e-af1f-d4d23b815a24",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "913c2b70-ac23-48ac-bb2c-dc3af4ba637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa68cd5d-9c4a-4902-82b7-f2b9312c1c4d",
        "cursor": {
          "ref": "22948f77-a6ce-4d54-8304-2e2684b39efa",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "77a5b16e-5650-4188-b944-9fbb18ed246a"
        },
        "item": {
          "id": "aa68cd5d-9c4a-4902-82b7-f2b9312c1c4d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "347a4fd6-52f0-47d0-be9f-9479579a7c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7a3bb1-a772-4be3-972a-2922be12420e",
        "cursor": {
          "ref": "b30b2189-287f-41c0-94e2-2b7167a96ade",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dd4f0914-a287-44a1-8deb-7163e9e53a26"
        },
        "item": {
          "id": "9d7a3bb1-a772-4be3-972a-2922be12420e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e503785d-f229-424e-a46d-9ea4f0ae676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cdac35-15e1-42e8-ba5c-ea0699ce4bc3",
        "cursor": {
          "ref": "3ddc5c83-805d-4657-a0e7-dc0a35304f54",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5276774d-a089-4dee-bc43-4b83df57e7ba"
        },
        "item": {
          "id": "c5cdac35-15e1-42e8-ba5c-ea0699ce4bc3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d05c1880-6c8e-4007-ae91-3c4a7be9442f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335edad7-b2a7-4aa0-af6d-1f6cd38e0ba3",
        "cursor": {
          "ref": "c67a3eb8-f255-4634-84d5-8edf32c698c5",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8b5b5a2c-4d12-4fc9-9b82-df41ba62b1b5"
        },
        "item": {
          "id": "335edad7-b2a7-4aa0-af6d-1f6cd38e0ba3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1ae5bfbd-88ba-4c85-8f57-cf16f4613fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81692a65-4f91-43e1-843f-7ec7bc00128a",
        "cursor": {
          "ref": "f1bd1d4e-f442-4a76-ad2c-98ef45710d46",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3e670eb8-f121-4c43-95e4-6455b4dd7b14"
        },
        "item": {
          "id": "81692a65-4f91-43e1-843f-7ec7bc00128a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6a48230d-95f2-4b2c-a06b-d6d45598f24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17efedc1-41b6-4006-8392-fb313ebfb6fa",
        "cursor": {
          "ref": "9b2e2254-5582-455b-ab28-2248dbff4c73",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "35419c0d-79ff-41e6-ae96-1bae45f4ba83"
        },
        "item": {
          "id": "17efedc1-41b6-4006-8392-fb313ebfb6fa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "96c8e577-f19e-478b-9d98-5b652fca4f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2a586e-54b4-4357-88c9-642b0a1974e3",
        "cursor": {
          "ref": "916180c2-1500-4d86-bc42-2a41183cdaee",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cab9d6af-a91d-4df3-a321-e668ff49e61f"
        },
        "item": {
          "id": "ab2a586e-54b4-4357-88c9-642b0a1974e3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89f14b5d-0077-4ff6-9228-c61fe89ddd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd918cc2-d8a9-4b87-91b5-f945d8e67acb",
        "cursor": {
          "ref": "b3315e14-683f-4236-9098-20904ff99c3e",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4455f382-1635-479c-bb7f-0aa05ce4e0b6"
        },
        "item": {
          "id": "fd918cc2-d8a9-4b87-91b5-f945d8e67acb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7f2857a8-d600-4b91-85d8-7f797d329395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1284,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04097c32-7d83-430d-817e-adf2d0281af0",
        "cursor": {
          "ref": "3cb183fc-7a89-4a66-9195-8696f6046894",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "561924cc-0de8-437d-8bae-48cf44d78fbe"
        },
        "item": {
          "id": "04097c32-7d83-430d-817e-adf2d0281af0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7044904c-a190-4488-a564-6d3e65c27964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45308667-1279-4f48-a0c7-f4169f4209bf",
        "cursor": {
          "ref": "893d916a-6563-4b73-9f84-6ffa58461624",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c7d764b2-330f-4263-9f28-e65f0e21d97c"
        },
        "item": {
          "id": "45308667-1279-4f48-a0c7-f4169f4209bf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e1ed1eb7-f056-478f-992a-191632326573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dcafdd-d2ff-4880-8992-0f579b49faec",
        "cursor": {
          "ref": "061a46d8-3e59-4b35-b74b-f728f6d245b3",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d8b96972-e110-4091-bec9-dc85952473b2"
        },
        "item": {
          "id": "60dcafdd-d2ff-4880-8992-0f579b49faec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "879923ed-17f3-4d39-982b-209dc4dea3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864d8434-751a-43eb-be8a-bd42778c82af",
        "cursor": {
          "ref": "c0b94ab2-69cc-4ffd-8050-94db9b242432",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "824720ef-840d-4a36-922a-2a06a309edb8"
        },
        "item": {
          "id": "864d8434-751a-43eb-be8a-bd42778c82af",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "720c44dc-bc83-4e45-8207-5489dbdc0f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f8b53f-b505-43e0-9dbf-54d854a92918",
        "cursor": {
          "ref": "eaa11a1f-9368-40cf-93ea-8fe83bb7655e",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "20c2e027-0a7d-429a-b9be-76ca757caca6"
        },
        "item": {
          "id": "f3f8b53f-b505-43e0-9dbf-54d854a92918",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3aad44b4-34f6-4fa5-bebd-ec7c6a5a5549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ab230-0f7b-4d51-9f55-7afc4f699db5",
        "cursor": {
          "ref": "1505e9d2-f639-4da8-a7af-d55c921bdf4a",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b77a6899-6403-4bb9-b13d-5db2f5ae187f"
        },
        "item": {
          "id": "fb9ab230-0f7b-4d51-9f55-7afc4f699db5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "affe4ed0-fd29-4c39-99d3-1950935b78f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d279fa39-1524-4107-9fde-b5d3d3b8a71f",
        "cursor": {
          "ref": "fbe0c20a-508e-4473-bd32-1effc2fb3332",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6a857d31-0289-4f01-87a0-81e9c649d97f"
        },
        "item": {
          "id": "d279fa39-1524-4107-9fde-b5d3d3b8a71f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b1ef0a18-d467-4123-bece-22d71866d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f621a-aac0-41e7-85c3-6a7b3f8ab255",
        "cursor": {
          "ref": "47578506-501e-4e2e-a1c7-763be2ed3725",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6313cd83-f72e-4b62-8d1c-6c71ce0b35a2"
        },
        "item": {
          "id": "b27f621a-aac0-41e7-85c3-6a7b3f8ab255",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4eb0a042-cae9-4944-90f4-34abb82f07f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e50f25-aa40-4578-adc0-27b54aa516bb",
        "cursor": {
          "ref": "ca33ce44-2ad4-4860-8dc2-16f3a6d44f88",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "914aa9b7-c4d2-406a-a2f5-cf6e7ab89325"
        },
        "item": {
          "id": "22e50f25-aa40-4578-adc0-27b54aa516bb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "014ce620-f660-4546-a66d-26512eea7106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70f00d0-2a3d-4b7b-a76c-d8f1883f9c9b",
        "cursor": {
          "ref": "bf12ad1f-7374-495b-969e-adc0a33bde77",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a00a5669-260d-4571-982b-dd62a4cdfa72"
        },
        "item": {
          "id": "c70f00d0-2a3d-4b7b-a76c-d8f1883f9c9b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6e5db852-f6a4-4f13-8442-94a38fb471a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b344d61f-1d5a-42cf-9e5a-61452a3c0bbe",
        "cursor": {
          "ref": "815829da-4c7f-4679-8274-39bbc460d68e",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bf69ea8a-37e9-45a2-aea7-1da1e52619f9"
        },
        "item": {
          "id": "b344d61f-1d5a-42cf-9e5a-61452a3c0bbe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "106b96d0-e012-4df9-bd9c-4f11fcec2813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e34f7f-0ea6-4c90-a7d0-1ab7b35cbd8a",
        "cursor": {
          "ref": "229b7cfe-b9d2-4b98-9ad0-f0a081f9fbca",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4b0ac790-75d9-4ad0-83e1-a2957b01db37"
        },
        "item": {
          "id": "90e34f7f-0ea6-4c90-a7d0-1ab7b35cbd8a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "adfdeed7-04c6-4184-b444-cb4e3cf8c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e17ad0e-912a-4307-bfc1-48c1604f3bfc",
        "cursor": {
          "ref": "1a04d496-f3fb-4cd2-9e96-2e8ef9fb0db5",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0df8f48f-bd34-4b7e-960d-01493a6888e4"
        },
        "item": {
          "id": "0e17ad0e-912a-4307-bfc1-48c1604f3bfc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a4cca125-bc3b-48b6-a64e-a5ad03ec2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f64ed3-b2ee-4971-b478-174952c10975",
        "cursor": {
          "ref": "dcecb365-6c1f-42e1-a3c1-ad9d2177aca5",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "553c9741-99d6-4349-b420-f259fe89e6f2"
        },
        "item": {
          "id": "53f64ed3-b2ee-4971-b478-174952c10975",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "82a5041d-a1ba-4685-a529-512e6211cd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d831491b-6dbe-45aa-86a7-7fc962172657",
        "cursor": {
          "ref": "1826b940-6a56-4f9a-8135-6a9e3c5009f4",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6cb80968-a2e7-471d-bc91-43f203c2d5d7"
        },
        "item": {
          "id": "d831491b-6dbe-45aa-86a7-7fc962172657",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "60a9ba07-5633-4457-b96f-77b15a916b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153e6529-f89a-4a2f-b4df-0b11c374dbe4",
        "cursor": {
          "ref": "a3da1921-a17c-4816-8d43-fe486be945de",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3220e85d-a716-4c53-ab3c-4e2e4293efa3"
        },
        "item": {
          "id": "153e6529-f89a-4a2f-b4df-0b11c374dbe4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cc0a0d8a-4afc-4bf5-9f86-3a70a15b1009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7196ab40-3f76-4e57-ba46-cbafe35310b4",
        "cursor": {
          "ref": "50177214-540c-47c2-9dec-0463da4a33ac",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9b5d4ccc-dbc7-4521-ac21-4cbd64e2c2ee"
        },
        "item": {
          "id": "7196ab40-3f76-4e57-ba46-cbafe35310b4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f3158d00-18dd-4986-9381-fc0a75bf89cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09278b13-4882-488b-85df-73beaf3e9100",
        "cursor": {
          "ref": "aa483537-49a1-42a7-b705-a0edb0a87d97",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bb8d61d7-8add-4db1-b0f0-0121a91fd6f7"
        },
        "item": {
          "id": "09278b13-4882-488b-85df-73beaf3e9100",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "737a9c0a-ecb3-4c3f-aef6-f18388e0b116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b7718-06b5-46e5-bcb7-9e6bd34ea2b7",
        "cursor": {
          "ref": "cb5a35c0-1a9a-472c-a74f-845a2e9faca2",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c8b43ded-1f26-4fc2-a877-ee643af6fd6e"
        },
        "item": {
          "id": "4d7b7718-06b5-46e5-bcb7-9e6bd34ea2b7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1f3b8ba9-de68-4c01-b4df-75730ec91cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a7838b-47db-40af-be0b-4e8f7f0c251f",
        "cursor": {
          "ref": "cde97406-ba35-46e4-8bca-6902ec46f078",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e6e24aad-cbb2-46fc-bd6c-cf5d9f2d083d"
        },
        "item": {
          "id": "e6a7838b-47db-40af-be0b-4e8f7f0c251f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fbc3a0aa-22a8-405a-8bfa-c80f906fe565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701fb40-c207-48a4-8391-d1aacf6b7710",
        "cursor": {
          "ref": "9300ff83-5828-4f36-9ad8-f6cc0d445c7c",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "563efd9c-07b1-4146-91c8-d04f9f05563d"
        },
        "item": {
          "id": "0701fb40-c207-48a4-8391-d1aacf6b7710",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a13e247f-6a6f-4c7c-8968-b3f37a0fce03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5b529a-d126-44da-b60c-8e2c7db1a76e",
        "cursor": {
          "ref": "b1fc65e4-e88b-40d0-9cbd-05e3d196b4ae",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a3508504-25d8-4bf9-9620-4e4f7d5f9bf5"
        },
        "item": {
          "id": "bf5b529a-d126-44da-b60c-8e2c7db1a76e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b7673ec-a19e-4a51-8e4c-3889cd18bc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cd7a8a-4a84-4539-b551-fe0bd18231cb",
        "cursor": {
          "ref": "b400202e-a91d-4540-ad26-116b5b602c82",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e733fe34-3895-489e-a8ca-2d974ffd76f0"
        },
        "item": {
          "id": "b8cd7a8a-4a84-4539-b551-fe0bd18231cb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "236a94a9-1e1c-405b-9179-c4ca7581aa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1441,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67da1d1-4242-4dbc-9093-c4cdb0271db8",
        "cursor": {
          "ref": "146b1a0b-51f0-4c48-a839-a336e76db220",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "981312d3-3ca2-4651-b0c1-b88d3fe982d0"
        },
        "item": {
          "id": "d67da1d1-4242-4dbc-9093-c4cdb0271db8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b9c7a24c-25fd-41ec-b6c8-4b4e299d5ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c38646-74a0-4db0-94de-228bdfe57b05",
        "cursor": {
          "ref": "2a5b16f4-ab51-4565-aecc-1ea1a40af094",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ede38c5-42f6-4242-9438-c8a8fc6f6f86"
        },
        "item": {
          "id": "89c38646-74a0-4db0-94de-228bdfe57b05",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d0c1e7f7-e7ec-42c1-9652-8ecdff379769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8afef76-468a-4cfa-bb18-b85f75ad3e6a",
        "cursor": {
          "ref": "a6602b01-20c3-4b16-a0cf-7f39c2354b05",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c583099f-7d69-49f0-b065-1e91bb6592dc"
        },
        "item": {
          "id": "d8afef76-468a-4cfa-bb18-b85f75ad3e6a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "45f4af50-2db3-4848-9e05-89b28a5639ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc19a4-380f-4454-98e9-7434cf2806da",
        "cursor": {
          "ref": "5228f7ec-da28-44a4-bd89-3a615fac5f2c",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3d29833b-dd09-42d5-9593-9aa195020cac"
        },
        "item": {
          "id": "a9fc19a4-380f-4454-98e9-7434cf2806da",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a0e641f8-094c-4065-a9d6-e4de1f299aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9786be1f-0a78-4e59-8353-429b406feb0e",
        "cursor": {
          "ref": "dc909896-5d15-4d40-ab68-6640f3e6053a",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0f604185-ac13-4770-8598-9e784090a35e"
        },
        "item": {
          "id": "9786be1f-0a78-4e59-8353-429b406feb0e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "786d5b81-17fc-470e-b5a5-78a82f9765c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd462fd-9ff6-4f40-b00d-0d6a5098092d",
        "cursor": {
          "ref": "7859a199-a318-4ac5-a879-a8a03f929b69",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "54a2a443-d716-42fd-97a7-44fba0364c9e"
        },
        "item": {
          "id": "0dd462fd-9ff6-4f40-b00d-0d6a5098092d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e35d3306-c214-460d-816b-9200743c9075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d3f546-ecdc-4440-94bd-9f6201e1547f",
        "cursor": {
          "ref": "87cf33b1-39df-43a4-8410-0283e828b09f",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "faef5408-6ba1-4ecf-812b-a1f18a35ffd3"
        },
        "item": {
          "id": "c7d3f546-ecdc-4440-94bd-9f6201e1547f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "360d7414-0ff1-4f7b-b7d1-47bffa407489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7517bca-41b8-490b-bfba-ad74373ae621",
        "cursor": {
          "ref": "a369defa-70c9-4466-9bd8-6ed01c44b293",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "35cc0690-3ced-4e3e-92e3-54214aacfe7d"
        },
        "item": {
          "id": "e7517bca-41b8-490b-bfba-ad74373ae621",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ff9b673e-f77e-4a90-a293-24144e82c406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38718355-7c8d-49d1-a94f-6afff14ca4e1",
        "cursor": {
          "ref": "1967b70a-2c27-4cc0-9433-aa6e23768453",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "57dadcd9-f9d5-483e-b773-66b8b7019a49"
        },
        "item": {
          "id": "38718355-7c8d-49d1-a94f-6afff14ca4e1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a42826e8-ae3e-4e5d-be6f-f9569837e4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f80e6c2-d3c0-4709-9f27-414d5c7dee5e",
        "cursor": {
          "ref": "8f6a1e81-fb80-483a-b989-18427223f3e8",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ac4d80a0-44a4-472f-88f7-4b719b9e901f"
        },
        "item": {
          "id": "4f80e6c2-d3c0-4709-9f27-414d5c7dee5e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e0192b3b-5742-4ba0-aaa4-2cfc6ae39c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7e5ef-4508-4604-acf3-aea6d10da66e",
        "cursor": {
          "ref": "3227b2a3-2510-43cc-84fc-29b6f2210902",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e72c64c1-9516-4871-9267-447e6c2239bc"
        },
        "item": {
          "id": "feb7e5ef-4508-4604-acf3-aea6d10da66e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5ed7bf35-532e-4678-9f0f-c61682cb49cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d4dfd-e1fe-436e-894a-c169e8c4a21a",
        "cursor": {
          "ref": "2534d1cd-bf05-4361-81a8-0737aeed68e8",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a5d493dc-0b48-4821-b94d-8e2b7cd8b1cc"
        },
        "item": {
          "id": "003d4dfd-e1fe-436e-894a-c169e8c4a21a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e5733dc7-af78-48ab-a01a-0021b3911719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d375c20e-8e68-4049-b3d4-b4c4b8abd941",
        "cursor": {
          "ref": "5c2648dc-7572-40c9-ab1b-14e94a699a8a",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ba7894b5-b5b1-4778-b2d7-bb67e215e37e"
        },
        "item": {
          "id": "d375c20e-8e68-4049-b3d4-b4c4b8abd941",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6164e8ea-2c81-4c28-a9d1-f0d3249c668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2df9f18-be39-40c3-9845-8bb0d685e342",
        "cursor": {
          "ref": "7d32d3c5-2cb1-418c-a4de-7f749c39d1e2",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b4b0529-1351-496c-8138-436d98f1cd0e"
        },
        "item": {
          "id": "e2df9f18-be39-40c3-9845-8bb0d685e342",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "69cbfb2e-576e-407f-b366-b8a72a0cbd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702b4766-3c83-4665-a205-c127392edf16",
        "cursor": {
          "ref": "e70ce188-4f57-4d40-91a2-347723e9ebea",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6e19754c-ec63-4933-83d5-47e438d7a150"
        },
        "item": {
          "id": "702b4766-3c83-4665-a205-c127392edf16",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "29d79a1c-150f-4865-9e48-0a75415697d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf05b97-6e43-44df-bd91-1eba1c7d68b1",
        "cursor": {
          "ref": "6cf44944-496e-48c2-83d1-227b1b8edee0",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "891e7bee-6746-40a3-9e42-6dae366494b6"
        },
        "item": {
          "id": "cdf05b97-6e43-44df-bd91-1eba1c7d68b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6d00cc3e-ce28-4029-8a4f-070d1cacc80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5249fb-a26c-4cd0-b593-dc4a6693c9db",
        "cursor": {
          "ref": "dc26b27a-e2ae-43e5-b766-3cb1f45acb22",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e3fd25df-f8a8-428f-931f-8202a3ba89a4"
        },
        "item": {
          "id": "ae5249fb-a26c-4cd0-b593-dc4a6693c9db",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "add86a9b-36f9-4ae7-aaaa-a3c434367413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22434e98-2e77-4a6c-a116-69276b9644a7",
        "cursor": {
          "ref": "3d4ff417-4c11-4fe4-b765-2f4144b1db0b",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "697b4c5a-7bfc-4564-808f-bfcbd350ad3e"
        },
        "item": {
          "id": "22434e98-2e77-4a6c-a116-69276b9644a7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "15dedc69-6336-4532-b445-60b75095b88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228e3673-bb9b-4d3a-b5e1-d760180ec7c5",
        "cursor": {
          "ref": "04ecca12-d92c-43ce-a019-8ffae8e60bc0",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "926a1ac4-a8b5-456c-86ed-2e62af769158"
        },
        "item": {
          "id": "228e3673-bb9b-4d3a-b5e1-d760180ec7c5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0d6d3bcb-ae61-4baf-8508-f2a6099ff733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3a9bb5-9b0e-4aa7-9cd9-1a8c4f646a62",
        "cursor": {
          "ref": "a4b9dfc6-4cc9-41f4-a31e-10d531867c5f",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "00452e84-a30f-40c4-a4e6-8877c748b809"
        },
        "item": {
          "id": "8b3a9bb5-9b0e-4aa7-9cd9-1a8c4f646a62",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7f29cc0a-dfc5-47c0-bc85-4d2dcd0e5823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1aee03-29f0-48f7-a02c-6cd0bc4fae24",
        "cursor": {
          "ref": "28a22b04-04ef-4e8d-a50c-3ea82513ca46",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07db066d-8f60-4b18-ab19-2277dd43ccb6"
        },
        "item": {
          "id": "3d1aee03-29f0-48f7-a02c-6cd0bc4fae24",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a8dc347e-f0d0-4954-9e08-fd791fb57cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327f1c70-09e5-474b-89f8-261715f3c621",
        "cursor": {
          "ref": "a8f872f9-36f3-4b83-a763-ae0333aad715",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e48be29a-b9bc-4472-8155-05c6de87d65d"
        },
        "item": {
          "id": "327f1c70-09e5-474b-89f8-261715f3c621",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a888c175-cfe4-4d4c-8014-40d28148b398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abbf3c8-9626-4e4c-9c02-6e3b360c15d1",
        "cursor": {
          "ref": "ba4942db-3310-48cf-8468-d4f8a04ec2fa",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "90993bca-9668-411f-974d-b1faf92edf57"
        },
        "item": {
          "id": "7abbf3c8-9626-4e4c-9c02-6e3b360c15d1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "09dd47fd-1012-435e-8765-88748c722002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa816ffb-20c6-4bcf-abac-a623b51f82b8",
        "cursor": {
          "ref": "2e577c51-64a9-48fb-8c14-d0cf4b326cb3",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "11068bb2-41e5-419e-97cd-271469bdd4b9"
        },
        "item": {
          "id": "aa816ffb-20c6-4bcf-abac-a623b51f82b8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "61e66728-49ae-42f7-8046-365a16fac072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e020c17-aa48-4c56-9767-a8945d054c55",
        "cursor": {
          "ref": "ee5793d9-1c28-43dd-8d78-c1b31b3c7420",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "94c1fdf1-029f-41c7-8744-c69258d089c4"
        },
        "item": {
          "id": "5e020c17-aa48-4c56-9767-a8945d054c55",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7025454a-3f0a-43c9-aad4-db94f5099a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0338721-d7f2-41ac-b782-0954bc000e7a",
        "cursor": {
          "ref": "75df176f-3501-43f3-83c7-8840e7de4bad",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f0b27a0b-5447-4fdf-b687-8d14449694c6"
        },
        "item": {
          "id": "b0338721-d7f2-41ac-b782-0954bc000e7a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "69360c85-b394-419c-b461-09ca571eaab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102ad926-be71-4ae5-9781-4d7e38392f45",
        "cursor": {
          "ref": "21d239f1-1c1f-4527-b570-014ee453db55",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e6e95ebb-7f37-454c-a905-779b448fb17f"
        },
        "item": {
          "id": "102ad926-be71-4ae5-9781-4d7e38392f45",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e9ed7ca2-e4cb-4acb-a931-1a87472453a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12859417-549f-41f5-a7c6-716bab232113",
        "cursor": {
          "ref": "8a45fd36-9eb4-480c-81f1-cdd4890d43e3",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b6da4fb4-be0c-434b-99c4-e693f859dc2e"
        },
        "item": {
          "id": "12859417-549f-41f5-a7c6-716bab232113",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a4837578-767a-400a-a5f1-6f450b5339a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aa5a1b-eff1-4580-b880-4051f09fc187",
        "cursor": {
          "ref": "426f1ca1-80d7-4b04-ad70-a61c8cb308fa",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9b979d52-167a-42ff-9515-5bc66c381350"
        },
        "item": {
          "id": "f9aa5a1b-eff1-4580-b880-4051f09fc187",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8044ce14-3ec6-485c-886c-1211406436db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153ba0c8-ae51-439f-88c0-2f21ca64d9ba",
        "cursor": {
          "ref": "c5561095-83b3-4c41-a376-b94e6f17a39f",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fde1a061-903b-4046-bb7c-24e3b288ce42"
        },
        "item": {
          "id": "153ba0c8-ae51-439f-88c0-2f21ca64d9ba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3236a99d-0615-4299-bade-3a8c94a9db60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd7b256-9fb7-4071-ab1c-2d4e55c40c88",
        "cursor": {
          "ref": "058ca679-6bfc-4490-91dc-4ca3aa83289b",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "79c18e5a-ea57-4776-8623-f3f3e011bc59"
        },
        "item": {
          "id": "6dd7b256-9fb7-4071-ab1c-2d4e55c40c88",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d44cddf4-7423-4dc6-ba7d-dd66687a97b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246ff7b4-6b11-41f0-a2ef-41b68cf8e424",
        "cursor": {
          "ref": "442fd5a3-cb94-4bb8-aec5-977bf3ac1d27",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fe1534f2-7b7d-44ee-a01f-1cb0e6ea1f8c"
        },
        "item": {
          "id": "246ff7b4-6b11-41f0-a2ef-41b68cf8e424",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b905f09e-501c-464b-bb9a-9bb0fdf9440a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4995674f-a642-40b4-a0cf-b4283fc4bcff",
        "cursor": {
          "ref": "17074b8f-0445-4bb5-86d5-10e8653fd1ac",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5be491ee-67cb-4cb2-b32f-95fd90a0276d"
        },
        "item": {
          "id": "4995674f-a642-40b4-a0cf-b4283fc4bcff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0992c360-2b61-412d-bf8b-13e93baa9b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5263e7b1-3c2f-4349-8a8e-1db105b99d15",
        "cursor": {
          "ref": "18a4ff2a-2082-4ad7-b2cf-08c0051fd425",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e4af45b8-e546-476a-a773-b1f691a713ad"
        },
        "item": {
          "id": "5263e7b1-3c2f-4349-8a8e-1db105b99d15",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4ed3e367-c45a-4c73-9441-959a5353859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74ca0f0-8f2e-41aa-a760-2ad1b29fae8f",
        "cursor": {
          "ref": "b3a61e24-3387-4f32-a48e-bbddfb5da807",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "80a153b2-ce74-41a3-aee8-113188061e4e"
        },
        "item": {
          "id": "c74ca0f0-8f2e-41aa-a760-2ad1b29fae8f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6c95cffb-5f4b-4cd6-afd9-2ec9e5171cab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b42ed0-4fbc-4ade-a441-0cde04bb42ac",
        "cursor": {
          "ref": "e0a728a3-21f5-49d9-ad20-e66ab1f3ff7f",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0997235b-2b62-45bb-9fdb-299f9329ca52"
        },
        "item": {
          "id": "d1b42ed0-4fbc-4ade-a441-0cde04bb42ac",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ec5bdc31-b214-4bae-bad5-dbfb2733e2d2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 94,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a05a1f1-0235-49d0-a7c1-67dcdeb8b214",
        "cursor": {
          "ref": "d98e7d2d-af79-4a58-a616-1688b1592c35",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6561ca13-16ea-43c6-857c-10e66dd307c9"
        },
        "item": {
          "id": "8a05a1f1-0235-49d0-a7c1-67dcdeb8b214",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a8678895-afe4-4fe4-bdf6-dc0c4ae088db",
          "status": "OK",
          "code": 200,
          "responseTime": 2130,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e53fb15-8db9-4c29-9f51-3825487853d9",
        "cursor": {
          "ref": "7e3ed1f7-5f6f-4e59-b26a-e3c953c3933a",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f045d1c6-5470-4309-8c8d-858844da331c"
        },
        "item": {
          "id": "8e53fb15-8db9-4c29-9f51-3825487853d9",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "9ab2abbd-94c4-4c93-afed-ca146eadd0fd",
          "status": "OK",
          "code": 200,
          "responseTime": 787,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acca004-7ace-4d21-9281-9eb4d09785e3",
        "cursor": {
          "ref": "2bbbaa91-96cf-4d0c-bb4d-438c8fb7b687",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4ca6f837-af22-465b-ab59-b190a4f72a7c"
        },
        "item": {
          "id": "6acca004-7ace-4d21-9281-9eb4d09785e3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba295823-0d19-431f-ba76-a89a53b42ac9",
          "status": "OK",
          "code": 200,
          "responseTime": 695,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d16bac4-36ae-48f3-8a6b-84deaebee06b",
        "cursor": {
          "ref": "da5a980d-fee4-490c-bb84-4d6f15d0102d",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "926b2124-3d1c-4de1-a720-b835ed2cd0bb"
        },
        "item": {
          "id": "7d16bac4-36ae-48f3-8a6b-84deaebee06b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "31788257-6b65-4e20-a3a1-4a011f117a52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d16bac4-36ae-48f3-8a6b-84deaebee06b",
        "cursor": {
          "ref": "da5a980d-fee4-490c-bb84-4d6f15d0102d",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "926b2124-3d1c-4de1-a720-b835ed2cd0bb"
        },
        "item": {
          "id": "7d16bac4-36ae-48f3-8a6b-84deaebee06b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "31788257-6b65-4e20-a3a1-4a011f117a52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ac423a-7baa-4b2f-b6b3-25eba73eb50e",
        "cursor": {
          "ref": "cf985e89-6f37-4d51-b3db-2c0593e87838",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f46b546-397c-4e7d-805b-dc57400a1021"
        },
        "item": {
          "id": "a0ac423a-7baa-4b2f-b6b3-25eba73eb50e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5769fd1c-b8ff-4613-bf85-6d82f33bcda4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 55,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2af87c5-63b9-4d5e-b685-277e5b9d0688",
        "cursor": {
          "ref": "2e054d5f-a427-4e3c-83a4-84e51b583e3c",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "61f270a1-d4e0-40ff-98e8-42ad25b80937"
        },
        "item": {
          "id": "b2af87c5-63b9-4d5e-b685-277e5b9d0688",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6fd33e25-f7f7-4773-b1de-bf77ef39f202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "b2af87c5-63b9-4d5e-b685-277e5b9d0688",
        "cursor": {
          "ref": "2e054d5f-a427-4e3c-83a4-84e51b583e3c",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "61f270a1-d4e0-40ff-98e8-42ad25b80937"
        },
        "item": {
          "id": "b2af87c5-63b9-4d5e-b685-277e5b9d0688",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6fd33e25-f7f7-4773-b1de-bf77ef39f202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "91781426-1de7-457d-a420-0ecccf820391",
        "cursor": {
          "ref": "9152ac54-3896-48eb-ace4-7a0b4ffb8a28",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "801a2a72-e98e-41a2-9038-e1b01924aae3"
        },
        "item": {
          "id": "91781426-1de7-457d-a420-0ecccf820391",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4d5b734c-7485-4387-92df-e83f4f777470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "deab2b4a-88f4-4656-bb00-1d21fc7314c9",
        "cursor": {
          "ref": "1f943ae9-ddf4-4878-9795-a1fc88719a48",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f3651532-9fd9-4548-8667-a1f79534fbcf"
        },
        "item": {
          "id": "deab2b4a-88f4-4656-bb00-1d21fc7314c9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a3e946d5-f9ed-4910-9fd7-2509279fab97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab2b4a-88f4-4656-bb00-1d21fc7314c9",
        "cursor": {
          "ref": "1f943ae9-ddf4-4878-9795-a1fc88719a48",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f3651532-9fd9-4548-8667-a1f79534fbcf"
        },
        "item": {
          "id": "deab2b4a-88f4-4656-bb00-1d21fc7314c9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a3e946d5-f9ed-4910-9fd7-2509279fab97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7561249-0750-49a6-9cf9-80b3d5c38ace",
        "cursor": {
          "ref": "411ffc20-820f-4da0-928b-97c40f0cac10",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cab2bd47-a5c8-4963-84a0-95860504c958"
        },
        "item": {
          "id": "c7561249-0750-49a6-9cf9-80b3d5c38ace",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d23599f1-a838-4fc6-bd40-a46af626b7b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 57,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}