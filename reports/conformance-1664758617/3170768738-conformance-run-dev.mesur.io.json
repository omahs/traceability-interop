{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "45345be1-6237-41c3-a162-a3e4ddf2b2d0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5bde5ce7-e969-46a6-9eba-72c2205ae5b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44272cb0-a72b-423f-9ceb-f6ddeff0b717",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9af2b572-2639-498b-afc2-3174e3ba9bd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47d62bb1-7299-4125-a5eb-31712fa5498d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "826a2ca0-050d-402d-a220-b2053ab9b794",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ee5c687e-0aa4-4109-a042-7c3d868e031f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cb8c568-5f2b-45f7-8834-1a08ffb34475",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbe56c5f-8862-4885-8217-ea9efc6d05a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8e91f1-e5f8-4846-93a5-19feff8e8a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2464ce81-ac73-4e15-9279-b94d10fc869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0994ad6-1cec-4e67-a766-c451d600d8fb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470d0c5b-1f14-4678-a717-7292742c9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37e22084-3908-42de-8ae4-5b18eb2a5ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbee494-5c16-4634-b60c-43aebbe6e79d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759eeda9-1178-4a2c-8e87-54eb72402b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccd2f3aa-239d-47f5-a4be-70aa033b5eb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f6b0161-e0c2-4c1f-b40e-c645ba3a1fa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c4f5e33-a790-49d8-8d21-23acd8c30608",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6349b4df-aa17-4c08-91c1-4943ead8c62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bab96508-9b95-40cd-aaec-54ca13702fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408fe880-1a13-4608-86ab-3b06062f20df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a324dc91-ddd0-4ace-a2ae-e60176c83780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026da653-33d1-4c71-bcdf-aba7d594635e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dac25dd-071f-41bd-b25b-08c526cda802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db1f6c26-e8cb-4b0d-96e9-7ffc41084f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3ddf29-ea10-437e-acc9-d661db48b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "24868ead-0265-4b61-8db9-b59d31e93f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e475d2e-e221-48c1-a228-eb9fed22d433",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1428d4eb-ecdb-4c49-beec-de9e3708cede",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff9ff246-1d66-49b8-a8a8-c1a2867c49d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "92264520-ce2a-4fb4-b266-43e2410319de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85db2514-2d06-42d1-91f7-48b10d892255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fff6d64a-eef6-4822-a79c-82abe9534bd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7215c779-8a4f-4920-8b44-e82d771f5d53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "057e6657-bc63-40f9-89fa-139d4f38d485"
            }
          }
        ]
      },
      {
        "id": "0f272858-e927-4ce7-8e81-39f6b11c7913",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bdd4b163-8f80-41e7-a768-cf521f01df27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff22535a-9135-4f6b-86b4-17ebb1db9ec3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e0591836-316b-4295-9165-7a719cb31609",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5617a317-57c6-4393-b19c-4b8274225e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbad2651-9785-413b-aaae-ac0499fe00f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ec3639-098f-41b5-83fc-4f7f5f2109ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0061c1-0f50-4a77-b39b-957972452ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be881561-f17c-4f6c-a889-a1c1771f7e12",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b054ab-47dd-4fa7-8a8f-d173df13e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d514a7f5-36a7-4d7e-b6f4-58c8d7703626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9227f7-7c9b-404f-9a9d-8e30ea9f5ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "912bd949-cc94-43b4-9fde-98524828aa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f723221b-a2af-4d29-bf71-02cd78fa8e17",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6354763-f55d-4cc0-9289-7ddd090ac9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea03a671-ba89-4ac9-86b7-6cf67901ccb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61d3b40-a22c-4368-a05d-1e83b96342aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1112b4-5895-4ec5-8a7e-8aaa9966d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e872d5-e376-4b22-a213-7dd885d1972f",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1557278f-1311-4e2e-b60a-3c833ab67fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c616d8-b1ec-4c8e-beee-cb46701ed960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9b8b96-07c5-4bd5-8107-25f5e8d205ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8863ee03-49a8-45b2-8ae2-b3c4f72d445b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdac46bb-9112-4d6c-a632-1a4d38d45471",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4094520e-4369-453b-ac8b-04e009de45a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151981a2-fd64-46ff-83c0-e7ef0f420154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93483fe5-ff45-4a1f-8d13-72830df899cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd39d2d-3e2a-48e4-9e4e-1a87ea5a4e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e3f122-83a5-40ae-ab9f-8bce84ecf40d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16545c8e-dd84-4452-9a39-6c1f9c61318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a877a1-076c-416b-b143-f077ea159062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f7369c-4827-487f-8b65-65057061b562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a999b2dd-b18e-43ff-bb74-510cd250b112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fde6b0-546b-4b58-ae90-7221efa17766",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888af043-1a16-4175-8a7a-bbc2084482c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745643a9-50ad-432c-902a-fd5967cf864a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3e0fd6-6870-4c2d-b312-ec9530e3e950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1a9373-ef0c-446a-a0f1-06130c8ef2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5951b56a-e9c3-46dc-ae07-69f7996c8738",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd3dd98-769f-4c67-bc88-3de0483dbad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2c5d47-ac83-4cbd-898c-85db2f74094f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f2d2ac-8fad-47e8-b428-57cbddf51a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15d8449-1ef1-4297-b6ed-c4ab4b2d4b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc5a766-d2cb-49eb-a675-b105bd170f0f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cf8c67-8429-4e54-9135-7fe8260ea55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2969b32d-6f8a-4db4-8fe4-07f3167d722e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f2ff7-5f95-42d1-8a53-bcfdd1fdc8f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e55266c-0102-41db-a7d9-46a087dd9059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46119557-f4f8-4ce2-938f-ef477fea8cc4",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eab921-23a1-463d-a721-94497a3d042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93dbe4e-87f8-425f-a25e-619a7ff0e100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08892bc0-5b32-44f1-bc82-cd54bc8127d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558013b8-2e37-4d37-bad4-7fb5fad93ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b09b07-4df9-4308-a9d3-7c757ab8308b",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717b9d37-233d-4a18-aadb-443a691bb954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cd8b5a-c581-48b8-a975-6d4e678f1dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4900b0a-fa9e-4f8b-8391-f73b2b4ed20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "6de4bdbc-9552-42a2-8eed-95cfcc658a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642355e6-aa90-4395-8054-06d4428cd4e4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac4c78b-2824-495d-ac6f-fac9d52174e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a64d05-c94a-4f01-b881-180809dc2a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3709b3d9-8ed1-4219-b7fe-2208cd380d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "45c82553-412d-4402-9eb2-7e8d4cedd7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71f186f-c06d-4854-8960-695291356621",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5bfd2a-217b-49da-8d1f-3e234eb5c1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9073add9-9690-42d4-9f95-a8bb30b7ea53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8b7aa8-9c1a-40e0-83eb-a71cbef3eb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7bc7ef3-e948-4ff7-95c3-fdf2bf87ba43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40244190-8b59-47a0-9586-9c621eda3b26",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db03ecb-be41-4909-a6ac-3b427a96a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f9a042-ef2d-4fea-8379-ab2814e889ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c2f4c4-fdb4-4ed9-93b3-03570681717c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3430988f-f638-4ab2-a11d-43044a5bf862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bd1e35-eb8d-4cd5-b7bc-dffbcfdde219",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f54f726-54e4-4f66-bde2-4fdf2d7f75dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361659b5-1b58-45dc-ba6f-d65b35d60cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9f71dd-1e46-48d1-a81f-ee39d8466193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "19581d0c-ff9b-49eb-a65f-5fdc2d2dcacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18742457-60cf-4ac0-952d-fe356814685c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1bbaa8-24ca-4ce6-a5c5-e4b4842bdd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483e8088-210c-4926-95b1-6be5fa343f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab266ae-d652-417a-a8a6-a3ed8e9a57d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "0b2d9f8b-6444-445e-8fb4-a2acbcf00df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f711ea26-2efb-41db-95b7-ded4c94053fa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44db4e15-79c7-41a4-9a75-ee6bafb3f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328b8e01-c966-4dc2-b2cc-be5afb2b6322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26602a17-a93e-4998-a407-12e6b675b927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b83557-6716-4715-b2c5-37819fd5c353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fe8dfe-6690-4b6e-8961-59c6faefd726",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54647b0e-40e6-4bc7-841a-53d2be2a2a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d85efe6-d7eb-4b11-a434-4ab95ba768a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38486cf2-aaad-4c9e-b911-333f385681b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c775bed1-6ced-4bfc-99d2-dd6932937676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c071b3e-5a0d-49d7-8c77-442e91e970c4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da2319a-235e-4d32-b882-8304dc7b05b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24313a2b-74c8-492d-b441-a220d9c2bc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bf1dc1-6ba4-4b38-892f-7da19ba0c9fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6e4b1c-1c8d-45c8-9d6a-01573684a573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaeca65-8b9e-4350-851b-87c176a20809",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa223e46-7217-485b-8fda-92c5ce39aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fdc1f5-f965-489d-893f-2c4ba2a845cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eb1b5e-0569-4a16-a1cd-41cedd90ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aee5bb5-438d-41f7-8cb5-18a1e985309c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069eaf32-6aba-4f82-a636-92e378e4f651",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aaf418-a054-486c-9989-2446f197da80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05904f05-d4c9-40d4-8cec-8267c386be31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8a874d-54b7-4a63-a8e0-901da98787a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48da292-1f43-4188-80c7-6c0375511315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a589ad-1739-4bfc-a1a0-1ec01689879d",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e417eac6-3e6a-4f50-ae56-3df4b64fde76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29acc82-44d8-4b67-8a48-72e22e0f54cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefdccad-0a93-499a-b3ed-af106e93f470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff88ed3-8e72-4e3f-b2c7-2f7abc5f0bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c454161-9317-4b54-94b1-7949974dc250",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64719f15-7b6a-4daf-8ca6-97f3e6869808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56090c10-7520-46c9-8ad7-75992113b9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a7f4c3-e3f8-430e-8064-75cba1c6fb24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd261d0-7581-4bba-8138-27e08ed8845d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d92d7d-b71c-4127-908a-288174fc3f5d",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075ad7ec-f615-456b-866e-52cddd8cb371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9db3d66-3164-4663-9a60-f7142a4f1033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc97c2d-c35e-41e8-96d6-fdbd67a9d953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7bfbb5-b152-48f4-a48c-cafa429e1b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df22757e-9f75-4a51-a780-20d70d18c0ca",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e256551-3c14-4539-b5ef-9726b9722c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d4f48f-4b69-4df3-9eeb-204a7bcd760d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33202779-d592-40c5-8535-fd3ee54da730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f082a63b-c3a5-4003-8143-19df786d8606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce531069-4fed-48e6-bc99-7db24ac003aa",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e58f05-e537-4698-aa01-4228871a5e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f44754-36da-498f-ba4b-bb8ca548eb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae467ca7-c0a7-4c90-87a6-9cf7edf4c70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08dfb764-0d22-4835-89b0-c9dd38bc0863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a2056-18c0-442d-a217-9ea4c29ce9ba",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e51aa8-b016-451c-8211-b1b1d017de59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97624fa5-8264-4f22-a0e0-52e4cc316f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbda395-2574-426c-8ea5-913b1c0cf07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77411fae-1b14-48da-a09d-d0a6c240186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1778bc4-bae7-4b62-8131-a21972000f0c",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7c0e83-addc-40d2-9fc7-cefed2e07c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387107e1-3bca-41fe-80a4-4e06bfd85d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd95e3f-5e3d-4aa0-8fa3-74c46faa36d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94693609-4e5b-4fb4-a97b-cc083e97c608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e655206-28b8-427b-bf12-0db6117d8797",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bdd607-377e-4edb-8395-c685f7614c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b13c02-a6f6-41d7-8623-f6f1188d5479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049001e3-959f-479d-914b-6c3c96032460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a96f4a3-269e-442d-a9b3-faa9aa380f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5794aafa-587c-4a82-a87a-d88b2faa0219",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c11b263-2adb-42bf-adf7-cb1b1ec4219d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7f732b-6a7e-47e4-ac84-a6ca7f549fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0959e5b-9859-4c90-923f-0c15dedca794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2661f77e-07cc-4566-bfae-b5daed455fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84369dbd-b8a7-48a7-b906-3e6912b152e4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1823779-4a7e-4466-b285-028ea3759dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4d72160c-fe8f-4e75-b557-f9ab31f88892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc6fde8-a9b1-432a-a176-3450e6b6e829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8551ec14-90aa-49da-bd65-0fa61240d0b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02e1224f-869c-40a5-a889-5a57af537bc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d60808bd-69cb-4c86-8568-5e9ee7ace8ad",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c90d7-00a5-497f-a2f6-5dedfe5e4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "687bbe18-9d18-45eb-9340-bfc732d2676a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504cc69a-e257-46bd-826d-11a756acea5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3494ff85-be39-4f6b-a562-e280a3f7d558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6921eb4-5fec-4bfb-a890-82c6a2e67a03",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6017b64d-d8d4-4d2b-893a-ffd6af2554cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27b29531-cd86-4ad7-a0ef-d729892022ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3816f8d-ff9b-4f22-8493-1c7bda2ab3be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1610fb13-d541-4e87-b814-bb2f32ee6c69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5502b1b-d9da-4b31-adaf-e5b8a878e879",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "682e0328-599c-4e95-a081-cec794f22018"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60fd1790-660c-46fe-b38a-eed30749eefb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9020232e-eeae-4336-8b3b-641697e318d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b755e589-c645-4277-acbd-2843f23b3034",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7b2c6a6-1db8-445c-8964-697c7dac23dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6678ee8-3b62-4c28-b061-0041ae94b489",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08f20f39-a93d-434b-a7c0-3e0de89da03a"
                }
              }
            ]
          },
          {
            "id": "f60aede9-64d4-4e83-bb2a-7ea48b4f9796",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22191482-ff1f-44db-ae9e-f2cfb876190c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9789b0c0-4e4e-4714-bab3-044edc603ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3af76c7-8c6e-4b9f-8b8a-b1c0af0b8ebb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "016f39cd-a8f7-4111-b997-a32187653197",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "a028d9c5-83ba-4b7c-b591-7e548166dbf6"
                    }
                  }
                ]
              },
              {
                "id": "eea514d3-5501-476a-90c6-992e528d160f",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd93709c-2451-4288-81ce-df5618a92d2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b1565ec-038d-492e-b076-95f91d7ebd63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10d858fd-e99a-4b22-a868-278116fc3365",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "a89baaf7-c7aa-4223-9266-96db011d5a79"
                    }
                  }
                ]
              },
              {
                "id": "fe644560-4fc8-44aa-a814-87fb2e54d5c9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d4787f-de4c-43ec-8f73-9bc532830213",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6878a1ed-e438-4047-81de-df803da08d67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1b65937-9c33-48fe-bb8d-cab3606251bf",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "5cc33a8a-85f2-449d-a39d-9df2587c0de4"
                    }
                  }
                ]
              },
              {
                "id": "72eda8ad-a26b-4bd7-bd17-5f42e46d43a9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ea49f9a-768b-406d-8f08-22db5e85d822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ac0d173-39aa-4d2b-9379-b313b97a9199"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e56a68cf-894f-43f6-895c-42d32083c3ff",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "1776a07b-8376-4b4e-8984-815291049919"
                    }
                  }
                ]
              },
              {
                "id": "bbfcf148-f9eb-47b0-b502-728e0a3cff36",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d35cda73-4a7c-44f6-a04f-ea2a08c5ed3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85207469-7d69-4532-adc5-e108ed8c1a03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86edc430-e848-4838-8f98-b5a403dcd3dd",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "efc01074-f60e-4a8c-872d-ec8f06919caa"
                    }
                  }
                ]
              },
              {
                "id": "d2634552-d462-49d0-990a-b447c2e92e6a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a68ef0b-6369-4b09-986d-0f8c9121e6af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6088288c-85ef-49a0-8379-31a39614ba8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c77b936b-7fd3-423c-b70f-9d3dee1494b6",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "45d71e15-8623-4b85-be2a-d6a6f0358a53"
                    }
                  }
                ]
              },
              {
                "id": "b325dadb-fb5f-4fcc-a49e-5c0a2cca3648",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfde9a96-f265-4821-a41e-90a6c3a793ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f451f3f-b502-47c8-82db-5e2619191d3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c37ba749-ca4c-4944-a9f6-bd9ea1e743c8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "551075e9-ed3f-4140-b128-e81bd7f6998a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a37f21e4-afdc-4ea6-b72a-8b07bde84880",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4183a7ef-a8fc-4152-a596-9a7d7da23470"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c410c0b8-f2e5-49ad-b101-8a4f550699e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd9a9ea9-e214-439d-aa72-d61ee258e8ee"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58feda98-6c6d-4ef6-9113-4d04ad447555",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "aeef4b69-5de3-4c65-9504-92b0685f5569"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe7712af-388f-48ef-972b-0d54e7f5af8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f473ec1-8d92-4026-8827-2a928f4d61e0"
            }
          }
        ]
      },
      {
        "id": "581e47a1-bc5b-4df4-bf75-9dcede894c4e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9ddc20ce-2122-4ca4-a3fb-960db3b03110",
            "name": "Negative Testing",
            "item": [
              {
                "id": "457f3897-5e24-4afc-abe3-532d3bb4ce53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97c43e1f-174e-438e-81ff-4109993bc2d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1997aa06-1ae8-4e9b-895d-ed902671a13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5044004b-46b5-41bc-8e9e-6c0ec53795ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69217cf9-a195-4d49-8b40-88971921b644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c185d02c-b2b5-485f-8f56-90ce486a4d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa315106-c1a4-4edc-aece-dd1b00f35f00",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6f7a72-4ca1-4da3-95e2-afdbbbbfb719",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "88d83890-7a4a-4308-ae1b-a1b9ad778a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8958262f-5fb2-4c57-8898-05326b813c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84cae4f2-79d2-4bd1-b9e4-2999e29a0f10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "773da0a4-7519-43e1-82c3-ff2b477fa028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef156557-6083-454b-b4bf-b1e41a13550e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41b6851-278d-41a0-a8ab-e07c4f2647a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42484732-7e4d-4e73-844f-9ab3968438e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62679b19-7982-4e89-9605-ec85e19359de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "805c8039-2914-4b42-baec-1a825fd11585"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba33321b-439d-4a5c-a752-33cfb37155f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66186d29-af3d-43df-a28d-483bfbd2a044"
            }
          }
        ]
      },
      {
        "id": "2a78317c-efde-4b34-869d-5672f90a3e49",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ae4c73bc-0ca0-413b-8a1a-ab5a6957571d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a48f589a-0f40-48ad-a354-a8679bc068c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a69ac43-6ff3-400d-bddc-4b4738b2cf69",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bd95c7-74e0-4ddd-88c7-dc124d413a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baedcc7-bc9a-4938-ae61-fc0ea2de0a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a17bd70-7ddb-4e02-8db4-8a0604c8b0f1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120dcd70-fc02-4f62-9b49-f5695bf31d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0318022d-ce16-45f1-a185-59cfc267fd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62046fec-5097-48a8-8b52-b0b91d6ea533",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acff667-2fb6-42a9-9855-5746f70e9dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d27b08-6857-41e4-b5bc-964365b598ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f203bce-5f35-4112-b9d4-8d83ceba3e57",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6138a6c-378d-4dd6-a8e5-9830afc69102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73cb27f-8a12-4633-8f0c-61c72986f70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006775b2-262a-46b7-87c4-e7df482f0c67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c9daae-19ac-437e-8ef3-5f7d13743efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c0ab0d-f727-4330-b136-81c03ad1e1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a7ad55-1ffa-4641-bec4-cf628757e3b2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d74902b-8934-4636-aba5-fc525790e307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f24cc1-d6f2-4c32-865a-acb1b14d4810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0725af21-1e14-4d16-b5d7-e2b6d57682de",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074eacb9-0ddf-4575-9683-f3c793db3e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832cbb39-1f51-415d-966d-99b25620d0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3b14c-bd66-4630-a217-2f2fee255da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706a32c4-8567-4c7e-9a2b-2fd3117b5e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc1266b-6487-4fda-bd0f-fb550042a09b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3945cf-4c01-4b4a-9c15-138b847fa39c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6f6aa7-8ff4-4250-b0c3-47a2cad83837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f786d224-dffa-495d-974a-10dac77e6423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9be151-6c05-4df0-8471-15dd7bffd584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0d71ba-3532-43aa-84d4-6813b857a8df",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7faf12-c5b9-4a6d-a8ec-6c741c929ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe44d40c-2aac-4aa3-b2ec-f74fe40267f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a41fa1-7eed-45c0-ac2e-1a3b19e9adc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b9f8c3-e545-40e7-b32b-9c66116e11d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64196979-c9a7-4650-b9fa-9841ddea8346",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9a4efe-7148-44b4-932b-8bf8de60d61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137da0de-17f7-4639-a984-ecb1d2077904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a901293a-7711-43a6-9266-56735e926353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd9c6ce-081a-4a88-b740-5e94690be351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95fb753-ae41-4972-931c-7ef11a3350ef",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2117852f-a5ad-4a4d-a0d6-fad2f1d0d1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8813256-c3ea-49bc-bbd1-8f7656a7e62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fc31c2-27a8-46b2-9a82-46b867a65df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfa8c45-2fc6-4b9e-a7b4-3def8c60ef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b912e-848b-4911-8283-16a426acea8d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395503c-380b-4b6c-ad0a-fc546a80c8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5e5088-d0bf-41c0-978e-03e4c04b4da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc68f8fd-2839-4ecf-bc28-5b446fd6b077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2810e893-b537-4e3e-8e98-c55eaa3c97d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8627238f-8a78-4db6-9b6b-a5cf8c8d8ac8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8982c4ff-1b79-42c9-98c9-e80a6feb3027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0142daba-dd47-4cbd-b072-96806166fbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131ca158-fea7-4a6d-8ef3-5759cbb19a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76c9fb9-6118-4422-a476-1ac270aca6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1cf60b-0e11-44c7-80c4-d3c016602a48",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd62d4cd-a7c9-4c3a-acc9-0df32195afc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb35e96-38e6-4e14-96e7-2c4e15d95b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a245f6-3b7f-414d-b83a-d86b84bf9404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362b457f-593a-490c-9bbb-2f0113a62467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec14670b-2629-46d9-9458-c30be9af4fc2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795911eb-c767-452b-892f-359310c1a5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d787a090-6761-4097-9e45-70406ee3afbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f71920c-9d70-4371-87d7-1766a6588ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0257fd64-e929-4898-b840-0c520e777b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1586f2-1842-463e-a9ac-3254ef4de729",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f120f5-43ac-40ed-a9c0-c67a2eb3085e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131d7922-a0eb-4bcf-91c5-e79b9050046f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fd350c-637e-4acb-8948-47393ed9b119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f0ea2e-1636-4adb-9866-5689e4259682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3bd37a-cbf2-4de6-a016-e0d8279d4020",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c466798-f367-45af-a5dc-537d8181e0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae49f986-be9e-4716-bb8b-b2fb7e5eb68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8374951-be3c-4912-80bf-9708891ce877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe15f5a-dcb5-4432-9d14-d5b4abf7e83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a576b38b-ef2a-4d2a-b00a-da4baa9ebff9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fa3f80-b8bf-4aa2-8fde-65dcc1737c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3517d6-c243-4bf4-90f9-61a29b4c9934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f675d9c6-fdb7-46d9-ba8e-ec003ad24a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3f6156-87fb-4e92-a6d0-9c40de482b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16e45b8-e091-429a-b0d0-ab318a1f7839",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cecfd55-4f3a-4267-a0e9-2820fa299311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac35b4b8-60ca-4422-9429-486820b07d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83d6654-fbe0-43c8-8aac-d752c524e7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c08625c-01f3-4b0e-bf11-42c87251b7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994c66ac-8eea-4d7d-a4ba-8c2ffd2dcb14",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a837f4-e54b-4466-824d-cd5676d31110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc675ce1-069d-48df-ae67-4e7be2622e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61921b6c-c1db-49d5-b830-415ca115ccd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef693cd-fb82-4a98-9cf8-0b2841e552c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a7e771-3656-4cdd-a812-e69fe495a3d4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978bade9-3c57-4900-acfb-42c86be39f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410903b4-b195-48e2-a704-1177ac241746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f5e28b-c8d2-43f2-a080-b7c3d547abfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b7b10d-9c8a-4d9d-85d8-c0fb14ca6fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395b2253-b4cd-4f2a-8f2e-f9fda93551aa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958c8283-047a-4605-a33a-08157021eba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503bdfba-2f57-4509-9c60-1a8647c0c71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b04ecf9-67b6-4665-b1d2-1d63e8c8e156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc1665c-4351-4ef2-8e2d-97b547485789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41368b0-43f3-45d9-8b3d-bdd09bfa50a6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b23b9-818e-494e-958c-1ae5719d3e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cad0566-2c7a-4b31-a7ef-5f1644c994a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8586985d-4acb-4cf3-8bbe-96392e8e21d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b444c98-2469-41a3-9c4c-1b52bf1930de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4e622d-8d10-441a-add4-102d956a733b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1a112-8b0d-457f-a05f-08fd5273d141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f63fc6-a0da-43c3-be6b-b3f2b7c7303b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be1d8e1-3d5c-46b2-8e8b-7c1888636f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8616da-fd01-406f-bf20-5579e98d5d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964a6fcc-3d06-45ce-ab97-3e60883cbafb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2bc9e3-a2eb-4d30-8ff8-01fa7b2f7c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46610c4-7e6b-4f8a-b6cb-aaab3763c163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465a60d3-5c43-45c8-9821-5fadf5f795eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30294509-8b72-443b-ada3-fa58426c706d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2d6d79-c264-4fc4-bb83-0b73c8ce6950",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4593cb7a-6675-47da-a9c1-dc40ec7c2dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11fb9cae-57bf-4762-a726-41654d6c2b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bae0623-e588-4309-9dfa-38960265255e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d76d7f9-8716-4902-b0d6-f995605bff1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fe467b-225b-4207-bb2e-248b9aae7542",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5baa4f-ba6f-4b5b-adfd-749af3cf5b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3048d9c8-1d00-4284-95e5-38a84b298658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09b28d1-de82-4687-8ad5-20e95957fe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955cd33e-287a-48cd-85dc-f1704233b7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0803ea-2cbd-457c-9cb8-5a4447cef6c9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de30b4f-d237-45ca-b56d-b02f8c1a232c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb4d2d2-df89-428b-bbb2-2ac27c6a81f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4169083d-be9d-4dd0-9dc5-bade319b3251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2660e59-4ed8-4164-a6a8-41b397388e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3645d98f-2b73-4f22-bf81-68043e106dd4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5193cddb-e836-432a-a820-093ce5646429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01063690-0187-4887-b223-bcaa53ba9921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4881d57b-7319-497e-9400-e28b38d225d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5fdb8a-19fb-4b16-90c2-41dbcb0ac8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e236e721-3460-44ac-984d-4ed0b1d4d4d6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbb8fad-49f0-41d1-97e7-b1b08e5f969f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43056344-0b28-4a51-8a7a-a5e9592b4015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e645b333-49f6-4b7f-94a1-57063918df49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115c52d0-65db-444b-8f9d-8ffa1e5ebfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b78328-8a4a-48e7-8c0e-6b9c7f9d43e6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5242a8-9dbd-4ec4-93a7-4f016bcf2997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f76b7e6-9bc4-4910-8277-4cb0e7b71af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82512f0b-457b-4bc0-80d0-183963cf404e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f2508a-8fb3-44db-99ae-120bbf0616cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f8628b-fd8a-4ecc-92f6-2cb25ac7cbe2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91b1048-b367-48d1-adb2-4915f068f79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de1453c-d766-4f8b-8327-e94f66940a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6f881b-5b53-4d59-96a3-dea44dadd64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f414d29c-1ebb-4d58-a9fb-e8976adbe5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f826eb25-2398-4281-b8c2-262d1bfc2ca9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c647474-bb3e-47ef-a33c-7c072a53d44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464ecf7f-c868-43bd-9a70-1d776b8d17f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ecc595-d983-409b-8a72-7c3fc8fe62db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a7a97c-23c7-494b-b79e-2646b8636667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef942cd-a3d9-4bfa-8d89-3e9e7a2e7f76",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e086082f-0e4d-47ad-909f-4af829397d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8db3998-3f4d-4c3b-8feb-eb336296f3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6248f4-00ad-4946-b66e-20c70a997f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0aa99ac-66d2-4dde-bb45-8216fb1291eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ef090-f8ec-4d3f-888b-d854a3292cf2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8e3ea9-0338-49db-808a-82ec88e21309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791e75e6-e090-4b59-9397-b38b25e6d129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed79bded-01d2-490b-a408-d286a48bbe5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6634fd5e-9eb1-424f-8e32-c30b99693e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c3d7fd-078c-422f-9ac5-724ae683a280",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8b6608-4f4a-4ed9-803e-2a2bf9d02cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4d587a-7ac0-444c-9a08-ab292de0e1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2495ae8-e7f3-48bb-9ccb-6c7ac2a2a174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eadb555-c175-4888-b9cf-448247c31fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd2b8bd-bffa-4393-b9f4-2e2571f8f868",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e1c13a-8f7a-4691-94e8-5abb2a7fbd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e216e6-cf31-4bd4-81d9-543166c9bc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3413ec13-b577-4a06-b19b-64d5d2ade1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5b6b8a-20e3-43e2-8107-ec3d79fe2756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b96234-b346-43fd-ad01-b1f77762ea75",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5d0691-591f-4c20-921b-90b7f2cc4bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d74317-b3fc-45b9-ad36-6c1fd80292b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392d54d7-ce89-4291-8ff3-7fdb133af0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4b2463-1998-4cf6-a5cd-f3f97f35400e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f00f41-b46b-402e-94be-e9cdaa9e7de6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6ed6cf-87d1-484f-b5ee-ff8ab4d9fb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c40d7d4-f48b-43bc-bf14-c9cfcba2a05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab0183b-500a-4919-816e-215fe27a591d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d5095d-7c28-4310-888b-28fce700f32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83aa6a0-2b9a-4c46-a99c-37404639a0ad",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012bf73e-82cc-470d-b586-f9484acf65cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dc7301-7575-4c1d-9794-37ef63cc6c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e54e7c-e71d-4190-9e17-ae029c1525da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3697b72f-d797-414c-bd32-d0abd93d2b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a568a2a8-435f-447a-a2bc-b2e709b3c47e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062ff717-e63f-4d18-8632-3e56b9db734f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c480be96-8f04-47d0-91a0-7dd25da105c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c02853-57c8-45e6-be82-e6052a15b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e207fcd-f19b-451b-9026-7b1b891f39aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8162b3c-75e6-4902-8536-28472dd707d4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe46ed5b-f6fc-4e6b-8fff-d36535865fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9805f4c6-1dda-47a6-a494-a4de08158185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e288af-39ae-47db-9ad1-123449a82db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2439b85-c8bd-4949-805b-42177e513393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0beb860a-0006-49ae-b891-ed7c4a3ca7d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752c97ca-b9b7-4fc8-8e0d-224eea75f0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b9f12e-d0b3-42b8-85b5-76734b05e8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589893c0-f114-446f-9964-0d08f01b648b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e16cd5-19d8-4f65-9335-f6305ccd3fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def58aad-18be-4478-af06-4cf0d9874f9d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542ab72c-db11-4709-b4c5-a744f731100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218f29b7-ebd4-4e3d-a5c6-f8a4fa7aef58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e831dc17-b12d-406e-8d2e-ee7fbef43558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31cd0dc-4ac6-474c-a1d1-9ec6b1d735f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b71dcf-95a9-4a71-8259-78df9115b664",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d63f12-8ace-490b-90e2-692d3fd8b381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710fb18c-ded0-4325-a315-2b8531b48bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621ae65c-538c-47d8-a65d-38aaab3e5196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73149644-8e0e-4651-bee9-2a3500076171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9195aa06-ad58-448f-8aaa-58327bdfa942",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c898ab-964f-464b-8b32-e1f1e52462b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb192fa-91b2-4ced-a5b9-328aac6cc5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a9a8d7-ae51-44a5-b8e2-875c2ca39bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c440b5a-881e-4181-acaa-8183d16aa1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e0d3c6-76ee-4ac4-8d53-fc6805546e53",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29276cd4-2316-4524-855d-74fe4c3d80ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a90bf58-c591-461c-a7ce-e333e1893deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6b3f54-fedf-4dd2-86a2-660c2b2eae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c6af4c-e5a5-4f17-858d-7fdaf105570a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40632bf9-ef29-4809-bd07-2cc5b95ac89c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b091f-40ee-4ea3-a0ce-7043d0e39001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf10f02-31da-4738-9770-a0b8779c5138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda9be22-f090-4908-bfdc-231bec1421f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1bc9f7-fccd-454c-b50b-4224fd7314c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8dd294-9a37-4a8c-8e2c-7287ae66d8f1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46577e7-3659-4092-b78e-393d2cceab74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfef24e-84e6-4d31-a831-e89c8512073f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d8b8d6-328d-4866-bfff-eb102750e267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7c61e1-bf44-40c5-a115-2cca6d1e7503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bd5461-a559-4913-adb5-580f3ada3ea7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be67607-241e-44e5-b864-55eee158e62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af5e33c-6a2f-4e70-b436-f832a1c5c446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5e7ab4-377b-434f-9090-30bcad353b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f3a11b-23f6-4cf7-b8b0-d108a585d7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c9ac4b-1edc-47be-a35f-14eadc018b10",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f24da70-5323-4ba5-8f12-929325cb042a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932ad79f-4dcb-42bc-a98d-d3e02373a340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c5b0ed-b051-4da8-ae08-c587e0fd6306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abec39ef-46fd-483d-87da-3fe7cc59f494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90fa629-008f-4988-8df4-eae75435a7ea",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c357506d-5def-45c8-9990-4d307b3bbcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edbf9df-fdfe-4b4a-89a1-988c6f7c9877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ff0e80-7fec-4736-ad12-c3dcb7e8084e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cf2941-345d-492f-9761-b1a0167346be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200a16d5-6f8d-4fbd-bee1-a9e3c7a7ef8b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2b12d8-9185-4f7e-b191-55ac970d3278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200e9a05-8711-448c-a7b6-4007d07883b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27256967-5307-4bea-8b82-3d66ce564069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be718f7-e7cc-4ecd-8124-32aa44509aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a17c94-3e44-40c5-bec3-de5f8d6d2c3f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73458dbd-f17c-4e8c-a089-bad38ce833f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b57def-74cc-4061-a5c6-73a5ad1667ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daff6107-330b-445e-9aeb-43b07018c2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe47ad91-4547-49c2-8c74-d7f732119d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd990dd-aebb-4a7e-b76d-55ce100cf7f0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c5c2c0-12e0-4a3f-bf8b-42745ca9e39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5a1c4d-d87f-46a1-9143-93c17bd85fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b162d6-ac42-4653-b195-29655c5101f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae64744-dc45-4114-a56e-507e2bd7f3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee7aa18-60e9-49cc-8b9e-bf3a4b5087eb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d518a9fb-f27e-4c6e-b69d-1296b05c3c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b15b4-5629-44c7-8196-913cd95f3e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2797ea2-c6d9-43a4-9869-29a43dd98d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036fa4fe-8a04-4b7b-98a4-204172cb93cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c319365-2d5f-4099-85fc-5e9444cbb601",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501d016d-3c92-489e-a5bc-ef5caad8b47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9849f2c0-03a8-49e2-aa5a-7ee3b36428fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e444e-7721-47c6-924a-74b19f5a2179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f474bad-93d8-4f6b-a0fa-a1c63d20f9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d7c56b-a589-444c-aa08-ed8c439129ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110d55e1-d452-461b-8022-f5b556e7caae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02b81c2-ae60-479f-9590-8cfc81a69121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c7696b-8097-436a-9700-eaccc49af8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684c2c89-ea50-44e0-be97-c8b1b4b7f579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531808b8-4129-4592-ace1-4f9b7ea14f91",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9dc8a6-9792-46c0-922a-a5e22c867d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db98a1bb-7244-4780-8f19-ed82b3e0e30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1851f-4a60-485a-8cd5-0ad869b09858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd74ae8-96a8-4a00-8ff9-a564dd4c07eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21a0773-9011-4843-ad59-52674fab46d9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d97fad-725c-4d71-8ce7-2c99069b20c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75458d24-8c59-49e7-b48b-30dc51257aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1007e9e2-17b9-45d7-8219-d2d4d92ae5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcab1af2-d0a4-447c-a0ec-d130df82a4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e526af40-030d-419f-a6aa-e9a35155816c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fbd7e4-cf23-4fff-8319-77782a12878a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1f1b05-feb7-4d57-bd1b-557cacddb35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ebfc71-3b9b-4b81-ace7-0c2c4f45b00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bc3906-5d0f-42ca-9fb2-ffb80b5917d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671b17e2-258b-4a2e-a43f-ccb420cf9008",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e84dd5-8388-4cb4-b977-c688d61ebbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e6e707-4046-4c7f-8294-05015ec8aabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5443714b-dbb7-4d69-9c03-7e8d95a4e274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcaff7e-f912-4e3e-b841-0b7deb548f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f29a995-99e6-4b0b-af53-85e87547a75f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7588ad-8818-497e-9f42-dfca5afdba52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c1598f-7477-4db3-bf48-314a6c0ede05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428fe487-c0d8-4c3e-8773-869fa5e95e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd95d72-ddf6-4cf2-865c-832350cbe9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f820c69-8666-4409-ae2d-f5744e5ac9e6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029d3b0c-1408-41f5-b88c-63992c1fb508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b1b9ca-53a4-4921-9297-1b9a24a99266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c052c08-fbe8-41d1-b991-8060efba0f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec55f5cc-b44d-4308-80e1-63226b412802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8f93b9-bea8-4a1f-8204-fe349df2d4f7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd87b4cd-1005-4ec1-94eb-964651dabf9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4198af0e-9f11-48c6-987b-07bce7a395c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36850c1f-d010-4f39-998d-041715d79285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b64b824-41ff-469b-a5ba-7dd68d93cc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebc1c33-ffdd-4bdd-b1b3-389ada35e907",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102618cd-30d4-4519-8255-9e51792741b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d486a98f-c42e-4e35-abe9-f398eff8c266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab44736d-c233-4036-a327-d3eb98017a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ca58f5-6916-4359-99f1-88ecfe89a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6872725-1c21-4de1-93a9-a7a4e22a5486",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a330bdbf-bb9a-4657-a7ee-d904e4ed6434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bcc6a54-94f2-4fe9-bbfe-5eb320daaf3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b1071b-3c3a-4e51-ad4c-a407ca2ffabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46ced25-2c22-420c-a4a6-59b124c970ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e1f965-def1-4f96-95fc-8b699bc24baf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceef18f3-03c2-4e46-bd72-e194e9b79bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc803ae-a3e1-4f3c-b727-2505ddff702e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891ff4ea-eb3f-4b86-bdde-e50adae5a888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476c02e7-0d8a-4545-8b53-5a94dabdf8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b217c615-0ee4-4ad3-a0cc-68d27f7db9a2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c7ee04-518c-4955-9403-93d00f3acf18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2015eb0f-4693-456e-ac6d-b13e762d38df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc428884-2a56-42b9-a8b5-ae89b066bfce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e34692-5b77-48be-87cf-6e240830dfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73773196-ab05-4cd5-88f3-899a76110854",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c7b9c2-1ebf-4abe-aeac-05f246752aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2fc0b8c-b894-443d-8537-ece304164890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d0f08-3771-4b0b-b036-498baf025471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239595a3-8b24-417f-973f-489c81f6bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c053120-7a87-4110-8e7d-efc93e77d292",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca3a14b-49f8-4faa-a168-55fe4cbd15ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66dd90f3-3729-4d1b-bfea-dadc28c4b817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1676862b-a8d1-48e4-97f9-c24307ec3e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746e9129-bfe8-4ef3-af2d-4f058a491a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf92bf0-7fe4-4f9c-b45e-3f1847426d2e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e88a5-8360-4b3f-99fd-c90103be5724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc7c6f51-fe44-406d-832d-cae1d75c8268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4021854-1f16-4c6a-a54f-936c9f12b2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bacbadd-0147-4163-a897-ab7523b46ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9d1700-cd4f-4f89-ae4c-323b7e162322",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b0dce-af11-4b43-9ba2-4e486d713c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d8e8f6-0d55-4433-a321-f9aad9247ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1f62f0-b558-46c9-9d01-178d2936c995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebf15ab-d4a1-4e8d-866d-013ed0dd76c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cd813d-f506-42fa-997c-70fd9d9616b0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3da72-d74b-47f2-be0d-ad96d7eb73d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3972671b-6363-4fa1-966b-c06220c15ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee87130-aee8-491b-afbd-3763e006fb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0fb849-7e0e-47b3-b930-f20e444104ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa47b37-018b-404a-a701-1e6baa189375",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e7abe5-75f8-4912-a662-452891648438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c43d33-364e-4518-87f3-594b99210aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d581221-17a2-49e2-875c-4f53d3d1a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e9327f-50e8-4b6a-aee1-9ed1f676ba5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4e8789-70f9-4082-82b8-8a9c49b03faa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82593231-ff05-4af5-b825-7d2012fed137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1420a2-a14b-4f1c-be24-9157f11131a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b091d5a-e768-4de1-99b7-2397397e07c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c13b0db-9d11-4ae7-8c43-50dd08119581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df01c51b-0244-44ed-b0cc-ab1b92594745",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2c4c22-2481-4922-ac07-2d5b92ca7e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe56392-0a25-4ac6-8b07-7b5cba7ad49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0f180d-8585-4e87-9ddd-bc089c88b31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc861f2-da88-4506-b3ee-0d3069623ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b9b624-4564-4f2a-9c3f-69d2655d8608",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68ca3a4-647f-42f9-b679-c22d2ce0f618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde2f6a9-c925-4443-b030-d02c6fa5a441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d25d39-0fef-4d67-8a12-d538a1e540a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbabbc0-38ba-4dfe-90ec-39226e47b597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a9a8dd-465f-4e0d-91ce-60cbb6faa8e8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8b87ac-0456-41ae-8cdf-a839daff2804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d855865-0480-4f4d-a454-82d1dc1bcdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7325c1-478e-488f-9b65-d58e17d74df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbe89c1-488b-44b3-a5e9-925d7391d396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfd12ba-a873-44d9-bfb3-66b9b40efa0f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6892c7-8aee-4044-84fc-0d7b56fdf9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6504ca8-19e6-4fcb-8143-e0c454c68b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080fab6-e95e-48f5-98a6-1dd95d14b3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3263555c-7470-4278-93d4-125e2845dac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664ca0dc-bc7e-4a0e-ab2b-1a7771ec9699",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59d719e-3bb3-4988-96d0-95338598bef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d2c134-2e19-471b-ba17-49415b1fe4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208e0d1d-ffe2-490c-9739-3db34788eb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac19b65-712c-4e8a-9a0d-d779c9f3fab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06416287-24bf-4187-89a5-fd940ceccef8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a4b4fe-bc04-478e-a592-4885166ce895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4316e856-7798-4e7d-b838-661fd2a2172b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521dbca6-633b-4b87-90c9-8e8a95dfc003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250a5ed7-ef85-4e53-8808-506203915a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3274bd38-5f29-4c6a-977b-795702d3044b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6278c5-2644-4577-93d2-8d309d6030cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc976b9-b6a4-456d-ba21-5561f074709d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e3312c-ee0f-4de7-a8ab-6c1898608c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2637a42-297f-44ab-84c4-b9f8c92dfeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9084a67-8872-4943-8b5c-9e35701e6b50",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73481e1-14a7-4502-bd08-35b57c546f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89267f75-efb3-48a0-9526-b7440d7b907b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be71bb06-098f-4f8a-84c5-aa7c226e0e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c9ea05-eb77-4ee8-b2b9-65dd240cfd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b40181-2def-43a3-9447-4846b41d62d1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f5dde-de72-4b47-ab51-973d7a50fe74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b126d2f-3f18-4e40-9a15-a7be073b5145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2739f3-c4da-4498-b14d-6afc0e1dd84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cfd84c-30fa-453f-ba73-9378a9fdc29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f158df8-85cc-439d-ae5a-f31587cf06a2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deed0c1a-3517-44cb-aa4a-95fee013acc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1da2ba7-9ddc-4970-88c5-4b1496bfd86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e932b9fb-610e-4c7d-85dc-22b72cad2762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1a5853-4fd5-4dc0-b1ae-8bd8c15f3006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b762fe-2c6a-44d8-b098-503e54e503cd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055ff00c-d24d-45b1-8d23-965b55a8faaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1782517d-9ce7-4cbd-8cdb-8ead8d4d2b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938ac4c5-b7ea-43b6-bd57-660a8e6f29dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4ce067-91b9-465a-8a8e-22281e6eef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb1df62-42c0-43b5-9f30-06b4a6b69da9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961b380b-9d83-4d3d-83a6-3778cc643d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2414aafd-648a-49b7-90ad-3c43c786e20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e090ad5b-3ac8-4a80-b235-0fef950cbb27",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15bf21a-6c97-45e0-ba66-967e535ee718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99582682-d5a4-4ba4-9621-f0b7adddc0a0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57da8580-25e9-47df-b7b1-6627e890865a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699cfb93-3b39-4702-b1dd-ebd68c049e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88eb9b3-32ae-40a3-9383-16e9ce5cad64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c16829f-e233-402b-9780-ef5ae03a9285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df819abe-9687-4e03-9b16-75514d0fcff0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d363b68-6efa-48c8-a70a-f9d775738c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52905517-6cc7-4c0f-8915-d84a4484ff39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab3e735-ae29-4066-b09e-009615fdfccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0a1dac-c1b4-4c7b-b26b-4e93628c9da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5122943a-7167-4867-9d17-a3795ebfa508",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccc5147-8e5d-4b9d-909b-9999783b02dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1397c66e-d673-4b96-8a3d-cedca10a8ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aad7c12-4f73-435c-8ca5-06dfdb3d00c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8f58f6-e288-48b6-a2c9-09d76f884bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b8466d-44ac-4084-8975-f8823d537454",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d674325-090d-4a3b-8bfa-f6ed99228167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8989e34-4adb-4976-b8a0-0416aaf93378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf56a34-fbfd-43d8-a8e6-da24a4d85f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8741fb-c183-4cf6-ab1d-09543937d4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec9bf67-f1c2-4726-af41-f4dc5b9ec862",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981918c1-5781-407d-82da-6f411db165e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bcdb590-78bd-4aaa-a27b-82c83ff2498c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964628d7-d881-434f-a9f6-fde6930f87bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ac997b-51cb-4b3b-805d-552aa3e9528b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebbbcb1-2139-442d-bf3d-38302a2a1013",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd359ae-4d5c-4e67-a4a1-8bc956ff0082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "068efd6f-c3a2-4b17-82a0-55ea0f98372f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7730fa-acb6-4abf-b095-c9c7a998a22d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695f7a8f-ca0c-4606-9a52-cb264935ce2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead8ca93-2ed8-4990-85de-9dbd33a84fe9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b908a9e-23f6-4b9b-bf07-ac4535de6e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe243d3c-1019-40bb-b436-0e65777a4b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f87d80-c1c5-4923-a020-a69cf67aaefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8086cb6-6e59-45c3-b933-4ce95493e77e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b427896-fbb1-4420-921a-f765848724d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1689536-3051-4a35-bf38-da3411e58a77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fafba41a-3514-4106-bd79-406012b1a997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ba4fa48-126e-4cd6-b919-415100a953df"
                    }
                  }
                ]
              },
              {
                "id": "9e433069-2bbb-4bb9-a8ae-4d94bef7e564",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ed350ef-cd26-4227-86a1-b19afad2c38f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43624eb9-cab4-4dcc-a843-366ee88551d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "58dd1ece-a685-4393-abfd-94f714d16569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f35d7f-4121-4e36-9a0e-d05666ae715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df80f26b-c260-405d-afa6-1667e06a14de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90b48ca-d4e9-4e12-9fb8-d159782b5af7",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a725590-d573-40b6-ac20-53ba88a83421",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "72cd4f94-61c5-4d52-b177-bb16daa11e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdaf38e-b5f3-44f6-891f-2d600d74b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3f8b3d9-b8a0-49e8-8e19-e00e2b4d1651"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf2f33a-3d1e-4926-9f77-a815338af0d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a40991ca-eedf-4e74-8ff6-38c88c2e5abf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ac23be6-f9a1-4693-b1fd-2c9443fac87a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "942ebfe4-f642-4cb6-8fd3-a9eca197ea0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "1e654724-f3b0-4ef5-b247-89aef5c767c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efc1eec6-979d-4462-9d4e-00c53d599b44",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1bf6ee2-7ec0-4e4c-bc2d-eb3ae3271366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e11b4136-9645-4f4b-a144-ffeb79698b48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19693494-0c41-4b76-9c1a-7520638ef9fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a7e4d40-a4b6-4e42-9fa7-d4d096ec3b09"
                    }
                  }
                ]
              },
              {
                "id": "5a632ee8-8c62-4fa5-9868-3f9c3ad639c5",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a3e55b4-302a-4914-b6ef-7af33747cb7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "879066a9-8894-4769-af91-2ad60333f71d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e461d03-3962-47b1-8c75-0ee55e0b5864",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e20001f-c8cd-4ad3-90ac-a93c89851f44"
                    }
                  }
                ]
              },
              {
                "id": "4b0aa145-3d31-4c48-a5d0-faa490203cb3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7ac5ff1-7af3-453c-8508-0b07926eb20e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff670821-448e-4e2d-befe-db4a88c02bd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a14e09f-6ea0-47ce-8dd3-604f4b46d69d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "942a3087-7632-4c32-884c-1b4c05b14db4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a95ee1cb-8ac5-43cf-bba9-518a5e074a78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "392a545e-622c-4331-94e0-8a380dfcb186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcfd1ff9-3c4f-4d6f-adc6-97a8c4d4e9a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7eb3136e-7f13-4849-93dd-42082a5e3d8d"
            }
          }
        ]
      },
      {
        "id": "10669cec-fff5-4a80-aba0-5af029968818",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "78484e1c-4516-4497-a9f7-23e0ae5a0f3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5f77fd5-4e13-4c31-b20f-c24f41e32ca2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23e0e995-5c4f-48fd-83a5-9bd529346097",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a7f9b4-be2b-414b-b59e-4d4369783f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44499bf5-58e3-4973-a5fd-966df0a57a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8f2f85-d59f-4b1d-a162-87b2e7769b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b25a0c9-8e5b-49a5-9651-8edb7125f7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778265da-f72d-4af8-9861-29c03cd2cbee",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217d5139-a087-4c36-808e-455ec5df4121",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e02e6541-cd2c-4035-9759-8df9ecd2638f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160a5735-1f5a-490d-a711-c25b70f1f9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "609406fb-b536-4d52-a2b3-97ae473ea319"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d23e6913-d13a-45b7-bd83-8a1478493a88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5f7d8d6-8232-4f1e-854e-02174c66ddc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5122b3c3-e5ae-4543-8e42-dfda616eaa6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6135d8c-d951-43d5-a53a-201b9c544623"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "019bcf9b-663e-45f0-bf1d-4fce0a713848",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "d0d9ec63-af90-463d-8695-ad90de3cdea0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32e9b95e-0776-43e1-bdbd-5113d977894d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7449a932-50eb-42f2-ae0f-97cbf1bd7e48"
            }
          }
        ]
      },
      {
        "id": "048b8a55-73e1-4622-a1fc-521a75386905",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cfcc997d-ab28-459d-a6fa-159862bcbac6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2729290a-ef1d-40ca-9af8-f7bc3ac481d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14bb68ba-7e4a-449e-b1f4-ba08b455a411",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2042f165-5a21-4030-a5da-80bba0ff1e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8577a0cc-cc84-4ae2-9771-be8e3ac009d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a74458-e3ff-4c5e-8383-9dcce17c0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf2a88ba-17de-44a8-9094-96ec8f595236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93363fb0-7626-495c-ab62-a2cc2cbd83c4",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e0c4c1-f308-4e43-98fe-b5e9570c3981",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8410921d-0d64-490d-9430-c06b1c6f0f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced372fe-1e2c-4558-a01a-d2fcd2b62cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b00c75a-50a8-43db-85b2-7c9f465900aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17c1c3e0-eb95-426e-bc30-5568cede8f57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3536c5a8-33b2-429d-9fde-b0a873c23921"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bfab8c7-85e0-44a0-9c9d-8ea7cc620397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2197e074-cdaa-41f9-80fb-8e007adb1eba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e40aa2cd-0503-452d-8e29-13acd80dba6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "c23f350c-3557-4c0d-ad9e-8b68696340a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13d3e4a0-3fa1-4d53-b9b8-d514ecf5dec0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85ac1437-a7bd-4d7f-9c50-b106aac60cd0"
            }
          }
        ]
      },
      {
        "id": "12e48701-a1b3-4645-8e4a-ccfdec125434",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "94e17d60-70e5-444b-b616-e4e78e5ba313",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a4e66dd-9df9-4858-b890-9c997fb9127f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95b6ed01-74f4-435a-a10d-5ff6be4bb271",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3892ee-6fe4-4715-aaf1-673b26261a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836fe640-bfa8-4464-89c2-1763773de2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc1e7ec-5265-485d-80b6-65fc094727a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1d5a320-e9de-4ffc-adc6-4959cf473fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c12836-fd78-41b9-aa7d-ca9feeffe840",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a700ca00-9b79-4598-8e5a-e340601682fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5cd0bfe0-34b0-48dc-b938-f1f789e8e35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f67e4-200d-4a00-a25f-0fa0df05ff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "919228e7-b7a0-4043-ab59-5c75fcb18fc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22c09f6e-12a7-45ed-a685-ecfbca1a8ee2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "525c2ddc-4cb5-4100-9cfd-4de23e513e71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7274248a-c6a3-4152-b5f3-e29ac3fd9500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d128e6fc-6203-4bbd-af2f-96b62cd730bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f3b3931-5752-4be3-befc-eb98eb25feba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "21f94a27-e78b-4352-9add-6b5b0b175501"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f003e6fa-f622-45a7-b47e-eb8fc49df36f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0167c878-bcaa-4555-ac87-86db77830355"
            }
          }
        ]
      },
      {
        "id": "15f22170-241f-474d-a5a9-9e6d82c01cda",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "c5c9509e-a479-41de-8742-94d7e7e9fc22",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 172.31527093596046,
      "responseMin": 32,
      "responseMax": 1713,
      "responseSd": 267.270474455311,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664758416633,
      "completed": 1664758459383
    },
    "executions": [
      {
        "id": "44272cb0-a72b-423f-9ceb-f6ddeff0b717",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fb806a11-e74a-4de6-afa7-3d82ca433b40",
          "httpRequestId": "0cfc97c2-4d89-47b9-a241-bd1dc59d57f7"
        },
        "item": {
          "id": "44272cb0-a72b-423f-9ceb-f6ddeff0b717",
          "name": "did_json"
        },
        "response": {
          "id": "c2834bdf-3106-4830-9c70-bc851ffcd01d",
          "status": "OK",
          "code": 200,
          "responseTime": 1105,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe56c5f-8862-4885-8217-ea9efc6d05a3",
        "cursor": {
          "ref": "9543be69-05c6-47cb-8c85-452d95ca8e03",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "16b7d7e7-f241-4243-a448-4f7c13a09e0c"
        },
        "item": {
          "id": "cbe56c5f-8862-4885-8217-ea9efc6d05a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c470e32-7e01-4a8a-afd7-8b6e40ede0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe56c5f-8862-4885-8217-ea9efc6d05a3",
        "cursor": {
          "ref": "9543be69-05c6-47cb-8c85-452d95ca8e03",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "16b7d7e7-f241-4243-a448-4f7c13a09e0c"
        },
        "item": {
          "id": "cbe56c5f-8862-4885-8217-ea9efc6d05a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c470e32-7e01-4a8a-afd7-8b6e40ede0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0994ad6-1cec-4e67-a766-c451d600d8fb",
        "cursor": {
          "ref": "d3cea1d2-e800-48b2-9981-8f3b3f414d6f",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "68b0737e-d551-459b-98a2-9b91e09f8054"
        },
        "item": {
          "id": "c0994ad6-1cec-4e67-a766-c451d600d8fb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "39c106a0-2c89-4d18-97cf-da4d901d99b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 277,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbee494-5c16-4634-b60c-43aebbe6e79d",
        "cursor": {
          "ref": "4681a6e9-8e89-45bb-8723-1e2d80c1b07e",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd090f63-fc07-462a-8431-3f30265eae48"
        },
        "item": {
          "id": "abbee494-5c16-4634-b60c-43aebbe6e79d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "00a4d5a2-989b-485c-ac10-2a06ba4c5cbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4f5e33-a790-49d8-8d21-23acd8c30608",
        "cursor": {
          "ref": "5fb71e57-633a-4244-9656-4bae47789e6a",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f267ee61-7435-4859-9a57-411734a6d27b"
        },
        "item": {
          "id": "7c4f5e33-a790-49d8-8d21-23acd8c30608",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6f0ecd78-b93f-47e2-bfb1-257318e571c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026da653-33d1-4c71-bcdf-aba7d594635e",
        "cursor": {
          "ref": "44ad7a3c-ce0a-4ab2-bae0-f99b38b7dc54",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71e404cf-2b2a-44f9-9663-efc576ec3862"
        },
        "item": {
          "id": "026da653-33d1-4c71-bcdf-aba7d594635e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "45b8d4b4-56bf-4439-a7ba-4902f262cc33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026da653-33d1-4c71-bcdf-aba7d594635e",
        "cursor": {
          "ref": "44ad7a3c-ce0a-4ab2-bae0-f99b38b7dc54",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71e404cf-2b2a-44f9-9663-efc576ec3862"
        },
        "item": {
          "id": "026da653-33d1-4c71-bcdf-aba7d594635e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "45b8d4b4-56bf-4439-a7ba-4902f262cc33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1428d4eb-ecdb-4c49-beec-de9e3708cede",
        "cursor": {
          "ref": "db77933f-d267-4c2a-937d-bf51c8e0b32d",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fc03107a-95a6-4f26-83a6-94ecc822d086"
        },
        "item": {
          "id": "1428d4eb-ecdb-4c49-beec-de9e3708cede",
          "name": "identifiers"
        },
        "response": {
          "id": "296213c5-dd1f-468a-8742-aaa84d1e5127",
          "status": "OK",
          "code": 200,
          "responseTime": 415,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0591836-316b-4295-9165-7a719cb31609",
        "cursor": {
          "ref": "0da2b0d5-453c-4170-a860-9729a30fcc56",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bed696b4-a18f-4a95-9ccd-26f0cfc4c3e2"
        },
        "item": {
          "id": "e0591836-316b-4295-9165-7a719cb31609",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f9c9214e-8fb6-446f-9025-5bc3bfa74dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0591836-316b-4295-9165-7a719cb31609",
        "cursor": {
          "ref": "0da2b0d5-453c-4170-a860-9729a30fcc56",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bed696b4-a18f-4a95-9ccd-26f0cfc4c3e2"
        },
        "item": {
          "id": "e0591836-316b-4295-9165-7a719cb31609",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f9c9214e-8fb6-446f-9025-5bc3bfa74dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0591836-316b-4295-9165-7a719cb31609",
        "cursor": {
          "ref": "0da2b0d5-453c-4170-a860-9729a30fcc56",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bed696b4-a18f-4a95-9ccd-26f0cfc4c3e2"
        },
        "item": {
          "id": "e0591836-316b-4295-9165-7a719cb31609",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f9c9214e-8fb6-446f-9025-5bc3bfa74dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be881561-f17c-4f6c-a889-a1c1771f7e12",
        "cursor": {
          "ref": "197e8d78-80d1-4266-89ac-dc4804baaca2",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dbc5c609-58df-4b9d-8d3a-4f21d1a1b610"
        },
        "item": {
          "id": "be881561-f17c-4f6c-a889-a1c1771f7e12",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d50add98-893c-4af1-9090-aa67ee135089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be881561-f17c-4f6c-a889-a1c1771f7e12",
        "cursor": {
          "ref": "197e8d78-80d1-4266-89ac-dc4804baaca2",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dbc5c609-58df-4b9d-8d3a-4f21d1a1b610"
        },
        "item": {
          "id": "be881561-f17c-4f6c-a889-a1c1771f7e12",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d50add98-893c-4af1-9090-aa67ee135089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f723221b-a2af-4d29-bf71-02cd78fa8e17",
        "cursor": {
          "ref": "0cb7130d-026f-47fe-a7f8-0a827379babc",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c5d04464-bf49-4cc9-a73b-fad63d4b3f41"
        },
        "item": {
          "id": "f723221b-a2af-4d29-bf71-02cd78fa8e17",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "02db760a-fae1-44be-a398-0036ee0a07e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f723221b-a2af-4d29-bf71-02cd78fa8e17",
        "cursor": {
          "ref": "0cb7130d-026f-47fe-a7f8-0a827379babc",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c5d04464-bf49-4cc9-a73b-fad63d4b3f41"
        },
        "item": {
          "id": "f723221b-a2af-4d29-bf71-02cd78fa8e17",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "02db760a-fae1-44be-a398-0036ee0a07e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e872d5-e376-4b22-a213-7dd885d1972f",
        "cursor": {
          "ref": "c73259ef-efbd-4b5b-8b76-0c58704175bc",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6a7995b4-8d58-4000-aa72-e30d44893761"
        },
        "item": {
          "id": "96e872d5-e376-4b22-a213-7dd885d1972f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "75c752d8-256a-4b6f-95ab-f9f0c3df88c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e872d5-e376-4b22-a213-7dd885d1972f",
        "cursor": {
          "ref": "c73259ef-efbd-4b5b-8b76-0c58704175bc",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6a7995b4-8d58-4000-aa72-e30d44893761"
        },
        "item": {
          "id": "96e872d5-e376-4b22-a213-7dd885d1972f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "75c752d8-256a-4b6f-95ab-f9f0c3df88c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdac46bb-9112-4d6c-a632-1a4d38d45471",
        "cursor": {
          "ref": "26cb77c6-c243-45e4-af5d-16330db3ce48",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "be15716d-299e-41a4-a973-3b2b45620404"
        },
        "item": {
          "id": "fdac46bb-9112-4d6c-a632-1a4d38d45471",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "89cf317e-31ba-43ab-aa22-8d7aafc3577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdac46bb-9112-4d6c-a632-1a4d38d45471",
        "cursor": {
          "ref": "26cb77c6-c243-45e4-af5d-16330db3ce48",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "be15716d-299e-41a4-a973-3b2b45620404"
        },
        "item": {
          "id": "fdac46bb-9112-4d6c-a632-1a4d38d45471",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "89cf317e-31ba-43ab-aa22-8d7aafc3577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e3f122-83a5-40ae-ab9f-8bce84ecf40d",
        "cursor": {
          "ref": "0031cea9-1d96-4a15-a53b-5f1bc9a7b372",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e9097523-67dc-4930-95ff-039a22bfc19c"
        },
        "item": {
          "id": "94e3f122-83a5-40ae-ab9f-8bce84ecf40d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c4e322a8-80e9-469d-b753-9e5bdb7f766d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e3f122-83a5-40ae-ab9f-8bce84ecf40d",
        "cursor": {
          "ref": "0031cea9-1d96-4a15-a53b-5f1bc9a7b372",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e9097523-67dc-4930-95ff-039a22bfc19c"
        },
        "item": {
          "id": "94e3f122-83a5-40ae-ab9f-8bce84ecf40d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c4e322a8-80e9-469d-b753-9e5bdb7f766d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fde6b0-546b-4b58-ae90-7221efa17766",
        "cursor": {
          "ref": "de7ebfe8-8ce9-4cdf-bf15-6bb3fff363a8",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6b6ab152-8149-49cf-a70f-baa7c3320ff1"
        },
        "item": {
          "id": "55fde6b0-546b-4b58-ae90-7221efa17766",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "83ddfc7d-95d7-40b9-bad3-1e579d3202c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fde6b0-546b-4b58-ae90-7221efa17766",
        "cursor": {
          "ref": "de7ebfe8-8ce9-4cdf-bf15-6bb3fff363a8",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6b6ab152-8149-49cf-a70f-baa7c3320ff1"
        },
        "item": {
          "id": "55fde6b0-546b-4b58-ae90-7221efa17766",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "83ddfc7d-95d7-40b9-bad3-1e579d3202c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5951b56a-e9c3-46dc-ae07-69f7996c8738",
        "cursor": {
          "ref": "85762386-98b7-4f34-a3eb-ae4c33c5482c",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88bda02a-1cb9-405c-a3c3-996a6e476962"
        },
        "item": {
          "id": "5951b56a-e9c3-46dc-ae07-69f7996c8738",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "73774c88-ef2e-4422-9930-855eae3a7b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5951b56a-e9c3-46dc-ae07-69f7996c8738",
        "cursor": {
          "ref": "85762386-98b7-4f34-a3eb-ae4c33c5482c",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88bda02a-1cb9-405c-a3c3-996a6e476962"
        },
        "item": {
          "id": "5951b56a-e9c3-46dc-ae07-69f7996c8738",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "73774c88-ef2e-4422-9930-855eae3a7b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc5a766-d2cb-49eb-a675-b105bd170f0f",
        "cursor": {
          "ref": "8f56d920-cfd9-4de4-a910-17d7b3c5dd9b",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cd78cf46-f631-4f42-becb-60464e3ecfa7"
        },
        "item": {
          "id": "8cc5a766-d2cb-49eb-a675-b105bd170f0f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "82abb2fb-27a0-4c07-afd2-0c17618b24c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc5a766-d2cb-49eb-a675-b105bd170f0f",
        "cursor": {
          "ref": "8f56d920-cfd9-4de4-a910-17d7b3c5dd9b",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cd78cf46-f631-4f42-becb-60464e3ecfa7"
        },
        "item": {
          "id": "8cc5a766-d2cb-49eb-a675-b105bd170f0f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "82abb2fb-27a0-4c07-afd2-0c17618b24c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46119557-f4f8-4ce2-938f-ef477fea8cc4",
        "cursor": {
          "ref": "6b72f15a-91bb-436a-9644-ae7b3b68052d",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8776837f-e6ab-4c51-9264-1ba769018021"
        },
        "item": {
          "id": "46119557-f4f8-4ce2-938f-ef477fea8cc4",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "3343fc0e-f139-4034-afce-2d51dbe30270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46119557-f4f8-4ce2-938f-ef477fea8cc4",
        "cursor": {
          "ref": "6b72f15a-91bb-436a-9644-ae7b3b68052d",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8776837f-e6ab-4c51-9264-1ba769018021"
        },
        "item": {
          "id": "46119557-f4f8-4ce2-938f-ef477fea8cc4",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "3343fc0e-f139-4034-afce-2d51dbe30270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b09b07-4df9-4308-a9d3-7c757ab8308b",
        "cursor": {
          "ref": "d27c5a6a-0709-40ea-80fc-2188a3eec865",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7c93b76-cab5-43f7-8a97-0c0aaf8b9b63"
        },
        "item": {
          "id": "12b09b07-4df9-4308-a9d3-7c757ab8308b",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "78883e55-a200-42f3-8545-ba34c640708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b09b07-4df9-4308-a9d3-7c757ab8308b",
        "cursor": {
          "ref": "d27c5a6a-0709-40ea-80fc-2188a3eec865",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7c93b76-cab5-43f7-8a97-0c0aaf8b9b63"
        },
        "item": {
          "id": "12b09b07-4df9-4308-a9d3-7c757ab8308b",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "78883e55-a200-42f3-8545-ba34c640708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642355e6-aa90-4395-8054-06d4428cd4e4",
        "cursor": {
          "ref": "2c46061d-6a96-4e0e-8058-09c0f7714289",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6b68619f-fbc2-403b-9286-7055beeeb32f"
        },
        "item": {
          "id": "642355e6-aa90-4395-8054-06d4428cd4e4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "112ca24c-4dc1-49c9-9bdb-71011f02e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1415,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642355e6-aa90-4395-8054-06d4428cd4e4",
        "cursor": {
          "ref": "2c46061d-6a96-4e0e-8058-09c0f7714289",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6b68619f-fbc2-403b-9286-7055beeeb32f"
        },
        "item": {
          "id": "642355e6-aa90-4395-8054-06d4428cd4e4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "112ca24c-4dc1-49c9-9bdb-71011f02e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1415,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71f186f-c06d-4854-8960-695291356621",
        "cursor": {
          "ref": "8c858464-eef6-4e35-a4b0-f681a020dc31",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "83c19bd3-cf34-48aa-a129-4f100378870c"
        },
        "item": {
          "id": "d71f186f-c06d-4854-8960-695291356621",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6ddd44cf-0947-4694-9856-3741ddfa91a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71f186f-c06d-4854-8960-695291356621",
        "cursor": {
          "ref": "8c858464-eef6-4e35-a4b0-f681a020dc31",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "83c19bd3-cf34-48aa-a129-4f100378870c"
        },
        "item": {
          "id": "d71f186f-c06d-4854-8960-695291356621",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6ddd44cf-0947-4694-9856-3741ddfa91a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40244190-8b59-47a0-9586-9c621eda3b26",
        "cursor": {
          "ref": "35a77ff4-e461-4444-811b-dbc2b2a246bf",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a384c5d7-e1e0-4edd-8aeb-7abb435be875"
        },
        "item": {
          "id": "40244190-8b59-47a0-9586-9c621eda3b26",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "6506cce5-8d80-4420-8e3e-a63c59b042b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40244190-8b59-47a0-9586-9c621eda3b26",
        "cursor": {
          "ref": "35a77ff4-e461-4444-811b-dbc2b2a246bf",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a384c5d7-e1e0-4edd-8aeb-7abb435be875"
        },
        "item": {
          "id": "40244190-8b59-47a0-9586-9c621eda3b26",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "6506cce5-8d80-4420-8e3e-a63c59b042b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd1e35-eb8d-4cd5-b7bc-dffbcfdde219",
        "cursor": {
          "ref": "8021b85d-9cde-44e1-8802-5916d002e6f7",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2aae163-f92c-41ae-86ac-f38162dfa7be"
        },
        "item": {
          "id": "80bd1e35-eb8d-4cd5-b7bc-dffbcfdde219",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "f58fbfce-37d2-4caf-9b35-8cbb2acb71f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd1e35-eb8d-4cd5-b7bc-dffbcfdde219",
        "cursor": {
          "ref": "8021b85d-9cde-44e1-8802-5916d002e6f7",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2aae163-f92c-41ae-86ac-f38162dfa7be"
        },
        "item": {
          "id": "80bd1e35-eb8d-4cd5-b7bc-dffbcfdde219",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "f58fbfce-37d2-4caf-9b35-8cbb2acb71f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18742457-60cf-4ac0-952d-fe356814685c",
        "cursor": {
          "ref": "7fb4f000-daf4-4703-8148-4b46075ee2c9",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a96d4009-960f-4ee0-85e4-8f46d6b8b1db"
        },
        "item": {
          "id": "18742457-60cf-4ac0-952d-fe356814685c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "df27286d-f932-4672-921b-c32346c4769e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18742457-60cf-4ac0-952d-fe356814685c",
        "cursor": {
          "ref": "7fb4f000-daf4-4703-8148-4b46075ee2c9",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a96d4009-960f-4ee0-85e4-8f46d6b8b1db"
        },
        "item": {
          "id": "18742457-60cf-4ac0-952d-fe356814685c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "df27286d-f932-4672-921b-c32346c4769e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f711ea26-2efb-41db-95b7-ded4c94053fa",
        "cursor": {
          "ref": "409f6f05-fed0-4977-84e2-704e6847d2db",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "25a0ff19-84ea-40c3-ad68-33c845056716"
        },
        "item": {
          "id": "f711ea26-2efb-41db-95b7-ded4c94053fa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "51a11c17-312a-451d-bd22-a1fd39caa4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f711ea26-2efb-41db-95b7-ded4c94053fa",
        "cursor": {
          "ref": "409f6f05-fed0-4977-84e2-704e6847d2db",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "25a0ff19-84ea-40c3-ad68-33c845056716"
        },
        "item": {
          "id": "f711ea26-2efb-41db-95b7-ded4c94053fa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "51a11c17-312a-451d-bd22-a1fd39caa4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe8dfe-6690-4b6e-8961-59c6faefd726",
        "cursor": {
          "ref": "ec59d14e-b191-4e5e-be2c-0b0b1be21c07",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e58929e0-82e0-4bdc-b869-79096135a65b"
        },
        "item": {
          "id": "20fe8dfe-6690-4b6e-8961-59c6faefd726",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "c2a6822d-b68d-4fb5-ab69-9edf36ea4988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe8dfe-6690-4b6e-8961-59c6faefd726",
        "cursor": {
          "ref": "ec59d14e-b191-4e5e-be2c-0b0b1be21c07",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e58929e0-82e0-4bdc-b869-79096135a65b"
        },
        "item": {
          "id": "20fe8dfe-6690-4b6e-8961-59c6faefd726",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "c2a6822d-b68d-4fb5-ab69-9edf36ea4988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c071b3e-5a0d-49d7-8c77-442e91e970c4",
        "cursor": {
          "ref": "0b84cea3-b4c6-4080-9642-87f5fd59af3e",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "04e89912-f4af-4670-a4cf-489971b80094"
        },
        "item": {
          "id": "0c071b3e-5a0d-49d7-8c77-442e91e970c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "25e185a6-6951-4596-bc4f-14130e774a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c071b3e-5a0d-49d7-8c77-442e91e970c4",
        "cursor": {
          "ref": "0b84cea3-b4c6-4080-9642-87f5fd59af3e",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "04e89912-f4af-4670-a4cf-489971b80094"
        },
        "item": {
          "id": "0c071b3e-5a0d-49d7-8c77-442e91e970c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "25e185a6-6951-4596-bc4f-14130e774a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaeca65-8b9e-4350-851b-87c176a20809",
        "cursor": {
          "ref": "1af8ce35-ee46-47a8-b808-e870be8266e6",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "de6868dd-1c0b-4848-8ce5-12fe4b9f63cb"
        },
        "item": {
          "id": "ccaeca65-8b9e-4350-851b-87c176a20809",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "729f68b8-34f4-4b44-9a39-4aca8a8c34d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaeca65-8b9e-4350-851b-87c176a20809",
        "cursor": {
          "ref": "1af8ce35-ee46-47a8-b808-e870be8266e6",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "de6868dd-1c0b-4848-8ce5-12fe4b9f63cb"
        },
        "item": {
          "id": "ccaeca65-8b9e-4350-851b-87c176a20809",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "729f68b8-34f4-4b44-9a39-4aca8a8c34d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069eaf32-6aba-4f82-a636-92e378e4f651",
        "cursor": {
          "ref": "959404f7-2f41-40b4-bf14-4b9c480260b5",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d195fbbc-7390-4988-9ffe-36e5171472f5"
        },
        "item": {
          "id": "069eaf32-6aba-4f82-a636-92e378e4f651",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "506a48f4-0daa-46ab-8dce-34e1e926a968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069eaf32-6aba-4f82-a636-92e378e4f651",
        "cursor": {
          "ref": "959404f7-2f41-40b4-bf14-4b9c480260b5",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d195fbbc-7390-4988-9ffe-36e5171472f5"
        },
        "item": {
          "id": "069eaf32-6aba-4f82-a636-92e378e4f651",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "506a48f4-0daa-46ab-8dce-34e1e926a968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a589ad-1739-4bfc-a1a0-1ec01689879d",
        "cursor": {
          "ref": "9ad4c5ea-ff06-49c4-8da7-8dc548ee1cd2",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1ed2ac0d-7111-48da-81e1-422db49855a6"
        },
        "item": {
          "id": "d9a589ad-1739-4bfc-a1a0-1ec01689879d",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "3c05f02d-7efc-4319-b061-64ae632d7e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a589ad-1739-4bfc-a1a0-1ec01689879d",
        "cursor": {
          "ref": "9ad4c5ea-ff06-49c4-8da7-8dc548ee1cd2",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1ed2ac0d-7111-48da-81e1-422db49855a6"
        },
        "item": {
          "id": "d9a589ad-1739-4bfc-a1a0-1ec01689879d",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "3c05f02d-7efc-4319-b061-64ae632d7e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c454161-9317-4b54-94b1-7949974dc250",
        "cursor": {
          "ref": "24a2712f-3573-4c69-9d1d-a85b2d9906e0",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "99b564db-7bc6-49aa-bbde-da84e393ac62"
        },
        "item": {
          "id": "6c454161-9317-4b54-94b1-7949974dc250",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d3f9934-5b9f-4a13-ae1f-b05c905d8433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c454161-9317-4b54-94b1-7949974dc250",
        "cursor": {
          "ref": "24a2712f-3573-4c69-9d1d-a85b2d9906e0",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "99b564db-7bc6-49aa-bbde-da84e393ac62"
        },
        "item": {
          "id": "6c454161-9317-4b54-94b1-7949974dc250",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d3f9934-5b9f-4a13-ae1f-b05c905d8433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d92d7d-b71c-4127-908a-288174fc3f5d",
        "cursor": {
          "ref": "505c0cbf-1165-49a2-83b3-f4b3793a1b9e",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b4f10545-4c7b-4cea-b9f1-02ee0ebcc833"
        },
        "item": {
          "id": "e7d92d7d-b71c-4127-908a-288174fc3f5d",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "3e2c33a3-dfb6-4888-be66-8e54a0ad07ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d92d7d-b71c-4127-908a-288174fc3f5d",
        "cursor": {
          "ref": "505c0cbf-1165-49a2-83b3-f4b3793a1b9e",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b4f10545-4c7b-4cea-b9f1-02ee0ebcc833"
        },
        "item": {
          "id": "e7d92d7d-b71c-4127-908a-288174fc3f5d",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "3e2c33a3-dfb6-4888-be66-8e54a0ad07ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df22757e-9f75-4a51-a780-20d70d18c0ca",
        "cursor": {
          "ref": "4ef2b998-fc01-45c1-825c-7891ba18a09a",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4c929569-acfd-43c2-a83c-ef09cca541e9"
        },
        "item": {
          "id": "df22757e-9f75-4a51-a780-20d70d18c0ca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ecd64d30-721a-40ba-9095-d51d43d1e635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df22757e-9f75-4a51-a780-20d70d18c0ca",
        "cursor": {
          "ref": "4ef2b998-fc01-45c1-825c-7891ba18a09a",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4c929569-acfd-43c2-a83c-ef09cca541e9"
        },
        "item": {
          "id": "df22757e-9f75-4a51-a780-20d70d18c0ca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ecd64d30-721a-40ba-9095-d51d43d1e635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce531069-4fed-48e6-bc99-7db24ac003aa",
        "cursor": {
          "ref": "d901a929-4ba5-48e1-8f81-bae046702472",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ef7ae216-fa56-4dd9-aeba-3daee5f0f46a"
        },
        "item": {
          "id": "ce531069-4fed-48e6-bc99-7db24ac003aa",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "db4020bd-e971-4fab-b0bb-2301e29b35fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce531069-4fed-48e6-bc99-7db24ac003aa",
        "cursor": {
          "ref": "d901a929-4ba5-48e1-8f81-bae046702472",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ef7ae216-fa56-4dd9-aeba-3daee5f0f46a"
        },
        "item": {
          "id": "ce531069-4fed-48e6-bc99-7db24ac003aa",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "db4020bd-e971-4fab-b0bb-2301e29b35fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a2056-18c0-442d-a217-9ea4c29ce9ba",
        "cursor": {
          "ref": "99cb479f-7246-43aa-935d-66571298e7b3",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9ae87a0d-54e1-4500-bcc1-20ecce7f13b2"
        },
        "item": {
          "id": "2e9a2056-18c0-442d-a217-9ea4c29ce9ba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a6dfee1b-cbf1-4774-b132-d68542ae038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a2056-18c0-442d-a217-9ea4c29ce9ba",
        "cursor": {
          "ref": "99cb479f-7246-43aa-935d-66571298e7b3",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9ae87a0d-54e1-4500-bcc1-20ecce7f13b2"
        },
        "item": {
          "id": "2e9a2056-18c0-442d-a217-9ea4c29ce9ba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a6dfee1b-cbf1-4774-b132-d68542ae038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1778bc4-bae7-4b62-8131-a21972000f0c",
        "cursor": {
          "ref": "d9af3893-557b-4aac-9563-200f332e6b0e",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c91e3442-4a26-4a4e-990e-9d82ae61ae56"
        },
        "item": {
          "id": "c1778bc4-bae7-4b62-8131-a21972000f0c",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "cbf231d1-69e7-4993-abdc-152a5b8c3a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1778bc4-bae7-4b62-8131-a21972000f0c",
        "cursor": {
          "ref": "d9af3893-557b-4aac-9563-200f332e6b0e",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c91e3442-4a26-4a4e-990e-9d82ae61ae56"
        },
        "item": {
          "id": "c1778bc4-bae7-4b62-8131-a21972000f0c",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "cbf231d1-69e7-4993-abdc-152a5b8c3a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e655206-28b8-427b-bf12-0db6117d8797",
        "cursor": {
          "ref": "a364a132-698d-45f1-bcb7-b48b52a70720",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1437ee1b-e366-446e-a0fb-c2a8852e85d9"
        },
        "item": {
          "id": "8e655206-28b8-427b-bf12-0db6117d8797",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "7b29b7e1-057a-481d-ab3b-beb9b8f74c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e655206-28b8-427b-bf12-0db6117d8797",
        "cursor": {
          "ref": "a364a132-698d-45f1-bcb7-b48b52a70720",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1437ee1b-e366-446e-a0fb-c2a8852e85d9"
        },
        "item": {
          "id": "8e655206-28b8-427b-bf12-0db6117d8797",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "7b29b7e1-057a-481d-ab3b-beb9b8f74c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5794aafa-587c-4a82-a87a-d88b2faa0219",
        "cursor": {
          "ref": "caf227ca-1002-4aee-a73d-df03ebef7eea",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1cef689a-99d6-4825-9980-c769185c5c5c"
        },
        "item": {
          "id": "5794aafa-587c-4a82-a87a-d88b2faa0219",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "48306cd4-cef3-4462-9a15-cf2a132fc164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5794aafa-587c-4a82-a87a-d88b2faa0219",
        "cursor": {
          "ref": "caf227ca-1002-4aee-a73d-df03ebef7eea",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1cef689a-99d6-4825-9980-c769185c5c5c"
        },
        "item": {
          "id": "5794aafa-587c-4a82-a87a-d88b2faa0219",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "48306cd4-cef3-4462-9a15-cf2a132fc164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84369dbd-b8a7-48a7-b906-3e6912b152e4",
        "cursor": {
          "ref": "df1ee53e-dcb7-4e67-8eb4-b2f2ec11d9f2",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "39a0ee42-ef39-49f4-8a77-2b024cddc287"
        },
        "item": {
          "id": "84369dbd-b8a7-48a7-b906-3e6912b152e4",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "a4f75070-53f4-430a-985a-6ac573373678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84369dbd-b8a7-48a7-b906-3e6912b152e4",
        "cursor": {
          "ref": "df1ee53e-dcb7-4e67-8eb4-b2f2ec11d9f2",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "39a0ee42-ef39-49f4-8a77-2b024cddc287"
        },
        "item": {
          "id": "84369dbd-b8a7-48a7-b906-3e6912b152e4",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "a4f75070-53f4-430a-985a-6ac573373678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60808bd-69cb-4c86-8568-5e9ee7ace8ad",
        "cursor": {
          "ref": "6768a1d6-afcc-4c20-a2a1-f1e68d29c804",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1ba5df1e-65c5-4cdc-9024-b5f73c7ecca5"
        },
        "item": {
          "id": "d60808bd-69cb-4c86-8568-5e9ee7ace8ad",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3fd4d2df-052e-42ad-8ed6-05eaf99b93e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60808bd-69cb-4c86-8568-5e9ee7ace8ad",
        "cursor": {
          "ref": "6768a1d6-afcc-4c20-a2a1-f1e68d29c804",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1ba5df1e-65c5-4cdc-9024-b5f73c7ecca5"
        },
        "item": {
          "id": "d60808bd-69cb-4c86-8568-5e9ee7ace8ad",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3fd4d2df-052e-42ad-8ed6-05eaf99b93e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6921eb4-5fec-4bfb-a890-82c6a2e67a03",
        "cursor": {
          "ref": "08e72928-8379-4e87-b096-889618d6a4cc",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6cadec6d-0754-49ab-ac74-d94f8d2973f7"
        },
        "item": {
          "id": "a6921eb4-5fec-4bfb-a890-82c6a2e67a03",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "878b573f-2ce9-4390-ac9d-36bb04868ae5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6921eb4-5fec-4bfb-a890-82c6a2e67a03",
        "cursor": {
          "ref": "08e72928-8379-4e87-b096-889618d6a4cc",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6cadec6d-0754-49ab-ac74-d94f8d2973f7"
        },
        "item": {
          "id": "a6921eb4-5fec-4bfb-a890-82c6a2e67a03",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "878b573f-2ce9-4390-ac9d-36bb04868ae5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22191482-ff1f-44db-ae9e-f2cfb876190c",
        "cursor": {
          "ref": "bf776c95-b897-4ef4-8b72-a9b81e205ede",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9643700d-a098-4474-b516-433018307476"
        },
        "item": {
          "id": "22191482-ff1f-44db-ae9e-f2cfb876190c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d18395ec-bbfa-4344-a304-c32f47732d86",
          "status": "Created",
          "code": 201,
          "responseTime": 970,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "22191482-ff1f-44db-ae9e-f2cfb876190c",
        "cursor": {
          "ref": "bf776c95-b897-4ef4-8b72-a9b81e205ede",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9643700d-a098-4474-b516-433018307476"
        },
        "item": {
          "id": "22191482-ff1f-44db-ae9e-f2cfb876190c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d18395ec-bbfa-4344-a304-c32f47732d86",
          "status": "Created",
          "code": 201,
          "responseTime": 970,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea514d3-5501-476a-90c6-992e528d160f",
        "cursor": {
          "ref": "9c670c56-413e-4edf-b2a7-4cfbd4ea517f",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2dc24f7-7cc1-4458-8e0f-ea0bb6a640cb"
        },
        "item": {
          "id": "eea514d3-5501-476a-90c6-992e528d160f",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b3b23f7c-1058-451c-84f2-0e732e77c99e",
          "status": "Created",
          "code": 201,
          "responseTime": 394,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea514d3-5501-476a-90c6-992e528d160f",
        "cursor": {
          "ref": "9c670c56-413e-4edf-b2a7-4cfbd4ea517f",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2dc24f7-7cc1-4458-8e0f-ea0bb6a640cb"
        },
        "item": {
          "id": "eea514d3-5501-476a-90c6-992e528d160f",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b3b23f7c-1058-451c-84f2-0e732e77c99e",
          "status": "Created",
          "code": 201,
          "responseTime": 394,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe644560-4fc8-44aa-a814-87fb2e54d5c9",
        "cursor": {
          "ref": "eb664f1f-8407-40fe-a892-0b8b1056a380",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "921bd6aa-b709-401b-b0c3-54e1af5ea25d"
        },
        "item": {
          "id": "fe644560-4fc8-44aa-a814-87fb2e54d5c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b49140f5-fb82-4a6e-9842-e89d5ddb415d",
          "status": "Created",
          "code": 201,
          "responseTime": 517,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe644560-4fc8-44aa-a814-87fb2e54d5c9",
        "cursor": {
          "ref": "eb664f1f-8407-40fe-a892-0b8b1056a380",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "921bd6aa-b709-401b-b0c3-54e1af5ea25d"
        },
        "item": {
          "id": "fe644560-4fc8-44aa-a814-87fb2e54d5c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b49140f5-fb82-4a6e-9842-e89d5ddb415d",
          "status": "Created",
          "code": 201,
          "responseTime": 517,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eda8ad-a26b-4bd7-bd17-5f42e46d43a9",
        "cursor": {
          "ref": "c6fd3004-c9f6-4e89-b028-f92c90377836",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a81319f2-fc5d-4107-a884-325e3d9aa304"
        },
        "item": {
          "id": "72eda8ad-a26b-4bd7-bd17-5f42e46d43a9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "023c6801-7c40-4e37-8844-6561c8bfc71f",
          "status": "Created",
          "code": 201,
          "responseTime": 693,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eda8ad-a26b-4bd7-bd17-5f42e46d43a9",
        "cursor": {
          "ref": "c6fd3004-c9f6-4e89-b028-f92c90377836",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a81319f2-fc5d-4107-a884-325e3d9aa304"
        },
        "item": {
          "id": "72eda8ad-a26b-4bd7-bd17-5f42e46d43a9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "023c6801-7c40-4e37-8844-6561c8bfc71f",
          "status": "Created",
          "code": 201,
          "responseTime": 693,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfcf148-f9eb-47b0-b502-728e0a3cff36",
        "cursor": {
          "ref": "a37ee802-3a97-43c3-9fec-6baad68e361f",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "336e5136-d8b8-4b4f-9963-e20beb398ffa"
        },
        "item": {
          "id": "bbfcf148-f9eb-47b0-b502-728e0a3cff36",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "118e24f7-4461-49d4-8b86-c37d6753956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "bbfcf148-f9eb-47b0-b502-728e0a3cff36",
        "cursor": {
          "ref": "a37ee802-3a97-43c3-9fec-6baad68e361f",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "336e5136-d8b8-4b4f-9963-e20beb398ffa"
        },
        "item": {
          "id": "bbfcf148-f9eb-47b0-b502-728e0a3cff36",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "118e24f7-4461-49d4-8b86-c37d6753956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "d2634552-d462-49d0-990a-b447c2e92e6a",
        "cursor": {
          "ref": "2a7e6ee9-8629-4d41-9428-cf7955c915d0",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d43dd8a2-7280-4643-9b52-15db0c781ec2"
        },
        "item": {
          "id": "d2634552-d462-49d0-990a-b447c2e92e6a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "06745010-0589-4900-8e60-dc584d45382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "d2634552-d462-49d0-990a-b447c2e92e6a",
        "cursor": {
          "ref": "2a7e6ee9-8629-4d41-9428-cf7955c915d0",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d43dd8a2-7280-4643-9b52-15db0c781ec2"
        },
        "item": {
          "id": "d2634552-d462-49d0-990a-b447c2e92e6a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "06745010-0589-4900-8e60-dc584d45382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "b325dadb-fb5f-4fcc-a49e-5c0a2cca3648",
        "cursor": {
          "ref": "840b0dae-5fac-4e79-9bd5-c97e3929ef98",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "67d2fc84-2a8e-4854-b25c-e069e0031d8d"
        },
        "item": {
          "id": "b325dadb-fb5f-4fcc-a49e-5c0a2cca3648",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "6924de00-0e9c-47d9-b1ba-efdc91687938",
          "status": "Created",
          "code": 201,
          "responseTime": 436,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325dadb-fb5f-4fcc-a49e-5c0a2cca3648",
        "cursor": {
          "ref": "840b0dae-5fac-4e79-9bd5-c97e3929ef98",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "67d2fc84-2a8e-4854-b25c-e069e0031d8d"
        },
        "item": {
          "id": "b325dadb-fb5f-4fcc-a49e-5c0a2cca3648",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "6924de00-0e9c-47d9-b1ba-efdc91687938",
          "status": "Created",
          "code": 201,
          "responseTime": 436,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c43e1f-174e-438e-81ff-4109993bc2d9",
        "cursor": {
          "ref": "1ccd9db3-e735-4c9b-ad8c-27f50222ff14",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0cf4cb6a-a502-4194-b7cc-edba8ea86462"
        },
        "item": {
          "id": "97c43e1f-174e-438e-81ff-4109993bc2d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ddd7d1f1-13f2-426d-97df-e295b803908e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c43e1f-174e-438e-81ff-4109993bc2d9",
        "cursor": {
          "ref": "1ccd9db3-e735-4c9b-ad8c-27f50222ff14",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0cf4cb6a-a502-4194-b7cc-edba8ea86462"
        },
        "item": {
          "id": "97c43e1f-174e-438e-81ff-4109993bc2d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ddd7d1f1-13f2-426d-97df-e295b803908e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa315106-c1a4-4edc-aece-dd1b00f35f00",
        "cursor": {
          "ref": "7e516b43-5817-4704-a41c-31c4a5dd6087",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b386968-dbc5-4bbe-a1d5-a38d4e95f78f"
        },
        "item": {
          "id": "aa315106-c1a4-4edc-aece-dd1b00f35f00",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "92d9841a-a258-46e8-9246-c6d876a088be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 46,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69ac43-6ff3-400d-bddc-4b4738b2cf69",
        "cursor": {
          "ref": "32a6337b-b4a5-4643-8ecf-26c6ae39f1ce",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "91cc06ce-7173-4087-8a8e-1aea8002c144"
        },
        "item": {
          "id": "7a69ac43-6ff3-400d-bddc-4b4738b2cf69",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fe42134d-27f6-4684-bad5-f722639c789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69ac43-6ff3-400d-bddc-4b4738b2cf69",
        "cursor": {
          "ref": "32a6337b-b4a5-4643-8ecf-26c6ae39f1ce",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "91cc06ce-7173-4087-8a8e-1aea8002c144"
        },
        "item": {
          "id": "7a69ac43-6ff3-400d-bddc-4b4738b2cf69",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fe42134d-27f6-4684-bad5-f722639c789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17bd70-7ddb-4e02-8db4-8a0604c8b0f1",
        "cursor": {
          "ref": "da50cda9-86fc-4100-ae32-4304285e1984",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "79780bf1-24bf-44c9-8026-ff5f384385f3"
        },
        "item": {
          "id": "8a17bd70-7ddb-4e02-8db4-8a0604c8b0f1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "71864caf-45c6-4d73-8a36-34290fe5a0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62046fec-5097-48a8-8b52-b0b91d6ea533",
        "cursor": {
          "ref": "3fe304ec-ed0d-40ce-ac3d-8304ed276439",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f64c4af9-d51a-4d62-b40b-2276589bc1aa"
        },
        "item": {
          "id": "62046fec-5097-48a8-8b52-b0b91d6ea533",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "277bd65b-b4da-4f51-b8ee-0c22e7db54ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f203bce-5f35-4112-b9d4-8d83ceba3e57",
        "cursor": {
          "ref": "f0d577ca-327f-4f38-80ba-dd1cabfaed57",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "176bc370-86bf-4cec-96a4-223d826b5fc9"
        },
        "item": {
          "id": "4f203bce-5f35-4112-b9d4-8d83ceba3e57",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ba3a97c3-92e0-40d8-bbfb-48bb881b5a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006775b2-262a-46b7-87c4-e7df482f0c67",
        "cursor": {
          "ref": "01bf1288-f3fd-4395-aee1-2831c53bd914",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f0cdddb2-e321-4890-b3c5-9318df4bd10e"
        },
        "item": {
          "id": "006775b2-262a-46b7-87c4-e7df482f0c67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "02d96006-95fa-4782-8a90-e531f067d75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a7ad55-1ffa-4641-bec4-cf628757e3b2",
        "cursor": {
          "ref": "c9ae22d2-55bf-48d6-bd9c-011029b32e0e",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe4dd9d7-f2b9-49d5-96de-cb93047b9bb2"
        },
        "item": {
          "id": "83a7ad55-1ffa-4641-bec4-cf628757e3b2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d66bea79-5f18-4ba5-9199-e5a165c5e03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0725af21-1e14-4d16-b5d7-e2b6d57682de",
        "cursor": {
          "ref": "3deefebc-2720-45e8-9dd9-6b823c3cb23b",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e43aca60-e09f-49df-bf8f-66b74781cfb1"
        },
        "item": {
          "id": "0725af21-1e14-4d16-b5d7-e2b6d57682de",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "67a154d3-297f-4d92-a03b-6c2e4fd6d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1713,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc1266b-6487-4fda-bd0f-fb550042a09b",
        "cursor": {
          "ref": "84b09049-b1ef-4868-9d52-662969626e0d",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e09fd3c-b87a-42b3-90e9-bbe1089a21e0"
        },
        "item": {
          "id": "5dc1266b-6487-4fda-bd0f-fb550042a09b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dd9dcd45-d8f3-4841-9b03-b0a6dc210583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0d71ba-3532-43aa-84d4-6813b857a8df",
        "cursor": {
          "ref": "c4c344d3-e043-4d40-9079-e7241135a2ed",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eb5c99c1-71d9-4399-9039-80dcecb52c5d"
        },
        "item": {
          "id": "ba0d71ba-3532-43aa-84d4-6813b857a8df",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "398f7aaa-5dbd-4f2c-95a8-b8e2611789ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64196979-c9a7-4650-b9fa-9841ddea8346",
        "cursor": {
          "ref": "3e0949ec-9518-4808-9ba7-7ca0293ee1c0",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac82c7c7-75db-4d99-9482-c3295ed0caae"
        },
        "item": {
          "id": "64196979-c9a7-4650-b9fa-9841ddea8346",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8b618872-8699-4a2d-b359-2239274e1a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95fb753-ae41-4972-931c-7ef11a3350ef",
        "cursor": {
          "ref": "605baa4e-c836-43a4-8449-28a21d55f024",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "07152721-72c6-4a57-8607-fc67c3e87592"
        },
        "item": {
          "id": "f95fb753-ae41-4972-931c-7ef11a3350ef",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "412bb213-5661-4c4f-a9f5-8161b92a091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b912e-848b-4911-8283-16a426acea8d",
        "cursor": {
          "ref": "6f1e17dc-b74e-47fc-ad88-c79ae6e15334",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d552919b-78d2-48f1-a689-64e0cf9a892c"
        },
        "item": {
          "id": "380b912e-848b-4911-8283-16a426acea8d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8d3668d0-ec69-40d3-bf84-30234d6ff909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8627238f-8a78-4db6-9b6b-a5cf8c8d8ac8",
        "cursor": {
          "ref": "f78b8621-0cdf-4c5f-a60f-671a44766d0b",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "299d9e76-e3d1-49b6-9e4f-2e89f2e2b67e"
        },
        "item": {
          "id": "8627238f-8a78-4db6-9b6b-a5cf8c8d8ac8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "46bcee96-ea93-4731-84f5-26ec2e8bf148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1cf60b-0e11-44c7-80c4-d3c016602a48",
        "cursor": {
          "ref": "aaf9472c-fa11-4de0-938c-955c117ea1f9",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46b78f5a-3350-40d0-8c35-35aed64edd21"
        },
        "item": {
          "id": "1a1cf60b-0e11-44c7-80c4-d3c016602a48",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e3d9699b-cdc0-44b5-9908-5dc6378e9e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec14670b-2629-46d9-9458-c30be9af4fc2",
        "cursor": {
          "ref": "eb618093-c026-44d1-861e-56fed77761ee",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ba41b004-2acb-46a1-bea5-d0325d52e4c7"
        },
        "item": {
          "id": "ec14670b-2629-46d9-9458-c30be9af4fc2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e90751ad-3379-45a1-b6fe-4e33bd6655e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1586f2-1842-463e-a9ac-3254ef4de729",
        "cursor": {
          "ref": "dea990be-0280-4f8c-9011-6a434b7d6c2f",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2bd0933b-a3ec-4b8f-a3ed-8492672ff816"
        },
        "item": {
          "id": "8f1586f2-1842-463e-a9ac-3254ef4de729",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3ecad9d7-2c3e-49fa-8691-4cf0f524ae24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3bd37a-cbf2-4de6-a016-e0d8279d4020",
        "cursor": {
          "ref": "18dc61c4-ffd0-4e91-883b-459e1d87f6a2",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "023af493-94d4-4b4a-a218-7f9b007f2011"
        },
        "item": {
          "id": "dd3bd37a-cbf2-4de6-a016-e0d8279d4020",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "63da2ea9-bbfa-4311-964c-f5d30fb0324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a576b38b-ef2a-4d2a-b00a-da4baa9ebff9",
        "cursor": {
          "ref": "0fc0cee2-bf36-4493-b863-2fba76c26294",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b7981517-d0d5-4f36-a883-71f97bef7a11"
        },
        "item": {
          "id": "a576b38b-ef2a-4d2a-b00a-da4baa9ebff9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c3071bb8-cc7b-4076-9ac9-fda9fbcc1aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1093,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16e45b8-e091-429a-b0d0-ab318a1f7839",
        "cursor": {
          "ref": "a5f2b6a1-8dd5-49d1-8ef6-b9dbd7ed6c6f",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8fd55bce-0401-4c25-9ccf-3f0e5aa3f896"
        },
        "item": {
          "id": "e16e45b8-e091-429a-b0d0-ab318a1f7839",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b1c6790b-f576-47f0-8a41-4030d1d2dd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994c66ac-8eea-4d7d-a4ba-8c2ffd2dcb14",
        "cursor": {
          "ref": "b05c8914-8c4d-4bc7-8b15-1cb1a7acb9ef",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b3f33d1d-eb9e-476a-95c6-c8c15c25e41b"
        },
        "item": {
          "id": "994c66ac-8eea-4d7d-a4ba-8c2ffd2dcb14",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4e389adc-0e38-436e-b9f8-64149e9d73a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a7e771-3656-4cdd-a812-e69fe495a3d4",
        "cursor": {
          "ref": "a81e02f4-0fa8-47bd-b6ac-92c0dd1d31a4",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4764a674-47c3-4485-8579-c64e2d4157fe"
        },
        "item": {
          "id": "98a7e771-3656-4cdd-a812-e69fe495a3d4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e9b8b6de-910a-4017-98fe-c4fcdb64cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395b2253-b4cd-4f2a-8f2e-f9fda93551aa",
        "cursor": {
          "ref": "62974a68-9530-480f-b14a-6d5629971a8c",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b4ea0e0e-830c-4d03-aade-86fd497dd07a"
        },
        "item": {
          "id": "395b2253-b4cd-4f2a-8f2e-f9fda93551aa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ef1094d1-3590-47e4-843e-9c032fcb3583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41368b0-43f3-45d9-8b3d-bdd09bfa50a6",
        "cursor": {
          "ref": "62eb0332-387a-417a-a964-542de7687555",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3d23d444-2bee-45cf-b37a-6690bb5fbb3f"
        },
        "item": {
          "id": "f41368b0-43f3-45d9-8b3d-bdd09bfa50a6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d07b856c-e1db-48c8-821a-aa75af4dc0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4e622d-8d10-441a-add4-102d956a733b",
        "cursor": {
          "ref": "439cf0cc-1962-4971-a5e0-11901c201684",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "603b73b1-041a-4604-a288-f8671a01a63c"
        },
        "item": {
          "id": "ef4e622d-8d10-441a-add4-102d956a733b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f232c89e-e4d4-4fe5-9066-f192e3d8d920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964a6fcc-3d06-45ce-ab97-3e60883cbafb",
        "cursor": {
          "ref": "ccb63351-812e-4061-8be2-603b51c07223",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "88e9fc00-28b2-430a-a1c9-f211950158fb"
        },
        "item": {
          "id": "964a6fcc-3d06-45ce-ab97-3e60883cbafb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "864b4105-ab9f-4501-9b7c-1286e82d8713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2d6d79-c264-4fc4-bb83-0b73c8ce6950",
        "cursor": {
          "ref": "4d07a750-8c23-495b-a373-e434e80d7dab",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ce03c3a0-ae76-482f-aff7-4867a2826318"
        },
        "item": {
          "id": "4a2d6d79-c264-4fc4-bb83-0b73c8ce6950",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1e9f3fc8-bc0a-43e5-be87-9be64e57b345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fe467b-225b-4207-bb2e-248b9aae7542",
        "cursor": {
          "ref": "71e7db78-5226-4cd6-835e-d22f64b01fd3",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3dbce966-9c18-4bea-bc9e-b3bdcbe41cba"
        },
        "item": {
          "id": "94fe467b-225b-4207-bb2e-248b9aae7542",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ee652caf-c1cb-4138-bdd8-795a684b1b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0803ea-2cbd-457c-9cb8-5a4447cef6c9",
        "cursor": {
          "ref": "8b7f576f-c9d1-4c88-ab52-944540171b32",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3e8c7e05-e01f-470a-ad29-5a63280fcffd"
        },
        "item": {
          "id": "6c0803ea-2cbd-457c-9cb8-5a4447cef6c9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7e8c9fee-e29e-435f-9634-fe06303749c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3645d98f-2b73-4f22-bf81-68043e106dd4",
        "cursor": {
          "ref": "c139e41d-ff41-47fd-abbd-0186d1453273",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "953b8dba-8d52-4be3-82b3-e24a098390bb"
        },
        "item": {
          "id": "3645d98f-2b73-4f22-bf81-68043e106dd4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "64930ffd-3b29-4df8-bfb2-0c16536d9af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e236e721-3460-44ac-984d-4ed0b1d4d4d6",
        "cursor": {
          "ref": "ad8ac2b8-7b90-43f3-aad2-4ef24a7cc36c",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fb83c9a7-3ff8-44ab-8c75-3540cc0c2514"
        },
        "item": {
          "id": "e236e721-3460-44ac-984d-4ed0b1d4d4d6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "47f53300-a69d-48f4-9bdd-480c6c095b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b78328-8a4a-48e7-8c0e-6b9c7f9d43e6",
        "cursor": {
          "ref": "a42831c3-5461-4c6c-b693-75394ca7a568",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0b707ae4-02e9-43bd-b217-32d3250fe835"
        },
        "item": {
          "id": "64b78328-8a4a-48e7-8c0e-6b9c7f9d43e6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e9391ba5-432c-4715-b929-6162f61b6311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f8628b-fd8a-4ecc-92f6-2cb25ac7cbe2",
        "cursor": {
          "ref": "43a9ba4d-9ec0-4f12-8544-4c731c460ced",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b6526218-0b75-4f93-98c4-04d88c4d7445"
        },
        "item": {
          "id": "b3f8628b-fd8a-4ecc-92f6-2cb25ac7cbe2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "72e195c9-8145-401a-b627-ef9ba3e45d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f826eb25-2398-4281-b8c2-262d1bfc2ca9",
        "cursor": {
          "ref": "3a1097fa-4872-47a0-a7b4-5bd61e23a47c",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7207a55f-3bb4-41d7-95a2-5b7f89dc93b7"
        },
        "item": {
          "id": "f826eb25-2398-4281-b8c2-262d1bfc2ca9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4eb48c29-8024-4ce0-b981-c8c0fc0ddd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef942cd-a3d9-4bfa-8d89-3e9e7a2e7f76",
        "cursor": {
          "ref": "96b104e8-0da0-444b-a769-09c22e06d8e3",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "62dd93e2-efd8-4342-b86c-0f1698581039"
        },
        "item": {
          "id": "bef942cd-a3d9-4bfa-8d89-3e9e7a2e7f76",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7860c32d-35b5-47fb-bea9-3eff2ce93ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ef090-f8ec-4d3f-888b-d854a3292cf2",
        "cursor": {
          "ref": "e5a0b002-e818-4d5e-b73c-6a1fb922e12f",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "13e50f9d-0a21-4f13-b8d5-799372ee5466"
        },
        "item": {
          "id": "5d3ef090-f8ec-4d3f-888b-d854a3292cf2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1584e918-d6c9-4876-8f14-50bdb63f8bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c3d7fd-078c-422f-9ac5-724ae683a280",
        "cursor": {
          "ref": "36f608c6-fb53-42ec-a080-75fe4171cd24",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4d928098-7b0a-49f1-a217-a3127a4f0bad"
        },
        "item": {
          "id": "63c3d7fd-078c-422f-9ac5-724ae683a280",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ba0f8fca-c439-4c82-a131-c59ad578acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd2b8bd-bffa-4393-b9f4-2e2571f8f868",
        "cursor": {
          "ref": "316fc4b3-8a6c-4841-9d59-cc5b14e44423",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "85cf2f8b-89d6-40f1-9bdd-826de2225344"
        },
        "item": {
          "id": "5dd2b8bd-bffa-4393-b9f4-2e2571f8f868",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "239240b9-0e02-4609-8588-83aaf1082845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b96234-b346-43fd-ad01-b1f77762ea75",
        "cursor": {
          "ref": "a2eb3003-8bba-4b76-8dd1-0865fed2013c",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0425531c-605a-40ae-a98a-f87ac805e2cc"
        },
        "item": {
          "id": "43b96234-b346-43fd-ad01-b1f77762ea75",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "82372590-db12-49af-aa80-35af17c96e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f00f41-b46b-402e-94be-e9cdaa9e7de6",
        "cursor": {
          "ref": "b98e924f-15bd-4e4b-8d3e-1e8baa696fed",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ea486b30-e9ae-4794-912d-4a28bb3c6d43"
        },
        "item": {
          "id": "c2f00f41-b46b-402e-94be-e9cdaa9e7de6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "83881600-a8db-455c-b55c-95aae53a51e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83aa6a0-2b9a-4c46-a99c-37404639a0ad",
        "cursor": {
          "ref": "b31808d4-05d7-4205-a204-39cb66d44d55",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c2f9cc9c-a47c-49d3-b8a8-19e59ff74637"
        },
        "item": {
          "id": "c83aa6a0-2b9a-4c46-a99c-37404639a0ad",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1dc2e5ae-70d8-4e16-8b55-9b9d4216acd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a568a2a8-435f-447a-a2bc-b2e709b3c47e",
        "cursor": {
          "ref": "25ca4175-ae4c-43c9-8b95-07164c7bb6a6",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d09e7934-4a79-4e0f-9b6e-246342817c82"
        },
        "item": {
          "id": "a568a2a8-435f-447a-a2bc-b2e709b3c47e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "36d08f2d-9dc5-4fb3-a373-67f979cffe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8162b3c-75e6-4902-8536-28472dd707d4",
        "cursor": {
          "ref": "98e660d3-a738-49b9-848f-f1fa1f88edfd",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "99ae6665-c4d6-44bf-9c56-a2326f3ade9b"
        },
        "item": {
          "id": "f8162b3c-75e6-4902-8536-28472dd707d4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dba17390-d714-4624-818e-eb2d09bce0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beb860a-0006-49ae-b891-ed7c4a3ca7d1",
        "cursor": {
          "ref": "2e506809-34cc-44ac-9d46-3671c0fe8f00",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1ec189c4-f190-45ee-9db9-01d54a43c4d8"
        },
        "item": {
          "id": "0beb860a-0006-49ae-b891-ed7c4a3ca7d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "da30d8db-cbc1-40af-a2f2-a8edee49ef24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def58aad-18be-4478-af06-4cf0d9874f9d",
        "cursor": {
          "ref": "fff2c853-5988-416a-873e-eb4989eb3848",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2a226a7a-dff3-4a58-91d8-002867168961"
        },
        "item": {
          "id": "def58aad-18be-4478-af06-4cf0d9874f9d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9193c396-8f8b-40ca-a73f-526f33403e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b71dcf-95a9-4a71-8259-78df9115b664",
        "cursor": {
          "ref": "74f9fd44-c566-43c6-972c-0eafc894416e",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a497b3d3-724e-40ce-bb9f-a95bc8afb8a5"
        },
        "item": {
          "id": "18b71dcf-95a9-4a71-8259-78df9115b664",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "977e1c52-370d-4c4b-bc68-e84564f84c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9195aa06-ad58-448f-8aaa-58327bdfa942",
        "cursor": {
          "ref": "acac1d05-9524-4603-8007-ac790569bb5d",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "969eabfd-621b-4545-a096-f144505c6768"
        },
        "item": {
          "id": "9195aa06-ad58-448f-8aaa-58327bdfa942",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ec1e4e9a-2413-4501-a282-c0cbbace0894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e0d3c6-76ee-4ac4-8d53-fc6805546e53",
        "cursor": {
          "ref": "57565cde-90de-44e4-8f3c-831f298f20c1",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8738954a-5e43-43a7-aa4e-11b1d921f83f"
        },
        "item": {
          "id": "d9e0d3c6-76ee-4ac4-8d53-fc6805546e53",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d6608268-17c3-47cf-928f-6191c0ef8f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40632bf9-ef29-4809-bd07-2cc5b95ac89c",
        "cursor": {
          "ref": "d730063c-6fe7-447e-b8ba-c70c9fc1252f",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4789a300-7ad3-4976-9701-41c930c8b62d"
        },
        "item": {
          "id": "40632bf9-ef29-4809-bd07-2cc5b95ac89c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2b43c062-a4cb-4ca4-9bd7-6268aea4d91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8dd294-9a37-4a8c-8e2c-7287ae66d8f1",
        "cursor": {
          "ref": "dfaa17b5-ca2d-4d4a-95b9-34db8e5e0618",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ceb34c02-d5f1-41ca-9d5c-0a9955534a79"
        },
        "item": {
          "id": "eb8dd294-9a37-4a8c-8e2c-7287ae66d8f1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b27db49d-6c8d-4c7d-809a-78508826d0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bd5461-a559-4913-adb5-580f3ada3ea7",
        "cursor": {
          "ref": "4b6aaec2-5bff-430e-bce3-9b99cf49d8ce",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b633c51-14c5-4c2a-958e-68f387acc79f"
        },
        "item": {
          "id": "20bd5461-a559-4913-adb5-580f3ada3ea7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1d2505fa-5a2d-486f-ba80-0e9345f7715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c9ac4b-1edc-47be-a35f-14eadc018b10",
        "cursor": {
          "ref": "ed213f25-72bb-47f4-aabd-824723cbee04",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "124d2491-d3ab-4b86-95aa-74995960ba20"
        },
        "item": {
          "id": "d5c9ac4b-1edc-47be-a35f-14eadc018b10",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "86b7ed52-8630-4ffa-91d6-c48a6c909430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90fa629-008f-4988-8df4-eae75435a7ea",
        "cursor": {
          "ref": "0317af3a-a310-4d3d-b845-8d941148ffa7",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fab6f197-0c9d-4915-99a0-9606f65ad7a6"
        },
        "item": {
          "id": "a90fa629-008f-4988-8df4-eae75435a7ea",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "13461fe3-5012-43a5-9d14-2af9ef295d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200a16d5-6f8d-4fbd-bee1-a9e3c7a7ef8b",
        "cursor": {
          "ref": "ffc949c8-488f-4766-af1a-c9f2f83183b1",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6cde1073-9277-46bc-be47-c8a80f8977b2"
        },
        "item": {
          "id": "200a16d5-6f8d-4fbd-bee1-a9e3c7a7ef8b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8c50510b-898d-4bf8-bafb-0ca24eb982bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a17c94-3e44-40c5-bec3-de5f8d6d2c3f",
        "cursor": {
          "ref": "c84e6fcf-e86f-4b59-846b-6592a2c5b0f1",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0c3a1f64-62f9-4904-9382-083f04025461"
        },
        "item": {
          "id": "b5a17c94-3e44-40c5-bec3-de5f8d6d2c3f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "223acd8d-750e-4ac5-8556-9b73683305b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd990dd-aebb-4a7e-b76d-55ce100cf7f0",
        "cursor": {
          "ref": "aca8e042-a76e-4901-a750-883fec387d3b",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "67a252f5-1104-46df-af5d-29d8032f3020"
        },
        "item": {
          "id": "dbd990dd-aebb-4a7e-b76d-55ce100cf7f0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9138fe0f-2f8f-40a1-a211-23c9fc465f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee7aa18-60e9-49cc-8b9e-bf3a4b5087eb",
        "cursor": {
          "ref": "bfec0a33-1d8f-42dd-8a70-3c9509794213",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "da69d90c-87f6-476e-938d-233ed367d1d1"
        },
        "item": {
          "id": "3ee7aa18-60e9-49cc-8b9e-bf3a4b5087eb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e1108490-2849-45cb-ad1f-6b9cc0f45e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c319365-2d5f-4099-85fc-5e9444cbb601",
        "cursor": {
          "ref": "e6716a8d-078f-4b61-a2d6-c9651ad520eb",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df6a8eca-8187-4425-a572-d8c7b03862f1"
        },
        "item": {
          "id": "5c319365-2d5f-4099-85fc-5e9444cbb601",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "084fd87d-442f-4ad0-aa2d-a9954adb3b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d7c56b-a589-444c-aa08-ed8c439129ea",
        "cursor": {
          "ref": "1dfcaad4-1c7b-43e9-92e4-5b36428e5827",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a837044b-a91d-4a77-aebd-72ebe6b5ead1"
        },
        "item": {
          "id": "58d7c56b-a589-444c-aa08-ed8c439129ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "56e9cfaa-297d-4e4a-8a0f-ad74e6bf02fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531808b8-4129-4592-ace1-4f9b7ea14f91",
        "cursor": {
          "ref": "af9eafe9-ff89-40a4-aa87-dede10ac52de",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4ebd6d03-949d-42a3-ba77-928f0738142b"
        },
        "item": {
          "id": "531808b8-4129-4592-ace1-4f9b7ea14f91",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "87f5f709-8a74-4bfc-a7bf-961cc34c70c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21a0773-9011-4843-ad59-52674fab46d9",
        "cursor": {
          "ref": "f84aa658-f9b7-41ab-8167-31c9f0489237",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4224fbd2-2b34-420b-acd2-bd5fb3b2d291"
        },
        "item": {
          "id": "d21a0773-9011-4843-ad59-52674fab46d9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15b2e17f-e53a-4932-8211-540753ea8fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e526af40-030d-419f-a6aa-e9a35155816c",
        "cursor": {
          "ref": "70acee77-091b-4985-9ba1-e4ba5f2a4f51",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ca8f0c30-50cd-48ad-a423-f568eaf5e661"
        },
        "item": {
          "id": "e526af40-030d-419f-a6aa-e9a35155816c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4ee05a1a-41b8-4a04-9555-f93da37e319c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671b17e2-258b-4a2e-a43f-ccb420cf9008",
        "cursor": {
          "ref": "e1ccda5a-a9d4-473b-abc4-380976b872b4",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86204da0-4fc2-407d-b601-e22f3de28b39"
        },
        "item": {
          "id": "671b17e2-258b-4a2e-a43f-ccb420cf9008",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "611ef933-ad87-4e91-9aef-9221bf1a01f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f29a995-99e6-4b0b-af53-85e87547a75f",
        "cursor": {
          "ref": "a1d4aaae-a365-4820-a778-5252ce2c3c92",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "47389068-0fef-474c-90a8-afc601c7929a"
        },
        "item": {
          "id": "2f29a995-99e6-4b0b-af53-85e87547a75f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e956c4ac-3485-447a-b4ad-4ed001819b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f820c69-8666-4409-ae2d-f5744e5ac9e6",
        "cursor": {
          "ref": "903543a6-817b-444e-8885-55dfa4d9d91f",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "88160bc5-9d75-4ee0-8d2e-4bd779b5e6ed"
        },
        "item": {
          "id": "4f820c69-8666-4409-ae2d-f5744e5ac9e6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c285032e-b375-4ab4-a2cd-ff0c2e361bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8f93b9-bea8-4a1f-8204-fe349df2d4f7",
        "cursor": {
          "ref": "71ec8d3b-bb29-4ebc-8479-7f6bb7122b7a",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ac510b47-486e-4d77-8e20-dd1a8c2a40fd"
        },
        "item": {
          "id": "ec8f93b9-bea8-4a1f-8204-fe349df2d4f7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6ac0a3ea-2501-45b2-a247-b1c729daff79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebc1c33-ffdd-4bdd-b1b3-389ada35e907",
        "cursor": {
          "ref": "6aa0db57-1171-4999-8d54-068d5cd1828e",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "80e1c50f-f1c2-4e9a-89c4-df2ae212aff1"
        },
        "item": {
          "id": "eebc1c33-ffdd-4bdd-b1b3-389ada35e907",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a6b79d6c-6974-4c1f-8947-43d8965af0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6872725-1c21-4de1-93a9-a7a4e22a5486",
        "cursor": {
          "ref": "20b2047c-4619-4802-8c95-70d91a5848c0",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d7c32060-46c9-4be0-8b25-0317f7dcb9f2"
        },
        "item": {
          "id": "e6872725-1c21-4de1-93a9-a7a4e22a5486",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "39c293e4-0435-4d37-8bcb-886a2dfff206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e1f965-def1-4f96-95fc-8b699bc24baf",
        "cursor": {
          "ref": "c2832efc-5319-45b6-bd20-0e640b1528fa",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a0f91945-92be-40a9-aacc-148043b0b5e3"
        },
        "item": {
          "id": "56e1f965-def1-4f96-95fc-8b699bc24baf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "24a67de9-dbc8-4f8c-93a8-ff941efd59fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b217c615-0ee4-4ad3-a0cc-68d27f7db9a2",
        "cursor": {
          "ref": "6afff488-7e1a-4421-adb3-9c2c4fcb39c1",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fef1ab7f-239c-4729-9815-4757d17ea5d6"
        },
        "item": {
          "id": "b217c615-0ee4-4ad3-a0cc-68d27f7db9a2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b0abbf31-efa2-4752-8271-60d07a2e8571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73773196-ab05-4cd5-88f3-899a76110854",
        "cursor": {
          "ref": "c4ac56ee-36b9-4ef3-8aa4-97736275d5be",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "514b8753-6820-49b1-9568-c0ce0c9d6798"
        },
        "item": {
          "id": "73773196-ab05-4cd5-88f3-899a76110854",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "507be3bd-b099-4f4b-a317-039561fe8e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c053120-7a87-4110-8e7d-efc93e77d292",
        "cursor": {
          "ref": "507ce292-5827-4132-8e64-9ec4c3882259",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "333c2155-7afa-403c-ba09-17d69665a285"
        },
        "item": {
          "id": "3c053120-7a87-4110-8e7d-efc93e77d292",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bd1be878-5f8b-4e46-a05d-51512cb273f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf92bf0-7fe4-4f9c-b45e-3f1847426d2e",
        "cursor": {
          "ref": "ca818211-2843-489f-8859-6e97bbf8fa44",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8ef07eb-d5ee-4f01-9de9-7a1752a49522"
        },
        "item": {
          "id": "dcf92bf0-7fe4-4f9c-b45e-3f1847426d2e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7ea1bb42-da0b-47df-8f82-5c00130b2a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9d1700-cd4f-4f89-ae4c-323b7e162322",
        "cursor": {
          "ref": "00586bc9-661c-47f0-bfa2-e3714a0d3481",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6f8f3c92-b736-433c-bd19-a9f7c438b485"
        },
        "item": {
          "id": "be9d1700-cd4f-4f89-ae4c-323b7e162322",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1efb2e8a-3e97-4624-bd23-531be06d5071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cd813d-f506-42fa-997c-70fd9d9616b0",
        "cursor": {
          "ref": "55a1a43b-dff2-47aa-885d-8d48a2573da6",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c8e1fb19-ddb2-4620-b7d5-816cbcb1ff9c"
        },
        "item": {
          "id": "33cd813d-f506-42fa-997c-70fd9d9616b0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9d7b491d-c046-4689-b557-d9bd32720f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa47b37-018b-404a-a701-1e6baa189375",
        "cursor": {
          "ref": "3607847d-5b29-43d4-9467-f237a5489554",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bcca6795-0482-4f62-b8df-f87e966677cc"
        },
        "item": {
          "id": "afa47b37-018b-404a-a701-1e6baa189375",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "05133c28-3078-4386-9c10-73960efe7973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4e8789-70f9-4082-82b8-8a9c49b03faa",
        "cursor": {
          "ref": "2223f945-3e3b-49be-962f-3c2b534cfd71",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "56c57959-374f-41b8-9d3a-e60de3ba2be8"
        },
        "item": {
          "id": "ff4e8789-70f9-4082-82b8-8a9c49b03faa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3ca10cea-fc42-4cf2-9b17-cbea67af8f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df01c51b-0244-44ed-b0cc-ab1b92594745",
        "cursor": {
          "ref": "1c84d1e3-0e23-41bc-ac24-c974e7a5ad06",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6eebdf1d-b3f7-4b2f-a1ea-700facc48076"
        },
        "item": {
          "id": "df01c51b-0244-44ed-b0cc-ab1b92594745",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "31aab683-71f3-4ccb-ab0b-d1ba03ab071f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b9b624-4564-4f2a-9c3f-69d2655d8608",
        "cursor": {
          "ref": "61c183fc-7dd5-435e-a168-cdc52e3feb7b",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "333529c1-33c1-4c7f-be9b-5f9f10a971ad"
        },
        "item": {
          "id": "f1b9b624-4564-4f2a-9c3f-69d2655d8608",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "34b6f8b0-385a-4e40-be8c-490868ebdf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a9a8dd-465f-4e0d-91ce-60cbb6faa8e8",
        "cursor": {
          "ref": "5c6eac3e-03a8-4778-9ff4-5c4e7f86f887",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0741a4dd-7224-4693-af15-4ce976fc0164"
        },
        "item": {
          "id": "12a9a8dd-465f-4e0d-91ce-60cbb6faa8e8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3989a8fb-6bee-41fc-80c7-ae38ebbd61c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfd12ba-a873-44d9-bfb3-66b9b40efa0f",
        "cursor": {
          "ref": "72bb37c5-d1b7-4a6c-b7e7-b87cff9ec6b0",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5587650c-0275-4459-b22f-b3942126fe90"
        },
        "item": {
          "id": "8bfd12ba-a873-44d9-bfb3-66b9b40efa0f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c08fa60e-377f-4c83-9d45-fcb166cfebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664ca0dc-bc7e-4a0e-ab2b-1a7771ec9699",
        "cursor": {
          "ref": "9434c02a-80eb-4c6a-9d69-b5d6fcf5b820",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf17d2de-ee9d-458c-b2f1-4eebe7523c3a"
        },
        "item": {
          "id": "664ca0dc-bc7e-4a0e-ab2b-1a7771ec9699",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "623f817d-97ce-4d85-8c32-dca5b52edf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06416287-24bf-4187-89a5-fd940ceccef8",
        "cursor": {
          "ref": "52e799af-fa82-49b1-bf58-8b18b57d66d6",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7edb18c8-1718-43c6-8585-f4b1744631d7"
        },
        "item": {
          "id": "06416287-24bf-4187-89a5-fd940ceccef8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c12962c-37b1-4fe6-b08d-512053e4e1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3274bd38-5f29-4c6a-977b-795702d3044b",
        "cursor": {
          "ref": "58997bcf-7a89-4b4e-a26d-dbc702c62563",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "641737e8-e70e-477d-81ea-74b0c6c58bda"
        },
        "item": {
          "id": "3274bd38-5f29-4c6a-977b-795702d3044b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7fedaef7-ed2e-47a1-8d01-0ecd69ff7895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9084a67-8872-4943-8b5c-9e35701e6b50",
        "cursor": {
          "ref": "8d05dbe2-b213-4f99-b7c9-55e2167c6935",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cbe5c348-8602-475b-85dc-29e2f43b58ee"
        },
        "item": {
          "id": "d9084a67-8872-4943-8b5c-9e35701e6b50",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9e2d453d-c050-4341-a6e2-07d8ddfcfdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b40181-2def-43a3-9447-4846b41d62d1",
        "cursor": {
          "ref": "1c629bf2-95a2-4e82-a39b-a429356160bc",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4b530196-eae9-48e7-9644-171fffbdff28"
        },
        "item": {
          "id": "20b40181-2def-43a3-9447-4846b41d62d1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0108c82a-9a41-4966-83c4-01b968b7701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f158df8-85cc-439d-ae5a-f31587cf06a2",
        "cursor": {
          "ref": "435e3895-5bf8-4193-828d-2734e9ef4bf9",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "986c4760-de1a-4093-ac75-b4ac2afdeaab"
        },
        "item": {
          "id": "2f158df8-85cc-439d-ae5a-f31587cf06a2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fe9c9445-5228-41b4-bbf3-e64fceee7bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b762fe-2c6a-44d8-b098-503e54e503cd",
        "cursor": {
          "ref": "d48f301a-97fb-458a-b73a-8a3145a9cf17",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2268edaa-3d87-49a5-a95a-6a173bde450d"
        },
        "item": {
          "id": "35b762fe-2c6a-44d8-b098-503e54e503cd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1cfa6850-7159-4b88-b269-00bcab0cef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb1df62-42c0-43b5-9f30-06b4a6b69da9",
        "cursor": {
          "ref": "9b70992a-cf1a-4291-bd6a-c21af24d5012",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "54568f3e-1acd-4e36-b914-b5157d1bee80"
        },
        "item": {
          "id": "adb1df62-42c0-43b5-9f30-06b4a6b69da9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2e6d06bd-4569-4d59-b505-61a9a92fa962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99582682-d5a4-4ba4-9621-f0b7adddc0a0",
        "cursor": {
          "ref": "d1f45d1c-2fda-4446-af95-e06258f4a4ff",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3377715b-75fc-4d90-9e0e-f53f1886eadf"
        },
        "item": {
          "id": "99582682-d5a4-4ba4-9621-f0b7adddc0a0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aaa36679-2b66-4583-a241-5da5e112269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df819abe-9687-4e03-9b16-75514d0fcff0",
        "cursor": {
          "ref": "b46fd2bb-6ba9-4247-b36b-62546a5e664e",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8af34369-5ce9-4eb6-84ad-71181a3aa359"
        },
        "item": {
          "id": "df819abe-9687-4e03-9b16-75514d0fcff0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "495cbbae-1587-4411-85f0-6e46c540e8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5122943a-7167-4867-9d17-a3795ebfa508",
        "cursor": {
          "ref": "b7c8438c-dee1-451c-99a5-8c85eb6cc70e",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "755a638c-c839-4ada-b072-023b31484cf3"
        },
        "item": {
          "id": "5122943a-7167-4867-9d17-a3795ebfa508",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "38ced578-0da4-40b2-9bf7-58dfd0e565af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b8466d-44ac-4084-8975-f8823d537454",
        "cursor": {
          "ref": "87855a4a-3827-4dbe-be25-74d615bf34a7",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd05e85d-52af-454a-a9fd-f46057fe6236"
        },
        "item": {
          "id": "54b8466d-44ac-4084-8975-f8823d537454",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1daef261-a9d8-48cc-b562-56e9b2fcc2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec9bf67-f1c2-4726-af41-f4dc5b9ec862",
        "cursor": {
          "ref": "b4fdab0f-6a58-406b-960f-fa78f6663802",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9bdee996-9408-4491-a1ab-85c35da9feda"
        },
        "item": {
          "id": "5ec9bf67-f1c2-4726-af41-f4dc5b9ec862",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "047e26d3-0644-4c1f-9827-3fbe2557e518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebbbcb1-2139-442d-bf3d-38302a2a1013",
        "cursor": {
          "ref": "bd64b4be-e429-47de-a9f7-86359b152c13",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "184dda48-9d6d-4d68-954c-69574085e649"
        },
        "item": {
          "id": "2ebbbcb1-2139-442d-bf3d-38302a2a1013",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae02e94f-0ae7-4e0f-b749-6cde3c527088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead8ca93-2ed8-4990-85de-9dbd33a84fe9",
        "cursor": {
          "ref": "d556fff2-d359-4dda-ad4f-70743155553c",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "250ea882-cd48-4a21-863f-5dec628fbd8a"
        },
        "item": {
          "id": "ead8ca93-2ed8-4990-85de-9dbd33a84fe9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ef32baa2-0ca9-498e-9edf-6fbbff572007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed350ef-cd26-4227-86a1-b19afad2c38f",
        "cursor": {
          "ref": "82479aaf-d9a7-411d-aa39-f7231f73bc41",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2bac7ba1-b426-4823-83ee-6768b6a9483e"
        },
        "item": {
          "id": "0ed350ef-cd26-4227-86a1-b19afad2c38f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "77784b15-7a79-48f4-8613-9a1999a21a2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90b48ca-d4e9-4e12-9fb8-d159782b5af7",
        "cursor": {
          "ref": "fae4ad4e-29ff-4af3-9509-fed29ab0d366",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b5a69aa-b9c9-4d74-8f30-eb7eb6797846"
        },
        "item": {
          "id": "a90b48ca-d4e9-4e12-9fb8-d159782b5af7",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "185b2693-8b82-4433-958f-e222554152ee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc1eec6-979d-4462-9d4e-00c53d599b44",
        "cursor": {
          "ref": "b1aaa6d2-f056-4167-b86d-4a99761fb3cd",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac37c3e5-aec1-4f17-9061-d0ab4c38644c"
        },
        "item": {
          "id": "efc1eec6-979d-4462-9d4e-00c53d599b44",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c4a1cd4d-9b47-488c-8e96-3cfb75ea9f3d",
          "status": "OK",
          "code": 200,
          "responseTime": 1563,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a632ee8-8c62-4fa5-9868-3f9c3ad639c5",
        "cursor": {
          "ref": "02828f62-2d4a-4f3e-a048-7ceb4d79857c",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1e9cb323-8bbd-4a85-8f1e-d314afb9f6e9"
        },
        "item": {
          "id": "5a632ee8-8c62-4fa5-9868-3f9c3ad639c5",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "853cf9e5-20f3-4b69-a3a8-9ee3258fbfd6",
          "status": "OK",
          "code": 200,
          "responseTime": 1287,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0aa145-3d31-4c48-a5d0-faa490203cb3",
        "cursor": {
          "ref": "66b83efd-6d14-49b7-bc4d-832045df7490",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fd9a70b0-b003-46f0-a036-210c7d8cd545"
        },
        "item": {
          "id": "4b0aa145-3d31-4c48-a5d0-faa490203cb3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a4e0f55c-3f9b-4884-8b96-3b7b1b939660",
          "status": "OK",
          "code": 200,
          "responseTime": 1085,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e0e995-5c4f-48fd-83a5-9bd529346097",
        "cursor": {
          "ref": "4079fc0f-5bf7-43f9-934e-6533abb00fe0",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "95321adb-df84-47b6-83fe-fca54b1b947f"
        },
        "item": {
          "id": "23e0e995-5c4f-48fd-83a5-9bd529346097",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "98d71594-5a62-45bb-a76c-04fdee56e9da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e0e995-5c4f-48fd-83a5-9bd529346097",
        "cursor": {
          "ref": "4079fc0f-5bf7-43f9-934e-6533abb00fe0",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "95321adb-df84-47b6-83fe-fca54b1b947f"
        },
        "item": {
          "id": "23e0e995-5c4f-48fd-83a5-9bd529346097",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "98d71594-5a62-45bb-a76c-04fdee56e9da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778265da-f72d-4af8-9861-29c03cd2cbee",
        "cursor": {
          "ref": "864c0700-34c8-46f3-9634-e4704c9ec4ce",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "230a0f2a-5b2a-4286-840e-36943429d0b9"
        },
        "item": {
          "id": "778265da-f72d-4af8-9861-29c03cd2cbee",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b72b53a6-1300-4767-9244-8e8a2b1693bb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 44,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb68ba-7e4a-449e-b1f4-ba08b455a411",
        "cursor": {
          "ref": "eb381e23-3abd-4164-867f-c612e493859a",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2fe03828-1407-46af-bc20-d20f802eba20"
        },
        "item": {
          "id": "14bb68ba-7e4a-449e-b1f4-ba08b455a411",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "65422b42-bf4a-411b-9db4-234add422706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "14bb68ba-7e4a-449e-b1f4-ba08b455a411",
        "cursor": {
          "ref": "eb381e23-3abd-4164-867f-c612e493859a",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2fe03828-1407-46af-bc20-d20f802eba20"
        },
        "item": {
          "id": "14bb68ba-7e4a-449e-b1f4-ba08b455a411",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "65422b42-bf4a-411b-9db4-234add422706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "93363fb0-7626-495c-ab62-a2cc2cbd83c4",
        "cursor": {
          "ref": "c19decd5-9b09-40da-8005-4290be5266f2",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8d9ce568-49b5-4039-b036-1164e39c5071"
        },
        "item": {
          "id": "93363fb0-7626-495c-ab62-a2cc2cbd83c4",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4568b028-71cd-4089-a802-b572d23ec6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "95b6ed01-74f4-435a-a10d-5ff6be4bb271",
        "cursor": {
          "ref": "08954650-8c45-4a2c-b7b9-87f4d7f5b1c0",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dcb9bbd6-bab9-4b10-8db3-87a40e88a466"
        },
        "item": {
          "id": "95b6ed01-74f4-435a-a10d-5ff6be4bb271",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "08073bf1-e402-4704-95ae-06c62c1807ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b6ed01-74f4-435a-a10d-5ff6be4bb271",
        "cursor": {
          "ref": "08954650-8c45-4a2c-b7b9-87f4d7f5b1c0",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dcb9bbd6-bab9-4b10-8db3-87a40e88a466"
        },
        "item": {
          "id": "95b6ed01-74f4-435a-a10d-5ff6be4bb271",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "08073bf1-e402-4704-95ae-06c62c1807ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c12836-fd78-41b9-aa7d-ca9feeffe840",
        "cursor": {
          "ref": "b24cd899-0929-4574-bfd1-79461acae745",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5c37d48d-5b31-40d2-b3aa-0ef808b71e7d"
        },
        "item": {
          "id": "55c12836-fd78-41b9-aa7d-ca9feeffe840",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c9054ec7-414d-4c83-a9e8-cfa38a110497",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 39,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}