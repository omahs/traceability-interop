{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb25cece-5b77-4430-ba18-70a65350520d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7505093f-7d19-47a6-a089-8dd5baf4be61",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2389be3f-dc0b-4ed9-9d4d-9bc49d2c23f8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0abfdf34-9e64-4983-952f-f7bb17deea34"
                }
              }
            ]
          },
          {
            "id": "8225fb44-6c7b-4091-ad7a-4b38180f416b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20c4e766-0e97-4d1a-b0f9-ca1e285977f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "845bda5c-fb62-48a9-bc95-f4fb05067da5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7afb2894-576e-4904-95ff-de17c2a082c9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a7c846ec-f7e0-4bd9-8a6c-66730645778f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1870c011-05da-459c-99bc-56a45b0e53dc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f03d96e6-6fc6-4a08-a0c0-36ad4d602ba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad98fcab-526a-4642-b17b-eb56c5716ede"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "849fefb7-b3b9-4414-bee1-eda4db073d31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4550a7be-b7f1-473f-9353-2fd63f5bf342"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09be0cb0-471d-4359-bfae-cebe31c98d3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee213f6a-7a30-4833-bdff-e362f45a8f49"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8e988f6-58ed-4329-9f81-995d3a05917d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f9ccbc77-4dff-4faf-806b-caaf914287c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "679cb954-2024-417e-acba-40a0d87522ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feff6b3d-cdfd-43df-a92a-71a30944ef43"
            }
          }
        ]
      },
      {
        "id": "177042aa-f5a2-4811-b97c-6aece713c98e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad98ef6f-fb66-4a7f-9b8d-6352499d4c6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3931ccd5-0e57-43e9-aa82-bab94fee66cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11d0ccfe-b7e0-4df1-aea3-520c178f7e81",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49323b4-858b-4e87-915b-3552c8c868a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19bc9a7b-641a-4db5-96e9-a2f7565f38c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78bb41c-5f03-4703-9f69-a8fbb7b7f1e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e7b09-1704-4806-9b24-c682ef562de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e50f54e0-ac49-461d-86dc-1920e128c9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0533e63-486b-47b6-8ff5-5a7d100b28c3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aae565d-085f-4143-b6ea-53a0f8838b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "090e8df4-a8f4-4bcc-a758-7540db89ad51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bb3bcac-14b3-4d45-ac8e-99b7750558d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34f7a5e8-5c2d-45c0-8740-5251fea532a7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a47b9-f830-416e-8604-932220f80115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9944d177-3fc1-4af0-97e3-2c4a7e6259db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6f530a-469e-4dc1-a6bc-b0e5229b517f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910b4849-60a2-495d-8fa7-00a59c55a57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fb56c0-f586-4dd7-a99b-cdb52ddc35e8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829d148-8de7-4085-b3b5-bbbd43d99d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a76f70d4-0650-4bf4-bac8-12c7e38cc0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e069695-ee70-4f9d-91e6-36555383ac9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f85a1c07-4798-48ad-8da0-8e05df17b8c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9bd2b73c-4db8-4332-9462-02ecebee8e30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2684d626-f00e-4bdd-8ff6-e6362f74083a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b7e17c6-41d3-421b-a077-904a25890a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d0f3fb07-4d6a-4801-bda4-691596f82eca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f566241f-fa19-4400-81bc-ac5b96bde226",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e84647b6-4e7c-4ada-8e25-80028485b91c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "942207c8-cdb7-4cc2-aa3d-3ab5e1ff4fcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afa78339-9ea0-4351-8115-652e94608341"
            }
          }
        ]
      },
      {
        "id": "0f0a83ce-4374-48b5-9037-de421edfe98f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "888dcdf3-b004-4122-981e-612f93eb17c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaa02f9a-b47a-4869-9f23-9b779b86a7cd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c87c7b16-69b2-4ad5-b7ec-f4477b240010",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b31db1d-c4d6-4f52-a3f5-df94ff04bdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae4b936-9121-41da-ac2a-7ac328488ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd25e1bb-efa3-423a-b514-d8a392a99a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad039b2-1f42-4b2a-9971-020c2c7c2745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e606af-5cbf-4f50-832f-7094049de0f2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0204d8ed-a9af-4dda-b9d8-4f9cb23bd837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbcdc46-4406-451a-a034-dfea8e6f0789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8d83af-fae3-40c6-a447-5e94bcf052af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6deb65cd-27d7-4d70-a64f-254477a36d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9287c54-f219-4cdf-9e61-870a5cc54189",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9112db34-5220-4b03-a1db-b8991cab3c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47db406c-099c-468c-a699-92abecba7ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc47fcc-bd68-46af-88ca-6179610fd8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3bd0b23-fdbe-49eb-be98-9efaa74df73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc0c248-9080-46c6-b240-ddcdd5370bd3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edc22df-d900-4821-830a-255f85699527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8f0bb6-8f1a-44c6-b355-1bb5434fae5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92729dee-e438-41cc-9f5e-4d0da0b2d105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce66f77-2bc7-4b30-8f88-80874542b270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70afc4df-c07f-4c4b-af84-3d4c52184529",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ccf410-cfea-4ddb-b80d-5d7337b1ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb52be1-9c8a-4546-8380-dc59b9b6851f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a70b4da-556d-429e-98a6-29af43f7fb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f3e1c75-da33-44b0-b3ad-910ed2802add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24044c83-a811-44bc-a309-1e15b2b54d8f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353c0a7f-ae0e-474e-91e3-d29dc97b713a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b12ac6-3028-46fb-b7e7-6a333c933547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e85989-e196-4288-bda5-dac256f72c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fb0afc6-7bd1-41ee-b307-df3e3f05ab60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df36732-6b38-4cf4-9866-27eb882e434c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a868c-114b-401a-b19e-565901f8ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e2fd65-a0e5-4d8c-b019-d2861ef99807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7784139-ca53-4fb2-9c68-6ddff09ce9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8c0b98-f956-4aaa-8a75-a711ddd19a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1db4fee-e968-4eed-9ca9-c10d9ae6a6dc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458deb7f-1b80-4285-8b5f-46b63fc383e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b34eca-3162-45ec-bbaa-7ec3ca4a4187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea7486a-00ec-423b-bbc8-ce736c7e3f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2da22d16-db51-4758-bdff-4f576063d242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dcce7e-feaa-4e2c-b67e-8fb93b739e28",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44da3197-d9fa-4bc9-9fe4-5b176effd3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f09c3e-f56c-4390-9159-6a1a307b9e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4d6ae2-b1ae-4b7d-b5cf-91875a998f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4db5d45-d6dd-4557-9746-d39f0a97c070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbba9ef-57b3-4f4c-b7ad-593f0c2cc29e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d32192a-c730-4759-a122-5e3e6c6452a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff1ecfb-c187-4b76-8df8-049fa788893a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161b9648-48c9-451d-9846-d9dfc7f1531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5157d45e-9d83-494c-b8dd-45d0cfad6953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b68c12-8452-458f-a404-b4f4bb5d462b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc28c12-94ba-4b0c-a722-6f05adb9ea86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1037e99b-4f0d-4e4b-a62d-2934f57aa7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637825c2-6358-48e6-9ba6-eb45156da7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a149bc76-4213-4d8f-8c81-ec33de5fde02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d103cda5-9435-46b8-8c9a-a5cf425374e5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f62bba7-8d74-47e5-aedd-c939a05dc391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3ac6b7-77b9-4239-9552-b60730cc5ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04eb841-456e-4892-8da5-73d2a1b40701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ac1ace1-d6fc-4ea1-8852-69873b99b56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7084ee-8c2b-459d-8b96-481386f90244",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eebc38-f832-4c7c-9caf-842cfda83845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0b6116-9dfe-443a-ac99-65d138d9166e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9034ac04-d3ad-4485-a7a7-24299b5b1ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607f4d75-48a6-488a-b1af-e65440fc86c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142b0dc-59d6-45c7-899a-2bd4e36b90cb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578ce7c5-d4d3-4099-9983-e6e0ed70886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69329fd-2333-4914-8066-e900c431cadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba66b083-649a-4b50-ba31-8aa2173403d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "141878b8-b7f6-464a-8e9e-86f0d5084843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa6f9be-f8b3-4346-b75b-f38504ff94f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7883a24-57e1-499c-a22d-74b9b709607f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0fbb0e-e448-4709-b2c6-caf9ff4ba755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67676a4-86cc-4e2f-b598-f66d1e4fd8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc53f13e-f0b6-49e3-924a-ac4ecbef7a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906ab4b2-67ad-4113-8616-0663ffe39d53",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841ff4ff-39a0-4f68-b90a-78602c3dd231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735f60eb-0c08-4129-b90b-5482476bb358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee45356e-157c-4af1-b9f7-15afaf1975a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6459d31e-f399-4e67-80fa-56b885274f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d07e09b-8298-41b3-88ec-6f1ee9d05991",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f6cfbd-dc5e-4212-bc8d-f32c2ac898f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff477fbc-c71f-49ef-b50c-2fde861a448a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096be99e-4409-45b7-aa0f-b58af455bd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "938cfac9-4305-47c0-9822-1f88a846b4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5104e1-0b64-4f18-b56c-e14a38dc005e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6527d87a-26e1-490d-81ef-c0f5f910b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eb454a-f6f4-44ce-96ee-1f5b4c4b05d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e5ad9c-4de5-4988-b539-26c87c8dcc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4052ccc-d275-4fbc-bd85-6ff55d175367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc9d108-356b-4f93-9a7a-ac95b40f20d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd11d78-44bb-43f8-bd19-34ebbc1f9a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4d90fc-822c-4e24-94e7-18b419d3aa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35872bc9-1988-4caf-a391-8e5bab0caab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d93f7b6-0e85-4a25-9f62-6ac1c947af36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243eff67-771d-45d0-8c76-22fd52aa6fec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c5c115-3367-47de-bea0-e84b64ef2ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98d3d9a-40a8-423c-a248-f4eacb7b9507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4322f8b-0f0a-476d-8b45-2be65bdda040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b907155-0106-4770-84cd-e0ce23076078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63a30cc-7644-457c-8a5a-1cc861687ee8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6909485e-6f9b-4956-be8c-1eeb9bea09d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd57d2c2-5008-4247-ae76-69f703bb8b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbde0740-9049-4227-b774-0f052a97b2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1010ebee-3f69-4394-886c-0da08e67c5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787fcfbe-840e-4036-88a0-8c5f21d64c26",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efd5916-50de-43f1-abfa-dcbef6e38ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2bb9a2-5c11-4954-be6f-89ab71a4d48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1bbbd-d13f-4b5d-8991-313a1f04f831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93660afc-adf4-469e-bbc6-1e11214dbf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed14036-b831-4690-b289-9bf45c977453",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a77ff0-7047-4b51-a1ef-64a19270d6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569277b7-624a-4dec-a4f5-951e31413a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202de8af-17b4-422d-8e07-433782a0458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36b22d3b-7d21-4650-a380-7dcfc982a7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86806725-3bf0-41f0-8199-eaa348d2a33f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7b5b83-26b6-4463-bba0-6bbddef1b292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ab3618-de39-4499-bb9c-8748bd54ece8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33cd28e-e8fa-4274-b11d-a3bc3f698b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98f2f03-4f44-4266-9c0e-0d314730a97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf2e324-7d5a-4568-86cb-e40aa88c8d60",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b16ae-4eed-49df-afeb-8dd4f25f850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66596f8b-0b98-49a0-b79b-c5b6f48df43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0f3008-04e6-4be8-9719-adec9bef9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f914db-fe8c-4cd7-9327-56b3c22c81df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5037a724-8b17-4844-bc6c-9e4f0f2caaec",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e085c8be-a997-47e5-9b1a-c03400bc566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244864e0-b799-4759-8e91-5b5773b713bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b70152-4912-416f-8858-076687c5ad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "912cf981-48b7-4f53-9cd4-8711b07c1e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f3dcff-e3a1-4038-81c1-529f83b2e414",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466d4c60-1c40-4a28-a7e0-cca79a785f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e28e86-c08a-4663-a711-18265de0746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9e8246-58d0-4755-8f9c-ebebba6c4e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0129d79b-d7a0-4eb4-be23-dba21c9bee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f4d78e-4198-481a-bf74-92c6855b43f2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67920977-b091-400e-93c5-dc80d1810504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bba4e64-0b62-4f08-b1b9-7475b794edf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b80ac6-0eef-488a-a809-ddb701e30ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70827e3-7332-4b66-ae22-f3e4e7c47aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6f3e57-ac0b-4be1-b16b-2a61bd51b060",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c3f841-9365-41ab-8804-74688383ddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c968cff9-62dc-466e-b402-0befc2f77691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c05b35-ced6-4463-9599-64b6bd7f74b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98321a2a-976b-4720-9918-9de5049a8626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a062aa1-2ab9-456a-8ec8-bd97094f2de0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ac29e3-9262-4f3e-ba54-2089c5804016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b411f2-c14f-4ca5-a135-8b276b81f874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8a99e4-052b-43d8-b61e-a0c18206783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f43c3c5-7acc-4521-bee0-859cc101c591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e1255a-f7b3-477c-9b43-fd7389a3bf8c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980db6f2-b3d0-43dd-81dc-f5dcfe75551a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c274c00-84d8-4ff0-b67a-94ce971eb8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26295f3c-226f-47e8-9dac-6f2d962e0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6386331-4f3c-44de-a1b9-1bbcea438450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd8dceb-1078-408f-9b8e-baa51ecc2cfe",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739129bc-38aa-4f49-883d-6744c478df5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d1a479-42c3-4913-a290-3acba5cec52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb852d34-f21e-48bd-b69e-9a48003ae502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "812cd39a-e6c3-4148-a47f-da0b2c13753e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae5bc25-b056-42d6-a828-f191e1413a8c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cf0640-bab7-4ec7-85bd-f49862a8f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2fd6d0-0445-4905-a49a-3b90e8bca223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724da568-feae-4342-ad6a-63ba2b7cf0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac061b2-8feb-4176-b5f7-208e4ae47416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b2f7b0-debf-4daa-9556-77e3043def22",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926bfbb7-9e25-415c-af94-b339d274a39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876661c0-5900-44e7-a0e4-04834bda0f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b248ade-b579-404e-8f8e-966035e07f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f83a6da-9e0c-46a4-9ac6-859da9043511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5422990-6ef2-41fd-a7ad-088a42b06700",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222f3375-d9c6-4e46-8fab-94ee8160f55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0e0dc3-3749-456e-b917-a123c3c38b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1765ef2d-0644-4443-afa1-ffa8af04076f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e20f4e53-2d1b-4458-9de6-6ef0e242d65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff4933b-32e6-4930-8a9d-7b967fa1ba5b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90df731-ab7a-42a0-a318-594569c846f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0756076-6961-44f2-9123-a2190e7eb9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaa92c1-bbd7-4318-8fbe-ba51faabd58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f1ce6f-5e09-4810-8864-78b37059d78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42d400b-6956-46d0-850e-98c4216b1316",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba019f5-b11c-4494-9d8a-577fd42a40aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c351e095-7adb-4793-8a03-8173c3de4a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91529349-8327-4dc8-a450-a8333f469037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17b832b7-7be9-4663-a919-31a03af885b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a4c5c5-b9c9-4a56-b3e8-9a2b0dbf0127",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02f1cf2-5ee3-4c8b-a5a0-ca2fb11525f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1f1ffc-db2b-4449-95e6-db49f8f09de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb93ea50-517a-43cd-a6b7-516199ccf27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f7b1e2-966a-4cdf-b180-51ca14fa652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa8962d-c663-411a-95a3-21fc410e2ce3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242ecef-cc1c-4585-bb65-b83842a19bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e09c17-f065-4ebb-93b8-bbf8a3fce723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd4d61e-ae13-4d62-83e8-f4cc44a654c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50f00e19-119c-48d0-9c8f-9cb17bb5a425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a997a53f-d494-4353-b18c-ce75b925a259",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c80aaf1-5cc1-49c9-a926-67d42ec32943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a889998-1ce8-4215-b133-fc277d9edd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad5f30f-49b3-4b03-aa4a-0de26d2e1f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5084c369-e315-4477-bbec-5f8ff363ed2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d756ba5f-3396-43df-ab22-59cf30abbf60",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0267b-25be-4fc5-84a1-e87111052295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28d0a0f-4901-4ee6-a4ef-b52e91d81ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb47d79-f739-4b07-9e9d-87eed569b097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11f149cf-f1a0-4d57-a5dd-7ee53ae1f095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55843087-c1a9-4506-9038-2e7be6c2296f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c8acd-e01f-4fd7-9ec0-9a546a4e98fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c003da9-ce30-4343-9e6c-2893f19ec07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e184599a-e78e-42ec-a310-a2b47c5982f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "534b8529-fc22-4002-bbae-97d56688179f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9831b16-13dd-4b7e-8320-ec0c3983e3be",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7558a7-9ac3-4722-98ad-bd83d510713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20546a95-dfca-4d36-98d5-1dd1f6c49984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a7876-ef9f-4488-a3ec-e1cc73d453b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f62ba233-15b1-4b93-aa99-bb5f9202cae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b60bfe-5105-4436-94b0-08b80333c37f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba126bf-2de5-4995-b9f5-f75a6fe43c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3851737b-0c5e-4dac-8fbd-1c85ee884bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec1cd9-2d0f-4a5b-a4f4-50bad39bb3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5ed140-b398-4b9e-9ab6-85eec608d91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8aa526-ec3d-4f5f-80d7-e8e9400b9948",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a2d5c0-2843-4bd7-a1c0-3c78d5335e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbb2a1b-bf88-42c5-b348-c8cbef4e10fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b58e2ee-d1b5-4e4a-9573-3cbb07f07f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaf699f-019e-4d16-a276-00f3c6f4a8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3f62c8-f059-4bef-aa8a-67fddf086a69",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27003762-031f-44fe-b910-ed176f807c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5edd7ca-bfe3-409d-85ae-2315ee47d41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216d368-0a69-4eba-9834-cd0d088a9447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbedd7d-c80b-49a0-9d50-1e9d31aaac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab99f44-5888-4cd3-8842-cd971dcd12f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba80bb31-c556-4036-ba8e-fd46dab0fd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf2194c-53da-4fdf-9c81-15e7f5b15614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53a3e0c-df39-4d16-82f6-348a0bbe3212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "325f0cb9-acaf-4422-8031-a6218de57bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dde03b8-86c8-4ced-8f18-bbe42829eae9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9263d79c-da73-466b-93a2-c2a4a2ad3a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10110ac9-ae42-4e77-8aeb-b803cc8e03a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d81a3-8971-4ef5-ad5a-036cb90e11cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d334b9-482b-4e54-946e-fb9653c72950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f276ce9-243e-42b8-9c3c-9e6aa27f0f47",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c8993f-72ce-4057-8385-609f937c963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c692265-076a-411c-89de-82cd3762aea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426e18bc-dccb-4b2c-ba45-4c0994176613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b74004-d37e-4522-85cf-4629beed8b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc39c7c5-e82b-4544-a0a2-3a7a3168596c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062583a8-37ed-44b3-8967-b7f32b3fc5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07c70eb-1f7f-4870-8758-34d449f0c7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5ec8f8-845e-4315-98c3-85fb6faf4e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "430c18f8-064b-4334-913c-958b59bd0c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686bc5f3-1889-4da0-b44e-c51f3aac91a3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bc519f-0fa9-4ac5-b93a-17dbdf2ce641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddc0ca0-eb52-4491-bf1d-4008940d769d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8590570-34f7-4ffc-9752-437fe5fc6abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59a68f6-9e8b-4cd3-8366-cf41d91b79e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021fc008-1e1f-4fef-9fd1-eb197d136ac7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0593bdb4-d3d1-43a7-889b-686d08052044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11a1dcc-a273-4ac0-be77-6d368db5ec5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ca1d56-3a14-499c-b9b5-8f241f03ea60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5ccf6c-1782-43e2-b715-0aaee082b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bc9e86-4872-40cf-93a2-de7b1436e709",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48220928-1cca-48ad-a3c0-ca41cc5b1914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b07721-ec04-4bd3-bb5c-75e2e0324cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b961e261-9303-4246-b981-483b9a21ab25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b3415d-79cd-4e76-bee7-6610e4ec39ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb6baad-b4ee-4396-af17-131a1220ffe0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c0d7e1-9e27-4422-8322-3eac201373d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e16edfe-deb3-415b-858a-12de954a80d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cb4316-1336-4b32-bc1e-55a185e385ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ff4a51-d576-4b62-8886-fc58636e0d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d1f3d-cbf3-4421-8199-80192567797a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f46feaf-9525-4129-a662-761a4c37221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8776df96-24c3-4f42-a280-313d37727676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb1996-ac72-4c4f-830d-1e9ce59c57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4427f289-94d0-489f-b331-f4809eb74a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4335421b-efb0-418d-9299-92735585f7a4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a41610-e318-40c9-ae29-49d95f35aa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae5abd4-51c5-4dfa-86cf-f7a2995b5739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4215f4b6-42c4-4e7c-9f4a-bdf41bdcee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "810f4329-dc4f-497f-9ccf-d8c52dd7420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffedfa8-ebfc-45fc-8b62-999ab2d1a4e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f35a6ad-b143-4eee-aaf5-9e7e02db86fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6a2e5b-f712-410d-bd48-a3d2055cb9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985d731d-8020-4f20-8516-1790d36d63bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82379e7b-feda-4b22-bcaa-bfaf15072ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2233ea74-fa23-4b15-b30c-b11d97d4d2b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c206b2c-8a2d-404c-b29c-c7eec0cadaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55cf280-4367-4157-9c69-4c9de97e9e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49df4dd4-3e4f-4833-8b60-46a3a8e9a07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10fffdff-af8f-4102-99d0-8627e4fd158d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30cf0d8-e6c3-4250-bfaa-395b4dbbef19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ed9337-6b06-4970-a1fc-018372330da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd10190-3ba6-4dfc-a61a-b3fc65626de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2c9a28-ec4c-4a35-a386-b2a9884e3918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f886746-9898-40dc-9a95-c6ad27927f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c8feb9-df44-418d-8608-66ccc4bc8b74",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b3e58-5468-4a41-a8e1-a98612fce432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec31fea-4623-4091-bdd4-4717eaac962b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b941d9b8-0660-4185-a206-137cd0a9e30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c25d3904-5d73-47e7-b652-f3d3ab5d586f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab876a1-e5d9-4047-b74e-3051e2620569",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1a870a-114d-4cf3-b955-4a0f2ef86b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b20bcfc-8242-4ac5-be65-3f3aa9d9a75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992074c2-f559-406a-bba6-6a891efa01b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ecfc0b-9b5b-428d-9d5e-91e902b139bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21133dad-d7c0-4646-ae0f-3c3d5acea6b1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2cbac8-2738-4de5-a686-6d735160908f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6eccf48-9961-4702-a968-cfb71149a84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48458899-0656-4eca-87d2-93fe17c0a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e39018-d428-4674-b500-b179a9ee869b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8dc5a4-e180-444d-a95a-75e96221ed7b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399c2df3-ff84-445a-bcb1-293655b85760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e434d93-286d-4282-b5e9-4ac33f4a3bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6fcd9-40e7-4514-a3fc-b6b7ad4df4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77261c9-41ec-4d15-9c78-ea1f4d93706f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dae443-580c-4933-bbef-65c424515e16",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636fa2ef-9401-4359-8831-7e2e7e3336d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451a8883-97e0-4ad9-9057-96b4164c2fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d5b597-55e0-4837-9ca8-c71a9337c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f883fe22-1fd2-4ca5-8bfd-622b14e1e83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca25751-9bae-488e-a436-55d5e4fd811a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4c283e-d386-4768-8f7f-37f351c77c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc937ef2-150a-4979-8fee-1dfe780c7d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906b302c-6378-4fed-bb2d-801c38091d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b50cc232-3612-49fb-9d52-b92c1e508df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66885d8c-6f9f-41de-92a4-d6b82f43f28c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8a3964-82ea-4d65-8fe2-ea68191fde2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44df408c-1172-4b4b-a8d7-820d59bee106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a107c7e-0855-4f3b-8978-d4c5508f77ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05b846f-0a32-4262-ad37-784d4115fb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b89109-abc3-481e-ab7b-47bb5d95fba9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f83ff6-1325-4ff9-ac19-00c59c6b6347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce433698-fec6-4599-a4d0-64cc900d095d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e954a152-5bff-4ccb-ac6e-df9ce5e470ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "617928a3-2a0b-40ed-90c6-a8ce1f1f89f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9880563-0378-406a-b19d-d0e19a249054",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4fae73-7e5e-468b-8971-8ea0cd905145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8a33a8-c1a3-4b84-87e4-d8ba6a405266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef18016-1033-46ba-bc1c-cff69df7d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9357bc-0e1e-41c8-a51f-55e332ee8b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2f16a7-c0e8-4499-a2a3-bb9c3d9b828e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b9fd79-384a-452a-a746-56ffa3487a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01d1b5b-66b2-4436-954e-428e7efe88be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c8f96c-f669-4eda-b3a3-535a985bc086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3ee40d-1de5-4a63-8c4b-3716db2a8a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0917ce1e-59da-43bb-83b8-1a26b553e2c9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0b091-aafd-4d7d-a285-137c130654ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f706169c-1542-425b-a8ec-e5f2f54c2a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90af96c8-4f73-4eb7-b554-f45534c3475f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21b4d37-bcc8-46b9-ae7b-7f1be90000d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6262d0b2-31ff-4cb0-93ff-b74837f7460f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5572bea4-db58-44f2-8b2d-f33a5d57a554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347dd617-b586-4e2c-984a-f5ead99d0cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5b5daf-7613-4942-bf89-fb72d02e6387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd355ea-c1ba-44d4-bf57-0cc5646009fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20df8d3-d718-4c4f-8356-22cc6db809d2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426ffcbf-95a7-4c3c-988f-4de2a9aa62df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32992a2-80a9-430b-b58c-379783fd7808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd606d95-50b5-40c0-8390-86feead9808b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6faedaa-d3bd-4e3b-b549-fd631ffd617d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d7529a-1e34-4c08-a814-565b0f1356d0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b1dc53-f776-4626-94f4-c147fa65879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f38402-1f07-4284-a4ce-90cea5bae1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab10a04-9f09-4c8d-8f19-79674113a609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b79ab19-fd07-4a7e-b727-6b842265284b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa40fc2-2c48-4825-b63e-32dfb4507466",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7515c6-7016-496a-88bd-7a58a6e497ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4788ed78-69ec-4fea-b4a3-f2756e85c0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8067f0ff-e5c3-4b1b-9f88-20541e12f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65e0b8ba-1efd-4033-82f8-14930ffd891c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fe27fc-3a50-4da0-804f-9b888bbe15a9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b85b590-ce43-480b-9689-53592fc1f79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00862a59-0398-4173-9372-0a81103607c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26f4b66-6b56-44fa-8d58-051892cee728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6f6505-2936-4014-ac56-e8f73f7370d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37a147c-78c6-46d9-b438-359bcd00d34a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bd1f2d-404d-4970-900b-6c0bc3947d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844e2f90-ada3-4688-bfe8-af92cccfbac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc3e371-2e42-4499-bfee-9caccb7b2916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de709bd-d739-46f6-b879-74fa703086fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4cfded-16b0-49d7-9433-b03072501985",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d43c8-3f3c-4da5-aa27-f5e0c67588df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eb8dbf-7146-41ac-ba7d-ef683fd921a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd490a4e-78db-4b64-aedb-db60b0a5a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f40c5d46-d88d-4190-a0cb-0adb99e630ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19e540f-49c8-400c-a061-d32c809f8ec8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6288e2-ae83-4c5b-b280-8798f38301a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5963898-6180-470b-8170-3ffa15118d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c016ece-d3ad-48d3-95f7-999d471af549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "544251df-2aa0-4219-8fea-0878cc4681d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8ecd9e-f425-4160-b787-d41f3eccb47b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a8dfd7-cae7-4b87-a3ab-a84435b03ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955a62d6-3165-44b1-aeb1-2a7510fce7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da544855-bef8-42b6-8791-faec55295005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b010ca-0af0-48b6-a461-f752327b60f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2501ad55-d822-4079-bc65-3907f0025ddc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826ed5c9-224f-4ace-8414-2fd5e7b0a8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf44c230-b322-4862-8bbc-5026a01baa0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28d1e60-6f48-469e-965b-6d65b9ded59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "723c0ca8-1b9d-40ff-821a-f33a52fe9b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5999794c-17be-405f-8dcc-cde66176e28d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee6a307-6a24-43da-80a4-a8dacf2944d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424730fb-1a3e-4762-b282-23eea7aa2f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9bb60b-fdc7-4d0e-a1af-1a126c927ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83446bd6-704e-4edd-86b1-685ad05693ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749939e5-2232-4425-afc8-8607beafab57",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11271ed-c3e6-4298-8a66-dc7f06c4dbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d5f0e5-42dd-4fea-a681-7916000deefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa03c2a4-a376-4424-8898-f166898cb180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f33581c-a668-4ee0-bcaa-eb22fb787528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12ba86f-65cf-40d4-ae5b-31c34e30b024",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9509d4-022d-4008-b513-08fc34759c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b174e5-d053-4f58-8a51-82c0d3846d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9557d1a-bb9b-443d-8c34-70dd0c3b67e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec8d7e8-2c78-46be-a77c-f17db5b1c64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85688b6d-018a-4425-885b-3114ecb2f84d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35f4866-65f5-4a8d-9aa7-9e480cee115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb74df93-a0c6-4c76-bd0f-c50c624fe502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cce57f-b440-45ce-b955-5143657255ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bca1e0d-7e5f-40e9-aaa6-1a6cb492ac40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4920dc65-1f66-4d40-a3e5-df66701f90ee",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eb06f4-2f4e-4131-beb7-a77d6e7fa730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38228a5-a0bd-4615-915f-25f97cc8abbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fce8971-b43f-47f1-a62f-fd221da0eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a889c3-760f-4b17-b3aa-b4d2f0eebc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7893ad23-04c9-4e67-8949-2f6fab97601a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe77481f-fdce-49f0-b8e8-5115b3ff5c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77db5146-537d-4bec-9fd0-9607da16dc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43e5161-f1bf-48b1-8166-e32b03c8bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8868458e-8c67-48f1-82c1-6a6b48880759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf13c64-c844-42ac-a5bd-99dc9cff7218",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1f54c8-3a50-41ee-8877-752914f7f839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d708e473-b912-4644-8c1a-a9e6b2219e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e90efb6-1631-4936-9351-ee5aa41c2cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "779c84e0-b054-4df5-91cf-e76b7dbe9dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0b9182-0e11-40dd-856d-5e9bf2d211ec",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38f93fd-7c9f-4bf5-b304-fc69d319608a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50666a61-430e-4fe3-8e62-67db59bd55f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c1c9c4-aa3d-4548-9377-1b25d80db6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4746036d-992f-4efb-ae74-db41aed4e4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297db8d7-b1f5-4bbe-b961-f506c8d66241",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fa71a1-af50-400f-a6a4-ed36ab2db1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9fb794-7854-496a-8d5e-828a29a3b1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f4bfc3-2059-4a5c-a9fe-3360e8d038ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "964edb10-cbbb-4be2-857e-3c4f653a4fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369d63be-178a-41d6-a985-950602a429d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311813fa-afdf-4a0e-823e-bad0d895e066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f7cec0-6340-407f-a22d-107bb44d5856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62db8e70-0600-429a-afb7-c8d3386c5e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9370e68c-f653-47b9-b702-839a9605e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675a0e17-b2f8-4f5f-9a10-5eb2ccebbae1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd47233-95a5-4e40-96b1-5a7ce8ac5fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61250e58-4231-42fc-bfc8-9794fa5ae266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4241116a-8c16-417c-8666-0826c6a6dd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "576686d6-94b8-40b8-b3e7-717551e14434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168302e9-2e84-43a4-ada7-3eb08c11b745",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca31410c-9504-4dd7-9a5c-f458603a4eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "749a8ab9-75ee-4986-b48b-f1b5829dd65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaed635-d0fe-4c2c-80b9-d516c2c60baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "39855937-a818-401b-b818-471bbd48dfe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf1b9d6f-c62a-4a43-8278-387ab2eddf5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9c78439-d368-4bf0-af5b-aed3caee81e5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d226c80b-70ba-4b17-9151-8fcc218b9bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed3e8973-23b0-42d7-af84-5b0a2a959ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4131858e-a8d6-490b-a4cd-48358ad6b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e6f762be-3094-467d-ad14-f81e2dd113d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc44feed-5149-48cd-865c-c36c4d806ea4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746ba57f-ca08-4db9-98bf-79602b04fcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16de84d3-e3d2-4bfe-9b32-dfc29cabac0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9594a744-0bfa-49f5-a84e-55627fcfc8be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "592531f5-b80c-464e-b0b4-28a96d95b7fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e5ecba1-2f1a-453a-be53-caba313a8515",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bc9a58f-2ad7-4c3d-aead-db66c6cbb048"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77799728-4108-4b17-b28b-538778f61aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c0dd224-12a3-49bb-8fdb-4e2a9987c9ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46dd6a19-411e-430f-9546-ddd73adef4cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6592f56-149f-452f-9833-69527888189a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25d4c3d5-38cc-4416-a42d-b267f4a13a21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "560381e4-2928-4131-a289-8ecfa2706899"
                }
              }
            ]
          },
          {
            "id": "8519779f-170b-4e40-9c51-9aadf7b0a7d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6fbedff-a941-4624-b029-3079b0a3cb94",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0114ede-21b9-485a-8242-40f59b68e562",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e805e4b-16df-4dde-8261-61899e3d57cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "562055be-d810-415e-b22f-dcc5b9fd9de5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eaa6bd4f-bd83-44b6-8870-c6a06d09da27"
                    }
                  }
                ]
              },
              {
                "id": "d285daf0-5908-4f03-b3bd-c79fefb994c4",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f35da922-d520-4791-8373-496290c3b1b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a59b4c3-b388-440e-9823-3f3417c44a3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "958152f5-f1fd-4a20-98ca-a7e2679572a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e981973-7296-4658-878b-967ad08dda5d"
                    }
                  }
                ]
              },
              {
                "id": "a2e89ff3-61eb-4dc3-bcee-3b8bffe93289",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a7c220d-cf78-4a7d-b9e8-e4c8d85d2890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78ec5e88-7992-4ac6-920d-7e545735f7c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3962a3b9-4ecf-4b40-bd9f-48aeccba7614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cb2a896-5a13-47c1-9b8f-655f9f8e5bbe"
                    }
                  }
                ]
              },
              {
                "id": "cbc461a9-e609-4e46-b58c-526bfe5ac79d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e93203c-93ca-4823-9894-ae262513e0e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1627f30a-7dc8-4112-ab81-f5b285cc131f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a2052d-558f-44c5-83a8-240584b9fae1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "855fe516-f782-4c1c-b111-30c9b36c5e6e"
                    }
                  }
                ]
              },
              {
                "id": "2e79b709-dfde-4853-b9e3-903f97666b9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c49b4a8-7a50-4d2a-a3f5-2c45616e2271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89cc2a39-6696-400d-8ae1-1d86f84721d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb924078-e0de-4c28-80eb-c384242bfc59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2f369c03-fb48-4cb3-a19f-45d6a38089ed"
                    }
                  }
                ]
              },
              {
                "id": "81afead5-a102-4580-83c2-9829549ed00f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a19151be-27c1-4592-aef9-f71239f7dae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54217961-5551-4f19-b55a-63ee0881c1ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b3552db-b2c5-4805-ae8b-194ca7dd139c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "805e29c6-e094-4d77-8901-6ca9d73288a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0d7e2a3-b3c2-4f44-acc1-6cf421db3175",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7feb48f-8220-436d-8f35-ef0f1f8cbc59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e4e1fe2-184f-4821-a93b-fd53b76a2db4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d96f3ff-5223-486f-8086-a1a2ab606739"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "483ad660-88ba-4137-a190-62d7f2228e9e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7a621377-47d3-4062-b2a3-1cf0654455fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aa97298-339f-41ef-8788-88fc0276dded",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f374ef15-8729-4bcb-a4a9-beb152a8ea5f"
            }
          }
        ]
      },
      {
        "id": "951b47af-5925-4283-ae98-991c81978abf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d578927-3d6b-4236-a390-5d3ab718eb4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a77d3d3a-7abc-4fdc-baee-31110b07bd75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da6f8880-635b-4706-aa6b-e07b556e6629",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7032712-969f-45ce-b403-19737b3a6b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8924ee9-b3db-47a9-8297-66eb94473f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e1b35f-e0c3-42bc-8048-8f5170009fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b9cc9d-7235-45c3-b7fb-326727194259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0656ac5f-f5b0-428b-8e24-d915d29751a9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922e9c4c-a7ff-4442-bf3d-27a6849dc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49daae11-a50f-4f34-b0af-d4cb3330edfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc95cbac-73de-4008-953b-ed5049d49dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90351109-c942-4397-b927-bb779cf6b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b143abb4-ba06-4a48-b65c-ffab74bbb683",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654547cd-e217-446e-9a2b-9692030adc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257fb200-0541-48c2-b64a-75e5aeea504b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed1707-2368-4c14-b306-7cad112c6ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1b8554-ec57-4906-b5cf-d566cd86a3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08d3c88-03a4-4a7e-97fd-2fbfcf112054",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2f29a1-840f-420b-8b41-dcea859a6a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b51cdad-dae4-4346-9ae5-08d92ea4223b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a47dcb8-d9df-4eca-b00c-e8fdf2a614a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e1780c-0e1b-4487-bfb6-79e3b08d5d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ee8fde-b1a0-4fc7-a35a-938bc675cd1f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8116a1f-8810-4d02-985f-cfb1a48b66e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960fed5b-4a5a-441d-968c-50cb93713489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d64b53-7379-46d2-9d16-d369f8ef76d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b80118ed-c71f-4b6f-978c-f8542ec88087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7f67d8-fe75-45ff-91ea-c243c3825f95",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92a5023-fa87-4a0f-84d0-f3ff6186647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d808ff80-f7f0-4dfd-9243-95300a1a22e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ab03a2-92ae-41db-a3c0-58986faf4438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b34f4ca-ea8f-421e-b406-3b6b3064d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a946da-a28e-4022-91c8-f96df7ce00b0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a69c70-2855-4b4e-8254-867b3ee14379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a405d139-dadf-493d-89fd-b58c4b6cdb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd1016f-bdb5-4f50-bb6f-b6b632128b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "729c749a-06d0-43cb-9299-4a75af78ab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881878a8-e7d3-4892-ad05-1b49814fe91c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e573cd79-1049-4050-b616-57285c3ed888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047d2d2b-97f8-40a8-85c9-0efb97977e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873bbb7e-b14a-4b34-b1f1-497bb37b3acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59468071-dbc1-419f-8c16-de72aa0c5748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765ca336-2ffe-4e11-bed1-48932c1e5c4d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a4ee89-5e24-41ed-8c7b-ae9c383f9591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a33013e-dc1b-4f8a-9901-02a982b3cb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025e7cf0-82b1-4a27-88c5-f4760f3e40b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddc6b83-653c-4ad1-9188-fbac7f5953fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c336753-4eb3-4a57-a1d0-31a19ff0dfdb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821a3bec-6a99-4a71-a5ac-8afde5c52b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c15e66c-f7bf-45eb-bc66-49eb3cb76b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f70c31-35c6-4a70-9efa-6a6c263ae35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "972b9ae6-8770-47d9-99f0-83ebc84d07ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391675cf-6802-435e-b4a4-a3dbeeaf8bca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71be5433-e162-47a9-8f23-cde3d90f2524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9e0770-5f89-4314-a20f-7d4898f957b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb8b6f4-cabb-49f0-8731-ccd2bf6f344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "48ef2a8b-9fe2-4542-b51a-951859d2c49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d423116-3091-43e2-a383-9334fde6c470",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ea8311-a04b-4da5-8905-edca221f5e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761cdb71-7d39-4ba2-a8c1-c485abf1e727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f010ab17-10d2-4c28-8bbe-f4d414fe5930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fbbd10-ac8b-440d-9d0e-317ca8d38401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe1429b-9f6b-4e6f-aeae-39bcd352fa7d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c6b366-a249-4c0c-b23f-8357fbf67019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c22d45-c6ae-4957-a5b8-cf0be6bc2e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900abf71-2d11-4e0d-9cf4-f8cf5c04ba17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e836e78-8b1e-4ece-b619-9770ceb749be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0bccab-67c4-40ad-b6c7-caf8df53b17e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1cf7d8-4d9b-46b8-a54e-532327652984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1004d0f-006b-4b76-8d8a-f5e5629a1fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d5449c-ea86-4d43-ac20-3c8094d1d61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a7223c-552e-4bb8-b7fe-7f006ed86643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db30a418-faf3-4ca4-8b3e-ef63d164386e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cf49bb-0357-46de-a53e-d57fa4a1634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3807a60-e2c1-4b6f-8450-e773e4da725b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a2534b-8f67-4814-b9d0-22a23d84326f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd4727b-1785-4c16-91e3-c7ec0e56421b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63738a5-8c1c-4ca1-827d-3b4365cb80fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ba9a10-aa00-4ffd-b6a4-216212b1b9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a54e4cf-e014-4bdd-8f90-829936980dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80889b62-8f23-4aae-a934-768d411866ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92d07a1-a82a-437a-a2f5-5dec8c8cc66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d98bce0-1c7a-4675-b622-14ffdd9560bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dffe711-c611-4a43-960d-9904a8660b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cc2478-b24d-4d8c-8929-25a944acdda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf76e627-1fc2-4c06-972e-e0b55894c86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b863e5-9c64-4110-ba6f-edd372fdac5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f2ac92-258b-4776-b94d-7414ae4fcd09",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce535da-ebfe-4be9-8c50-ea0b8aaf16b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6189d0dc-fe51-47fa-8675-0a45ae18ff43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedd16e4-11b4-4d6f-a3c8-603a602ca18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea140f6a-447c-4082-a510-53e3a3714c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab63a17-96e1-4a0a-9d82-6f014177db49",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf1450-ccc1-42f7-bed5-0fa93f4d9bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009ce6e7-f6a0-450f-a26b-bd51f42c90b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924a4654-0596-439e-bba9-42bad794ee2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee7b216-fef1-4a46-a515-68d56a1d7ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c139329e-9e66-494d-a011-bff4393a3f0c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816e13b1-f446-4fcc-abb3-e8f253439533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5630ca-c9d8-4310-9112-3ed736bffe7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e0145d-5a34-4634-a434-3ca42ea06bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56fc70d-215f-44a1-9efc-2f1be8aba75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb20230a-2eac-47c3-8485-36ba5ffc4d1c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9917cee4-174a-466d-9b9a-7b584cf0e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566249de-197c-41e5-a348-b5bdd6fc2783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080537a7-39c0-4972-8160-d4db6db3ff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85118f6b-2ee9-4910-9051-502a05d79920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08490296-b56b-4ddd-8325-dc8e9c420c56",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259d09df-842a-419f-bbc5-bba293f07b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b475f3da-c659-47bd-b716-a66c1865cb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4a7b0c-70f8-452f-992a-d15b2852a642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5083d3a1-2519-4009-b712-d5253fd20d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316cb4e6-4ac5-404b-a884-eb5ac76d9982",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8719f05-255e-4ea2-809e-5bc393611fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f48b08-5d75-4e9c-98e4-6bf22a6903c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ef42b-b469-46d9-b7ab-f5d375e9fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "101b1fe4-b70f-402c-b276-469d2efb4401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92561d13-4616-4f4a-a2b3-7d667a5a62a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e82af7-dca2-417d-b6c7-eb1dadf1dde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7486ba-8bb2-4fcb-adac-3d1b3b9b7841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d15fa3-e342-4732-bc7a-1fc87a4acda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97904b86-49a6-49cf-8398-23b756a98d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b499fcfb-cfde-44ec-9cc6-896e542d2e0c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0175f74-7717-4750-b96f-8649045df8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9b5617-55d7-430e-9d69-7a3a7bbe9e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef9f926-da9d-4298-9258-52440d745791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "253c05e8-00e1-4531-8633-6c8ec00fa1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff6ea1d-ccb6-459b-812e-0c75948f2611",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9180b21e-d222-49e7-b3a7-c9b11ab4bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dcbf6d-3b0b-4bd0-8897-2d3c93c5c03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef509d41-eebb-4fa3-8874-8f90d6da2c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcc295c-cee1-4321-b3fb-71967ee5418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5727f667-76c2-4812-b66c-93e2b054f4c8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2858a90-0fce-4542-ba55-4a582f7383cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049e457e-a0de-4511-9326-d754b6cdad9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ad9137-ccf3-4b0f-9e8b-5da5046b2f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c41fde-fd6e-4802-99a4-2cdbd9463520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4dbc8f-c253-4c83-a7df-bfc9ab1fbe9b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971f0986-7553-456f-b9fe-6d98048f8af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a97914-d566-4b55-b6fe-1a227158d720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a8359f-57fd-4529-b2d4-917b5467897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1957b13a-12b0-465e-ba53-0dc2f4c764f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2f3e48-8b81-498b-8871-0838aca876bc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f5bd02-9a35-4c5f-8bf7-427b0a2b0a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5e810c-bbbe-4cd4-8953-a9327e807429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a1a9a1-a773-4e64-b42d-3a681f52b258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5064152f-27ee-4d3c-9c3b-3d43eff85358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176403de-dd94-468e-8dda-728ac612f1d7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39886a6e-a51e-4892-98c4-f21c0469d75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1e6590-0097-40bf-88ee-aa97820acae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9763a47-674f-4e8e-b53b-cb5b50456999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dceac122-47ef-4ef9-9c25-57b34756f479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1f2f55-c88b-4eac-aa8a-2f85f321973e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c575d5-0a4d-4373-8313-bf5b8508f928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5c160f-35dd-449a-94a1-48b14b669ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc04fa7-245a-4133-9e8f-c41e30da2f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f75627-b11e-4c44-b610-215be0007c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8725b434-c75e-4351-a241-ad21bb7da48a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef94007e-932b-4fc9-b9c0-44aff0ff16cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b771dfc1-3a23-467e-84c8-b6c641cd3b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb52fa0-3500-4199-906e-f8c95aa199a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c9a850-74b1-4e26-9800-d972a0058e48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36ec7a43-c49d-4ce0-a062-a6c4224bb238",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24d24800-8f60-432d-9935-8db152820483",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6cfe3a-e1b5-4e9d-a503-82c40bd3b6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126ae7b0-26d2-4d5f-bdbc-c8d84b575272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c274c233-1542-40b9-b311-8d8f5cf4a60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0c77ea-58ba-4139-a005-308ed9bec609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a357c3f0-4af7-4806-bd5e-e7635716be23",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d23d866-8ea7-4fa4-8b64-196c9239c621",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1d8fde57-d9a6-4d26-ad23-0bfab1c73004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459aba57-0281-44ba-a3c4-b5c3e07e45bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "640ae373-e52f-4ad9-8eee-ceef679e5fdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fabf8bcd-7a02-496c-9945-b996d032b9b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddf3bbf5-8cb1-4367-a0de-1a593d7584c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7c47874-c4a6-41da-a117-e37382fa3e2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c063299d-62b9-40f3-a3ea-a7df1c53a888"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d211f535-ba17-496e-a7cb-cd4b956ba299",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57e1e27f-a7af-41dd-a15c-e96acc923bc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d38c7ab-b002-4800-afdb-6be7e5cc653f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7671f49b-88d7-478c-961e-24a0ee02b519"
            }
          }
        ]
      },
      {
        "id": "0e4aff5b-15e9-4391-8b80-f7bd056033df",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9547c176-7905-458e-ac69-27b01b6ccbc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b44ef34-1c3a-4b64-a8da-afec955f2ec9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2afb7a3c-8024-4366-9c5c-b61afc2c3dc4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abddf5-b8b7-4659-aac4-5b21c268a934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb7fc97-8c1d-4e10-b254-c70242f1db9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc8a5b-1a34-4bf1-a40f-58ce2502168f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a06f7c5-8378-45be-90d6-7648e933a563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809228b5-629c-469e-b66d-697eca8fcbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c63312-f277-450c-8cba-141eccb79d73",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986110bd-5704-4e83-a904-bb60b4b1d2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5bc2e0-91e6-45b2-bc43-b234627ca35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f000ef-ae23-4b64-a074-92c9f2c40038",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5982aa7f-7327-4d43-bcd9-cf584c8dfe8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7806db-5654-4fe4-a733-b193cc36de14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243701a-35c8-4d9b-85be-88285efb1db9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90af3be6-d6a2-4dbb-8089-8c2da313231c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7326075b-e98f-4f05-9f8b-cb3f4681b58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79f232d-562a-4251-87cb-000879945abb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58fc09-186c-4970-8c6c-ec5fef20879f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cac30f7-b9c2-4017-b757-9f073a7e3eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502fe372-8734-4b77-aec4-12cb34b75b33",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf69dcc-e958-41fd-a142-14157837deaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233c2c3a-2322-4f2e-8760-82808f1dfcad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a24e5c-e219-414a-b437-665a7ec49a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ef4b2f-6b84-4ac6-8b73-5d624f75001c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4697ed-4665-4dd8-ab4a-90b984cb3a9c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944fdb31-7e60-4054-89d5-c596288e2cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db767a22-b1d5-4ead-8b98-f55d1cbd3867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af375a4-5191-4020-9704-5b294aaa4a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa5430e-2a1e-410b-84ab-5db314764cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb96ca8-9ac7-451a-b9c3-f18b85bbf2ca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93ba65e-d6a8-4af2-b287-a283f2459907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f479fea-236b-4b64-98e3-2e87d98a7ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb00bac9-71a9-4de3-aac6-9a79fceaecd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5dea5a-bc4e-49c8-a05a-b0920a399ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77275c9c-09c5-4fcd-8ace-c316c8b038c2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63373b6-f64e-4881-87dc-d287f0375776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89800245-5195-484b-a630-09b94e958ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed463fd-758e-4e25-bf5d-f687adc348a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de124df0-e393-4ecd-9d8e-b30cf4b57a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f028ca02-e7ea-4a12-8780-02acd5746c65",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69194e5a-6848-48c1-be1a-f248dc336585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d52c8b-00fc-45a3-ba2c-55c17d7b52b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce3f600-a6c6-4610-a596-c7b869871a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d02f3ad-f8c9-4287-9469-6a7009fc4712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd0ca8-6f96-4f55-a840-b9f9cc539b54",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd341ad-a313-45e8-ae26-ab310f7de969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c159ade6-cbe1-4077-82ef-ddc46e647e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbcc18e-8c2c-4b72-8e1c-7f934dbd51b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b678601a-c1fd-43ed-a300-6141576d24f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd1128-12bd-43f0-81f7-f7838799e05f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a8e53a-d132-4c80-9552-add495c98388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6971ebd7-498a-4851-8d9f-3102685e7605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e99482-9b3b-43a2-b31d-6e961f337d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fb6569-3eaf-456a-94b0-0b436a0cd96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7874a242-8270-4fc4-ab24-b3deeef34303",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da15249-bc42-423a-bd7f-0b26a542291d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57accb70-405d-4e0f-9818-89f96b90268e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2234a5d-4929-47f9-a8e8-c544bf085f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2dca0a-3fcf-4bdb-8b11-08297fa8176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39684a1a-7f31-4019-ac29-37c2363d18dc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f479da-3f02-4f96-8740-d914a445773a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47ad0ca-7d28-4680-85bb-67ce41ce5351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d977d88-ca04-4f9e-b75e-20c61baa14ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3e738f-c08a-4f48-b244-2137120ba9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b29b389-df37-4de4-b5b8-22691a103121",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36659193-3b62-46bc-9c3d-9f20c7013649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c53f17-9cf3-4559-9674-1dda637e4bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1187f635-7cd4-4979-a20a-c966e67eebab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b5a981-2ca2-4d73-8e7c-bae05a643236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d296716a-3406-4ab0-bfc3-97a074a566c5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6714d71f-ad86-4986-90f4-5674ef04b358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c37f5e-55a0-4de3-a5de-b1032a26f4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b5792-93e5-438c-bd1b-7d12a1a6db32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e13e792-72de-4748-a8ae-c4f312a787e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b18eaf4-766a-447e-808d-e026bf653627",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8a21f0-2c8b-4cf3-ab33-f6be0710828e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd51072d-574f-4ba6-835f-6a8caf252e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6181704-e66b-4956-a392-31373c9472ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe790915-b908-417f-9bf7-256161cd0ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8e1b83-15d0-4fb0-8718-4d8f16ab3876",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25207f93-302c-44ff-aae3-da596b7e4c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640719e5-6ee2-429a-83a3-97e18fd23618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914f1645-b723-40a2-a381-eb33cf79babb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e730224d-6752-499d-aedf-273f7c60b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be72a9f1-b97d-4400-a160-03c9181339d0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf141213-87d4-46e4-b216-938f01802f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53abf469-4418-4f3f-a4bd-d2190d48b837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e097b4cc-0dd5-49b7-add5-c114d6072ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bd04dd-970b-4182-98d9-faae22120fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da281f35-a744-42f0-9a65-2155b104b6f0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d0908f-2d29-43ea-98f6-3eb9adcea95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e42dc8f-2644-4b02-a5fc-ce8a06522df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fed503-e524-4832-8d48-6ca6709c88f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72387cd0-8d5a-4f26-b41a-bb47595b9422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89493895-6c31-4e5f-b1a4-e1b0c34a1847",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c865992-9a5f-49f9-bd78-e2092a1048a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09aaa34-7f05-42b1-bb9c-b63a11cb8edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7771ebb9-c09e-4be5-a03a-2533fad79157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cc83ac-7b72-48bb-ac8e-50569c9c2688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de2c3cf-06fd-4cb9-9c73-c7c0f486f8f9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b91db5-0ed9-440b-b23d-b13a6d329641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80267986-125a-4fd2-884c-9388dc173437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5750e-b53e-49ef-aabe-5a21daf3debf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f846cd90-4402-4a26-a570-0a4398b1fd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70486ac3-faa0-45b1-86a4-7bb88e3c0243",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e589463e-8d59-42a1-9c84-fc0225107cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d939899-5179-4e11-a2d2-578b0070964b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df53eca-3be1-4aa1-9d6a-58d5c864583b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c02d25-7f2d-4b47-b07d-e64a277004ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759d1158-9b93-4142-93e9-752499e66104",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ca784c-1836-4809-a41d-681c951fbcae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76268a8e-5344-46cf-a010-7744706dd912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bd1fb4-382d-4f36-af85-479cd9f9af72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1b82c0-d26a-468c-a8a8-5e91906f2a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9972420-a291-4456-bd6d-f7d7a4c583c6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54690ea4-33db-4437-ad46-9e9f54c18f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f0c303a-51aa-40ae-a90d-67ebf799b4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2885eeb-62db-40c2-ae4b-eaa18b202cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fc19b2-eafa-407e-b798-b914b7a65a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68587ee1-49a4-4d3d-b079-e7650af3d167",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83823d27-89b6-4721-847e-a5c678025b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35ad67f-1634-44a9-baec-72a7b10617c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8fcdb7-f51e-4fba-9f6a-8cb45c700a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f618de0-986f-4426-84b3-e401bab62735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71576946-2a63-4b4f-801c-55408b43c714",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b4993f-2342-49db-aefb-425ff7528767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b943bc0c-d4c7-487a-9c45-dd739ef456bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a0b36b-1954-4c30-8126-faf3387d6e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e998a3-a993-4ed2-b2e3-16d446a8f0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b053d7-2d4c-48ae-a4b3-97af8685373e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd577a5-cefa-4c4a-ae45-b13e3e699d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe1476e-08d0-4afb-bad4-fbf93244dbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b0d3e-3d9d-4f3f-bd3d-0a03072d5629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d28090e-8785-4906-ad9b-4bc0ddc0e343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c0eb0c-ecd3-4fe9-b95b-7a746e304d34",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac2440-ce1a-4e21-afea-991006471fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6437f48-5576-4063-ad54-3380740890d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b54977b-ccd2-48c2-8b96-8cc9475f3c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4ee57e-7300-417e-ad7d-34b5d950a9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678f8980-c890-439b-a6ff-2f2427e50c56",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6638edd2-bcf8-4aca-a332-5678d428a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922352b6-4e44-4bda-b477-a69996b9f55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a558c3f-f014-40c8-a701-d6cee06fc785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7aa91c-8194-4f0b-9d62-23d0aecbe9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a70d4-e67e-48e0-a082-5bc4cfbd9bd7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60188ec7-8444-4c9f-a46c-eb02d2690ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea241ec-86fa-4364-ba87-201171d24868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16206d9a-7148-445a-97a4-7969344c6167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1418404b-e8cd-48f9-9ce2-ab37fbaad873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ba6868-943a-41d6-86c9-0dcfb29a58f9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde5e7d0-c10e-41ec-a10c-5d44f6c2239e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5f0ae9-17b4-45c1-949e-1a315c66bae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06e7fb8-90d0-41d7-a0c7-977db05702f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d85b671-0583-449a-9257-f394178a961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e207567-333f-4643-8ba6-7a5fdc2db854",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c924773d-37ec-40b3-bf8b-b9ad3171208b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab48c57-3eb6-46dd-9787-bb8db8e564a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a15f7-bc5b-4fef-b9c4-9e54ff78ed02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d0cdb4-7509-4cdf-9763-14a5fc1263fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80234f4-e665-4548-810d-63a79f1383a6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58b004d-9ab0-41c7-9f82-d4e09e08f794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267ca5de-5b8b-45aa-b023-db69662f18e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405c239f-d0cb-40da-822d-84f8df8c34ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c362e36-8611-4aa0-93c8-8c3c7e2caa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b9113-0dac-4476-8b17-c3448d3bde78",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e28f47f-426b-4583-980a-9601fca7c6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3251d58c-4b75-4999-979a-f0618e8654e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812f8656-b584-4b06-8d94-d90dddb45016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d6ea05-419d-4666-aacb-973a50482faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db01dbc9-c01c-4858-a8a4-ddc40c97319e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77a19ab-6f82-4534-82d4-8d7cbe9e1704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dc4e8d-5fc7-43c9-8aa0-b506567cc8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e7ca1-5609-4c1e-93ad-1b5a5a3d612d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b73122b-7d87-4420-b304-a3dde6e73fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b01b4bd-19bc-4f70-974e-b2c5ee5cb578",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994e79f7-ebed-48b4-b360-042204820853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11958827-0a1e-4c8f-85be-824d93310b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536d6354-6efe-43da-a282-cfb7e64fee00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e07b9af-3cb5-4724-af99-ebfcc37f4478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a9d248-a2e4-4632-b2f5-3c25a3483be3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd53ef-978c-413d-aa20-d33b24493c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4559c75-4e44-46c3-b50e-0fe01bf35fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d21362-5332-42b3-acbc-0b2dc2451057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08f65fd-d003-4e02-b365-56c8fcfaffc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa29e0f-5d0b-4d16-98ad-e78d7d9592c3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf163eb3-a419-4a24-a4ef-4ed81cc6dfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a3bb10-73b5-43a5-9947-82223d5932f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a321aafc-1e61-417d-b3a5-5a95b931a078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819a1905-5378-4ea4-9ffe-97b3c63b5fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9bf6c2-9375-4f1a-a307-cfdff7b6f4d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b765fc08-5436-4d29-89b2-f303fed9558f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1ed829-c913-483f-a8d7-556b3499ba97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b51272e-403a-47c9-b3e9-9452f9dbcb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e4b8a0-43fc-4980-8968-03cf066e0d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7507e5-9504-41bf-90c0-3bf8ff707f6c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bbd793-ac8c-45db-b738-41e6975dd546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061aa9e2-8b20-40a4-a4ff-ddf04878bf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d186d54-45e3-44a6-89df-87da4c894e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaffb3a-8c31-453e-9807-dd4c7862d05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d59959-b785-4cc2-91c7-3e2963506def",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ae813f-3ede-4a38-b19b-d19d8890e897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498ecb25-b116-495a-b2d9-aac8c6ba214a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6845f0e4-94ee-49ef-b37c-7cab5c7e230a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1a2d0c-56cb-4410-84ef-b940ce69950a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd6a2f3-2e0c-47d1-94e7-6dd151f5ef04",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0769f406-a186-486d-973a-96033b20206b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824791ae-1e02-4916-8962-6e5d6ee0a43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad7f559-6243-44cd-bdde-bfdeaf7c3542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb26baa-3bc8-43b6-859e-f136913a6481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f1f8d8-58ae-4dca-8208-6d08946dd880",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d317f-a6fc-4298-b6cb-ee2d41ddc5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd96dfa8-77cd-41af-9c98-7886ba81ce2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0acebe-8d30-444f-a783-e535b485b0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303ab165-955b-4f1c-966b-1c13fe77ad27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2706dd9-28ba-4ab2-b85f-2ccf88168c5f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad283f01-6e8b-4cc4-b706-04a1f189ba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abf041a-f87d-4ae3-8285-f54af7fbf8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c122d-a8be-4727-a03e-5b499082d269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b2aa03-a720-4b51-b15f-b28b769aeb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b92794-f6d4-47f6-8bc1-df160f5ffd21",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8c7f6b-a3cb-49d5-bd37-9b688438c67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083a844b-90ed-4b43-af0f-9465e22fc352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5474e372-b142-4dd4-85c7-38a0a94ce83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a903cfa-4dee-4a02-81c8-3dd13b59a467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b504eb77-16b4-48dd-8ddb-7cb801ddd79b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23ab53e-c4b0-4305-b5b0-4c6c1c9d9e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da7dc3-1737-447e-9ff4-5a8effcb9aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76073563-7323-4fb1-8859-1839ab5a224f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4241106-cdc5-4166-abe7-68154d0aa2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d292cfa-f0ac-48ff-83ff-cb2aaffe1e73",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad60da2-acac-4469-b2c3-47fe0fad0d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65779f42-7e46-4c24-851b-14aa9483d288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7452cf8-03d0-4871-b7df-197fe1601f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4741f9e-e48c-441a-8bde-1bdada4dfab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba93d5e-7026-4947-ba5b-6489f6c32d38",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36482647-100c-4341-9c34-aa03675026bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8432ef4d-5dd4-4652-9962-7813946546f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e447ee-051e-4123-a81e-a1df5d7ee242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f57a28-d50c-445d-91be-e134114441ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a70e05b-166c-441e-86fe-18dc1c6be3c5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d9055a-c25c-4a85-9507-3e19d3307d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba40828-467a-45de-bd34-de18e0759a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49e718-0e09-4446-8610-dcafdec9c29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb06fd5-99fb-4bbe-b5f7-3e3a75576c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c0af8-806d-4070-97fc-ef0e92dc2679",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1d08e1-4727-45f9-9838-dd3144cd247f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5c3163-b13f-4819-86af-806761282365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f649cc2-b755-4244-b2f6-48205f16a25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e97eef-13cf-4f0a-a588-42cd6564975d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9352d41-b2d3-462c-b210-575c9ac70d95",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bca6d06-b2f5-4919-8f88-e9234d4ff028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32041992-3c70-4482-869f-232c8ec45750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790d6d36-153b-45fc-8139-7bac551b6132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cee0855-0b28-43cd-b1d1-efa6c066aef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac77a7d-c202-462e-9b16-873cd26d0bab",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df3ebbf-e42c-4a24-841a-208bbbea2247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9e08d1-7e56-4bd3-aab0-6651c718001e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68a91a6-7803-4280-a4a6-f70eee958fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d7c530-9801-4e91-b4c5-616e4c107b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0297212e-63f1-48df-8e1e-c53516d560a9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ce4fd-dc1c-4e04-9c29-cd93bbd7cdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd513a9b-e981-4985-bf59-91ec56a59d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830e2cf-cf68-43e9-a656-1456fa3a58a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634ad763-3ef6-4d19-a106-690db857b12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffe9880-1765-40be-a5b4-56e376281318",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c956b6c1-a584-46a5-a92a-97b881cddc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e08660a-66ee-46d1-95b7-3630268bab68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8e619d-d1ac-4c34-9815-93072c7fb0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1703abc-f3b9-4a3a-998d-8a0eebadd457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712a2f84-5fcb-4a35-ba3d-227ffed4011d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a624f456-a7ca-437e-89e2-2d1c2de646ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa1b73b-38a7-4e6e-97f4-23c1b6f46049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87611a55-bb44-4f4e-9300-57eff87c928a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d879fb85-052b-4df0-9432-3421cadee8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c6886-2a3d-45fe-b0e2-b0de6a244ef0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24924e-15d8-45e0-827b-66b412bd52fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505ebd0c-a7a0-4aa1-bf3c-b8c5948ccb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843d20f4-3173-45fa-a06f-b2df59723947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43e097e-e999-497e-85c2-51ca1c6cadd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7de102f-a44e-4025-b84d-d66234a4d797",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52005b34-20d1-4cf0-8c01-780bd2c64281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6453d378-bad0-48b4-82a6-26e42b32b0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1509f28b-c1a4-4807-b100-18cc5e8b99e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7220e5a-f454-4f2c-b8ed-c34ee531e5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d936d3d-17e4-46bd-aca2-5f4171278de5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52e1d83-90b7-4b46-a76e-79aca0e723c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1633f07f-9ce9-416a-ae07-756eb080e4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e320c41-f755-47aa-9d66-9b9dce74b29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f9729-6885-4ed7-bcef-79d43c8058fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5147d7-fcc6-45ec-b944-9b928aa18aa8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc75d579-db18-480d-98c5-8cfae5eb271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b5a797-bb21-4646-b973-26a7ecc82017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9785702-0fc9-436c-a7c0-bbb2bfdee843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac2a14a-b158-4213-ae96-ceba684d4d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14247cd8-9290-4193-b274-cb6393f46547",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c03624-5a9c-458a-b503-e26aa6887658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa296bf-31c0-4ed0-88ca-e9a45d8f9c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4921b51-481d-4cee-8a79-bdaaa977a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4e7d3e-dc1d-4b93-aeb8-a43e5e4ed132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764a747-e387-446e-9d5b-02ba014674b4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6647217-05c6-45dc-b0cd-5894962b3f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef49838-1a1d-4c8d-971a-7b333f5903ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a5c980-d9eb-4a4e-8a60-67e7e94434d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232a2964-62db-436c-8b16-3ee5e693f7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b73cd60-0401-4767-af9a-61e76aa78f4b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e9add5-89c6-4393-a72e-09d839a071c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b73f5a2-4adb-4c89-b8a0-0016cbd81f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc9a7d-ca1b-444b-b574-539faeb76db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1010b91-488a-478f-be29-3e409a96ed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb4fed2-b0b0-4ee9-bda0-db0012832d2e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff62954-a27f-4472-9d85-834617239d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5812665-1929-48de-8c6d-6b2d3fe70885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4db6dc-6f99-4a6c-afd5-de7bc7c7b93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498e0356-09f6-4cce-8c3f-0f4fbbe334e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ca16c3-5062-497c-971e-5a8f18eeef9b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9091bdc-01b2-4a76-a3d6-36b93c33e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc42a55b-fcba-4051-930c-b3e135e2152f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d16ee6e-fff6-48e9-8646-c837edbff002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44683d65-c338-4c59-ac2b-280ad6c8caf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e378c0-d7be-4ac4-81b5-6b9da5193c75",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1a1405-525e-42c7-977e-1554128c65c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe98ab0d-90ce-4500-889c-2f78eb0cc8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f5c778-9a6e-4972-8332-112dc2d735c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73519e70-a9c9-4e65-90e4-8f625e06ef88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4347a96-d223-4d69-b2a2-22508b9b8565",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d854e2-9c73-4d6c-93ad-4061b0a4e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39dad7c5-2962-4820-aed6-2d2b296241b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1993af2c-ffd8-4637-bda3-381b1c1b7f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f13226-4671-4718-a75e-fd9f6c505d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66121f5-a92e-4089-ba93-d1e02fb38391",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991072f3-a348-41f6-97e2-a598eb750fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f10da987-0bbd-4b14-b9d3-fa578e3ffc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95368a0c-3ee3-45a6-86e7-0e4b007bd55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f9c181-3c2b-4e72-b3b7-dc33316bb641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c64788-19fe-45ad-976a-1ef793bd4353",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0209ea-3d8a-491f-bc6e-5ce3e09d5dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bcd629-5631-47d8-a9d0-8d930a362ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d62741-c0b9-48ec-b1b6-8c0067f4355f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45339cac-ee5b-4a0d-88d2-e2931064d5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e29d71-372b-4e82-b2dd-dc81aec2b993",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd11e783-9b65-4350-8458-95d082bad318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd0da411-e08d-4560-b0f4-b863ad06f841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04213f74-eb08-425c-b3dd-3bb31495ed66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaefbdc-9f09-4025-b2d8-e80d04f844d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec4b4f3-72a3-4359-9379-2079004828ae",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a45474-7c5b-4401-b395-5792e9ecd8c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a22c3c-57ec-40c2-a50e-08cef6a443f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2316be92-e1ee-4ba4-ab02-52af95f8f759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac1f16c-4447-419b-afd2-7a0e4c77e910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0754c15-9703-40b1-87af-23d39114f625",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4b681a-6769-4ea6-b081-b3f0f4fa3fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6bef20-4c09-4579-a186-baff82dd8258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b721c2d-4a2a-47b3-bf30-9750b8785dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c13940-97ab-49cb-a3fd-99039dace283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305278b3-ee90-4579-aa28-8788e39bba33",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58bfe12-0c99-4a55-93eb-f0481afa996c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5208894c-2b9f-46c9-ab23-b340e04d1d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefe4e8e-c859-4c71-b9ba-bdc87f28c137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbd6e38-802d-4c12-8cd2-92032bdf88d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d8e2b7-3544-418b-b2ff-3302ad23e19a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e8e22c-6d91-4de8-ac38-f2c3ef4577e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ad90ed-b574-4ffc-8155-1550b7856a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6383f1-f8ac-49d7-8030-bf4ee353c9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117f9d68-50d6-4273-882f-7fef57530ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8132e81-0fae-47a4-9a1a-450265f755f8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d889a6-7400-4421-8417-06f3a5b981ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434e8f41-2f0c-482c-9018-1dd322602ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09434091-5919-428d-aa06-a3d5d898a604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d857e9b-fb63-4b6d-9563-cdd1d2b01e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f24142d-268d-4992-a6d6-242f56e96d36",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964da9bd-b096-49a3-a6e2-739c8a6a038f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4f252e-a8c3-4b37-9938-93c697b29d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22ca2cb-246d-4d3e-9040-1580e3e584db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcf03e9-5a37-41c3-810c-53db1a751819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ac0762-3935-42a4-a067-225e82c5dbe3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857cad27-cd96-4d1d-a1e8-3ef5711030dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638465bb-bd2a-44d8-b497-d8802873659f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd45f99-486c-47cf-88ea-d98640539331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e073bf51-6649-454d-a1ce-f8d31c43ff1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5bb59a-dfa2-44d0-8244-e46e099fc17d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3484684-6ace-46a5-a95b-407845866353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04befac-8908-4741-9135-ac45a6f4041a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158002e0-e042-425e-b5c5-8b7ef3873697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbd00ce-8722-4bdb-a52b-d3ef6bc0e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ffbddf-479c-4600-9979-9406404d8f18",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0994bc5f-981c-44eb-9af2-9216506f3585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c62d3a-447a-4d0b-8e96-634886953829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f4564b-0a96-46a6-a091-f1d53f1eaa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad9514a-4374-4887-8219-99016ca3d9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae867413-943c-418f-97e8-4bb6edcf6e49",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e24f3f1-ea80-45ee-9700-1895b51cb23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b8411c-206d-4efb-ac41-a7a07aa92d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3368ff6f-85da-4c17-83d8-d3b8de97e805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b06d887-eed7-4ba9-8e9b-912455fcad06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f17ded3-d8db-4aaa-9eb6-19072bcdad81",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a19aa7-be44-4667-9bb8-6dabdb8228e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1af871b-1560-4497-b614-b175dc1643f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d5b527-f355-4f3d-b55a-aafbcf2d1e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c887764-0df0-46d7-b5f5-1106b1d05dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bb3056-3414-4e36-934b-e282f2cb58ef",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8013576b-e248-4afd-ab0b-d61174af21bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ff10b2-f3f9-4f91-af8d-5d8fe806594a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896ca098-d085-4b39-bed5-a70ca7b03674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b85a6a2-f3d9-4328-9773-ffcbaa0621d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05ed0d6-4664-408a-911c-edae04eb8085",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce42664f-009a-4ee0-a4c6-0994a1e77a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3ec4ef-7118-438b-963a-7b2089fd4bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc85e66-4327-4f29-ac17-c52e90d08b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b233f4-9727-422a-9ac8-329eaed62d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef74b3e-0c42-452a-b2af-d23dd7fc7f5f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f640899e-08c1-4543-b249-2577b1c06ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06cd7b7-dfa0-4748-ba49-e0b53d8be1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db4a658-c640-4fd4-ae6b-fe0540666479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea22c8a-6974-42b3-9fb4-858a567162e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d29ee8a-85c5-4d80-ad67-aa9c46f1f147",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80313b15-9b83-4735-89ef-9a4777f30e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a9a5bc-48a5-4e27-b0c7-a399120dcc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a9e79f-40a4-41b5-abda-dace753b5245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ae21e1-ae47-445a-8cfe-f08d1a69dd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483f8b77-dd54-4124-bb51-077539643ead",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0256ff1a-f7ac-4767-ad93-b8898e94cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc2fef4-e502-4b21-b4bb-d52d78ca6506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365cb67-5302-4a23-aba6-af8cc35f655b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd0b80b-ff09-4c3b-97ae-bd9887b11c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299cf6a9-a756-4478-bb09-d8992613933f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c762f396-7749-43c3-b548-5fd4d007c95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5cdbf7c-7a28-4b2b-911f-819b60afc5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b96c2f8-fa36-4d37-adaf-858184547c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7585c6-415a-41d4-a368-5528a5f90872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b295f73-4454-4f57-bb4a-17ba13c32530",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7371f4-bd55-4c5c-8bf7-4555d9f733bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9401675f-4ed6-4317-ad86-6239fa31c308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89791dbf-e2c2-49f0-bb99-9a6d74ce32df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95ba775-44f7-4b55-baac-25efd95b45f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a7055-3729-4d74-ba9b-2bed34c3bde1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5851f839-607f-4922-8dc4-92848cefcab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f2cec7-ee82-447d-af3c-d5f8dd084f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d9c139-b7fe-403a-b769-82cd0ca50cad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea47def-d3d5-42c9-b966-61a751dda652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50acfc23-2bd9-41b7-a49c-449a77473ca2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dbcc4d-b3d1-41cb-bd2b-4487aee250b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edac1632-f24f-4aa0-ae78-ed2db730fa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43a25c0-acd8-469a-83cf-ca8635ad40ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c39b65-aacc-4484-b863-0411b14c1c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31aaf3e-e46d-4544-a4ee-7ce083637a05",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021218e2-f8f3-4776-b9ca-317ab89bf04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe52693-bca8-4850-989a-41b0bef3d15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da37707-76e2-4315-a171-1909ab0de8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89e8947-3c1d-4ebf-ad81-24ded78eac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0f7526-c679-45a7-ac1f-2945c12c9914",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96459db8-74d0-4345-9867-b05fbe1a6abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23590fb3-4811-4852-aea1-f9d642f02ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3792deb8-673e-48b1-8758-d5791cc33a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2305e3-69a6-4554-a9c6-d5da7e9e3b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07a11e4-f999-4986-b1e0-3b6dd6010a15",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85a2119-71dc-4adf-9407-5bf2faefb724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d119ac0c-efe7-40d8-a4c2-52c346e3c5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f858c8c7-69c5-4d4d-a2c0-ab3142cc5012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a81175-2081-43a5-84cf-407f9e589624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7173a70-6871-4486-aabd-f7293ef7f437",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57071e22-864d-4f84-8544-09768bd6926c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abe2841-ce6b-48a2-8a14-d26f04c6f623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19084b4c-1483-496f-83b6-91ea3df8cf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8210c1-0e49-47cb-825c-31cd0da85300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adb023d-2680-4540-b3cf-5e0816af133f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94430eef-0e68-4526-9900-5240ccb16c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e700846e-93d7-4d6c-8df1-389dc6fb5f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af7a5f5-13fa-4ac3-8a1e-0d453c29bbc6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c13a89-40c1-42a1-bf8d-9575b806284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250a09a4-48a2-4749-a315-9cd885fd4035",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526d899a-5131-4de5-8959-c9ad084a80f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94bb6523-a5f7-44fc-a1db-0e7aa95bf013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b7dfee-60cc-4ea8-945f-9040ad25e83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af5fb4f-2f45-46bc-9dc2-3d1da774c9ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93f19dda-a45f-4cb6-891c-79eba9610a49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3aeb0d-892d-48bd-9631-059b1b3f0454"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7935e4a7-d2e0-42d5-93a8-583cc8312fb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a017200-402b-407d-a9f0-352f9967c0db"
                    }
                  }
                ]
              },
              {
                "id": "77558d8d-346e-4ab3-b4de-3c4408e1bc37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f593a10f-124e-45ea-b1bb-fc804a7abeb9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452ac28c-ce71-4a56-abe7-925c745e6dd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a3b5b54a-3263-4ba0-8f8b-34904f0bddf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751e3f5-85c9-4c1c-a834-bf6aacced523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc068138-631c-45f7-af63-dbdd4349dd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e64aea-481f-4668-9c9f-a047fe0f7a7b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eadd1ff-a2f2-465e-9b1c-86c51ce477dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a8aa812-bc1a-4445-91a1-362f62a995bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756de224-4132-49f5-9b3e-720885679ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fd7cabc-e0bd-4b69-bcf4-c2bcc5d2ccba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03730325-28be-4df5-9d5c-208f67e4a3e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcf52a24-a90d-4bcd-8c19-9db29b036178"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de4998e0-d2d0-4ab7-9d1b-48894c105dc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f034b80-4449-4d3e-82e3-21f5501eced2"
                    }
                  }
                ]
              },
              {
                "id": "e0d57e23-2e53-49e7-aa3f-34c02efb0ce3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "231f85b0-2242-4516-b80f-2abc0b274036",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769ac20c-f614-46c0-bf0d-67f957c7798d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2f193cfb-9dac-4b67-93d7-2be98f3b6582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1c41c4-a4ff-4095-a2d9-6d0862c38fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7621c0-531f-4a26-9fb9-006163338ee8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f0a021e-ce04-493a-a52f-4e79ca6a0d79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6433f61-677e-4aaf-8da2-ce5b9cd257a5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eba7f33-8c33-4437-86bd-66d16e42a77b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8abbc9a4-f1ce-4601-aee3-22a726c82bca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbea0866-c0f6-4454-8bc9-9e66d4896e81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16d8c58e-5015-4f85-97a9-faca52fd038f"
                    }
                  }
                ]
              },
              {
                "id": "f04488b8-e12f-45d9-ba18-452f740a0cd5",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c16823c3-64bd-4d28-8ab0-96b3879cb013",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f65dc728-a6f6-4b86-bb76-210c4e4105a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc891633-8b4f-4a50-9dbe-7e514f635257",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8886f27c-e622-46d0-b0f3-431f62044b5a"
                    }
                  }
                ]
              },
              {
                "id": "a4765b99-cb3b-4487-b456-2f245f4ad722",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b989b6c2-8878-4545-84b3-0a38efd3e481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0eba68ce-bcbc-42fb-8984-cb5fe80b9071"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17fd75d9-e920-403c-b773-bc810f8ed5d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24560ccd-d23c-4042-a614-5be7696175a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a028a223-777b-443c-a930-7e38cc957309",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12b827eb-a1af-4569-8ea8-84a5f7dd9c78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9703caca-f51a-40f0-ae2e-e65a51773e67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3785e0e9-ef1b-496d-81c2-b7434a79709a"
            }
          }
        ]
      },
      {
        "id": "8801243e-773e-4254-ab7e-49452609bd8d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1e5e53c5-57e2-42ef-bc38-b33e5568249c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdde7595-7694-4052-ac99-a96cecce8566",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46023821-87d9-4416-b008-570f128078d3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37381c36-6b75-483c-8095-afb16cd1d45e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b1986f4e-85e8-4ffc-8d9f-5c4653816486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c75134c-0287-4572-b58b-14873783b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "515c3448-dc93-484c-b0b1-8143074599a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93c5bbf-a254-4d6d-a6e0-d6b8411a5504",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d2d391-2934-4c6b-b5c0-60aeee06936b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "164eae7d-e6ae-4ee8-ad70-3760f36fdba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0725e8-c5fa-4b10-ae53-fe805bc64d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6771e423-046a-4909-be0f-324d3c6fc0f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b2587a6-0560-4c0f-8590-60a963ca76f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5b7fbb3-f7cd-4f11-a17d-1c1b804a0ab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e3663fb-4bbb-4ded-a80c-6c0631512c28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba82ce82-9b52-41be-b652-d64e572de4b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e4baf77-14a7-4730-ab6f-bdce61bb6963",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8de69848-f489-4748-a813-2d6bad6ceb42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b22e7c87-e122-4d80-9e70-662d7881ba39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59179620-0c6c-4d77-86d7-a095a36769a0"
            }
          }
        ]
      },
      {
        "id": "3f06cdc0-e716-4313-ae79-453111f0b282",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6dc56337-f387-463a-9037-fa9cf01d0a1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cda85f4-bc91-43dd-89ae-a888e006565a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a4aef5e-f3f8-4b8a-8d8f-60390c817e81",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615dfa72-e7ba-4ed6-8ccb-ac50ab6b2996",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2360ba4f-ea8c-4a81-a2b4-3cc1c7c5dc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf404f5-eee5-46a0-a5ac-a1d1a027478a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b2fa800-6741-4948-9615-aaee4729674c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0f2e1a-fa5e-4fb7-92a3-d5334f036e55",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acf5368-8e4c-45fd-8dd5-d1e6d74cfa81",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21fde29c-8738-4dbc-b2f6-cf5db837f9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cb6ff1-82af-412d-b495-01019ca2199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3be7fd80-72dc-44c1-b4c3-6242c6b6d0c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9950d762-cba5-4ba4-8e53-36dd2b5e5dbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1339bcf7-3f61-4394-affe-ad26c0c12c28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21cd0b18-2936-433b-b0ab-e475ba2de8a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa6bcb3d-b77f-473c-954f-d85959f5c73f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "279556af-c4bb-421b-8581-968f2934358c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9dd230a5-ef25-407c-a4a7-5047f7b23358"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a16ea50-32ee-4c57-9da8-7dd73b2da972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f02a8dc2-5f0f-4b7e-a125-d2d04ae7c9bc"
            }
          }
        ]
      },
      {
        "id": "a6d2478a-5d35-40ee-abc0-bcd97bfacf08",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4ce55054-d811-4641-ad1f-0accfe84eb1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bfa41de-6d6c-479f-b6d1-850878fc95d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "860ab2ac-a4a6-4608-911c-c2296574feb0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ff0b07-9531-4ac9-a892-aaf3ed080af5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3462ae6d-93ec-4f81-96d3-d784656d60f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a206ae8-79b5-44a7-b2c9-033162358454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "805a0682-5013-4155-8b71-27f3f207c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789e138d-6903-4b1c-9e52-821e8806fb38",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde6e5ce-47f3-47cc-8b89-cb352772b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e50613e0-b649-4fa8-8e3e-c362499394f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc5687c-d141-4fd8-9861-652872d1a33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a4f6fc4-56be-4e6b-997a-b31a4b94cb29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bc36a70-4bf5-42b2-b559-fe3a2f7090e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89e1dc09-da29-4c6a-88bc-9a4b7a9abb45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "456f9b5d-46c7-4e60-8d71-2e9e64f383fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "968466a9-7239-4232-88ef-de638bcc2a8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01b44911-7797-4225-8837-f867f3eccf3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fd4f6935-3acd-4db2-a9bf-48bc62de7fee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5db2ff19-02b4-415a-b267-edff3f0e86fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b77132a8-2003-4d1f-83df-56e8d7294463"
            }
          }
        ]
      },
      {
        "id": "0a0661df-1223-40f8-851e-082eaca8e860",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6218325a-4f23-41e3-9c9f-70e514d6141b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86a09a3b-f9d1-485e-95b4-01b2d0527953",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb9befff-5b61-4fd0-b36b-9fd521434350",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fea8d8f4-5e67-4161-868d-a41fc2e01b97",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad151981-ffb5-47b1-9eb7-493b85f2b1e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 440.33333333333337,
      "responseMin": 10,
      "responseMax": 2860,
      "responseSd": 342.81352235743446,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670632574639,
      "completed": 1670632700124
    },
    "executions": [
      {
        "id": "7505093f-7d19-47a6-a089-8dd5baf4be61",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ceaea3de-ccd0-42c7-8168-505eb67e0fb5",
          "httpRequestId": "fd8f8113-1f0b-406d-919f-9665069cadf5"
        },
        "item": {
          "id": "7505093f-7d19-47a6-a089-8dd5baf4be61",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "36b5447c-49a9-423c-bcad-7cbc53b04835",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "8225fb44-6c7b-4091-ad7a-4b38180f416b",
        "cursor": {
          "ref": "decd0685-0182-4c88-9265-fd450fa491ed",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b6574f26-41a5-4399-be32-fd205cdabe58"
        },
        "item": {
          "id": "8225fb44-6c7b-4091-ad7a-4b38180f416b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e5782fe-8957-424d-a1c8-ae7de10bfc1d",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "1870c011-05da-459c-99bc-56a45b0e53dc",
        "cursor": {
          "ref": "4bd7a252-f344-4657-91e0-4e33901fe3b7",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "631479df-1229-4ffa-b78a-b162583ff911"
        },
        "item": {
          "id": "1870c011-05da-459c-99bc-56a45b0e53dc",
          "name": "did_json"
        },
        "response": {
          "id": "417c5af6-5614-47c1-bd0d-e651325779a8",
          "status": "OK",
          "code": 200,
          "responseTime": 794,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d0ccfe-b7e0-4df1-aea3-520c178f7e81",
        "cursor": {
          "ref": "a600cef7-7b71-48de-a117-2d8f17f29428",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdf6a610-c089-46cf-a653-cd73e4963542"
        },
        "item": {
          "id": "11d0ccfe-b7e0-4df1-aea3-520c178f7e81",
          "name": "did:invalid"
        },
        "response": {
          "id": "b360b13c-8c7b-48c4-8658-05ea7827a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d0ccfe-b7e0-4df1-aea3-520c178f7e81",
        "cursor": {
          "ref": "a600cef7-7b71-48de-a117-2d8f17f29428",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bdf6a610-c089-46cf-a653-cd73e4963542"
        },
        "item": {
          "id": "11d0ccfe-b7e0-4df1-aea3-520c178f7e81",
          "name": "did:invalid"
        },
        "response": {
          "id": "b360b13c-8c7b-48c4-8658-05ea7827a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78bb41c-5f03-4703-9f69-a8fbb7b7f1e8",
        "cursor": {
          "ref": "a688e2ab-52f4-46d9-8955-f3dafdc5384a",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8314fc16-12e9-4435-95ff-0479b928e72f"
        },
        "item": {
          "id": "f78bb41c-5f03-4703-9f69-a8fbb7b7f1e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "74691834-61bc-43eb-a744-6291a804c84d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 759,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0533e63-486b-47b6-8ff5-5a7d100b28c3",
        "cursor": {
          "ref": "157f0ab6-a99f-46e6-a06e-47cce4915366",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f0ec7fe9-7fad-4f36-b3e2-60fa36d2162c"
        },
        "item": {
          "id": "f0533e63-486b-47b6-8ff5-5a7d100b28c3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f28ed969-cbaf-4a9d-82f3-eb07467cc12e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 624,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f7a5e8-5c2d-45c0-8740-5251fea532a7",
        "cursor": {
          "ref": "2455b51f-f4bd-494c-b959-27c88877a880",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5aa20385-c556-4976-a308-6556a77c96ce"
        },
        "item": {
          "id": "34f7a5e8-5c2d-45c0-8740-5251fea532a7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "41582c95-f6ee-4b22-8734-f2f2a6030c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fb56c0-f586-4dd7-a99b-cdb52ddc35e8",
        "cursor": {
          "ref": "48885222-35b7-4acc-82e2-b72271cfc643",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "033d212b-1e83-42e3-b7fe-8f042b3ebde3"
        },
        "item": {
          "id": "f9fb56c0-f586-4dd7-a99b-cdb52ddc35e8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "32afbb67-226b-48ad-87b5-6484d7f18cbf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fb56c0-f586-4dd7-a99b-cdb52ddc35e8",
        "cursor": {
          "ref": "48885222-35b7-4acc-82e2-b72271cfc643",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "033d212b-1e83-42e3-b7fe-8f042b3ebde3"
        },
        "item": {
          "id": "f9fb56c0-f586-4dd7-a99b-cdb52ddc35e8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "32afbb67-226b-48ad-87b5-6484d7f18cbf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684d626-f00e-4bdd-8ff6-e6362f74083a",
        "cursor": {
          "ref": "e240292f-db89-4a0f-ad0e-3da952ec3150",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e000c60-ecb0-4aa3-9e98-005404e304c0"
        },
        "item": {
          "id": "2684d626-f00e-4bdd-8ff6-e6362f74083a",
          "name": "identifiers"
        },
        "response": {
          "id": "c276041d-5680-4ebc-a894-56a9ad701adb",
          "status": "OK",
          "code": 200,
          "responseTime": 816,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87c7b16-69b2-4ad5-b7ec-f4477b240010",
        "cursor": {
          "ref": "3134d14f-3a36-4657-8b50-b2ffe5519263",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "91635069-4209-4625-a19e-90f2286352fb"
        },
        "item": {
          "id": "c87c7b16-69b2-4ad5-b7ec-f4477b240010",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99e67fd1-fdad-451e-8041-1166a2267ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87c7b16-69b2-4ad5-b7ec-f4477b240010",
        "cursor": {
          "ref": "3134d14f-3a36-4657-8b50-b2ffe5519263",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "91635069-4209-4625-a19e-90f2286352fb"
        },
        "item": {
          "id": "c87c7b16-69b2-4ad5-b7ec-f4477b240010",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99e67fd1-fdad-451e-8041-1166a2267ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e606af-5cbf-4f50-832f-7094049de0f2",
        "cursor": {
          "ref": "b90c9e55-b7e0-4648-9992-2f273db8a781",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "42757bfd-542c-41ea-9e28-508cb9e09487"
        },
        "item": {
          "id": "02e606af-5cbf-4f50-832f-7094049de0f2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "95e28694-63fa-4266-b079-a0bac6fae31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9287c54-f219-4cdf-9e61-870a5cc54189",
        "cursor": {
          "ref": "4f8d0f36-eda1-4568-abc6-1318db66038a",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8c30e5f-870d-494f-ae52-0a629231aebc"
        },
        "item": {
          "id": "c9287c54-f219-4cdf-9e61-870a5cc54189",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ca5353d4-7244-48a5-96c0-8318a03d0228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc0c248-9080-46c6-b240-ddcdd5370bd3",
        "cursor": {
          "ref": "aa3976c9-aff5-49ac-9c08-d4d4817481f3",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c7240614-8386-4bfa-b338-bbe50d75ad51"
        },
        "item": {
          "id": "0bc0c248-9080-46c6-b240-ddcdd5370bd3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1d7f5eb1-8041-4388-8f9c-b1ca636f8b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70afc4df-c07f-4c4b-af84-3d4c52184529",
        "cursor": {
          "ref": "32277a32-ca5c-4872-b163-af2e2b503cbd",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "42dd4858-a49c-4622-b17e-22d038810dce"
        },
        "item": {
          "id": "70afc4df-c07f-4c4b-af84-3d4c52184529",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "69b883b3-c482-4967-a8b6-773011144b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24044c83-a811-44bc-a309-1e15b2b54d8f",
        "cursor": {
          "ref": "8d526f29-23f5-4025-b4bf-df78fd956ab2",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "529c697f-c002-4924-8c7b-2d7ab5aa38f2"
        },
        "item": {
          "id": "24044c83-a811-44bc-a309-1e15b2b54d8f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "18433027-2a85-406d-86e6-4841414e0fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df36732-6b38-4cf4-9866-27eb882e434c",
        "cursor": {
          "ref": "3c75330c-3f52-48f6-aa6b-9ee1205f8dc4",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "be53f781-34d8-41d5-8b77-c837f385d21e"
        },
        "item": {
          "id": "1df36732-6b38-4cf4-9866-27eb882e434c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ce4f983b-c09a-40ff-a71c-d2f9cdc704d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1db4fee-e968-4eed-9ca9-c10d9ae6a6dc",
        "cursor": {
          "ref": "f7093407-0f3e-4714-af25-f42216a88470",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a1da94a6-28fe-4628-b625-b85624130d10"
        },
        "item": {
          "id": "b1db4fee-e968-4eed-9ca9-c10d9ae6a6dc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "37e97033-df38-4d57-bb67-45053e17122a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dcce7e-feaa-4e2c-b67e-8fb93b739e28",
        "cursor": {
          "ref": "e374c222-1bca-42f9-af63-231062422207",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6976133d-1117-4ffd-a321-8fdda04ca552"
        },
        "item": {
          "id": "15dcce7e-feaa-4e2c-b67e-8fb93b739e28",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6386d4d1-01f4-4e59-b710-7557fec25803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbba9ef-57b3-4f4c-b7ad-593f0c2cc29e",
        "cursor": {
          "ref": "9a2a0095-f9c0-47c3-8de3-73df0d37e5a2",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "014c965f-1164-40f5-a835-5845eaa851df"
        },
        "item": {
          "id": "9dbba9ef-57b3-4f4c-b7ad-593f0c2cc29e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fc2d65ce-a4e4-4852-a592-d99d6ecfc2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b68c12-8452-458f-a404-b4f4bb5d462b",
        "cursor": {
          "ref": "34aa35e8-5a47-4a88-87f4-dae721901695",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bac2f2e0-b319-445d-a2f2-ea4eaf8e9b7e"
        },
        "item": {
          "id": "07b68c12-8452-458f-a404-b4f4bb5d462b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c7feabd9-b425-454b-8f50-e7297381a695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d103cda5-9435-46b8-8c9a-a5cf425374e5",
        "cursor": {
          "ref": "5f467d97-0b43-4494-8447-30b9b07837c8",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "61b211f2-7221-4d95-bdd2-f36b6a0d8e84"
        },
        "item": {
          "id": "d103cda5-9435-46b8-8c9a-a5cf425374e5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "709e92a8-3043-4d1e-a136-5a5ec3a5f082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7084ee-8c2b-459d-8b96-481386f90244",
        "cursor": {
          "ref": "a538ecd8-436c-4d76-b6a1-e94d98833e35",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3624d9c8-671e-4bdf-964d-a693e4b1098e"
        },
        "item": {
          "id": "4c7084ee-8c2b-459d-8b96-481386f90244",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "61bd8f38-63ab-4894-adca-034ad36fd8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142b0dc-59d6-45c7-899a-2bd4e36b90cb",
        "cursor": {
          "ref": "12f412d5-3aa1-4588-8ec7-02e986a72d80",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6cb7e128-29f2-4cd7-b73c-2e709de70b8f"
        },
        "item": {
          "id": "f142b0dc-59d6-45c7-899a-2bd4e36b90cb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1af537a4-0145-4181-85f8-488cdc2ce0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa6f9be-f8b3-4346-b75b-f38504ff94f8",
        "cursor": {
          "ref": "aa6bc155-d07c-4294-bc1a-7ba6b063f3f1",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "519955ee-6fc7-43df-82ca-6f1fd4dc0125"
        },
        "item": {
          "id": "6aa6f9be-f8b3-4346-b75b-f38504ff94f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "78867d2c-bb65-4784-b08c-487e8bb75879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906ab4b2-67ad-4113-8616-0663ffe39d53",
        "cursor": {
          "ref": "af9d9afe-2787-421b-8b4f-ec8023a91065",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b17ff116-a852-45b8-9069-c2aad825fbfd"
        },
        "item": {
          "id": "906ab4b2-67ad-4113-8616-0663ffe39d53",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bea5190e-1696-4d7c-84c2-f81e6c19c141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d07e09b-8298-41b3-88ec-6f1ee9d05991",
        "cursor": {
          "ref": "4b2d1a09-1d96-40ae-aa00-113d1cd07507",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9bb008c6-04cf-4edb-9700-88a678a56a1b"
        },
        "item": {
          "id": "2d07e09b-8298-41b3-88ec-6f1ee9d05991",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df5362f2-a1ca-4f82-b8db-ee3c7e2d1ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5104e1-0b64-4f18-b56c-e14a38dc005e",
        "cursor": {
          "ref": "17e0c175-4968-4124-a64e-e6f91977e3bf",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "466ce376-a498-4a06-9ade-0679e7a41a91"
        },
        "item": {
          "id": "3b5104e1-0b64-4f18-b56c-e14a38dc005e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "05f6e864-2fff-4789-84ee-550a7df69d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc9d108-356b-4f93-9a7a-ac95b40f20d6",
        "cursor": {
          "ref": "bfa1aec6-bb65-4a1a-b059-79b0b08d01d4",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "73911aa2-7612-40e3-ad5e-16c436d55b58"
        },
        "item": {
          "id": "7bc9d108-356b-4f93-9a7a-ac95b40f20d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ce572f8-6179-40f7-a78e-9f29e4d5e4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243eff67-771d-45d0-8c76-22fd52aa6fec",
        "cursor": {
          "ref": "33acd811-95a2-407c-80b3-e4ced0303501",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "216808cf-f408-45aa-944c-8d7c2621006b"
        },
        "item": {
          "id": "243eff67-771d-45d0-8c76-22fd52aa6fec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0ee0c110-2c5d-450a-b8a8-460362c07bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63a30cc-7644-457c-8a5a-1cc861687ee8",
        "cursor": {
          "ref": "2f337035-1f9b-4c18-a096-4d635c47189f",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "00d9a37a-83d7-4dd6-be73-8ed6c6f2f645"
        },
        "item": {
          "id": "b63a30cc-7644-457c-8a5a-1cc861687ee8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dfd55ae2-6b36-47d6-9be2-67e2a687c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787fcfbe-840e-4036-88a0-8c5f21d64c26",
        "cursor": {
          "ref": "c8e599de-ac8e-49a0-b34f-617f67332354",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6b86f0d5-3d60-4727-977f-82041fbc36b6"
        },
        "item": {
          "id": "787fcfbe-840e-4036-88a0-8c5f21d64c26",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fff22d63-7691-4450-ae2f-4144dbf3ddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed14036-b831-4690-b289-9bf45c977453",
        "cursor": {
          "ref": "879de6c2-e232-4968-bf06-e978e9138dd2",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "361900bd-7113-443a-bdbf-8b501e2b3a4e"
        },
        "item": {
          "id": "9ed14036-b831-4690-b289-9bf45c977453",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f34b5a8e-26a2-4406-a558-4cb934ea8a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86806725-3bf0-41f0-8199-eaa348d2a33f",
        "cursor": {
          "ref": "237926d7-d524-41ec-b5a7-e0aa01a990c7",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f1f82139-7c01-4da5-a4e4-532d6996259b"
        },
        "item": {
          "id": "86806725-3bf0-41f0-8199-eaa348d2a33f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bcfa5f05-efd1-40cb-ade7-94fd0789d919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf2e324-7d5a-4568-86cb-e40aa88c8d60",
        "cursor": {
          "ref": "35600bda-73e7-4c5b-aed2-e3cdc1d71f91",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27fa8ba3-e636-4654-80f9-692835fc5a9d"
        },
        "item": {
          "id": "2bf2e324-7d5a-4568-86cb-e40aa88c8d60",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b1868689-2bd9-43fb-ac59-7f74813d85ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5037a724-8b17-4844-bc6c-9e4f0f2caaec",
        "cursor": {
          "ref": "efba5235-08af-44fd-9f9e-ec905248b224",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4725fe8f-b5f0-4fef-b807-1452f2cc473e"
        },
        "item": {
          "id": "5037a724-8b17-4844-bc6c-9e4f0f2caaec",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c6171ee5-efc2-4260-a136-cee2dec03de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f3dcff-e3a1-4038-81c1-529f83b2e414",
        "cursor": {
          "ref": "f344b1b5-f4bf-445a-be88-c35e7d23d355",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8fed9533-5d48-434a-bdfa-9c13ca6c9fb6"
        },
        "item": {
          "id": "63f3dcff-e3a1-4038-81c1-529f83b2e414",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "db1b7afe-913d-4eb1-9c03-8f1b5cfb2e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f4d78e-4198-481a-bf74-92c6855b43f2",
        "cursor": {
          "ref": "79d9cde2-6cc1-45fd-924a-01253baf8dd9",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1bd5970c-d011-47cb-83aa-b3245c0873e3"
        },
        "item": {
          "id": "19f4d78e-4198-481a-bf74-92c6855b43f2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ccfda9c9-2bec-479b-b30a-c1aaac6d9ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6f3e57-ac0b-4be1-b16b-2a61bd51b060",
        "cursor": {
          "ref": "f761ec1d-25ff-40cb-98f9-c915dbb8160c",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b3233c07-b2bb-4b82-8058-24e0bff1b0fd"
        },
        "item": {
          "id": "bf6f3e57-ac0b-4be1-b16b-2a61bd51b060",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3c3fc974-9c3a-4d80-9970-ecf9eb9c0afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a062aa1-2ab9-456a-8ec8-bd97094f2de0",
        "cursor": {
          "ref": "d5f06118-df43-4ec9-9d55-45258ad166ab",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eefa543c-f621-473d-a42d-d301ccf91acf"
        },
        "item": {
          "id": "9a062aa1-2ab9-456a-8ec8-bd97094f2de0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1a93a189-dba6-458a-93e2-babdc17a331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e1255a-f7b3-477c-9b43-fd7389a3bf8c",
        "cursor": {
          "ref": "26dcbc52-2315-44e8-9c30-157838736401",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c04c2bcb-e27f-4ef7-81b5-5a45a2d2356a"
        },
        "item": {
          "id": "c1e1255a-f7b3-477c-9b43-fd7389a3bf8c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "49602fe2-8823-4ae2-977a-a71943886bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd8dceb-1078-408f-9b8e-baa51ecc2cfe",
        "cursor": {
          "ref": "6dc6a688-d9f0-4e3d-ab33-5546325e49d6",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6e7a787a-efb1-411e-9d12-b84bd9966ec4"
        },
        "item": {
          "id": "bcd8dceb-1078-408f-9b8e-baa51ecc2cfe",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "30b4a3f2-6c92-4704-8709-9129fcd792db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae5bc25-b056-42d6-a828-f191e1413a8c",
        "cursor": {
          "ref": "59694bda-c1fe-4a67-8f20-5549077523b5",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0bd8cdae-f869-4c9a-8fd6-2ca88b04157d"
        },
        "item": {
          "id": "5ae5bc25-b056-42d6-a828-f191e1413a8c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ab2ad1e1-36a7-4101-ac33-1cf09ae2494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b2f7b0-debf-4daa-9556-77e3043def22",
        "cursor": {
          "ref": "222047e6-9eeb-44cb-93a6-4398fc82bf4a",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c09c1e08-95eb-42cb-916a-b7602b518c2f"
        },
        "item": {
          "id": "f1b2f7b0-debf-4daa-9556-77e3043def22",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "87e18c3a-c60e-4078-a493-5e535beb715c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5422990-6ef2-41fd-a7ad-088a42b06700",
        "cursor": {
          "ref": "90ba52ab-abbb-48a1-ba79-8933fdb38c04",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "adcf3291-59a2-4bda-94ee-5106ac43bd78"
        },
        "item": {
          "id": "d5422990-6ef2-41fd-a7ad-088a42b06700",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e3bbb323-d396-4994-90d5-09ccef32049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff4933b-32e6-4930-8a9d-7b967fa1ba5b",
        "cursor": {
          "ref": "a0afe7af-3be1-4da8-a483-30baf5e91575",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b836458f-9ec8-4970-9fcb-07276c1ca982"
        },
        "item": {
          "id": "bff4933b-32e6-4930-8a9d-7b967fa1ba5b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "62c8c15e-4ca6-4f6e-867d-82b603a6df05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42d400b-6956-46d0-850e-98c4216b1316",
        "cursor": {
          "ref": "fda71e9d-b12f-447e-96f2-abd850eb47ec",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "221f5d1c-e838-4e43-8838-eb3cfc3ba2bc"
        },
        "item": {
          "id": "f42d400b-6956-46d0-850e-98c4216b1316",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9aac7e8c-033c-477a-915d-8c0936f4b87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a4c5c5-b9c9-4a56-b3e8-9a2b0dbf0127",
        "cursor": {
          "ref": "eae7fbb2-79ea-49d9-a597-7ce8f1410832",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "54d75db4-aeb0-4993-aec2-4740c4a4aae6"
        },
        "item": {
          "id": "94a4c5c5-b9c9-4a56-b3e8-9a2b0dbf0127",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "807f1cf2-7cf7-45af-bab7-12550ead8131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa8962d-c663-411a-95a3-21fc410e2ce3",
        "cursor": {
          "ref": "19ec89c4-cf10-4488-a614-ace21f720e0f",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9ba1febe-d211-4fc2-bc0c-1c5bc535c61d"
        },
        "item": {
          "id": "9aa8962d-c663-411a-95a3-21fc410e2ce3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a76d4f81-c435-473c-b2cd-1ff3cfad76de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a997a53f-d494-4353-b18c-ce75b925a259",
        "cursor": {
          "ref": "91fc0517-1133-4ced-b78b-715046423d29",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e721209-240f-41f3-bf27-f728ac6c7d4e"
        },
        "item": {
          "id": "a997a53f-d494-4353-b18c-ce75b925a259",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "039e9e7e-d1e9-437b-b080-d02da2b9cf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d756ba5f-3396-43df-ab22-59cf30abbf60",
        "cursor": {
          "ref": "e6984b93-b61f-4760-86bd-aa481c6ce4fb",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21a4ddc2-5f8d-40a2-a72c-75942a898993"
        },
        "item": {
          "id": "d756ba5f-3396-43df-ab22-59cf30abbf60",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e799b85f-b635-487f-879e-421048f6d6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55843087-c1a9-4506-9038-2e7be6c2296f",
        "cursor": {
          "ref": "ecc40076-300a-4073-b11d-fcfa965bbdbf",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a0834257-fb16-4f3a-958c-75ae1c7a1ff7"
        },
        "item": {
          "id": "55843087-c1a9-4506-9038-2e7be6c2296f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7ec6c14f-c57f-479d-a195-abc94fbae717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9831b16-13dd-4b7e-8320-ec0c3983e3be",
        "cursor": {
          "ref": "2b20e24f-caa3-49c9-baa3-d9543da7db97",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8b394968-9a43-42d0-8f9f-c71c9950a363"
        },
        "item": {
          "id": "e9831b16-13dd-4b7e-8320-ec0c3983e3be",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bdae9a8b-4d70-4dac-9756-fe2efd2e6193",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 534,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b60bfe-5105-4436-94b0-08b80333c37f",
        "cursor": {
          "ref": "35aba60e-7ef4-45e7-baf9-ebb93fd9b9e8",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b6b4f30e-dc8e-4c10-8109-c12e8d0486c7"
        },
        "item": {
          "id": "59b60bfe-5105-4436-94b0-08b80333c37f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0c92b1e-0aa5-4651-bb1c-04e2cf60788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8aa526-ec3d-4f5f-80d7-e8e9400b9948",
        "cursor": {
          "ref": "3b226813-d4ff-4405-b9e6-680a187db046",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "edefb969-9a84-4ce3-9283-0ea8a2134dec"
        },
        "item": {
          "id": "5a8aa526-ec3d-4f5f-80d7-e8e9400b9948",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9313e20a-1209-41e6-8df1-4c6cc5db91cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3f62c8-f059-4bef-aa8a-67fddf086a69",
        "cursor": {
          "ref": "fe2da515-6d78-4554-8124-b672103b9c56",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fcc5df28-c6c3-4928-a473-d0b82c347b32"
        },
        "item": {
          "id": "2b3f62c8-f059-4bef-aa8a-67fddf086a69",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "409b1996-142c-4382-995f-c336132276df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab99f44-5888-4cd3-8842-cd971dcd12f4",
        "cursor": {
          "ref": "d2edc349-8101-478f-a56d-f199e1f0eda6",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7f935af0-29a1-4c57-880b-3662685f8aed"
        },
        "item": {
          "id": "aab99f44-5888-4cd3-8842-cd971dcd12f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2224479b-9a02-4c51-b898-1ecb6819f7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde03b8-86c8-4ced-8f18-bbe42829eae9",
        "cursor": {
          "ref": "41f59cbc-73ed-4db7-ae7a-0c20b04f89fc",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d865e06e-c717-4d66-be53-ab5accc41f8c"
        },
        "item": {
          "id": "5dde03b8-86c8-4ced-8f18-bbe42829eae9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "819e7637-20ec-4c15-b3fa-0958e2e69e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f276ce9-243e-42b8-9c3c-9e6aa27f0f47",
        "cursor": {
          "ref": "078be553-46d2-4598-bdad-7df51fc4170d",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dee8be92-ae22-4caa-b735-955928101ce6"
        },
        "item": {
          "id": "1f276ce9-243e-42b8-9c3c-9e6aa27f0f47",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "681f0378-ebbb-48ba-85cf-d069c3be5619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc39c7c5-e82b-4544-a0a2-3a7a3168596c",
        "cursor": {
          "ref": "9f251183-291f-40cb-b55b-49cf39ad3980",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f0635a3b-052f-4123-8e44-2bf79c1db54d"
        },
        "item": {
          "id": "cc39c7c5-e82b-4544-a0a2-3a7a3168596c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "605de165-f5c1-4cb4-88f7-e61929d3c26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686bc5f3-1889-4da0-b44e-c51f3aac91a3",
        "cursor": {
          "ref": "983c3216-a5e1-442c-9eae-ad4d1ce8cbe6",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a253f5a1-ced0-480a-ada8-5138f2543e9b"
        },
        "item": {
          "id": "686bc5f3-1889-4da0-b44e-c51f3aac91a3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f2750d88-5638-45bc-9048-906a34c7f4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021fc008-1e1f-4fef-9fd1-eb197d136ac7",
        "cursor": {
          "ref": "05aac1d8-582d-483f-9b70-c720e213448a",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e98a83c2-1b92-4659-9937-5c5be05623e8"
        },
        "item": {
          "id": "021fc008-1e1f-4fef-9fd1-eb197d136ac7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "410ecfc4-e29f-4a74-83e6-1fa3a71e6123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bc9e86-4872-40cf-93a2-de7b1436e709",
        "cursor": {
          "ref": "dccac061-b9d5-48fc-8fa8-53729c8c60a6",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3ec9cb00-60d8-4ca0-9a8b-df26a2733986"
        },
        "item": {
          "id": "f0bc9e86-4872-40cf-93a2-de7b1436e709",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "329a5cc9-c856-4a50-a9bf-ed518626335f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb6baad-b4ee-4396-af17-131a1220ffe0",
        "cursor": {
          "ref": "d6994e3e-a5d7-4b9b-a808-19842b9d0efa",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4fedec5d-e98d-4142-a6bd-0bf7db6eb4fe"
        },
        "item": {
          "id": "7bb6baad-b4ee-4396-af17-131a1220ffe0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6ae398ff-2904-4b84-8039-ce68c091532d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d1f3d-cbf3-4421-8199-80192567797a",
        "cursor": {
          "ref": "984bcba1-9939-4511-8601-8e7746630a3d",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ab830716-a34d-452f-b8eb-3166a309cd02"
        },
        "item": {
          "id": "5d6d1f3d-cbf3-4421-8199-80192567797a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fda5c913-6a14-4d9b-a87b-69fa49d5358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335421b-efb0-418d-9299-92735585f7a4",
        "cursor": {
          "ref": "ec703ec8-440c-4aa5-b4fc-6765bf90c05e",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "36254b5a-0aa9-40c5-8dbd-6c3781cdfe7a"
        },
        "item": {
          "id": "4335421b-efb0-418d-9299-92735585f7a4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b6964d97-1299-4d0e-940b-0ca4e8e37bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffedfa8-ebfc-45fc-8b62-999ab2d1a4e2",
        "cursor": {
          "ref": "b41250ce-5200-4f8e-80d9-48afebec5aae",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "78552647-c49e-4dba-bb96-f9dd40331a6a"
        },
        "item": {
          "id": "cffedfa8-ebfc-45fc-8b62-999ab2d1a4e2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0883c8f5-c64c-4db2-89a2-ac09f4f0ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2233ea74-fa23-4b15-b30c-b11d97d4d2b6",
        "cursor": {
          "ref": "d99f0804-abd8-44b3-9447-f8f80eff925f",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d4e9ccc8-6e64-4731-b5e5-93ab5d75bb7e"
        },
        "item": {
          "id": "2233ea74-fa23-4b15-b30c-b11d97d4d2b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aca89132-97d3-4d4a-92bf-527cc62826da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30cf0d8-e6c3-4250-bfaa-395b4dbbef19",
        "cursor": {
          "ref": "07d73856-a866-4596-909e-a4c1fb6cc9b1",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8e98e5a8-89bf-4afd-a6ee-8c8a8533ed4c"
        },
        "item": {
          "id": "f30cf0d8-e6c3-4250-bfaa-395b4dbbef19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1b9cd677-21d0-428e-8349-34084c008ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c8feb9-df44-418d-8608-66ccc4bc8b74",
        "cursor": {
          "ref": "817e0a59-d57c-4788-afe9-496f21aa99ec",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a3869ac7-ed43-43a2-9bdc-233c49190ffd"
        },
        "item": {
          "id": "e6c8feb9-df44-418d-8608-66ccc4bc8b74",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a489e945-5420-4d92-8bd9-61459b886db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab876a1-e5d9-4047-b74e-3051e2620569",
        "cursor": {
          "ref": "c7ccc2bf-ebe2-4302-8935-adca6ad8db85",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "05402daa-4e7e-43cb-9e16-76b2f44d3047"
        },
        "item": {
          "id": "6ab876a1-e5d9-4047-b74e-3051e2620569",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "df44b3de-c039-42d4-a360-eda35cab8c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21133dad-d7c0-4646-ae0f-3c3d5acea6b1",
        "cursor": {
          "ref": "98888b7e-929f-4025-9542-a405e79a3082",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "25e6ada9-4938-41d6-a1a7-a8f162d653d8"
        },
        "item": {
          "id": "21133dad-d7c0-4646-ae0f-3c3d5acea6b1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2132a3b-7234-4193-bcee-ebcbd567f813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8dc5a4-e180-444d-a95a-75e96221ed7b",
        "cursor": {
          "ref": "44fa2640-5b4b-4c31-bd29-588d5aa82c6a",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fbc72133-a667-48aa-b615-e88f282f45a8"
        },
        "item": {
          "id": "de8dc5a4-e180-444d-a95a-75e96221ed7b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "be974128-5a9c-443b-92c6-a2197b13bae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dae443-580c-4933-bbef-65c424515e16",
        "cursor": {
          "ref": "3ad18105-eddf-4f7d-a280-bf3f12e1310d",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "40360bc3-cdfe-47d8-a26e-fd3b95b5b704"
        },
        "item": {
          "id": "c4dae443-580c-4933-bbef-65c424515e16",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "62110620-0cb8-413f-a79d-ee4b9b97c02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca25751-9bae-488e-a436-55d5e4fd811a",
        "cursor": {
          "ref": "babb0dd2-cae1-4260-adfc-b947598bd530",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "13a8e009-bfaa-47e6-987b-c20f4c53f1cd"
        },
        "item": {
          "id": "eca25751-9bae-488e-a436-55d5e4fd811a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "85483fcd-debf-455c-b150-062c354ff6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66885d8c-6f9f-41de-92a4-d6b82f43f28c",
        "cursor": {
          "ref": "fdae56b2-3d9c-495c-a281-cc3b2ea63256",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b5cc4e18-d234-4e70-b36a-c5a781ed5d68"
        },
        "item": {
          "id": "66885d8c-6f9f-41de-92a4-d6b82f43f28c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "132df743-c98e-459c-8aee-0ce8fcb37d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b89109-abc3-481e-ab7b-47bb5d95fba9",
        "cursor": {
          "ref": "5b653711-1ac5-4494-aa4a-0de3f2ca7a26",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0c24e492-fac4-4dd8-bb9a-006a39932357"
        },
        "item": {
          "id": "12b89109-abc3-481e-ab7b-47bb5d95fba9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "808580bc-c8f0-41b3-a297-9245093eb2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9880563-0378-406a-b19d-d0e19a249054",
        "cursor": {
          "ref": "9ac560a4-eda7-470a-9d39-c4aca4e5b8cb",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8eb42d24-4384-48d2-9194-7d05b23b866f"
        },
        "item": {
          "id": "f9880563-0378-406a-b19d-d0e19a249054",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f2a0c695-94f0-4a63-b027-e1e235191bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2f16a7-c0e8-4499-a2a3-bb9c3d9b828e",
        "cursor": {
          "ref": "e69bd68d-6252-4ccd-9831-f1b2edd79801",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2157dc1a-d244-4fe8-ad58-6e7772f89742"
        },
        "item": {
          "id": "3c2f16a7-c0e8-4499-a2a3-bb9c3d9b828e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2b99fc52-e1bf-48ba-aeb1-b6f2b4b9bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0917ce1e-59da-43bb-83b8-1a26b553e2c9",
        "cursor": {
          "ref": "41143090-d9fb-4451-9dea-33317678f8c8",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5813c84d-328f-482d-bf67-15239b25a770"
        },
        "item": {
          "id": "0917ce1e-59da-43bb-83b8-1a26b553e2c9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea230b35-455f-47e8-bcb9-13bba00ea111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6262d0b2-31ff-4cb0-93ff-b74837f7460f",
        "cursor": {
          "ref": "e6c51c92-4d1c-4b1a-b7fe-c2257f73ecf4",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "28a42bff-8cc0-46f7-9e33-f6ffea75919a"
        },
        "item": {
          "id": "6262d0b2-31ff-4cb0-93ff-b74837f7460f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f610cb38-4dcf-4b70-ba29-c00fabc1eb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20df8d3-d718-4c4f-8356-22cc6db809d2",
        "cursor": {
          "ref": "81e45fd0-8059-45ab-9dac-e462dbb5f353",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d3fff99b-f901-4f83-b48c-ea4c997bf1c4"
        },
        "item": {
          "id": "f20df8d3-d718-4c4f-8356-22cc6db809d2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "009b901f-4ac3-438b-862f-8a28eff42f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d7529a-1e34-4c08-a814-565b0f1356d0",
        "cursor": {
          "ref": "8e14e6f4-9bb9-44d2-af2b-2fda6e254648",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "46d383df-8e92-4b81-8284-65949f72d262"
        },
        "item": {
          "id": "46d7529a-1e34-4c08-a814-565b0f1356d0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8004f098-5dc3-4f0e-b052-702c5c63ff15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa40fc2-2c48-4825-b63e-32dfb4507466",
        "cursor": {
          "ref": "cd1920fd-ddc2-4ce6-aaed-8f160f1b015b",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c4d884a4-b191-45c3-82ff-0662a3786242"
        },
        "item": {
          "id": "9fa40fc2-2c48-4825-b63e-32dfb4507466",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "58be0b2d-f335-48e5-a916-92e9d0cac3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fe27fc-3a50-4da0-804f-9b888bbe15a9",
        "cursor": {
          "ref": "b31f71a5-7fe0-48c5-b5d3-0582c9f38bfd",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "65676c36-66ee-473e-925c-5d983d3dda8f"
        },
        "item": {
          "id": "62fe27fc-3a50-4da0-804f-9b888bbe15a9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f2915f02-7028-4146-991e-43d8e9284024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37a147c-78c6-46d9-b438-359bcd00d34a",
        "cursor": {
          "ref": "55aed7fd-bb87-42c5-8cd3-3cb012fdd5a6",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8734d047-fb38-4199-be4e-d7d4335136d8"
        },
        "item": {
          "id": "d37a147c-78c6-46d9-b438-359bcd00d34a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c71d5fcf-9bc3-4459-996d-af862e7d877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4cfded-16b0-49d7-9433-b03072501985",
        "cursor": {
          "ref": "0d533851-1f63-4fab-924d-9412bb306415",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5309ebd9-6a9b-45bd-99ae-df33c06ecc0f"
        },
        "item": {
          "id": "1e4cfded-16b0-49d7-9433-b03072501985",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "93c471bc-609b-40d3-adca-7b7e9f51cc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19e540f-49c8-400c-a061-d32c809f8ec8",
        "cursor": {
          "ref": "18c89f85-7f13-4d8e-aa0c-69048722b145",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5ee2d8da-1733-49ba-b9a6-477f008ffd79"
        },
        "item": {
          "id": "c19e540f-49c8-400c-a061-d32c809f8ec8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b9967a6e-f0c4-4e3b-90ad-a3b75155ce40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8ecd9e-f425-4160-b787-d41f3eccb47b",
        "cursor": {
          "ref": "88265bfe-0953-4a11-b2c2-1e91fd32658e",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8371a051-e075-4f94-a3e3-867d4f5a4c32"
        },
        "item": {
          "id": "3b8ecd9e-f425-4160-b787-d41f3eccb47b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4999db7-bc4a-461d-bf51-ca280abe952e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2501ad55-d822-4079-bc65-3907f0025ddc",
        "cursor": {
          "ref": "edb4cbdf-7d9e-465c-b6a0-5596d3232c55",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "89ff0f3e-8070-42cf-8a29-26579a09aa2a"
        },
        "item": {
          "id": "2501ad55-d822-4079-bc65-3907f0025ddc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4a339b92-25d4-4692-8361-f6c78ca2126e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5999794c-17be-405f-8dcc-cde66176e28d",
        "cursor": {
          "ref": "aa7f3280-afd2-4a25-9205-980315cc2205",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8d492881-89e1-48a7-a198-b01fc067db0d"
        },
        "item": {
          "id": "5999794c-17be-405f-8dcc-cde66176e28d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "45f9c558-a9c1-45b7-8374-89741a88b79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749939e5-2232-4425-afc8-8607beafab57",
        "cursor": {
          "ref": "3b0291bd-fd02-48e4-b7a3-0499e59db449",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "38d2d49f-1f04-47f3-bdb4-e231e3685922"
        },
        "item": {
          "id": "749939e5-2232-4425-afc8-8607beafab57",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "62f2035b-e800-47fd-9500-2378be2e891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12ba86f-65cf-40d4-ae5b-31c34e30b024",
        "cursor": {
          "ref": "f31d8ebf-7422-4566-aa93-025d3f86329a",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c540e005-cf0e-4257-9b74-dd0a9a8139a4"
        },
        "item": {
          "id": "f12ba86f-65cf-40d4-ae5b-31c34e30b024",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "73db651e-c4be-4bc4-9f1e-456749bb1ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85688b6d-018a-4425-885b-3114ecb2f84d",
        "cursor": {
          "ref": "c8af6802-c995-4aae-bc29-08a860c85154",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e2bea049-bd70-458d-abd0-d866616fd77c"
        },
        "item": {
          "id": "85688b6d-018a-4425-885b-3114ecb2f84d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0ef03078-6675-46cc-9469-d4f2e82b2ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4920dc65-1f66-4d40-a3e5-df66701f90ee",
        "cursor": {
          "ref": "f8c2dc01-db90-4d72-960a-30143f6cc0d2",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cee45168-676d-451f-9697-0f1c19d63d1a"
        },
        "item": {
          "id": "4920dc65-1f66-4d40-a3e5-df66701f90ee",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0e83c9d6-bc33-464c-9fb9-3162bdda20d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7893ad23-04c9-4e67-8949-2f6fab97601a",
        "cursor": {
          "ref": "6afce643-cfda-49de-a9b2-a9bcb3cff937",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "19b0442f-27ea-4e4c-bfa6-6deff71bd199"
        },
        "item": {
          "id": "7893ad23-04c9-4e67-8949-2f6fab97601a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bf0727a8-c124-492b-b415-85815d75b87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf13c64-c844-42ac-a5bd-99dc9cff7218",
        "cursor": {
          "ref": "01ffb815-f840-4c1b-b79f-a8421e103b73",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1eb3a4c3-b65e-48b2-a64c-e199829692d0"
        },
        "item": {
          "id": "fdf13c64-c844-42ac-a5bd-99dc9cff7218",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "da346ab9-14f2-43d8-b408-2281bc8fcb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0b9182-0e11-40dd-856d-5e9bf2d211ec",
        "cursor": {
          "ref": "1aeaacf5-278d-4690-8b78-a25494ffafbe",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1922dfd0-f91c-4a70-9172-e8b665406555"
        },
        "item": {
          "id": "8d0b9182-0e11-40dd-856d-5e9bf2d211ec",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "984eae8b-e755-40f5-8c4b-29ae828b8ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297db8d7-b1f5-4bbe-b961-f506c8d66241",
        "cursor": {
          "ref": "046b7dd0-638b-4b65-bca7-5ca77f1137c2",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "57e31cf5-4beb-4533-a962-b46e1bbd0455"
        },
        "item": {
          "id": "297db8d7-b1f5-4bbe-b961-f506c8d66241",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a8836fc3-39f6-47d6-9024-ce8323522dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369d63be-178a-41d6-a985-950602a429d6",
        "cursor": {
          "ref": "1406c873-ec6c-4805-ab05-2a347aebd8c4",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1a43f773-84b1-4953-a0cb-dda567ad0622"
        },
        "item": {
          "id": "369d63be-178a-41d6-a985-950602a429d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4e6f2b1a-fb1e-4fe2-8841-9675a6a758d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675a0e17-b2f8-4f5f-9a10-5eb2ccebbae1",
        "cursor": {
          "ref": "fef802a8-0e76-4b4f-84b6-5d3e81a3f0ea",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bbdbbf4e-eb08-4bc9-b43d-3c676d848353"
        },
        "item": {
          "id": "675a0e17-b2f8-4f5f-9a10-5eb2ccebbae1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f661e594-b1e9-4aed-8b2a-c30afaad7ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168302e9-2e84-43a4-ada7-3eb08c11b745",
        "cursor": {
          "ref": "7516be30-c31c-453d-9730-29dfe4655f57",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ecab2276-cec2-49c4-ae13-6ba126255850"
        },
        "item": {
          "id": "168302e9-2e84-43a4-ada7-3eb08c11b745",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "42010771-5749-471e-a4be-e3853f7aa015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c78439-d368-4bf0-af5b-aed3caee81e5",
        "cursor": {
          "ref": "e3082a7c-1f5f-42fa-a460-18bfc7314867",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3e5f6990-aa67-458c-b8f3-0e7dd6f9b8cd"
        },
        "item": {
          "id": "a9c78439-d368-4bf0-af5b-aed3caee81e5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "264fafdc-017f-4c21-a579-915a7006d1d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc44feed-5149-48cd-865c-c36c4d806ea4",
        "cursor": {
          "ref": "b7bf852b-26ca-4d3e-a0ab-fe331235e51b",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e2494603-77d3-4431-bfc6-65124ad9ba63"
        },
        "item": {
          "id": "dc44feed-5149-48cd-865c-c36c4d806ea4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "af8170f1-1c7b-4720-a784-902d20fcc32a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 449,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fbedff-a941-4624-b029-3079b0a3cb94",
        "cursor": {
          "ref": "828ca521-dcdc-497d-978c-f40c4e7d094d",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a759d39b-fe3d-4527-9b96-b974b2b4699e"
        },
        "item": {
          "id": "f6fbedff-a941-4624-b029-3079b0a3cb94",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a42e9527-3463-4a02-8141-7b0b260aa5bd",
          "status": "Created",
          "code": 201,
          "responseTime": 2446,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "d285daf0-5908-4f03-b3bd-c79fefb994c4",
        "cursor": {
          "ref": "9b3351fc-e33e-4345-be0a-2c5f8eccb36b",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5966006f-73ba-4cdf-b69c-fd67db2052fc"
        },
        "item": {
          "id": "d285daf0-5908-4f03-b3bd-c79fefb994c4",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "52015cd1-8ddf-4d61-acbe-09eb24a0f5e9",
          "status": "Created",
          "code": 201,
          "responseTime": 2223,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "a2e89ff3-61eb-4dc3-bcee-3b8bffe93289",
        "cursor": {
          "ref": "7bb9a11a-bdc5-47b2-8a74-82938f202bad",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2f7bca8d-a488-4f9f-a517-cd7714b4c0a5"
        },
        "item": {
          "id": "a2e89ff3-61eb-4dc3-bcee-3b8bffe93289",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "39ff5867-445d-4110-81f5-870b07ffca75",
          "status": "Created",
          "code": 201,
          "responseTime": 2365,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "cbc461a9-e609-4e46-b58c-526bfe5ac79d",
        "cursor": {
          "ref": "dd3aa6d9-efcc-4d40-b1c5-e73d2398c05f",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bc900680-3117-477e-a933-754b9f3a40a0"
        },
        "item": {
          "id": "cbc461a9-e609-4e46-b58c-526bfe5ac79d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b212d58b-78f2-4516-9b27-c29fa5e21d15",
          "status": "Created",
          "code": 201,
          "responseTime": 2338,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2e79b709-dfde-4853-b9e3-903f97666b9e",
        "cursor": {
          "ref": "1ca8daac-c31e-4236-8899-9c4b8393cd21",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ed974201-0142-4445-97a4-157d108030bb"
        },
        "item": {
          "id": "2e79b709-dfde-4853-b9e3-903f97666b9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e5f24efa-2067-4613-a87d-3bdb8ac151f3",
          "status": "Created",
          "code": 201,
          "responseTime": 2394,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "81afead5-a102-4580-83c2-9829549ed00f",
        "cursor": {
          "ref": "02362969-7489-4039-bfbe-bf83c6851a8c",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2a9648e-47bf-4f84-b82d-e9abffacebf1"
        },
        "item": {
          "id": "81afead5-a102-4580-83c2-9829549ed00f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "72855b3c-50ea-46c5-aa32-0214916cce35",
          "status": "Created",
          "code": 201,
          "responseTime": 2860,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "da6f8880-635b-4706-aa6b-e07b556e6629",
        "cursor": {
          "ref": "e5552d18-b635-4e5f-b50e-774e1274051c",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4df9b5b6-f469-45c5-b956-60584362284a"
        },
        "item": {
          "id": "da6f8880-635b-4706-aa6b-e07b556e6629",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dfed16c3-27ed-4646-a2b2-b5d5a0c0698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f8880-635b-4706-aa6b-e07b556e6629",
        "cursor": {
          "ref": "e5552d18-b635-4e5f-b50e-774e1274051c",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4df9b5b6-f469-45c5-b956-60584362284a"
        },
        "item": {
          "id": "da6f8880-635b-4706-aa6b-e07b556e6629",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dfed16c3-27ed-4646-a2b2-b5d5a0c0698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0656ac5f-f5b0-428b-8e24-d915d29751a9",
        "cursor": {
          "ref": "ea0ba217-021f-43e8-a020-1b12de6e45b3",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "329a5da4-0ac8-4204-b837-0abbad74f93b"
        },
        "item": {
          "id": "0656ac5f-f5b0-428b-8e24-d915d29751a9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9aec3cd5-29f1-4647-a240-ea613b66575b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b143abb4-ba06-4a48-b65c-ffab74bbb683",
        "cursor": {
          "ref": "c59a6881-1a44-44a7-9b69-1a51063ba3cb",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "015e1646-14d9-483b-bcb5-4e4f2627e06c"
        },
        "item": {
          "id": "b143abb4-ba06-4a48-b65c-ffab74bbb683",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "192b2cbd-d1eb-462e-8aee-330c789d638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08d3c88-03a4-4a7e-97fd-2fbfcf112054",
        "cursor": {
          "ref": "a07fab06-3a2d-4eae-b7eb-6615da79a602",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "64d687fa-d993-4389-b8f7-66608468c34b"
        },
        "item": {
          "id": "c08d3c88-03a4-4a7e-97fd-2fbfcf112054",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23a0307e-cb4e-4144-9ec8-98705d704a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ee8fde-b1a0-4fc7-a35a-938bc675cd1f",
        "cursor": {
          "ref": "f59f7d4a-44ef-4fe4-bb69-a81fcc16c645",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d1c9acae-f74e-4136-967b-249334c6fd04"
        },
        "item": {
          "id": "76ee8fde-b1a0-4fc7-a35a-938bc675cd1f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f1ec3727-9009-4e1b-9ebc-14482be6f7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7f67d8-fe75-45ff-91ea-c243c3825f95",
        "cursor": {
          "ref": "c1c9b5ab-0da3-447a-9ffe-a31f444aef27",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5d08ad7e-2de5-462a-99ce-9260ef2a4de3"
        },
        "item": {
          "id": "fd7f67d8-fe75-45ff-91ea-c243c3825f95",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "059557d7-7f7f-44e5-b5bd-e32a10736bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a946da-a28e-4022-91c8-f96df7ce00b0",
        "cursor": {
          "ref": "a4a34a42-0608-43ab-ac1f-90ab2d963903",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "42ba9814-65ad-4b73-bfeb-3205233b11af"
        },
        "item": {
          "id": "a9a946da-a28e-4022-91c8-f96df7ce00b0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7fba52f3-204c-4c65-943d-86419df83a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881878a8-e7d3-4892-ad05-1b49814fe91c",
        "cursor": {
          "ref": "b7855649-7731-4b80-8726-49d2b67b8cce",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "34f06b43-38d9-436f-9740-c7d9cccb43d5"
        },
        "item": {
          "id": "881878a8-e7d3-4892-ad05-1b49814fe91c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a4cc0b44-581e-47a4-8e33-50b3e612e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765ca336-2ffe-4e11-bed1-48932c1e5c4d",
        "cursor": {
          "ref": "aacf1081-945a-42ed-9735-f16d7201310c",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3551f938-55a9-4d7f-b1bd-1e20da839d26"
        },
        "item": {
          "id": "765ca336-2ffe-4e11-bed1-48932c1e5c4d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "38e33280-51b5-413e-b0fa-55414ac03fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c336753-4eb3-4a57-a1d0-31a19ff0dfdb",
        "cursor": {
          "ref": "537be2d3-a1e2-45aa-a231-47e599383907",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a9a877e8-eaba-4111-aa55-903f0c468266"
        },
        "item": {
          "id": "5c336753-4eb3-4a57-a1d0-31a19ff0dfdb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c345eab7-192b-4326-9810-02fb40149e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391675cf-6802-435e-b4a4-a3dbeeaf8bca",
        "cursor": {
          "ref": "620efff9-1ef6-420d-b584-095196c7f71c",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b3feb2ce-a590-4fc4-9064-072ad24bdbb7"
        },
        "item": {
          "id": "391675cf-6802-435e-b4a4-a3dbeeaf8bca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "229fe065-570f-4b5a-8779-d27bc4462ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d423116-3091-43e2-a383-9334fde6c470",
        "cursor": {
          "ref": "3d53a7ea-6fdf-426c-a00f-071d3ad87f33",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f4c7b78-e619-4e4c-8efd-a437ad427df4"
        },
        "item": {
          "id": "7d423116-3091-43e2-a383-9334fde6c470",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5abdba47-578b-4d5a-bc5a-9414cbb71be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe1429b-9f6b-4e6f-aeae-39bcd352fa7d",
        "cursor": {
          "ref": "52baaf65-dc1d-480f-89c3-f9fddad6cbdf",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "48c683a1-c7a9-4d72-b9ff-87e5cd6e6f7c"
        },
        "item": {
          "id": "1fe1429b-9f6b-4e6f-aeae-39bcd352fa7d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f7aaa788-6fd3-4e68-9a92-afaef5ca68aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0bccab-67c4-40ad-b6c7-caf8df53b17e",
        "cursor": {
          "ref": "8b20727c-ca08-4898-b933-b3fef270d477",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b282f0a4-eefd-43e0-91a7-c6dd9e3d70a5"
        },
        "item": {
          "id": "aa0bccab-67c4-40ad-b6c7-caf8df53b17e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f4cbe1fa-675f-49f0-b263-3d08543cc0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db30a418-faf3-4ca4-8b3e-ef63d164386e",
        "cursor": {
          "ref": "34c3c2c4-edf4-4f48-be60-a74f750f72c4",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aa582ba7-3ea2-4f1d-9bfd-49dd1a2ed744"
        },
        "item": {
          "id": "db30a418-faf3-4ca4-8b3e-ef63d164386e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fd1f939d-572a-4863-a0e3-750dced081bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63738a5-8c1c-4ca1-827d-3b4365cb80fe",
        "cursor": {
          "ref": "9c735eb2-d28e-488e-ac54-d5613b5b9f55",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "547f6322-9740-4f6e-b243-15487b193f85"
        },
        "item": {
          "id": "d63738a5-8c1c-4ca1-827d-3b4365cb80fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "754a3119-ee04-4a50-9e83-9a5a231be7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d98bce0-1c7a-4675-b622-14ffdd9560bf",
        "cursor": {
          "ref": "53590847-a926-4bc0-83eb-46b67a5b8f22",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "52daef67-41d0-4649-bdaf-e7634bf17ebb"
        },
        "item": {
          "id": "5d98bce0-1c7a-4675-b622-14ffdd9560bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2cf68e83-4b66-452e-9673-37f60d989f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f2ac92-258b-4776-b94d-7414ae4fcd09",
        "cursor": {
          "ref": "b85c8297-120e-4b1d-907b-1d2cf4d9246a",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2b574e31-5131-4f56-beaf-9fae78c8a1db"
        },
        "item": {
          "id": "02f2ac92-258b-4776-b94d-7414ae4fcd09",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ac12489-5a0f-4d36-8e59-75ea35e6a2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab63a17-96e1-4a0a-9d82-6f014177db49",
        "cursor": {
          "ref": "940ed332-3b01-4bfb-b943-25e5c8a145f2",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "63ef386f-9277-4e4c-85ab-21680803ae8d"
        },
        "item": {
          "id": "dab63a17-96e1-4a0a-9d82-6f014177db49",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9850e908-7c34-42f8-b9fa-a7f373e88e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c139329e-9e66-494d-a011-bff4393a3f0c",
        "cursor": {
          "ref": "d365fe89-8b61-467f-a241-411127dee3b8",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "33819638-ac65-4f72-a0af-95e3e239978f"
        },
        "item": {
          "id": "c139329e-9e66-494d-a011-bff4393a3f0c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f597bf4b-d6cb-4f60-a227-ddab9b2eae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb20230a-2eac-47c3-8485-36ba5ffc4d1c",
        "cursor": {
          "ref": "f476e2e3-8d5c-4dc9-b627-d910e09a373a",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0f3882fb-f858-47b1-9147-11cfa90a40d5"
        },
        "item": {
          "id": "fb20230a-2eac-47c3-8485-36ba5ffc4d1c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2578e749-de70-4c90-ae72-a65a795b4049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08490296-b56b-4ddd-8325-dc8e9c420c56",
        "cursor": {
          "ref": "5cd93670-cfe3-40b0-8635-ace823d2ecaa",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "abef480a-bc54-42c2-8134-9e2c5a3d0cbd"
        },
        "item": {
          "id": "08490296-b56b-4ddd-8325-dc8e9c420c56",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bbf2ae6c-2a3d-4d68-9f96-67295e55dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316cb4e6-4ac5-404b-a884-eb5ac76d9982",
        "cursor": {
          "ref": "67d5458d-f5e1-4b5b-bc13-5116d3c74b19",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d974c5b3-461b-4fd7-b6a7-b590f91a1289"
        },
        "item": {
          "id": "316cb4e6-4ac5-404b-a884-eb5ac76d9982",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dbe62192-1f7b-4b18-9b6c-2472595dad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92561d13-4616-4f4a-a2b3-7d667a5a62a9",
        "cursor": {
          "ref": "4d6ae94b-cb64-4c5f-bc16-f96a4e3c9d2c",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d22632ed-ab80-4582-8edf-c80ab630db95"
        },
        "item": {
          "id": "92561d13-4616-4f4a-a2b3-7d667a5a62a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "47bc3979-adcc-4885-99bb-0ab174442aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b499fcfb-cfde-44ec-9cc6-896e542d2e0c",
        "cursor": {
          "ref": "8c5e3841-a1ee-4a1b-8bb4-990934f3df81",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f9b4f906-04e9-43a5-8eed-26a7f082db00"
        },
        "item": {
          "id": "b499fcfb-cfde-44ec-9cc6-896e542d2e0c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19089d64-c0b6-4d5b-b335-9e018af436cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff6ea1d-ccb6-459b-812e-0c75948f2611",
        "cursor": {
          "ref": "6e5aa81e-12d5-4e78-a35a-3855c6fcc636",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bc961617-f4dd-4ee8-9296-43f826a4a3f8"
        },
        "item": {
          "id": "3ff6ea1d-ccb6-459b-812e-0c75948f2611",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9a74facd-6102-453d-b4b9-9a63ca614f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5727f667-76c2-4812-b66c-93e2b054f4c8",
        "cursor": {
          "ref": "f51871d7-5676-4f73-b486-05c4dd634b00",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0b0edb0d-b342-4680-bac5-8a47c481784c"
        },
        "item": {
          "id": "5727f667-76c2-4812-b66c-93e2b054f4c8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d3d4ea62-4ffd-4391-9552-71e9d83e369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4dbc8f-c253-4c83-a7df-bfc9ab1fbe9b",
        "cursor": {
          "ref": "2dce5094-5be4-4520-adff-be289004fcce",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "26f49f5d-aa94-4a1a-a394-f0d0a6f97eca"
        },
        "item": {
          "id": "cb4dbc8f-c253-4c83-a7df-bfc9ab1fbe9b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "12e736a4-5e20-4316-9d16-689c5252c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2f3e48-8b81-498b-8871-0838aca876bc",
        "cursor": {
          "ref": "6ab928a5-58dd-4bc8-885c-f131178a7970",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a2bb5b8-22bf-4a94-a017-22c74b846e08"
        },
        "item": {
          "id": "1c2f3e48-8b81-498b-8871-0838aca876bc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0c49506e-463e-47e7-8f3e-29bcec5bebdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176403de-dd94-468e-8dda-728ac612f1d7",
        "cursor": {
          "ref": "2fb7261d-4960-42da-b5a7-e8ab4d443010",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b9b0733b-45ac-4090-a642-432b9c85eca9"
        },
        "item": {
          "id": "176403de-dd94-468e-8dda-728ac612f1d7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f9c60fd-088c-4025-8605-51222c9ffa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1f2f55-c88b-4eac-aa8a-2f85f321973e",
        "cursor": {
          "ref": "f7282297-98dd-4877-aa6c-e7247ab34b15",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b260f043-630c-4da2-9509-33a8e9578886"
        },
        "item": {
          "id": "6b1f2f55-c88b-4eac-aa8a-2f85f321973e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2cec592b-89e7-4358-82c8-aeec00d018a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8725b434-c75e-4351-a241-ad21bb7da48a",
        "cursor": {
          "ref": "af43709b-43ea-4f66-96ba-4e0779ead435",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41de26f2-15a3-4ab2-b500-9d7b66bd2372"
        },
        "item": {
          "id": "8725b434-c75e-4351-a241-ad21bb7da48a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b36bcd6a-7fb5-4f3e-9b36-a2ac0848cfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d24800-8f60-432d-9935-8db152820483",
        "cursor": {
          "ref": "add026fd-6878-418f-9ee1-bab25c659d21",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92a65b9a-c2b7-423d-b624-d1d3e2e0b48f"
        },
        "item": {
          "id": "24d24800-8f60-432d-9935-8db152820483",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "36bf9ad9-1339-41f6-8691-e2ae6876f605",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a357c3f0-4af7-4806-bd5e-e7635716be23",
        "cursor": {
          "ref": "cc65b308-5e57-4470-b34a-dfd41dd6c084",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "645fd62b-985e-4b43-9055-cd221dcfd3b5"
        },
        "item": {
          "id": "a357c3f0-4af7-4806-bd5e-e7635716be23",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c5863728-4b40-44ec-b0de-4931d38c681f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afb7a3c-8024-4366-9c5c-b61afc2c3dc4",
        "cursor": {
          "ref": "5a35303c-68b7-4dde-ad42-e18bdb07e8ce",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee214ade-3747-42e9-91b5-254502a7dd1d"
        },
        "item": {
          "id": "2afb7a3c-8024-4366-9c5c-b61afc2c3dc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "20d82b8b-eaf6-4ca1-8c1f-5ee2e3a2e663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afb7a3c-8024-4366-9c5c-b61afc2c3dc4",
        "cursor": {
          "ref": "5a35303c-68b7-4dde-ad42-e18bdb07e8ce",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee214ade-3747-42e9-91b5-254502a7dd1d"
        },
        "item": {
          "id": "2afb7a3c-8024-4366-9c5c-b61afc2c3dc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "20d82b8b-eaf6-4ca1-8c1f-5ee2e3a2e663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc8a5b-1a34-4bf1-a40f-58ce2502168f",
        "cursor": {
          "ref": "cad49c85-2f47-4876-ad1d-b505c4179180",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a37e088-b3a6-47f9-85c7-02092c0eb0ef"
        },
        "item": {
          "id": "08cc8a5b-1a34-4bf1-a40f-58ce2502168f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2214a85a-07e1-4c5c-b952-1fc29a10161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c63312-f277-450c-8cba-141eccb79d73",
        "cursor": {
          "ref": "10423898-ca09-48ef-bf4c-21af411215b0",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7f99a367-847d-4baf-a771-2f7a8840fbf1"
        },
        "item": {
          "id": "09c63312-f277-450c-8cba-141eccb79d73",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ed0e57e8-d66c-40ef-85af-367a4c4d5531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f000ef-ae23-4b64-a074-92c9f2c40038",
        "cursor": {
          "ref": "66a96676-3fa5-468e-a0f3-142fef7a4bb3",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ae059878-e95d-450e-96f6-c16e3992f1a2"
        },
        "item": {
          "id": "b7f000ef-ae23-4b64-a074-92c9f2c40038",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f20ab514-4b9d-4709-aea8-f60acf2c431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243701a-35c8-4d9b-85be-88285efb1db9",
        "cursor": {
          "ref": "81b9294d-f484-4fa2-aceb-706e75f6274f",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5fc71fd0-341b-4598-905b-15069fc435b8"
        },
        "item": {
          "id": "6243701a-35c8-4d9b-85be-88285efb1db9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2d17e9a4-e459-4a87-8c2d-068ed9ec8dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79f232d-562a-4251-87cb-000879945abb",
        "cursor": {
          "ref": "4eed0d27-b4a4-4c05-a9fd-ddafd4e9dd6b",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6b9db7fa-bee2-462a-8622-44c7507fb377"
        },
        "item": {
          "id": "e79f232d-562a-4251-87cb-000879945abb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "64957305-aa97-4725-a1b5-faf73c94b626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502fe372-8734-4b77-aec4-12cb34b75b33",
        "cursor": {
          "ref": "0e860ea7-d1e4-43d5-b144-d51d60ce6435",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a212f619-fcf6-4afa-b6ce-4d057174a8cc"
        },
        "item": {
          "id": "502fe372-8734-4b77-aec4-12cb34b75b33",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f5b28dec-eb80-4c4f-bf35-59b1eda735a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4697ed-4665-4dd8-ab4a-90b984cb3a9c",
        "cursor": {
          "ref": "1bbee4d1-dda1-49c6-a7d3-84c190fd43c7",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "85a2c8d0-e859-4eca-9dd8-0f3d0b3fde90"
        },
        "item": {
          "id": "8b4697ed-4665-4dd8-ab4a-90b984cb3a9c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2ff80ca8-11da-41db-8df8-be40104fbd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb96ca8-9ac7-451a-b9c3-f18b85bbf2ca",
        "cursor": {
          "ref": "68d4f718-1e7b-4cb5-a32e-fdcc44839439",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e59d050-b486-409d-8399-511a28c4b5ab"
        },
        "item": {
          "id": "8eb96ca8-9ac7-451a-b9c3-f18b85bbf2ca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2b9f764b-60b5-4256-b568-50b713b53a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77275c9c-09c5-4fcd-8ace-c316c8b038c2",
        "cursor": {
          "ref": "c23fbf7f-ea2f-477d-8d27-de28c14bf0a0",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6d62f0b2-3028-4de0-80fd-5be245a9ecc6"
        },
        "item": {
          "id": "77275c9c-09c5-4fcd-8ace-c316c8b038c2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "258289a7-3bd9-4f92-a9ac-063e62047be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f028ca02-e7ea-4a12-8780-02acd5746c65",
        "cursor": {
          "ref": "4af46ba4-186c-41fa-ae2b-2292f7a8e200",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "16179638-87c3-434c-8e5a-950269a5fb84"
        },
        "item": {
          "id": "f028ca02-e7ea-4a12-8780-02acd5746c65",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3fcdaffb-1d9d-4072-9b0e-7df0d773843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd0ca8-6f96-4f55-a840-b9f9cc539b54",
        "cursor": {
          "ref": "962152da-38d8-46a9-9736-3f8eea182f3f",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3233421a-9200-493d-be33-41a98d5e92cb"
        },
        "item": {
          "id": "debd0ca8-6f96-4f55-a840-b9f9cc539b54",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "926b296d-e4f3-42d1-9dc2-d479481fb4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd1128-12bd-43f0-81f7-f7838799e05f",
        "cursor": {
          "ref": "7105a510-828e-4cb2-b35f-9ecc00e05104",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3575cc4f-5c3a-40ef-9fa5-a80bf6b8a556"
        },
        "item": {
          "id": "5ebd1128-12bd-43f0-81f7-f7838799e05f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c5dc8086-15cb-4662-9b16-8ee682ec92ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7874a242-8270-4fc4-ab24-b3deeef34303",
        "cursor": {
          "ref": "6de09bb1-973c-4fe7-8e98-8a4ab2a5b561",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a355fef-f48e-48a6-921e-d4b2a6029e45"
        },
        "item": {
          "id": "7874a242-8270-4fc4-ab24-b3deeef34303",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b1d85f22-07ef-4abe-a41a-b6465a85d20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39684a1a-7f31-4019-ac29-37c2363d18dc",
        "cursor": {
          "ref": "b9946250-c8c5-47fc-bf8b-fbb8d50cd6b0",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "83d78851-2c61-4892-a45b-d59f9666aff0"
        },
        "item": {
          "id": "39684a1a-7f31-4019-ac29-37c2363d18dc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ed57dc9d-78b2-4ccb-a30e-f9c4ca6373fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b29b389-df37-4de4-b5b8-22691a103121",
        "cursor": {
          "ref": "73a109d0-fed1-4eea-9f4e-62fa54e8c9c2",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d7f5a11b-c837-4173-a100-9b63ad280beb"
        },
        "item": {
          "id": "0b29b389-df37-4de4-b5b8-22691a103121",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6a46fd39-a8b3-4160-9801-e337c03460cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d296716a-3406-4ab0-bfc3-97a074a566c5",
        "cursor": {
          "ref": "f5783c92-1ef8-45aa-b4ab-d1b5d92a8803",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "98956952-2d33-4e11-8dc6-f1d741ad7d6f"
        },
        "item": {
          "id": "d296716a-3406-4ab0-bfc3-97a074a566c5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7af28f72-8dbb-417f-9a87-1fb2dc758b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b18eaf4-766a-447e-808d-e026bf653627",
        "cursor": {
          "ref": "9e54c8b2-ed34-45e4-b584-3bf7aa2c2a4c",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "00d38993-5a82-4902-8175-4e7b522439bc"
        },
        "item": {
          "id": "7b18eaf4-766a-447e-808d-e026bf653627",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "10ebf71b-64e2-4033-adc6-47c959907cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8e1b83-15d0-4fb0-8718-4d8f16ab3876",
        "cursor": {
          "ref": "c8bc58cb-fcd9-4317-aba0-0cdcf7872d37",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb98e472-d536-4f20-bbc7-604797291c73"
        },
        "item": {
          "id": "cd8e1b83-15d0-4fb0-8718-4d8f16ab3876",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5b188d86-73e6-47ea-9785-df21cd3d163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be72a9f1-b97d-4400-a160-03c9181339d0",
        "cursor": {
          "ref": "c4f34b51-74b7-41b8-a5a1-c67753a4b08e",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "55630355-cdd7-4f7c-be8b-aa31bb877dff"
        },
        "item": {
          "id": "be72a9f1-b97d-4400-a160-03c9181339d0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6a103a89-b1d8-4b40-8c8a-0910d5ca342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da281f35-a744-42f0-9a65-2155b104b6f0",
        "cursor": {
          "ref": "e715e06e-2423-484a-8d85-9f5b1217f2f8",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c14c480-1a96-4e06-bad0-d56464252c29"
        },
        "item": {
          "id": "da281f35-a744-42f0-9a65-2155b104b6f0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4ffd164a-0f60-4191-b189-8667c5afac57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89493895-6c31-4e5f-b1a4-e1b0c34a1847",
        "cursor": {
          "ref": "8ec1b946-6a75-4dd3-b162-15957df3e412",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cc6b2a85-6e89-4de3-bdb9-0f02593329f5"
        },
        "item": {
          "id": "89493895-6c31-4e5f-b1a4-e1b0c34a1847",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ecda8974-d1d1-4a1e-bfce-f4b104d312ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de2c3cf-06fd-4cb9-9c73-c7c0f486f8f9",
        "cursor": {
          "ref": "dd202310-c84f-4a51-8aaa-f8885d385d25",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "90a9ab69-5acc-49a1-a8b8-38b963493635"
        },
        "item": {
          "id": "4de2c3cf-06fd-4cb9-9c73-c7c0f486f8f9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "00c7acc3-21c1-4f6b-a5ee-3456ddbe942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70486ac3-faa0-45b1-86a4-7bb88e3c0243",
        "cursor": {
          "ref": "c909d6b4-b5ff-4b02-809c-eb5295df7d05",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "928efb88-2551-4fbe-b897-04c3a833c366"
        },
        "item": {
          "id": "70486ac3-faa0-45b1-86a4-7bb88e3c0243",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "facfdf21-9eef-4715-8de6-1c787f3f1ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759d1158-9b93-4142-93e9-752499e66104",
        "cursor": {
          "ref": "cf8bbbc2-55d3-413a-94d7-f6ec314894bb",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0ea2b757-ba58-4689-b174-eab23f38aa55"
        },
        "item": {
          "id": "759d1158-9b93-4142-93e9-752499e66104",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f6c94739-0a4d-4d62-8dc3-72605af9db57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9972420-a291-4456-bd6d-f7d7a4c583c6",
        "cursor": {
          "ref": "3c384d78-b03b-4160-b30b-a3bdbbfbe061",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6e75e640-4529-4fff-b3dc-1ecf53c53b1f"
        },
        "item": {
          "id": "a9972420-a291-4456-bd6d-f7d7a4c583c6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "70f2eaf3-23e5-4627-a585-355e092b93a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68587ee1-49a4-4d3d-b079-e7650af3d167",
        "cursor": {
          "ref": "90303467-0f69-47d3-9519-7557090f1579",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e344f60c-2a01-42d4-99f3-678365170d29"
        },
        "item": {
          "id": "68587ee1-49a4-4d3d-b079-e7650af3d167",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5c585f32-e6aa-4dae-a56f-15719129f63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71576946-2a63-4b4f-801c-55408b43c714",
        "cursor": {
          "ref": "f55b2665-72e9-4fb8-8fb8-8ae121128226",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f290cffc-7bac-4da3-839e-e4ba5b4a3a53"
        },
        "item": {
          "id": "71576946-2a63-4b4f-801c-55408b43c714",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ae6ecba4-b55a-4a02-81b3-e7baf046317a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b053d7-2d4c-48ae-a4b3-97af8685373e",
        "cursor": {
          "ref": "a76205fb-39b9-4015-a701-e08f3d91da1c",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e3c5d30d-f4be-42b6-81b6-6c3b0dd83042"
        },
        "item": {
          "id": "40b053d7-2d4c-48ae-a4b3-97af8685373e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e2959603-20ad-482a-bec5-16a9b392559e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c0eb0c-ecd3-4fe9-b95b-7a746e304d34",
        "cursor": {
          "ref": "f3d2dc0c-9ff3-41c0-8643-dc7468f03a99",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7203fd16-caec-4ddc-838b-fb95f1337e55"
        },
        "item": {
          "id": "92c0eb0c-ecd3-4fe9-b95b-7a746e304d34",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6a7f95cb-ad05-4bcc-9188-6733f710dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678f8980-c890-439b-a6ff-2f2427e50c56",
        "cursor": {
          "ref": "4a12a38a-8d26-40c0-a3ef-308d94ddbd38",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "60733e94-17a7-469e-86cc-d8fe9bcb1511"
        },
        "item": {
          "id": "678f8980-c890-439b-a6ff-2f2427e50c56",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b95238b8-8062-487f-bd5f-7cb777ca53d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a70d4-e67e-48e0-a082-5bc4cfbd9bd7",
        "cursor": {
          "ref": "69816a60-8de5-4ddc-a65b-35d2d1d84b4c",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "41e18f7a-57b7-4823-b9d0-5f2cf8c98eeb"
        },
        "item": {
          "id": "3c6a70d4-e67e-48e0-a082-5bc4cfbd9bd7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98e3eb47-baaf-43b3-9cec-879772f1c61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ba6868-943a-41d6-86c9-0dcfb29a58f9",
        "cursor": {
          "ref": "a935c087-bf65-4a4e-8419-61adfc5c23fa",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "76c21568-e480-427a-99e6-e110fa61aec8"
        },
        "item": {
          "id": "94ba6868-943a-41d6-86c9-0dcfb29a58f9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2f9d3964-d3b7-4e60-b53f-da136d4b2dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e207567-333f-4643-8ba6-7a5fdc2db854",
        "cursor": {
          "ref": "4eece6df-7ae9-4af9-8d14-464537c70850",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d45fc989-adb3-4527-91a7-617c98ddff8a"
        },
        "item": {
          "id": "2e207567-333f-4643-8ba6-7a5fdc2db854",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2e9eff4-3a00-4412-b115-b13ec492e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80234f4-e665-4548-810d-63a79f1383a6",
        "cursor": {
          "ref": "029efd7f-6f19-46f9-b812-77c625ced188",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d16fe870-25a9-4c61-bd91-eec06d5cea9d"
        },
        "item": {
          "id": "d80234f4-e665-4548-810d-63a79f1383a6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd7bcebd-05ad-47ce-ac61-b8d21f9e9bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b9113-0dac-4476-8b17-c3448d3bde78",
        "cursor": {
          "ref": "c3474b8c-5625-478b-b110-2ab294655a11",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "755e01b3-6d6c-4e93-8bfe-97a25486d240"
        },
        "item": {
          "id": "be4b9113-0dac-4476-8b17-c3448d3bde78",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96e2f7d4-0bab-4576-bb49-0bff0178bcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db01dbc9-c01c-4858-a8a4-ddc40c97319e",
        "cursor": {
          "ref": "ebcf2a83-52bc-4d0f-ada4-81cc295b8770",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "abdfc7ec-c44c-4024-aba3-0f3541426b40"
        },
        "item": {
          "id": "db01dbc9-c01c-4858-a8a4-ddc40c97319e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "07201a8c-6cfa-4c6c-81f2-74d7e0d39290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b01b4bd-19bc-4f70-974e-b2c5ee5cb578",
        "cursor": {
          "ref": "dd5afe65-a426-4230-825e-55d5cd400e9e",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "55bc314b-037e-4962-8813-069f933b9e0a"
        },
        "item": {
          "id": "6b01b4bd-19bc-4f70-974e-b2c5ee5cb578",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a0a70ca4-38bf-431f-85af-4d298147908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a9d248-a2e4-4632-b2f5-3c25a3483be3",
        "cursor": {
          "ref": "6ce30e97-ba80-4694-9fbf-13c61e4632a8",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "61933bf6-4326-4ea0-98db-409d2c77dd2c"
        },
        "item": {
          "id": "c5a9d248-a2e4-4632-b2f5-3c25a3483be3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "00a6b942-7f7a-42fb-ae99-dbbf8540c567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa29e0f-5d0b-4d16-98ad-e78d7d9592c3",
        "cursor": {
          "ref": "96d09e90-ed29-499e-8cdf-ba3c540ec35f",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f98c6bc1-1c38-4f28-b83a-64627fa39003"
        },
        "item": {
          "id": "9aa29e0f-5d0b-4d16-98ad-e78d7d9592c3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0eea7dfe-e485-4301-9ff0-a0b4ce8b764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9bf6c2-9375-4f1a-a307-cfdff7b6f4d3",
        "cursor": {
          "ref": "69973b8b-aff7-431b-a5c6-b9a16ef20ff9",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ca200348-8516-4094-ad65-93feeb590f5f"
        },
        "item": {
          "id": "6f9bf6c2-9375-4f1a-a307-cfdff7b6f4d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "83cba820-3d64-41b7-873e-3dc3a16c1c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7507e5-9504-41bf-90c0-3bf8ff707f6c",
        "cursor": {
          "ref": "b750e8a8-f899-495d-946f-6c06f1938c36",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "67565e5d-03d1-4296-82d0-10d0d877354c"
        },
        "item": {
          "id": "fc7507e5-9504-41bf-90c0-3bf8ff707f6c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "19669750-f2a9-4df4-bb70-5530710d8229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d59959-b785-4cc2-91c7-3e2963506def",
        "cursor": {
          "ref": "fe1c1e5a-bb3b-48a0-b818-542519913fea",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "89224c2a-df60-4971-9559-fdf4519ae60e"
        },
        "item": {
          "id": "c9d59959-b785-4cc2-91c7-3e2963506def",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0c2cc780-6459-4524-adde-8c203783f94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd6a2f3-2e0c-47d1-94e7-6dd151f5ef04",
        "cursor": {
          "ref": "b5aa71c6-566e-441e-a727-b6679be9e2f6",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "18e31b0d-ca87-4e21-821a-4d1d14f5d9fc"
        },
        "item": {
          "id": "9cd6a2f3-2e0c-47d1-94e7-6dd151f5ef04",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "18133237-1d45-476c-a838-e3ec857310a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f1f8d8-58ae-4dca-8208-6d08946dd880",
        "cursor": {
          "ref": "f67e894b-a31f-47cd-8613-e20d4c4623bd",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1908351e-74f3-4007-97e9-c7ecbafb01ad"
        },
        "item": {
          "id": "96f1f8d8-58ae-4dca-8208-6d08946dd880",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4adc22af-2db1-4049-8a66-0dccd8bf8526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2706dd9-28ba-4ab2-b85f-2ccf88168c5f",
        "cursor": {
          "ref": "e31297af-b81c-4f53-a10e-04ee0753acae",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5d4ac5e6-00f9-4b99-a227-e3f19c7efb52"
        },
        "item": {
          "id": "d2706dd9-28ba-4ab2-b85f-2ccf88168c5f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "62517c2b-6ba7-4b8c-beb7-daab07bc73ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b92794-f6d4-47f6-8bc1-df160f5ffd21",
        "cursor": {
          "ref": "644b333a-0deb-4ae2-9752-d9b13482314b",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "913a81d6-5388-46e8-9193-4e81b0e6dae4"
        },
        "item": {
          "id": "20b92794-f6d4-47f6-8bc1-df160f5ffd21",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5df38e58-92c9-4ce2-beae-227c8b927292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b504eb77-16b4-48dd-8ddb-7cb801ddd79b",
        "cursor": {
          "ref": "fc92ea0b-6d9a-460c-966b-a833ee7e3ce1",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2e5836aa-f4e4-4213-ab0d-d5f5eda31b01"
        },
        "item": {
          "id": "b504eb77-16b4-48dd-8ddb-7cb801ddd79b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0efd1c50-454b-497a-9327-eda10dbeef5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d292cfa-f0ac-48ff-83ff-cb2aaffe1e73",
        "cursor": {
          "ref": "b3abc62c-0a4f-4ad3-9d00-5b29a86c8868",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b4573be7-72db-479b-8ead-37f7f2f1c70f"
        },
        "item": {
          "id": "0d292cfa-f0ac-48ff-83ff-cb2aaffe1e73",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bdc33f41-bae5-4329-a77b-fc49c37fb731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba93d5e-7026-4947-ba5b-6489f6c32d38",
        "cursor": {
          "ref": "f6df3eae-2399-40e5-86d3-1bed42c82b4a",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8b3d255c-6a10-4924-902f-c3bf464f097c"
        },
        "item": {
          "id": "4ba93d5e-7026-4947-ba5b-6489f6c32d38",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6444db64-14ca-487d-831b-296561ab7907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a70e05b-166c-441e-86fe-18dc1c6be3c5",
        "cursor": {
          "ref": "9cbce421-0e41-4d1b-9af8-9cc6ef22256c",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "47c2cc72-4f25-4b33-b64b-7aa428634c26"
        },
        "item": {
          "id": "9a70e05b-166c-441e-86fe-18dc1c6be3c5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7b3da7bf-03ed-4568-a39e-c736949db58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c0af8-806d-4070-97fc-ef0e92dc2679",
        "cursor": {
          "ref": "54254d62-9282-4764-b26a-a42845168f32",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f711552b-a07e-40d5-a55b-bfd4d70af8de"
        },
        "item": {
          "id": "332c0af8-806d-4070-97fc-ef0e92dc2679",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "124b3529-eaa9-4e20-b93f-ccab1f3ee04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9352d41-b2d3-462c-b210-575c9ac70d95",
        "cursor": {
          "ref": "c492c300-4911-46a4-915f-026f7918441f",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c937642f-322d-43d6-bdb3-acc27f9c7999"
        },
        "item": {
          "id": "e9352d41-b2d3-462c-b210-575c9ac70d95",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f6d60aea-3923-4e64-80ad-28d917b039dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac77a7d-c202-462e-9b16-873cd26d0bab",
        "cursor": {
          "ref": "ba8f8c8d-238d-4977-acbf-6a4c31616787",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b0149a25-98aa-47cb-980f-bd2cf7521f3a"
        },
        "item": {
          "id": "1ac77a7d-c202-462e-9b16-873cd26d0bab",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "352bd1ec-e2eb-4735-8871-fe0e692c422b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297212e-63f1-48df-8e1e-c53516d560a9",
        "cursor": {
          "ref": "2122ce7e-7fa7-407f-89bd-7919bb403803",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fa70404a-b035-4665-91a5-1c7bbe12c2e8"
        },
        "item": {
          "id": "0297212e-63f1-48df-8e1e-c53516d560a9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2660130e-8ff1-44d7-acd7-ae3b62701550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffe9880-1765-40be-a5b4-56e376281318",
        "cursor": {
          "ref": "6396a10f-636e-4fca-96c9-29a6b473bab9",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d0f5c513-8cc5-48f3-838a-d688a3c8d5a8"
        },
        "item": {
          "id": "dffe9880-1765-40be-a5b4-56e376281318",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4ed2f213-f09b-40ad-bb5a-04323f451a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712a2f84-5fcb-4a35-ba3d-227ffed4011d",
        "cursor": {
          "ref": "9707b14d-1ae0-4dfc-8175-0fbd11ba498e",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dd3eaab5-dcf7-4028-96dd-bf90b62e09c6"
        },
        "item": {
          "id": "712a2f84-5fcb-4a35-ba3d-227ffed4011d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7aa37025-5fc0-4d42-9405-aa17f63f06d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c6886-2a3d-45fe-b0e2-b0de6a244ef0",
        "cursor": {
          "ref": "c4177da2-e910-4bbc-bdb8-0c7776a60619",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a0ef9cb3-32f0-4eee-ac10-f0186ed01459"
        },
        "item": {
          "id": "d16c6886-2a3d-45fe-b0e2-b0de6a244ef0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "59a7c154-9bcd-469d-a15c-024dfa4a7104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7de102f-a44e-4025-b84d-d66234a4d797",
        "cursor": {
          "ref": "ead43050-ef99-4ec3-a6d7-df2e409c478c",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9fff2bc9-5325-4ac2-852a-d12e9195b1de"
        },
        "item": {
          "id": "c7de102f-a44e-4025-b84d-d66234a4d797",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fe1e0274-04b6-43da-9758-c473ad0a1174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d936d3d-17e4-46bd-aca2-5f4171278de5",
        "cursor": {
          "ref": "aef664a2-253d-48e4-8a27-d6d6cb5d172e",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f752e2eb-03a9-4952-a5c9-41f77794abaa"
        },
        "item": {
          "id": "9d936d3d-17e4-46bd-aca2-5f4171278de5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e23ac633-6973-4417-b82c-50c6ef3aed38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5147d7-fcc6-45ec-b944-9b928aa18aa8",
        "cursor": {
          "ref": "5f6f0cf9-fc56-4e8f-9fd0-dfe3c391738d",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3037db37-cd32-4e38-a2cc-b198e756f3dd"
        },
        "item": {
          "id": "7c5147d7-fcc6-45ec-b944-9b928aa18aa8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6ec76a8c-f896-4399-98e7-d5bf6244000a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14247cd8-9290-4193-b274-cb6393f46547",
        "cursor": {
          "ref": "cc47e947-8c1a-4cb5-a83c-881602263064",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bb132653-acf1-4147-b878-6798dd4ed43f"
        },
        "item": {
          "id": "14247cd8-9290-4193-b274-cb6393f46547",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c481bd89-8fef-477f-b6d6-aa236ed540c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764a747-e387-446e-9d5b-02ba014674b4",
        "cursor": {
          "ref": "0e001501-4a03-459f-be7f-e80bdd98a677",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7070b696-e908-4aec-bcf6-2c9110a2489e"
        },
        "item": {
          "id": "4764a747-e387-446e-9d5b-02ba014674b4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d4fbcf80-8bed-4737-aaf9-0f380bb80dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b73cd60-0401-4767-af9a-61e76aa78f4b",
        "cursor": {
          "ref": "6782bcff-6ed7-4aed-9b77-c1efc27f5563",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1e4b514d-144b-4afd-8bf1-bd3e88a14b0e"
        },
        "item": {
          "id": "9b73cd60-0401-4767-af9a-61e76aa78f4b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9c380c0b-03e9-428b-8c7d-2e48b3cdbd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb4fed2-b0b0-4ee9-bda0-db0012832d2e",
        "cursor": {
          "ref": "b6802093-c7c3-40cb-aba3-ccb81a885073",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3c845808-8a7c-41c0-94f6-7d9e428780b8"
        },
        "item": {
          "id": "cdb4fed2-b0b0-4ee9-bda0-db0012832d2e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4dc86c5d-5eeb-43e1-821f-b3081a974f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ca16c3-5062-497c-971e-5a8f18eeef9b",
        "cursor": {
          "ref": "f05affae-d8af-4bab-bfa7-72eea58de02c",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "79043dc8-61bd-421c-8ddd-9744a29a2c71"
        },
        "item": {
          "id": "93ca16c3-5062-497c-971e-5a8f18eeef9b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d7077023-c559-4ba7-8b5d-158a6d396f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e378c0-d7be-4ac4-81b5-6b9da5193c75",
        "cursor": {
          "ref": "9fdc7eb4-a59e-4269-b53a-c40d842f4ba8",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "adca954a-548a-482b-bb4e-6d0b7ca15acd"
        },
        "item": {
          "id": "22e378c0-d7be-4ac4-81b5-6b9da5193c75",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f7f442d6-d146-41d7-b404-820f02f44017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4347a96-d223-4d69-b2a2-22508b9b8565",
        "cursor": {
          "ref": "cb3ca4a3-3769-47af-8596-3fa1e10ea058",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0ed82ea6-3230-4f84-99a1-de4119320699"
        },
        "item": {
          "id": "a4347a96-d223-4d69-b2a2-22508b9b8565",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "56d5eb90-4594-480f-961f-9bd6def0ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66121f5-a92e-4089-ba93-d1e02fb38391",
        "cursor": {
          "ref": "46699cc1-41a5-4f0a-af67-127cb116e998",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ea7ece8c-0255-44fa-b7da-fc6acaff8a4b"
        },
        "item": {
          "id": "d66121f5-a92e-4089-ba93-d1e02fb38391",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "10b18ed6-45fc-47d9-85f7-2abdaaff5e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c64788-19fe-45ad-976a-1ef793bd4353",
        "cursor": {
          "ref": "a5fc9d05-d276-41e9-b567-cb033ffdfff7",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e41f3eab-af2c-4a86-9478-0c9213b8d4e8"
        },
        "item": {
          "id": "75c64788-19fe-45ad-976a-1ef793bd4353",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a5f11b4e-50c0-498f-bdc5-81a96175cad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e29d71-372b-4e82-b2dd-dc81aec2b993",
        "cursor": {
          "ref": "82dba381-2214-4b66-884e-f69dbcaef850",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1bf7b4c4-77eb-4a75-ad19-0689eb976ac7"
        },
        "item": {
          "id": "f3e29d71-372b-4e82-b2dd-dc81aec2b993",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9abbde4c-8a0d-41a9-b360-203b2d255f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec4b4f3-72a3-4359-9379-2079004828ae",
        "cursor": {
          "ref": "1531770a-5513-4d8c-86b8-98d85b11f0d7",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "11686740-0284-4301-93ff-f14c7911c254"
        },
        "item": {
          "id": "2ec4b4f3-72a3-4359-9379-2079004828ae",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7cb5d0a8-2e6a-4701-9f42-9bef5b8c855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0754c15-9703-40b1-87af-23d39114f625",
        "cursor": {
          "ref": "39c490c6-eb31-4cb5-818c-1ddbb7d840f8",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2b36afcf-cd14-4dfc-a5b1-0fecb7d04d1a"
        },
        "item": {
          "id": "b0754c15-9703-40b1-87af-23d39114f625",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "674b4007-7109-40bd-8925-06fcab79708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305278b3-ee90-4579-aa28-8788e39bba33",
        "cursor": {
          "ref": "f7398dac-1bb1-4be5-ae75-bb2a171993c9",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b2293c7a-aad8-4fbc-8404-75502007cee0"
        },
        "item": {
          "id": "305278b3-ee90-4579-aa28-8788e39bba33",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "66defbce-771b-46ed-86c2-a5c91741f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d8e2b7-3544-418b-b2ff-3302ad23e19a",
        "cursor": {
          "ref": "33267b5c-a248-49fe-90e0-7deeed98f8dc",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f87eb7ff-6b7f-4073-b14b-f83e09e685cb"
        },
        "item": {
          "id": "27d8e2b7-3544-418b-b2ff-3302ad23e19a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5422c3f4-c033-4504-841b-8029c2e35e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8132e81-0fae-47a4-9a1a-450265f755f8",
        "cursor": {
          "ref": "0233e2d8-7c63-4b07-b03a-6a9049e54be3",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1eff1fd1-0a16-43ef-b40c-c3e0411fcfad"
        },
        "item": {
          "id": "e8132e81-0fae-47a4-9a1a-450265f755f8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "517f70e7-ae96-4576-aa55-8ddf4e522117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f24142d-268d-4992-a6d6-242f56e96d36",
        "cursor": {
          "ref": "76d4dae5-f09c-48da-b892-cd626fa1cc69",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c53a2657-465a-4f8c-8386-0577330ccecc"
        },
        "item": {
          "id": "3f24142d-268d-4992-a6d6-242f56e96d36",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "83e2a5d3-7bd2-4f9d-a215-b1257d3317b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ac0762-3935-42a4-a067-225e82c5dbe3",
        "cursor": {
          "ref": "608be1e3-44c0-4249-bcf1-abe0a05616af",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8187c01f-facf-4a6b-a5c0-9c6b411c88fe"
        },
        "item": {
          "id": "d5ac0762-3935-42a4-a067-225e82c5dbe3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "224d0276-b20b-4ac6-8f3e-e91a5fd2f6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5bb59a-dfa2-44d0-8244-e46e099fc17d",
        "cursor": {
          "ref": "4b082dba-7f86-46c5-86f9-a2b84b7f407e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f48aa77-85c3-4dd5-ba41-40188c5b65d6"
        },
        "item": {
          "id": "af5bb59a-dfa2-44d0-8244-e46e099fc17d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3fd19f61-c8f1-4fc0-b6f2-c1a8116801a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ffbddf-479c-4600-9979-9406404d8f18",
        "cursor": {
          "ref": "261a2d38-bba6-4b69-9063-7a9e2d52cace",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a8c2fc98-8224-461e-8c61-89557a511f40"
        },
        "item": {
          "id": "f0ffbddf-479c-4600-9979-9406404d8f18",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "41d2efbd-e76e-419f-a3b0-57ef4fe938f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae867413-943c-418f-97e8-4bb6edcf6e49",
        "cursor": {
          "ref": "d212bfd5-4a92-45b6-91ac-28b92d5303c3",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "54b80f78-bf25-43b2-a204-43a33f3aae01"
        },
        "item": {
          "id": "ae867413-943c-418f-97e8-4bb6edcf6e49",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2909f7cc-87db-4405-a795-2132e8329454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f17ded3-d8db-4aaa-9eb6-19072bcdad81",
        "cursor": {
          "ref": "8b82abce-72f2-4627-8b1f-0678fa2488b2",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d4335486-a671-4f60-823d-a392b2546e12"
        },
        "item": {
          "id": "0f17ded3-d8db-4aaa-9eb6-19072bcdad81",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d04e094d-0619-419b-a6f2-a68962f974b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bb3056-3414-4e36-934b-e282f2cb58ef",
        "cursor": {
          "ref": "ecb23887-a08f-4924-a09b-16645946322a",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a84ab8e9-5476-4a9c-9ea9-5989dd67077d"
        },
        "item": {
          "id": "90bb3056-3414-4e36-934b-e282f2cb58ef",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1bdf138c-0f19-4247-8f4e-f0ccf1f90efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05ed0d6-4664-408a-911c-edae04eb8085",
        "cursor": {
          "ref": "29676848-4635-406f-a9f5-6ba64c5e2b4d",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7a475067-7448-4f51-90d0-d9b93bbf3ce5"
        },
        "item": {
          "id": "c05ed0d6-4664-408a-911c-edae04eb8085",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b8012d80-4fcd-472f-b370-21b357a3fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef74b3e-0c42-452a-b2af-d23dd7fc7f5f",
        "cursor": {
          "ref": "657e36ec-3e28-4c1c-b7cb-a7576e30d896",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "636f969b-3e4a-4f7b-8e2c-bc8b5edde18f"
        },
        "item": {
          "id": "4ef74b3e-0c42-452a-b2af-d23dd7fc7f5f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "edefc6c9-3698-4d74-b32c-6e6d18c83a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d29ee8a-85c5-4d80-ad67-aa9c46f1f147",
        "cursor": {
          "ref": "e1794421-16a5-4751-bd82-d1aaf9b20bbe",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3e0bb443-2f89-4d85-85f6-cc625513a945"
        },
        "item": {
          "id": "0d29ee8a-85c5-4d80-ad67-aa9c46f1f147",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6ff17359-abe9-4adf-bd86-092b94d8d131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483f8b77-dd54-4124-bb51-077539643ead",
        "cursor": {
          "ref": "6dae4609-f975-4a20-aa28-4ab1e1e1c3d9",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a80cdfd8-d15f-42aa-8189-06221fc64bb7"
        },
        "item": {
          "id": "483f8b77-dd54-4124-bb51-077539643ead",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "12caf6bf-511b-47ee-9296-5e3860297378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299cf6a9-a756-4478-bb09-d8992613933f",
        "cursor": {
          "ref": "357d802b-1227-44fc-abab-070f46adec5c",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3703c22d-7c7f-4dd9-ab83-16615708ed0a"
        },
        "item": {
          "id": "299cf6a9-a756-4478-bb09-d8992613933f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f0f199e9-0fba-45ad-b3ae-3fb20cc1b39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b295f73-4454-4f57-bb4a-17ba13c32530",
        "cursor": {
          "ref": "bca92fe3-859b-430c-8ae5-2a2066bfe4bf",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "795bc0d0-9379-491f-8aa0-3b42aff4e850"
        },
        "item": {
          "id": "0b295f73-4454-4f57-bb4a-17ba13c32530",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d8fa00c8-414f-4cc9-9218-f65b34ac0567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a7055-3729-4d74-ba9b-2bed34c3bde1",
        "cursor": {
          "ref": "bde2c8b6-a436-402d-9c60-544854e14ca9",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "22d8ad53-3f22-40ff-b4c2-67c143f46ea7"
        },
        "item": {
          "id": "0e3a7055-3729-4d74-ba9b-2bed34c3bde1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c08bf0a1-1d50-4bdc-bfe9-fafac19e1ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50acfc23-2bd9-41b7-a49c-449a77473ca2",
        "cursor": {
          "ref": "d4b226a0-e95b-4042-b3e6-80e90ccc0609",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ced71623-fe73-467c-ae05-e4043f9111c7"
        },
        "item": {
          "id": "50acfc23-2bd9-41b7-a49c-449a77473ca2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c57c7824-20ac-4e06-8c25-d6018f16e347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31aaf3e-e46d-4544-a4ee-7ce083637a05",
        "cursor": {
          "ref": "0c0d73eb-6cf7-40a7-ba69-4da066c72876",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "33b0e24a-1178-43b3-a6b1-6c2a7106308d"
        },
        "item": {
          "id": "c31aaf3e-e46d-4544-a4ee-7ce083637a05",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4fbc0667-9c81-4f7d-82cb-b86225fb562c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0f7526-c679-45a7-ac1f-2945c12c9914",
        "cursor": {
          "ref": "4c6cb8c4-7278-4ab5-a167-9befb31f6fa5",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "69b548c6-8f3d-43a0-a57d-b186d7dc8a49"
        },
        "item": {
          "id": "3c0f7526-c679-45a7-ac1f-2945c12c9914",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dcc6fcb0-bc94-47dc-887c-5af6a366f09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07a11e4-f999-4986-b1e0-3b6dd6010a15",
        "cursor": {
          "ref": "88219c50-ad97-4712-b794-3b02f7b6eac5",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3c357c5c-50cf-48b4-90eb-7e3719380701"
        },
        "item": {
          "id": "e07a11e4-f999-4986-b1e0-3b6dd6010a15",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d46cf084-93b5-481a-8b3d-227bbda4c613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7173a70-6871-4486-aabd-f7293ef7f437",
        "cursor": {
          "ref": "bcc0516e-fb87-4fb2-b874-54c576777714",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0f257065-3f2a-47af-87d3-3dba346af050"
        },
        "item": {
          "id": "f7173a70-6871-4486-aabd-f7293ef7f437",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d38f0bde-57a1-471a-bec6-3586dc01b19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adb023d-2680-4540-b3cf-5e0816af133f",
        "cursor": {
          "ref": "aea1e7c4-31fb-46aa-a1dd-2a8d6a1eef7e",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5de62d1a-2563-4879-a749-bae7dad50257"
        },
        "item": {
          "id": "3adb023d-2680-4540-b3cf-5e0816af133f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7b3501d6-5dc9-43d8-b748-b74d4c34123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250a09a4-48a2-4749-a315-9cd885fd4035",
        "cursor": {
          "ref": "6600678c-a464-4704-a484-6cf67b9ea2bf",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b5ddf3f0-d0a0-4ca3-97e1-bd6d0344fbcd"
        },
        "item": {
          "id": "250a09a4-48a2-4749-a315-9cd885fd4035",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8353a98b-fa1d-45d1-af48-0c79356fdfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f593a10f-124e-45ea-b1bb-fc804a7abeb9",
        "cursor": {
          "ref": "7fc0edf3-a1f6-44c6-879d-53f4174d7c70",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aafd7a71-ed3e-4262-a53a-ee31a7663b4b"
        },
        "item": {
          "id": "f593a10f-124e-45ea-b1bb-fc804a7abeb9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a3e7811-aabd-4862-a1cf-9604e27dd675",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e64aea-481f-4668-9c9f-a047fe0f7a7b",
        "cursor": {
          "ref": "f25894ce-20d6-4ee6-91ce-a7dce8321766",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "39a15d26-9068-44b4-a447-758a8d12dbf0"
        },
        "item": {
          "id": "b6e64aea-481f-4668-9c9f-a047fe0f7a7b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ffeb2f59-7a19-4f65-a495-29a986ad98da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 250,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231f85b0-2242-4516-b80f-2abc0b274036",
        "cursor": {
          "ref": "712c33cb-ad30-452a-aec6-d0ab697d84ed",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "214c9bb5-2618-4df9-ab80-dd3368801504"
        },
        "item": {
          "id": "231f85b0-2242-4516-b80f-2abc0b274036",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ec91484c-d3d8-4c3b-af38-7af289f9e508",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6433f61-677e-4aaf-8da2-ce5b9cd257a5",
        "cursor": {
          "ref": "c35445e6-6649-40e0-b8a8-a1edfb63ac9b",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "28e9f977-3569-4bf0-b7dc-211c491a6e13"
        },
        "item": {
          "id": "e6433f61-677e-4aaf-8da2-ce5b9cd257a5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e8c31537-f719-418c-97c9-a3dbbce72a3f",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04488b8-e12f-45d9-ba18-452f740a0cd5",
        "cursor": {
          "ref": "833b5267-2857-47cd-b737-d19a34a1fd9e",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dced44d5-7269-4f94-8572-edb95c9164d9"
        },
        "item": {
          "id": "f04488b8-e12f-45d9-ba18-452f740a0cd5",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "6d732384-cf94-4ba1-8ddc-87ee1c5237de",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4765b99-cb3b-4487-b456-2f245f4ad722",
        "cursor": {
          "ref": "110e8cb6-fa07-4737-b66c-3cd7f1f4f05c",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0a1b8f3e-7619-4ef8-a43d-af976b016d23"
        },
        "item": {
          "id": "a4765b99-cb3b-4487-b456-2f245f4ad722",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dbbdde58-7f52-4945-a759-07720abfd99b",
          "status": "OK",
          "code": 200,
          "responseTime": 351,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46023821-87d9-4416-b008-570f128078d3",
        "cursor": {
          "ref": "c5ecc09e-6152-4a0a-962f-934a672d6a5f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f4dd5e7c-ebed-4e57-a58e-e0b6d36b2846"
        },
        "item": {
          "id": "46023821-87d9-4416-b008-570f128078d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb876804-c6c3-4216-a1c6-39c4db1df254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46023821-87d9-4416-b008-570f128078d3",
        "cursor": {
          "ref": "c5ecc09e-6152-4a0a-962f-934a672d6a5f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f4dd5e7c-ebed-4e57-a58e-e0b6d36b2846"
        },
        "item": {
          "id": "46023821-87d9-4416-b008-570f128078d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb876804-c6c3-4216-a1c6-39c4db1df254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46023821-87d9-4416-b008-570f128078d3",
        "cursor": {
          "ref": "c5ecc09e-6152-4a0a-962f-934a672d6a5f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f4dd5e7c-ebed-4e57-a58e-e0b6d36b2846"
        },
        "item": {
          "id": "46023821-87d9-4416-b008-570f128078d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb876804-c6c3-4216-a1c6-39c4db1df254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93c5bbf-a254-4d6d-a6e0-d6b8411a5504",
        "cursor": {
          "ref": "b23cf331-f458-4b5b-871f-808df44ffd74",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f7493fbb-ad45-45ad-8c68-bb279a5a671a"
        },
        "item": {
          "id": "c93c5bbf-a254-4d6d-a6e0-d6b8411a5504",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1179c6a4-0f77-4fb6-a9d1-dffd7d8a03b5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 248,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4aef5e-f3f8-4b8a-8d8f-60390c817e81",
        "cursor": {
          "ref": "6f0c3398-f038-4d34-bc1c-d5dbd3a00853",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "15cbbb70-a3aa-4f60-af19-00d8f9f5a1d1"
        },
        "item": {
          "id": "8a4aef5e-f3f8-4b8a-8d8f-60390c817e81",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aadbbfeb-d241-4903-a3cd-ea905cab6edd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4aef5e-f3f8-4b8a-8d8f-60390c817e81",
        "cursor": {
          "ref": "6f0c3398-f038-4d34-bc1c-d5dbd3a00853",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "15cbbb70-a3aa-4f60-af19-00d8f9f5a1d1"
        },
        "item": {
          "id": "8a4aef5e-f3f8-4b8a-8d8f-60390c817e81",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aadbbfeb-d241-4903-a3cd-ea905cab6edd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0f2e1a-fa5e-4fb7-92a3-d5334f036e55",
        "cursor": {
          "ref": "5375b172-c6c3-42b7-bd87-a22609292385",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6bb479be-c9b1-4c9b-877b-3ae2a0172a55"
        },
        "item": {
          "id": "2f0f2e1a-fa5e-4fb7-92a3-d5334f036e55",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1587ab3a-ae88-4bd4-acd9-0157440d6d56",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 477,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860ab2ac-a4a6-4608-911c-c2296574feb0",
        "cursor": {
          "ref": "132078c6-1d8c-4806-bce7-1912f45cd9ce",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d4437270-1a5d-4077-b145-a3cc0060455d"
        },
        "item": {
          "id": "860ab2ac-a4a6-4608-911c-c2296574feb0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11a498f1-24d5-4a37-80be-0c7dea7bb422",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860ab2ac-a4a6-4608-911c-c2296574feb0",
        "cursor": {
          "ref": "132078c6-1d8c-4806-bce7-1912f45cd9ce",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d4437270-1a5d-4077-b145-a3cc0060455d"
        },
        "item": {
          "id": "860ab2ac-a4a6-4608-911c-c2296574feb0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11a498f1-24d5-4a37-80be-0c7dea7bb422",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789e138d-6903-4b1c-9e52-821e8806fb38",
        "cursor": {
          "ref": "c6084433-75fe-4283-95e3-db18de9af163",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "43229f53-d0c1-47b5-a987-09f4788ed28a"
        },
        "item": {
          "id": "789e138d-6903-4b1c-9e52-821e8806fb38",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3c4c0fa9-4a1c-4cec-81df-b2fd04baaec0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}