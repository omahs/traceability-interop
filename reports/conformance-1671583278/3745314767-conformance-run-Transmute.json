{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "abfab731-25ec-4cca-b18b-50b3c4366ee3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f975f12a-eda2-4eaf-8a4b-0c9a9926d097",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "483c768e-a4ae-4c92-86e5-7e4473003ce6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "501e0821-161f-473c-924f-a2244c20bbbd"
                }
              }
            ]
          },
          {
            "id": "9034d851-3a15-48e4-a75e-75ab5e783b6f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85c6143c-9d37-419c-b73c-c13beae01852",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3380e3d2-0b5e-4bca-9585-c9ed73f3c675"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "18abfd72-3e6c-4781-a5d4-e8402b841093",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c3b04b16-cb07-4ef1-921b-c5d551b553c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0a8bea0-5f9d-4071-ab42-2ec804e4aa45",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9eeb978-b379-4b73-8e2d-988752e7d576",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0e3f1c0-a950-465f-999a-943f94d19177"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8749e4d-0215-44a7-9e14-e0acacf6b356",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c47297e-e39e-451d-8aa7-c847ba2d6070"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15edd75f-a808-4bac-94a1-70475b0625f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91a0fba2-2f9a-446f-b157-b3a0caa5e199"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3be2cad3-a9c5-40fa-ad8f-ab5166754aab",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "35e0552d-530b-4159-9392-a604af0b6b97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d80e9ba6-e954-44c9-8475-0c1bfcc780b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3c48681-0eea-4546-bc2c-fb071e65ef18"
            }
          }
        ]
      },
      {
        "id": "2e016ee8-1f17-4b86-b3ba-f73d62fd809e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6935b9d8-e1ce-4c87-9b26-46fa0467d3b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "427fcf38-336f-4caa-908f-ff463cac26ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65091343-b13d-4f88-9caa-6663020ba795",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f6346-02a2-483c-8ce6-04647fa5cb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44b8a5a4-5f80-466f-9c79-b7bcde85d7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bab7db-32b3-4561-85a4-f3729efa0192",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2738072-ba0c-4fdf-878c-bc264eba342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8d6bf5b-cb7f-4f18-b46d-4b7db5290b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d808e3-6d75-4e37-ba15-02927ba9e2c5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d52ad23-46c2-402a-977b-5ca2278cd17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d33e51d1-d754-4b02-be1b-0a20b816d969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50237e3f-06d7-403a-865f-bbc2469995af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75bd92f5-4456-40e8-b48f-3515201ee2a1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebbd952-0300-4f7b-88e3-ed9ea7107b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "236a5229-8b87-40fc-bf27-aa10cc498d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758096f5-14c9-4dfe-b7e4-c49c6178de47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1768e7-0d29-4d8e-a05e-3ee4a60db636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4d53d4-b362-4cbc-b0e2-2df9aac8e294",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b911bbc9-d71c-404e-8166-7f61553f7507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6bd4918-e882-484e-9521-d45786a13fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65d4ff0-2817-4071-82fb-be2729cb8352",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ecdac1f2-3054-40e2-af1d-2420733aee68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "56ad6358-74dd-4013-b31d-0439b018a1b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a1b5879-89d7-41d5-b75a-5c1703e6c88a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3965dd3a-b394-44db-8d97-1d621cb87870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "60936522-d0e8-4425-84d5-e43ce1664af4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f185c7ad-a657-4488-b475-61c1a2cc801b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "88c8c595-5665-47c9-887d-4e83b8e422dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f523f9b-1704-4032-ab6a-8a8b51c5be7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b8ed826-e50f-41ab-9660-8f450691067c"
            }
          }
        ]
      },
      {
        "id": "cbe936fb-8e7c-4380-a230-f802e43089bc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "81ffb9af-48b6-4d4d-9e82-db2f7a2dce54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e14b075-df26-45e9-9ede-e823ac5ec24b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "71f9adc7-316a-45d9-b662-49439f671c0d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92f2c29-1376-480d-b9d8-0e2e9a6b3348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358f32e5-a881-4351-bd4e-48bfa49f8067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a86dca3-1d17-4f0b-bcad-5c0d30d29e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46878143-a388-4a54-948b-58548c6a35ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abebf461-6d1d-4fb5-ba72-063c308bd116",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f83355c-ffc9-4388-8879-eb7e966431fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a548f04f-e60f-47a0-9eda-7756091e2444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f338f808-1734-4cf4-ad8c-f1747aa12daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e2c7dc9-2b00-43a2-86ed-a536d928a393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aa3328-97fb-4e29-88ce-e5197f676f16",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63701e2-ba07-4146-b1fe-ccb8d86a2b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0625d44-88da-4732-8ff6-f083a988977a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948be288-950b-48d1-bf27-5ed92160f8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d0cd969-cfd5-4e72-bdd3-152dd80eccdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b211965d-de84-43a0-9542-b9a7eaef257d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f659c848-ed49-41ba-a634-a8695ac12b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7ec09f-2308-4ea8-b3e8-239f7aa79108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3017442-fd47-430b-90c9-0aa54735dc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99255a84-3704-4d95-b446-2d8c05ca723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdd8857-4dac-46eb-8b56-0b2c1d2ac5e0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea2b320-2218-416c-ae23-9ef85a2acb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcd925d-6638-486c-a63a-d91537efbea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d300ab-d040-438e-bf23-f8d6bfedf06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f50bd92a-8d24-438e-9ebd-bc2908b13b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d08d816-c97c-4945-8994-09436246bbb1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2b8685-c453-4f09-ad94-678636452684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b78d6b-6e98-4cc5-98d8-169fb786a928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3693c51-8bff-4862-a69a-16f655797c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86199546-ab40-4f2c-8063-b7a2b1339077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae4ea4-e011-4acf-a77e-ba51cf07025d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab3da9b-3736-4bb4-8a68-8e43c09af3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13814e1a-1cec-4512-9a33-2b30000068a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5ca6cd-dbc1-464c-9f30-f229c578c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90d79f43-23a5-48d1-9156-e0dbcc915922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0684b1f2-4a04-43cb-ab7e-712638f83960",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d3824a-3320-477f-9e87-019b5d14e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ab6ce2-b69e-4bc2-9981-d997e096dd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bcaa77-f895-4504-81de-bc1737e3d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feb2dc68-a7bf-45ac-b26a-ddcd1d81084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aece96ab-7780-4e5e-af41-86a818b42d71",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387b9d6b-fe8b-4015-981b-487bf3442836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b6e81d-c8f4-498d-98dd-19f70956f3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac5f233-c7f7-4cae-92d5-1b4e1f3055a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfb9f64b-63be-4c9d-af98-eedb0c830006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf89732-07b7-4986-9899-ed1af548b314",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8272fc1-3a4e-479b-ad66-89570e1cc015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b56767b-4883-456a-a6f3-d0c78e55708f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181523ec-b5d8-4442-9f4b-257404b44f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086e6b9f-a2d8-4faf-b3f2-69aac075990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4866b033-5255-4d97-aa4a-1ddcadf364e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0e4344-ab8b-4781-a58d-dd246f25e335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94ce550-f785-49dc-89b5-a9605a6e01e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b1e878-ceae-446f-8c6c-3e5dd37a8b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f581e855-3ed2-4761-8fb3-afc9c9cd7320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037ea735-14d8-43e2-bb4b-6070defb1745",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7a16f9-f1ac-42de-89c0-fd552eab03dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e614e4-8d54-4b86-80c5-1f543f654384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc82b25-ffb3-4037-bbad-296a2c32d8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73247d32-357a-4084-ab74-3399ca9a0cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78557eae-9d4c-4225-8482-31175b3b2ceb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370b25d-aade-4335-af84-a44f6c44a86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f333b362-a536-4808-9b63-b0dc2ef97a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa8083d-c557-4c63-a8e9-ac95fd034e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2fd6873-0108-4965-9f97-5fa13ccadc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bed78ae-0446-4581-a5a1-bd9891e29959",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba26ecf-5552-4624-af25-c656941d8e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7629d6-1dd8-43d0-af5b-82b6f99157b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c59ef-ee31-4abb-a4af-895ef1cad866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "894e6e1b-aa81-4609-9426-37ae34d076ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168414ab-0d52-454b-9d49-9539babd8d33",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e287f-c5a0-403a-8ead-761ab4edd396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c6f664-b28d-4153-a665-a6fd8165549e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94d42ef-f6de-478b-8515-76ab9c26b4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "890b8d41-5f57-4723-b430-0b4c75d114ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f8ab4-2ab0-4be5-8b4a-13a1680d74f9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4605d29-7cec-4488-98a2-8b30898720e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad2c6fc-5e1c-4c5d-bbaa-df3358cdb1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646f80df-0e5a-4a02-b083-f0b49145ec2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22aac599-e6af-4036-811d-629e9b82d7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5c861b-01d7-4dba-8883-e415274befd0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38376fc-3893-4bd0-bde2-1f97c1ca6c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ad4f41-33f8-4eaa-a25c-cbc593704d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6681fe46-42a3-4668-8fe9-afe8d24b45a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "776e5a80-a494-4940-8ef9-00ac56caea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81151300-49c5-4e3a-880a-47e4f70842db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77481b8-64a5-48b4-a5cb-d83fb2f75f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b9bf04-73c0-414e-953c-0af41ed60145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdceeda9-67a6-462e-8c19-da5d157db04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1293eac0-b6ba-47f3-924d-17b6915f5ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2cba4f-baf8-4cf1-abbf-ef520709b7c1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58267a93-5e71-4bad-a67f-91325ceb2107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cc39c2-d229-4662-b49c-a7d9e33bfcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa98c50-acf2-459a-bd80-67c2ac5c481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81d75896-31c6-4638-8c07-454e3dd8ac41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe3665c-4ad9-4654-9181-202bbde5af8f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6ad6a8-7bbb-4c73-af17-eb9eef807a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8729c65b-6fd0-475b-ade8-8bab429eca73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec70a66-79b4-4c09-b6ce-60868d328c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "892cdf6e-fa21-440c-ab1b-46c52741286e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182aa20e-4770-4ea1-b759-5c108f896ed3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35392ed-2a5e-449a-a002-141b09d2f14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881e8343-da5b-4c61-9f46-f40d2d849936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e5b3e5-c60f-465c-af0b-b3984f410086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0d4eae-5794-43cb-b2f1-beacd72a71c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c9deb4-9057-41c0-b744-f42d574cfd52",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c202c-9a7f-47ad-aa0f-b7cfbc943ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a54c3b-dcbd-4227-9d38-0d2bdd7574e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aede7df-68e3-4cc4-9045-13815fb8745b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a56fb0-d771-41a3-8427-c22e6096d143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1b6da8-9f64-4f47-8b25-4a7135436c03",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfe43aa-17ec-48d8-877f-d1d4e538bef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1f92eb-419c-44d4-8531-ca1fbc1ea6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd13005-fb65-4364-92ba-21e96cba1f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d02280-5163-4b01-a03e-c79e96a7e502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7d7338-4988-4fbe-beb9-301f8f680978",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be58e72c-f688-4ea8-a72a-abe1aac15fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e4a6a8-3cd3-4f58-a8a5-ac33f271adfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c76cd0e-9916-4ac7-a935-41c83ccadcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b15c9bda-a81a-43c3-b5ed-d11ebc2be1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a047a95-2a58-4e85-9029-65c691acd7b2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc2bd14-6b80-4851-97e1-5d3fbea7ec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc12a92-9cc0-45bb-ba86-378f290cc202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3048bb-4f6a-487f-a1f5-cbbcf7fc6456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a30cc5d-508a-4a7e-91de-a790d02e92e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bedcc76-8b06-48ea-bec7-f24bba1912d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc013c8-eccf-4208-a731-1ca748c85ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ddb4f7-cc45-4fa6-bcd4-59bcdecc3009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6aebb3-339c-4df0-8bb6-9889ff005baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64d5b32-56c7-424b-b371-43041c942377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb64dced-5504-45d4-b196-4500b81f85ae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d5371a-fdbf-48ea-a97f-5d7dbfb81886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c5a83c-82dd-4cb7-8e3e-81aff5a7c888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b55fa-ab33-45c2-b98a-6a8b9585d3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70467efa-9ecf-4bc1-bf11-da81c10fcd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52e15bb-8349-4129-9741-972fcfa446ea",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec482dd8-abb9-45c7-85c9-8493050207d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d55ad0-b771-4e4c-853f-85c4c5e29f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cadd4e-5303-4d98-b0e6-61da879a67c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28d1e70-1c8b-4119-8f14-c34869c6c04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e761862-3354-4e37-bd3c-eae44a3b4b89",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c558049e-895c-4fa9-ad60-7b2653a3d35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af13458-0c9f-4859-a258-5f832f416825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71e5a22-3075-44c5-baa9-4e9521f4adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a7ec30-a1b1-47e3-a136-917d4c0deb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5876b6-6a0b-40c5-a2b8-c5f38b60b39a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a796dc10-1dd0-44f7-ae7c-c8d8e363c805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441ec803-5f04-4ac0-98a1-0fa4d077e402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb28b538-8954-4322-9593-d662db723efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f92858-eb7c-4536-bc4e-d97dfb01b60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323044f7-96ac-4e6f-a612-e04ea3422624",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf122c0-5859-482d-85b5-a51bbad5e0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceab0d3d-f610-483f-a2e7-cdf2d1fa50df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f96efb-e07e-4921-9abd-5955bc6310a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1431a6db-d546-4e35-b1cd-5c13b48a4e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a4c381-96ef-485c-9941-8dbb4f49a554",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e069a045-e9e7-4441-b4da-66d8cf672898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a4190d-e2fe-45ff-ab7d-fe64e5cefd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea4e5de-2a5f-4b29-a57e-d00e85064679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c123f79b-6a7f-4190-b6c1-374fcb3fc5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9452386c-cf2c-4be8-9a3c-dd338fdc2aa6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f57be5f-3bb3-4677-ac54-16c5778edc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096ffecb-ea74-44eb-b1cc-f86550f5e59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff735c78-9084-46d1-8689-84d15772400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f88484-eeca-48ca-a7c7-d0a4a0ae3e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef031a0e-d633-4164-b29d-887d425fdc76",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcbd725-4428-42cf-89a1-db722e21ca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f89bd6d-194c-4c01-bd06-fe3d664cb612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c96689c-486d-4e28-9cf3-8fe7a6a3474b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea02f9c-3bd1-4db5-b848-8e7116242e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5320e9f2-fae3-44ec-8aad-34c4879c68a5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba87e1ca-b38f-4923-a8db-2d40551b544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966fd93b-a2fe-4ea2-8884-62147b832b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8884723e-e124-4273-bb8d-3a4cb7fb94d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5b9c22-7977-44e7-95f6-d712a49b2bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82467de0-21bf-4bab-8edb-ae24459ef561",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c8c180-d1f0-436b-b2f0-eca83e705369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51231da-acab-4d5b-8738-74df850fc660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ff2f22-a592-40d7-9b01-30c92cb02396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80381fa7-adf4-4f25-b7f1-4ee20bf14db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b96263f-5abb-440d-bfbe-791edc51ac90",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f35be8-3925-4e01-95f3-ff854bd766bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d15064c-a07a-4d0d-8df1-568fdb7592d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef7ecaf-cb74-47cb-b2e8-c353a1acdbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4d4435-df2e-4bf4-9d88-fe323d942fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcb2c2d-9c6f-4ec0-a5fc-5b6076c88f89",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d23767-eae0-484d-934c-f5336971dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1016db8-1dac-4683-adb0-ce29e993bc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891fe0dc-ea59-4e38-9352-6899dda43582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "176b3b0b-a50c-4f7a-bec1-9a801d4c2adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b11922e-4c59-483a-b166-f8b0203fa7d1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041a649b-0c4a-4dd4-ba24-42f168ee609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2991c727-e964-4224-a7d3-76a5b8365040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5e8a82-f775-4a1a-853c-dfd20d61d355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aacb566-ea50-4adb-81a3-cf5ff3a4177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b7011f-4b06-49f4-afa4-53a14ced21c3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50747b18-2fd5-4c88-8d0f-e8eba89125dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de73a9b-07b9-43d4-b84a-7dd481619a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b65d082-0c41-49f7-beea-767414588d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c22fbc5-2255-4fd6-a6d9-0a096bac7dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6888bc-f90a-4e03-bfba-9b52ec4c6944",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b9d07a-f0cd-458c-b6dd-22090d2610bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2bbe48-24ff-4420-b591-bcf62ac07bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a797ff14-eedc-4270-ae0c-9155f79478ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43fc865e-7fc3-412b-b33b-a06a53074618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f588a2e-b344-48f8-862a-2e00a5679006",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf430e1-6ca9-4f2a-b2fa-320108a5ee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce621bbe-9446-4509-b341-d3fb7fdc5385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d774a2-235b-43c0-9cb8-19ba936716c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8aa90d-86d6-4b18-b37c-ea6fa74acb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e62a8c-ed3c-4433-9532-8b0dc5b04bfd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4891eb97-9b49-4230-8382-c9f45327da03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d391930a-8d13-4d03-94fb-2ab1be477e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ae1df0-b297-4563-9295-b7443919da80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad79412-30e2-4d68-a41a-de4abb03101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4886221b-9c1c-4900-9c82-6292fdd67018",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee376ba3-8f28-4b0f-b898-1b22a7178207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4759e90-f7dd-4d10-b571-6f4afb5f5eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e56da60-4c1a-4153-8d1b-df0bcf8e7f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eebd2c9f-37c9-49f4-8148-b98124d45cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61c4151-4bf9-4863-a796-53de6e9e521f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77cbca8-e8d5-42bc-bbcc-f4570fa910b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a33f63-ab58-474e-b7b9-b6a749d92f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9739a829-e2f2-4c87-affc-57f65555e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd2bbd9-a10c-4d36-831a-2f1abf1e6724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2daa110-f554-4399-a82b-52e8b6b502f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2a8c75-d4c9-4bef-bd29-896a234ef5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267cade4-7183-4117-8ea7-092119940966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3779009-5687-4eb7-9091-c0306f3e3bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fea9ac2-a8e0-4e7a-8ea1-93e9ec09b36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b361204a-bba3-4ac1-a67f-8e12ef438282",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c21a8c-c719-4c02-80f8-43f97c5386e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c411cb-fc76-49a5-b131-f055010094a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e063d579-b95d-47dc-b2b5-b798729ca9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec7a5d6-1490-462e-8020-7d00466922f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eb3c21-bb9e-401f-b874-e6e893a9ff03",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1166a542-1255-4ce5-91a0-1e82683e5f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a283d970-3ba6-4bc1-8707-f1abe0178068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a70d56-923d-490b-9806-46588b9a3df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb67465-187a-40a6-b948-c50029d1b275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e65f76-a6a2-4fb7-99f0-f9def066cce6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a142873d-2510-41b1-9dd5-8292f0a4c712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5a75f2-811c-4b76-8f19-331fea7b92d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65deed5-0f29-4e0b-8ac2-0690b8418ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "614670b5-43bc-49a6-88e9-c03fe7825a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258c3e7f-816c-43a7-b632-ae1ee62b9162",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64699bf6-30ad-4b50-8569-da863c13acbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7d4b74-8b84-40b7-9010-029b922808d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaf3f7d-3263-4439-a6be-c0a1bd5e0f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e27a25-47bd-4bce-ab4c-26531cb8d07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c10b3d-43e8-44c5-b1df-06cbd49e53c7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c9bb8f-1226-4e23-8315-234709278c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b8a93f-f1f6-470e-9add-0f38e6a19325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e2e798-8e17-4989-9009-daf3b0904187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb5b4b6-28e8-4033-957b-4641ca283637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cadf4ee-20b5-4b1a-8db3-e6b34717a325",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32762178-e1fa-4d91-adcc-acc261b4da04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86963a42-9237-4799-b60f-4597cac28ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1d543f-b637-47fe-a2c2-1a76563e9d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20036ff8-d317-47ea-900a-8e2974f6d1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b598b1-ee6b-4caf-ba0e-c8cd768e6b98",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb7e275-2da2-4bd4-ba1b-fc2b5bac625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9d9c86-8e67-4404-95bf-593a1c66370c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c321b76f-5c7d-4746-bbb7-31288807984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57d2e3f-7e85-4b36-8bde-655595bdc045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eac571-80aa-4216-9794-6bc65c35aa11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70ea791-e161-446c-b645-3d72023fbd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03f8308-149a-440b-96f5-edecc32dfb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337cb8e0-1689-4dff-9a99-b2076fbf745f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05be7d29-8f74-4faa-91af-81fc5b2348b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee96027-04bf-453d-9702-7a7bad3de927",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00cc014-66b4-4bca-b005-87a387e480a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e24ab9-70ff-4790-be72-299efbb2444b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e72df36-cc68-4325-ba69-95a97d095cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0584b26c-107d-4283-a224-34ce1a1de9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efda9b80-8027-45ba-9157-f1f5de205227",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03710aa8-258c-444a-acfe-cfd1d82c4253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f1b84c-019e-40c4-9f49-de4828c441c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b894553d-2327-4a57-8c26-953c065b5b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0524979e-0285-4622-94aa-eddbce0d190e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6329a86-6e90-4ddb-b602-c666b23d1908",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfb2e84-4f2c-4022-8dc4-8ff4b5b99d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d834ae-e479-474d-9a3f-de6ff967dc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991a2aa9-7cf8-4921-b1e9-fc6cea097808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c9d443-434c-4074-b351-2f48d35b4041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c756d33-6e7e-44ba-a478-1f679a54bcae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178f12bf-5dbf-4b41-b66a-6f377971945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87294686-36e2-4ee5-919c-ece8d447268f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cb9723-5f80-4f37-94d6-9a7c60d680a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5ff4e4-57ba-412b-8937-8d56be4ee4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968ea64a-efd0-47de-b48f-356f22552331",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df654b4-9dac-4d7b-b0b3-a600e5231765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfbeadb-5dac-46dd-8d44-b81a6d08bf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c188fd0f-05aa-4247-8fdc-35d8b555df97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4b3c79-c585-44e4-b188-1e80bc43957b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6517f684-85be-43a1-8c20-99c00ba0fd49",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbbeb82-6597-4dfb-8c07-465f93a8261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a870f2b6-95c2-4f8c-beb8-0fd3681a4dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151d7432-357d-470f-b8ce-58c1900b3e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab275c8-7e87-4753-acbe-4b379409dc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426e7f47-4efa-4411-bce6-a098fb7cfb0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef99ec0-e3ef-4dff-b489-4f51bd0ca8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9d8710-d90d-4f60-8914-9ba895d2f505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88218ae-4778-4915-8e42-09aaa3050493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "625415e4-209d-47e2-84e7-2a2ae7300e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25de0f8-1099-4f50-98d6-f5741cd959bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3fed8-52db-4941-846b-568ef197ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4ca4ad-72c6-437d-90f0-0e0efe5007ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ea4ed-18f3-4cb3-8817-1008848816e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ec968d-c24a-4b6f-b37d-87d4793e1f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ee6cb5-3828-4946-8782-7e61b94e4884",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a136048-cb75-47e1-a830-257835a9f7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6c5fda-67c2-4e36-8a69-81c66dc69527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d953ba33-e50d-41b9-9150-57163670e2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31cd213b-3909-426d-870d-65cf7f4e664b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0129ff-c6ff-404c-8151-dafa848f3460",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff01cd8-8364-4721-99c0-694b949ca68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9252ae79-345a-4b37-95c4-7e2d97eb7c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc56e7-e011-4b96-9c4b-b33caff763af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2c24d6-36ce-4d8c-9f9a-0e515d98ab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd98a3e0-8a94-44e0-8e6b-44c44f74895d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62554cb0-f6cf-4ce8-9d25-449be0cfebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06169d03-3226-495d-9aff-fca2abfc80ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6991ff26-ca8d-4e43-88a1-a7f20004932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acfe4c3a-7a11-4de5-82b3-a4b318ef186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43055512-bdb3-4b13-910f-c3252a46af03",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a4dec5-50a3-4d4e-8cd1-51b4e3ca5f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2d77c5-9373-46d9-abd3-8a06a8ef9079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f897a0c-fd49-4adf-944c-fb9f8a97ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a53bb6-5fe9-4980-bf61-45e7644cd558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcac8d19-99af-482a-801b-4589aa5bd7db",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8afc70c-d222-42e6-84bc-9805e629bb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd8da72-0e9f-492a-b55d-c72a413f050b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be7e824-a1b0-485b-bfcd-c8f375f711b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bd4d26-dac0-4e6b-97a6-ce0170536a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340c0789-9226-4d93-b931-ede30ad967de",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b1743e-299b-475c-85df-a6d5f8fe3478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d99ecf-4295-4bd7-8c7d-8e988b265eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb3133-44e1-433c-a8f5-e03fef79af9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3cf502-9ced-4663-8b4b-4fcad24c14fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b660271-e48e-45ae-994f-a8aeff83bb2a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7a5af2-2fee-4d90-a016-39ce843cafbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabf489a-7ee1-4113-904e-246d3d779ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27a3cfa-ac21-4432-a0ff-51435c8168bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44da685c-04a9-431e-a368-97b0bb306a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5828f7-4108-4577-a33d-100d05e73424",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2a2ea2-cf44-44f6-83b4-24e4c74355fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ceba15-aa64-46c2-b257-c8132cfd80a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738ce682-750f-47cf-a711-318bfa2f94c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a16bd74-5d7e-4e49-8187-6c7effa0669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed50973-0e91-4f22-9af3-af12316cd5c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91a1155-4c55-4e02-a159-12a4ddfdbd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea94906-36c5-4134-a08e-f8dd2b892e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3518b7-4185-4e8e-ad38-3cc7db2f5844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6901405-17ef-4c63-8d5b-503fd97798e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8083811-2ee0-4c75-ba45-3cd001494bd8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fe1f04-83fb-4106-93f9-1a3f97283531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ac9221-0b56-4430-8284-ae6e840e0a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d74fb2-b2e0-45e0-9ad4-7ebae288a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "552abf45-20ef-4d0a-ae8b-69be39e86e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02c6c38-09e4-4c35-8412-e2485f5f24df",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4780c8f1-7a59-4f93-837b-667f2a852186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1306bd-0674-4aa6-9f1f-8a8bd6073447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b2a1c6-52be-4721-99bd-87c45aea5541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6186c19-d2f0-484e-b954-326d5e80719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea72542b-5a8d-4007-add4-fc9ad57711bb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da27a5cd-6839-4f68-9110-a23c42a12e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee375282-3072-4cdb-b919-559a8de21c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a340d1a-7c63-43be-97f7-23924e25a617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c6391f-6aab-4307-a64c-af09b574094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c78c76-47f5-43dd-a3f0-c3983e296ea5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6298d4-b2dd-46e3-bee2-7395dede7a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1901ebf2-d3fd-4a05-94c4-ffa1b80c2dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bd3747-dc45-4cae-9a9c-ac31d2740617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d50efa2-ee74-4438-b2de-365f51fd16fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceb56e8-833c-4411-bcd7-d9ceaec0bfa0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5c65d7-52f6-4bde-82ed-d6502182df3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9227c6-6fec-453e-a86b-dfa8d3318bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4988eaae-4821-489e-89eb-cb404df7a1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "912f3c5c-b5ed-4920-83f4-66fa89a33275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bcda8e-7b61-4853-b119-ac217ec018e3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6b24ba-6f38-47bf-85dc-7eac9b54c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f1fa38-75a0-4bc8-95aa-31fe04fc1331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a777d0e-f22c-4968-a526-b2aeb5d554b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a41d695-722e-430d-bc77-987b711c3967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c30d99c-2ee2-4b46-acc1-d94ac7a18812",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aac69a4-dcb3-4028-bf26-2bea95231c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2192b9c-d492-4da9-9852-8df956202c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdf2fb3-fcdf-4e85-bb9a-0d78bdf77991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba817ab-df49-4730-b8af-6b28b0d1b44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a501919b-0ff4-4d4f-bc6c-96399754d17c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb3ff00-d196-48fe-9484-b6d5c3b9679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb0bb76-1b6d-4b21-952d-b8d2d9644f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cc75f8-9883-45c5-a27c-b7531b822501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05862bd6-84fb-4fc2-8766-647916463c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec32619-0529-4c31-8d6e-285f6e063088",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f35d7a-10f7-4de7-ad43-b136cf0b152d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe75442-1d71-48a0-a4f1-bfd4bc2ebb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd853951-5577-4315-a0d0-55265496c4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f48cfb-3ebe-4610-b9b9-2bdf6b67f7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701f05c5-bcf6-4894-8699-36a7a9aa9279",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f420417-b07d-404d-a3ac-66997b542a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ee79a1-4ae0-445d-8ea1-4c258adb3a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4779ab-dd72-4d6c-819c-f9aaba57695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ada52651-e585-40e1-a2d6-9e548d46298d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6ea544-8bc9-4908-8681-91108220f2a1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ff514e-076b-4478-940d-dff6efdfb78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67287f4e-b8bf-48e4-b1f6-dd25eb2ef019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa7f930-5e44-478e-b148-d77abac73fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "699ec085-f622-4ece-88c9-15bbd0663ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b189e53f-ea7b-4f94-bf97-d62f22e6846a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc539b6-a82b-43d1-941f-2b3853f32a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba017c81-45e1-4e54-8333-c694d93688a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715b57a-8732-4826-b6bf-8415a64215d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d187f5-4913-4467-a421-aae3509d6040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97028a4d-a42f-41b8-8ce4-c81acf86204a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7385cb2-be89-43f6-b8d7-529403cda832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd31c2c-88f4-4758-a9e4-25014adc87be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd1b524-8e59-475a-bfaf-40a5709ea0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8700b1a-7738-47ab-a365-10eec220b655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe66a31b-40ec-4741-bf73-61a83753b21c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e21402-186c-408d-bb6e-c350e9dda68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578da296-a9b5-4f87-adc3-4a420ffb818d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ba3792-5362-4725-8a1b-3bb8e2e0ec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b580321a-acb2-4429-a5b8-03387c969efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd0d6cc-c920-4ab9-83d6-51ad2b92aa6e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c284f5-75f6-4b85-989d-c5ed534d9fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5860fd-706c-4d4b-b476-229b339450e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab8692d-c7d3-4cfe-8b12-c82ff00164bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "848953fe-9a48-4f0b-90fd-72834ac3a62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac92d764-86f7-4329-b1a9-1383d47b7972",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4989aa6d-720d-4ebf-a5d6-2c0a6cf8e71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa5cac5-a1ba-45b9-9b35-346799149a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10b3ed4-6193-4a6a-95c5-ec040b6416c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c14a4d9-1ba3-432b-a214-14f3ef1c26da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48232f7a-462f-40d2-ba72-a67c6b5f0341",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb0efff-cc24-47ca-a81a-1f97f44ee3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430324f1-c25b-4bb5-97a0-6b3e4705b336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dcfa80-c739-4459-b4b3-4fb9b540ed74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ed9d7d-7e36-44b6-9e17-669cb970aca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a18caf-0a93-446f-a1e9-9e9be151a76f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8e8631-80f3-4d6c-8585-ed92ea1bac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade46d03-9b65-4205-9f27-6cb2f3a8f0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e6b71a-d0ae-475a-8c3c-778f8a45cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e03c11fd-4d19-4f10-a376-b8734d360b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219b9634-b8e8-4516-bad0-bcb9bc711ae5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d0d4a6-48c1-4532-93cc-0fb1d51c7781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efb98a2-a0ae-495d-82e4-d0879fe9f229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfe40f8-c442-472a-ae18-9f902fd2f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "838f59df-194f-4335-a457-e266775f3633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac54064-8b76-407b-b077-7ebb62bc1066",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de13fc50-35d1-4731-80bc-53e32b98d034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c4ccfb-b60c-40e6-922c-e18faecf1d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7a667d-2a1c-4abe-9214-baf20d62c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c29e07-c67b-4949-b9e8-3658cd2b1595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d8fef4-3d36-40bb-bf90-cf6f104adc6a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cb9b92-c9f4-4009-8a5c-206e0255e8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fb1d30-8b7f-4608-a673-ee70c64a2118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7247421c-8b54-4711-8ed1-55e34fa7e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a88de1f-76ff-4853-ac72-424ce513c5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc1997c-1e55-40b7-8266-2685e982420f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2144414f-33f3-4dfe-80ed-6814d6b06f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f581f8a8-9d79-4377-82eb-64a389acdfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fff4a5-e067-4934-a9ca-e313ad1688a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc4587f-593d-4606-9a76-d223fd2fef34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16c62d-283b-469e-9fb0-15cdad4ca52a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1728fa17-b437-4709-b8de-6f6a874e9a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a298f03a-97e3-4cbf-99dd-d9a43c3a2d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3069545b-ab8b-4a7b-9f2a-f193546d3b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37cd161-d8d4-43ce-9bb9-bb5e49cbf8d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b561fb6-dd00-4c01-9edf-547db3cca775",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb4f9f5b-5c66-4660-918b-61f9f4088bb9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0916b04c-f4ae-4306-8a4d-078ea40171ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec001871-6379-4751-a85c-69a6d4f2aea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257691ab-54a4-4148-83a3-6dc9bfdfa9e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a80d4963-478c-48cc-9953-be230e9d1f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc2bf4f-5305-4454-9f1d-740a08124c9b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d40b8b-b6bf-4820-b02b-9560ae552c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a4a97f7-cf7d-4ffa-a41f-026e8b47ebf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a0fb5-4df3-4915-aa3b-f02431d535c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0bc94adf-0f47-4081-b97a-ad52decf641d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af8b4108-6126-4485-9ff2-e13f2eb2bb7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef9ebaf7-9958-443a-aa8b-f053dee8377c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df135d97-cd00-44dc-9d25-d4cc6fc3df40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a24d967-99cc-4ff0-bb59-782fbec9128a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f34b2098-b250-41fa-b8fa-1f7051c17622",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a69b4c3-b219-4633-9890-5f06f114aac9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dd32df9-63aa-4b9d-a126-d7f7193b62ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "524301a7-6e58-491b-b3f8-23ec32eb01dc"
                }
              }
            ]
          },
          {
            "id": "da552625-705e-495c-8fd3-e5060e214233",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4929735c-996a-457c-8ff8-865b1622d547",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c94e6d57-b9bb-4c16-bc4f-b2dae986cf72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97cc203a-c9ae-43e9-8889-e813dde34176"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90cc3688-e2ba-45b2-9e37-26f88965de80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b13a7e5-55d3-42e4-b2fc-9bf71258e8aa"
                    }
                  }
                ]
              },
              {
                "id": "e5ee0217-ce30-4627-b05e-8ba3de5e6df0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "556717ca-1822-4835-95da-ac26c50d1003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f8bbe48-2b50-4c69-b325-0dc78f33c84f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "855b3fa1-807b-46dd-9350-78c718418845",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a9c028b-6524-477c-b0d4-1795224ea79e"
                    }
                  }
                ]
              },
              {
                "id": "0d2361fe-bf6e-4511-be25-532e58c5dd77",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f17bcc4f-6b9c-4872-af9f-c1e8f8acdd8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcd84e50-d053-4c29-8265-c74b16b0cca6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6654825-b64c-42f3-8551-c54b9dd5adfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ceddb4d9-7e4a-4a35-b7af-f8213ac6406a"
                    }
                  }
                ]
              },
              {
                "id": "c8114e27-94d9-4e1d-8db7-0a7e2d92b693",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44de2e4a-0aaf-4b51-aaef-00e0871e3d93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea5a092b-814f-44db-a8c4-72e72e8155f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60e5c89a-6a4b-4ca4-8cbf-23e32da1a6b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d3ebf498-a0f4-4bc1-8f75-d6271ea911f5"
                    }
                  }
                ]
              },
              {
                "id": "e4e66704-1652-4e58-8b65-a30689b6dc03",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a5101d-21de-4a40-9027-42097f4f37a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b827435-56ba-48cf-9579-7d5926e8a3b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ccc74f6-5525-4a70-8b2a-382e2cb3d16a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12749296-5fe5-4e99-abb2-a182ef81ef00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e37c1820-325b-40b3-9205-0d557ff4a753",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ddb8b93-694f-48b4-a063-cfdd252ad3d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "978c48e8-d34e-41ae-800b-88f4d4967d14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "facb755b-8e7a-4a61-821e-7c305eccb611"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48132c5a-bd1e-4273-8536-d126fdd73b3d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "21563fe4-b0ba-47db-a6a4-b6413315d564"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6289cc50-2db1-49d8-9a80-e4130f4d0eed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf982fd9-1bb4-46a0-8ac6-bb425bcdd5ae"
            }
          }
        ]
      },
      {
        "id": "e59a321b-6c93-4514-89b8-8dc393c3ddd1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df76454f-abf3-40b0-b254-4bff749354f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "435fe379-52e8-47a0-9028-0bb89505047c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef922b0c-08df-47b4-825e-2d93a2316e68",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bab252-c122-455a-b25f-99f97a975e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb16380-6435-4d19-b540-d4a26e571b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c6ed8f-cb99-4c09-88e4-1cf123f65ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32f8ef8-7692-4633-bd78-f14e7d51e5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e8cb70-8413-4f58-b855-9e96775c9822",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a798f1b-4b4f-4b95-b7b8-64e35929fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc89a9d-3307-41d3-a40b-499f78cfa467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af60d41d-d346-4ab3-a699-24b76a2d136a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab40db84-288f-40f2-b623-dccbf5e0615f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7898b0b6-1134-40f0-9b3f-4d788d005b85",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd996e2b-36be-43c6-ba71-e1585554165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f01d09-1481-4e9d-a4ac-355d3272aa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f17dd0-bf8f-49c4-aa21-5f6e253d1e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc33424e-d318-4148-8ebf-cf5bad20f9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a0ff11-980f-4b51-a8e7-48896270a1d9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff2cce-f4c8-48ae-b3c7-4776d6153e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c930b47-96d2-4de4-b093-1270e5b478fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b279ddaa-c2cb-4083-ae80-9ddc54a8016b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a66a1200-a1f2-4216-92f7-5b766c1dc3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c888947f-1e3c-4c40-b522-acf008364179",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7935318-c1e0-48de-a0dc-e802fed8b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b410c5-cccc-4478-a866-a4ccf9e9d889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d181c3-3afc-4116-9dff-6cc783e4268d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec977c48-ec8d-4a47-9bc6-14d0465fea89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8409e142-b736-4655-b6b5-b62283dcb048",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee27915-beb7-42ff-88be-c026f3f9b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6caedcba-0f72-4f43-89c5-45526cca39e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a8f9a-cfc0-444e-8bb9-c34adfb7a430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e02bf1b7-5a75-480a-8feb-57faf1c7f399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8891362-f669-40c1-8706-30dca52af0ff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795448bb-d922-49d3-acda-43720cf3bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd61d99-0f34-4b7c-a51c-a2aa7b533667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578b0a69-cd6f-4d0f-975e-dd835ee15476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19905801-7304-4ff9-9960-08b9946f17e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a74f147-a731-42f7-b62e-7fe3e0fae207",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515b2d27-5e23-42a6-9fdb-098acc7aec44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837da2d7-20e2-4328-9b85-5ba93cda4ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec9fc5-ba65-44d3-9c4c-6c5d507bdfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e1014a-1409-4047-bd07-523f4dc2ea7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4557ed-7aac-4f9c-a793-b872772b1e8c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4bd17d-7ca2-46b3-a102-bb2441f8364f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b8c35d-b90c-4143-9c1f-2ad9d8cd610f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2828f98-b6b7-4bc6-9d23-716d0d15a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0d923d-c0b8-4281-8a52-73119a577d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55ae576-4537-4c79-b6e5-36f26a3da606",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14952f0-b160-4620-8c6c-474f19e7b190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b854d2-578e-42ef-bb86-dca8c21c34c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b540b-588a-420c-85fb-c8d74af516b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce9a1a5-1927-44e8-92a5-dca462976f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfeb3ed-2639-486a-95ed-4a935466c624",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8675bef-4812-4b1b-84de-f1402ffe689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece10cab-903b-4be0-afba-bd002678c54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33833a80-9855-42f8-909f-19f715a92413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10693392-8de9-44c0-b2fb-d3494a4285b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64575798-daa5-4119-9820-c30e79cdefa2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f660ebe1-a6cc-470a-8bcb-443a644abc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6631203-1d5d-4a26-bc90-657ff67d87a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5723988-97ec-4dba-832c-deccfb52d739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72ae6b53-1918-4cdd-b40e-d64e4e79ee27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774b9a6d-9f9f-44e9-a289-3fb01d11cf3c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e0106-50f9-4f68-8fc8-484966d62542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b8cc93-60ec-4ac0-a3ab-f60f8e50a97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea56061-b4f5-4c56-9070-a5d4472bfdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4beedf3f-5e7c-478a-bc98-c0517f01692d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a018a95-3b67-495a-a08d-17f8b88e5ce8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0526da32-f4b8-408c-b862-df6bc57e1e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208858b8-7b1b-4cd7-b5ef-f0c0c1e411f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2617c037-1179-4689-93e5-540f547e8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfeb2dc4-66a7-4444-9df7-9e0079966c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f27922-8677-484d-a1b6-f2319c5b7ef8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca149fa-c982-48cf-8dc7-aa5a43401f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1363296-990c-40e3-92d0-362a903b4e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2877a6c8-9a8b-4c4f-bf39-a38617742e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10227d24-7223-4ad7-963b-b5fc619fb2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4a2c2d-5e41-440a-b3e3-466a4dc4a632",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f4616c-546c-4736-85e2-b36ccca07e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66967c7a-7d5a-4580-8d42-00113d185a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd4a385-73b2-4f85-9a66-59c7535fc1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "920e506f-bc4a-4414-a2da-b493b3dca17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8e4ba9-2cd9-4d72-9fc2-c343aa517abf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387e1746-3f55-4ec2-83c9-3bc0bfadbd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c491fa-b560-4fcc-9eee-803643101c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f6f75c-dec2-4528-9950-00b3d73749c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "68cb4760-fa3a-4721-9e14-b886fe498910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b98008c-35bf-4baa-981a-37997e1ecd58",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b034d82-f1f8-4aeb-9cfe-811b95dbaedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445cf00f-6e52-421d-bb36-354c5d7e62e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf239c6-5dd3-4fad-a59f-6bf3080fedc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a943054f-f137-4cb9-ab28-880eb6692373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7023c33c-1813-4140-9c4e-ce52d1fcebba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffa597e-d612-4aee-8ce9-1798878bb719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035455ba-beb5-4765-b827-69fe218ce2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daa4450-54a9-4289-8403-39140f9840aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a09c09-3677-4cc7-9d55-7de124385844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98178cb-e6c4-4502-b0ec-465e670b5f7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870de4b3-393b-4a98-b0a6-b51f9031f157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4280d71-9ee5-4c77-9f09-32438d104083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d74b19f-adc8-447d-b394-a697e1955b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0822dcfc-53f8-4a48-920b-a1fb93c70ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92052ef4-803e-4e16-bd75-3c492d93c520",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5626ae3c-6c38-4205-bb9d-091cb21b450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6505033-6610-44b7-8233-ad93dee26f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dfd1ce-8ae8-4fa0-bc3f-2a7c82394d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da3219f-879b-49a8-b136-d941e21a0f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319dcb6a-4214-41a1-980f-3d2742afdd7f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d13fa-cf45-46da-bd0b-a74cac500b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b04d79-a83c-4d04-988a-8d9e140cd48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c48dc-def8-44b1-8120-0b5973a03db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6896f21c-b1a6-4a59-84de-8487ec2ba115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589839ef-2dfa-4106-9d5c-42459fc6e03f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1d118c-c497-45a5-9aca-445f8ea02036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7b6f46-918b-4905-b388-f1873fcd2bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cabb7a1-4570-4f8a-b956-d38d66446b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff3dd68-6bb4-46eb-9d7c-99a0f6065c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1346060-26d0-45d6-904e-42efac8cc368",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f896b4b-c90a-45a9-a13d-d4e2c26e3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc8494a-2227-425a-8f23-7502edadd54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6f4f7-268e-42e2-a63d-854566fee22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a268258f-e577-4ef1-87dc-d073cdcd35d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2238c16-ec57-469a-b0ad-c1aef1b1a70b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4b45e-1208-4436-a70d-638b6acb2b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8870d60-3bbd-482c-9c8d-7a2c4aaee720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3079648-d0bf-41c0-ace5-35d4c7541a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8b5fb2-cc00-41f8-aa72-9eae5a153f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c81298e-552e-41ec-925c-45ebf8ab3afa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2ee0b0-665f-4db7-8354-319f46597cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bc0cbd-11ef-42b9-8377-8a1fb0bd02bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5f1173-9bc8-44b1-9fc7-3dfc8b9f08cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ebfd16-c2fe-4e40-b2a2-f6b37a98557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a422a4-2742-4169-bcde-27199e4f11f6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc16e691-f1ef-4587-8fb8-5caa4c155504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b3d132-f92f-4e5e-8205-8c7a55026f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c79c61-8379-40d7-9784-726f84c0a5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c0eab9-277e-42a9-b186-c4e3dbf353c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca472c27-b5da-4fb5-9cf3-7b3aa4bc6da2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa12312-5731-4b0e-8238-e8e457752453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745c5797-63e0-4007-9a2d-2147ffd1de38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c95aee-5579-4fc8-a5bc-c7221dc4ce7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bdf4ff-9f36-4807-8547-8755c7ab6e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f9b562-ca83-4e5a-9347-2bbc3307bbbd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eeae85-db8c-477f-bddc-bd4e8007efff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dd2dd4-1802-454d-8fee-04079ca5e805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053c93f2-04ce-45aa-bda1-c9d0d877c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15b4865-3524-4c1e-848d-fb9fc4f472ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff37082b-c29a-41d8-a22b-e6e61591ed53",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b8024e-d0cb-4b43-b367-a433b5d24fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cff3b67-8a89-4733-b2f9-c2784beb057b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada391a3-ed76-4e2e-a353-977c2cb08e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0fba32-0298-443f-8ea5-2a64079a3a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126d6414-8597-42ae-87e5-bf55fe13dcc2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bacffc-6c0e-42e3-9ef8-f91a5f452aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fb9b84-b81c-42d0-8be8-6c336b9785e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc1d671-d4a8-4905-ac0c-e2069a5e9ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b6b4e1-ab66-4240-8a13-1c692551f9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87681876-ba43-4b1d-aeb2-8c7f7072321b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b3e59c-4669-4903-a52e-7a91208a2cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574e3184-3ab7-4838-aab7-126940cfa2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9a6805-abda-4339-80ab-46ef5b6d524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176c25d6-3953-492e-a4c0-794fe27c01b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d22464c-e2a5-4e24-a9a4-cf465784a90b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256a6cb0-c0ab-4163-ac20-cd14748b4490",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0d94f4-600b-4ab4-944e-1548820d7c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8713ee8-28cb-4f73-95fe-bb2e13b6ca60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75c3cc8-5160-4b0b-9bb8-df5d2c7912d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3549e44-55b2-4352-a024-0b32b7b04d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4f1e83-ea11-457b-a4a3-8c4f028039bf",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd23fef0-5b62-42c2-a60c-51e051080706",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "97ae45c8-841e-4d88-a88e-fa7a4c66f952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0795fb63-2178-4afd-83ac-0bc9234aabb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14542713-ac46-444a-96f3-3a1aa9e7b32e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff063f78-616d-449f-a0ac-3b48da2d371c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f647c736-357f-4654-b3b1-271c8a9d0f58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a15c530f-870c-42f8-ba22-49c7e5b77d1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ee9baeb-6dfe-4fd0-a758-b7103e5674dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "591b7cb8-3d97-46dc-9e98-e7b9cc42b89d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8b4c171-7d71-4705-b186-1fe37ffcb167"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce6c75f7-275c-410b-8bff-083b341b481a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1b8955e-2eb5-4c07-b930-808a0e87de8a"
            }
          }
        ]
      },
      {
        "id": "0d4c8d91-7060-4cb5-9c67-b77d30e28b7c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1b8f97d1-b1e7-42f5-bbb3-e1e75b232c2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdde91dd-fa13-464f-a0c4-f69fa1b157f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9eda2ec-20cc-466c-ac20-43ab461bdeb2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29a3500-1871-4ce3-a736-50c956e44bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f057b66-46df-4255-963e-0f60b0331228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37ac5cd-8c3c-4fde-b634-547457586f77",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800b696c-c270-4632-a0d6-cb4a64ed8604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f05fe33-531e-45f0-880e-6999bef8a763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2794319-71ce-4db0-9314-d80affc2260c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e902376-5fc3-47cf-90b4-bc5fc1f9b900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae4ee43-6955-4fa5-891f-0ed6582a93d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e9022e-a09d-460d-b63d-e8ec55f22650",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1d0a2c-b842-4b39-80f5-07276fda624d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb886ed-e63c-49b4-ab11-f523ae8f181c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e23f74-9bdb-463d-9de0-8ebc809798bb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a8431f-582b-4fb3-9b91-29740d263a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363c2265-6147-49eb-a793-b034889a4c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac4014-f8ef-4394-917a-10f6ddefee9b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524d3ba3-27c1-4605-99b8-a1af8c087848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298d94f7-1c6c-4097-8cb2-f984b497783d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5575ea-2743-4fa7-8084-2c9059b820f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629f093c-5cff-493b-9391-c9a052c26cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfb0920-bdd5-4d82-a4df-3a3a2c1532e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a39148-1959-4b23-9020-8836039ec8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b4e1a8-b6ba-42e6-aaa1-51b63f8a728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f907be-a197-4059-82c4-92a24978f2cc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc31155-8235-4e60-a08d-a359b4667a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f3b500-9d71-4545-9a76-35083aa012d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22659d25-a713-4e85-9880-f069217c0a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72ed55e-c694-43ec-92a4-6f6347ca557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d67c294-83fa-466c-b369-50e617bf341d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ce4282-5872-44c9-9ab8-bca662ba19f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39601c71-459b-4cf9-80e4-768d086ccf15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d82ac-d3e8-4886-874e-04fe7af2ac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fb6082-1f89-42b4-b493-6a9261b2f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2d1aea-3719-4ae1-b5a1-d3045c5cdcac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470a0c42-6118-479b-a37c-0ffd48cf7f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b63ac50-974d-440b-99c5-cd49aeb51f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f039870-7e52-41e2-aa14-fb3aae6262f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e418320-7b02-49e5-9f90-54d85c60bea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d2ac4a-b6a6-4a85-9cd8-f1ce444e7989",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164e10f8-fe7d-48b5-b0f9-58620d84dfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d497905-7bb1-4e00-856f-42f0fb08e02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126d8f63-8a05-45b1-b6a1-c4e66f3fbcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ad6e87-343d-400f-ae51-1bf62a4b7f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aa6973-5005-4070-a7e1-e546a4c9dda7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb66b5ac-565f-4029-a40c-9896fa9cfe23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71efef4c-6fbd-4f40-8c55-053cf1dcfd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5069d5-fe02-472c-ba1d-19fdee71dc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e781af-b4c2-4fd8-be48-07bddf1dd151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349bfd8c-1ab1-4b46-817c-6c7f5973535d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5491ebd-abee-4cf8-a358-91af01483342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8492941-024c-4966-94b9-8408e825c73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e72994-1eea-4bf8-99a2-ff6b889ea93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b880c4-ccac-483d-b4d1-7f5633bc2916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39015620-f45f-4338-bfb8-bd1117deb8f3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7bfa64-d3fe-4220-a947-ed140ccdb099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64cdd11-0c52-48eb-b5ba-9f6b8db90b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721592d9-2f9f-420d-a23d-4d8c143d4860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d44dcf1-0ddf-4d6e-a916-3b7525f29517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c5f06a-f8b1-4de6-a7c7-f61f9671feb4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5badde85-c642-4c93-975d-b8a3a2d1ad0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87c745f-40fb-42af-960d-f3cc5f2511fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd720846-b329-4fc4-b59a-8a04b281b4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebba9d8f-1271-4268-b2df-9f06db5bc6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec6c160-fc8f-4efb-a144-5ef4643e4dc0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854f1a6-5531-4c3d-b917-3051b039dda4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab41d0bb-dada-4451-949f-fd888abc4e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841b731e-4442-4ae6-920c-4956178937f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad943cb8-6488-429f-ab1c-490c70c75ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1fbe9b-c113-4dd9-8525-4e01218b5642",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a316100-8eb9-4ac0-ac1b-d26ebc252eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdade84-9321-43e9-81e0-23fe198de7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e9db21-9a84-4920-8d1f-fae03a303db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddb5708-1cac-4ecf-a1dc-073d8f0210ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126f3d0a-0f99-420f-880f-497c59d9fc93",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb61fa1-e8b2-41b3-9b2a-6e65de2fa80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb3c49f-ed0e-4460-8b7b-21fff20f17ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7838b5f-0cf0-4840-be17-0b52274785e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ee1c15-4c78-45a0-a52b-dffe195826c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4535f30-2cf9-44bf-a5ec-a1c906c1826c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c007c286-baa8-480b-82f9-daeb4936ca92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21826d34-70af-402e-8dc7-9c552aeab14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fcdfb5-3e57-4a1c-9a6f-24c238f696b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771696d6-d79c-465e-b383-9a4bc286f5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34631cd-2ce6-4d8f-aa53-486aa2516b1d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90fbdbe-5e6c-47e9-94dd-0ff5a4ab6026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40bbc63-ffaf-494d-9425-d55fa0c2173b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fece611a-a240-433d-8c9c-d5d1f8f49a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea27c89-e342-48aa-afb7-1794cdddd821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c3d6a9-8217-49df-97ad-6a005f390692",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bfa5f2-54df-4a38-9037-d1a9d3233300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b10fdf-0c61-4b11-a162-a43f6382c037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f54d0fa-0982-464d-bb15-7c19017ba319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f28f938-48c3-406d-825c-de85eecff9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52694ef3-e511-43b0-9f55-ac5d743f3a1d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139880d6-2b71-41e1-9c4a-079b4fa7c0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c754771f-b567-4415-ba3b-fbcc231af420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e817cf7-f8f9-44ea-b43c-72a22384230f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e31dd7-eb22-4f92-b624-5f623f057eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612e37e3-e1f9-43cc-9110-de6ed031bb2d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1deb75-88bd-4240-9065-bbd4c7bd5c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35273dec-0b84-485e-8e35-07dd99812561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb9bef6-734e-408f-880d-eee542c9bf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369e2805-1642-4587-b780-a8857ed71f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b4f62f-d61f-4a97-937f-4636243efc2c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c3c8aa-9071-4b44-a1b3-7032fdc6fb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a5a83d-c1a9-4647-802e-731a788ce0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6cf413-bd47-47c6-b174-c234af193b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53432186-d2b4-4e3a-a697-81dfee3b5ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52bac81-2b2f-4564-a3b3-faa42b548c66",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b13163-c1e0-400c-a71b-3c169a933c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de210179-47b0-40f4-9b75-803ed53aca09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410d9458-9786-458c-b8ed-42d20946d0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c110041b-7bf4-41f2-a0fc-0fc62284d983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edfa8d9-e760-4c51-9693-1650250bb2c7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1752c0-30ce-45e9-b854-2c220e90975a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b84485a-4aa7-44d0-8609-a386b1245643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d160878-1e03-482d-83d3-186c03fb5c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7709896f-0f4a-4be7-b1df-7202a317b2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fe168f-bd4d-44e9-b174-29c300764ad8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714a03e0-471b-40aa-9263-da8335be3d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ca71ef-34f9-40b5-88fa-14d9872e2467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3403d07-68e2-4817-95ff-099aac02000b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b010300-0483-4c31-95ff-77f098e7c4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c0c3b6-dd7a-462d-943d-548337d9402f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0120cfb6-6b52-498a-a088-fe1f5d8eaf12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd274dad-0e0a-4492-95ec-1961881e313d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44989429-d259-45a3-9bbe-9a48c2960e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637a9a86-19cb-4dfc-b349-69626e1c9d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175f8226-aa02-4001-92e6-bfc761d73732",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7098f1-b572-43ef-b1ba-770a24fc4b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60177f2-356a-45e3-a394-84914b44b1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32946af-5f79-4f49-af6b-3a818ff4b397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ca28f2-0f72-4d60-bbc7-203cf45c3bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaf9c1b-9cf5-4728-8e9d-92639cdafbdf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc66568-2f60-460f-8e4d-057d1d0d3a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a08671e-4256-43fb-b650-09f75f88c532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3b29ae-06dd-491a-82f2-e172488faf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8c4daa-245e-421d-b109-2861bb02ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc6e962-e4a6-4975-b566-bab050dc337c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727d6792-afd0-4605-b676-066012d2cffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ae3785-9642-41db-ae3d-bcd0a04499e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d673b1-d53f-4291-b44f-11fd17bfe5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a50f998-db39-4c99-8a5e-f5070762da43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a72169e-34c3-4c90-98db-907c151177ef",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7a8d81-b951-4e97-878f-e1bee65f4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137cf235-0d49-4ed8-acb0-a9e2261ef4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db2172d-4bc0-428a-ac8c-d2bbff0edc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaefb2e-c9c4-4977-9ca0-a3686dc66d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dc0975-3d9e-4092-bd44-06dfb3055619",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16608614-3607-4d25-a54b-66d189993b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a49e3a1-2cd8-4545-8d8e-1425e962d27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58569934-d7b8-446c-b04d-a6554fee11c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfcd99f-354b-40c1-aa1c-5305f0ffb4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1416a3-f34c-42e0-98ec-9c12f47e0c10",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65478fec-bdf1-47b7-9b39-9445e9197117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c68d04-d2e4-4412-97db-a48d945176ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f853ec3-31bc-4902-b838-9c79c3a113ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225cd0f2-9691-4105-8132-ddb63a5baabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3942fc57-a5b1-4061-9926-4b5761794fbf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f73964-b178-4cfc-88c2-3f142939b68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec5f540-6585-420d-ac95-01ffa75bef55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7abfc3c-57c8-467a-97b9-c1bb3c51bf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4944dbaa-65e1-4d73-9b2d-72fec9f6d62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc368a6-2359-4e98-b485-739815106990",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be07fcd2-e363-48ee-95ed-433cccff5a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca52f93d-a7a0-44f2-a76e-4606b1d5baa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5f39a-8f55-41d2-9753-c258c82eb2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29036fd6-9b76-40e0-a30c-48bfce070390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb64db5-6a22-4d0b-a304-aa9fa85fc9e3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2798416-112c-4fc5-9d9f-272292b6f88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c1918a-f1a5-40ae-9275-9816f7201a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ea14de-236e-4418-8df2-2b8c1bde1763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a346d81b-b513-49d9-ac95-d58dae221ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfa0917-856e-4c1f-b657-fd375271f60e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8291d803-3c9d-4661-9f64-376281473e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687ad16b-2c3a-4963-b302-b36ac17188ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212f07fc-4e73-4e36-b77d-12b1dc793482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c640d2f-cbae-4954-b9aa-85377d53ddfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe03e599-6d01-4d30-acea-d2d1f3649fc3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4fddb7-c00b-446a-8330-4d90197a1fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bfb5d0-d225-45dd-b2db-007fa5a441cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2958aedb-f0bd-47d2-9268-5847e1ec8b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c2d23b-298e-477e-bcbb-181bb4cdcf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e0c02c-a0bb-4625-bf9a-e0ff212ee138",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d90441-6cec-444f-beb4-2a4080367c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca42c084-21d9-4fdd-a768-1a9649d73921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a400f413-fa06-4f19-9cfe-21b9b762273b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adffa95-4e2f-4a16-ac66-70e88a03b347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a943d7-bc01-4018-b0db-648dd4d7032a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2ef7eb-fdc8-4e52-a5b4-0661ce4025fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a127e7-3882-4b70-aba5-92188a79affe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0d4f06-e304-40a8-bb65-e722a9cf20b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01a4522-3560-4750-bd82-39f52f6229d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed93aaf7-2561-4f8f-bc6e-df67fc73ab0e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3db4d55-5525-4dbb-ba23-878ef8fee139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9352bcb-0669-4cfa-8218-7e8fcfce9686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10b2521-e320-4d9f-87bf-a2158a192921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72d7ea5-1120-49bf-b643-06c9c5ed5b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c05c6b-8680-49de-96df-ba9e38f15220",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3577e15b-92aa-4fa1-920f-d0ee690fc599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d13a12-c9f9-4911-8e50-3e3b390558fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a73677-df78-4ae2-9b8a-1878b413727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be809b9-60e1-4435-b119-20ed5baa9ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900be50-80ef-4808-9bc3-c5fcff61f2ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6535156-e74e-4135-9050-dd290d3e2ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6549079-1377-499d-a17d-12b9b068841f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c43fd-5e10-48ee-9dda-db20959931d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7cce10-fe53-4abf-b17d-38765220135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c704ddcf-40a5-433a-bd55-2afec18e62f3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba169c7-cac4-41c9-bc1a-55ef0c387e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187d3257-7631-46b0-8ef7-daf3fdc7d0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b426579-2fa8-42e1-af35-6cf8116c1f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afaee6b-8e06-452f-8bb2-7ca8dc68cfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d56c41-05e2-4050-8293-3fbb6cd1d0fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ad5f0b-a62b-414c-9be0-f6fceaabc4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3acb503-9266-49be-808f-1b71eaf7583b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792fb706-2471-408e-a1b9-2c512fc62191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90262ca7-02df-40b6-b13b-c95d325eb417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a067466-d0c3-4081-be75-93b64bb95155",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e7521-d385-4bd8-93b0-e8cfb64d35ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ec9a61-d00c-4119-b215-ce672809bf34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e015db16-aea1-4661-98ac-66c1da1f8c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df25e624-e94e-4820-9564-a7fabe46b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e73b6dd-2f41-4ff9-a05b-a88287a3680a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfdc12a-9265-4a5b-81f5-aa1a58959ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16752bf1-28fc-46e9-ab6d-ded6cc0fba7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80c1ce3-5df5-435b-adf9-27ec2bf7dd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34496f4-5d4b-4662-b4cc-0c5a1e148e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ac7865-678f-4f01-bb2c-4ede0eb2d0d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bd38c3-c972-4d7b-a862-b16621190c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a5c2d9-0f61-47d3-98de-3461676eaa93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4e1327-ab61-4abd-b78c-668b86c2c0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc70b99c-7612-4105-aece-05f8d7ebe3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e5074f-30ad-415a-8156-f93a30028661",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efeedf93-c96a-4e0f-985b-33f399f145f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ab5775-2877-4a60-9ac7-f18346594609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f504294-4278-4234-ad26-8595e83d0537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae59e1a3-1e51-42e8-aedd-84d56e37bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79f543b-d7e6-473d-898c-46edbacedcb8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8959f5b9-94e6-44d5-9a8c-ba66156d99af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d63cdf-07a1-448e-ab8a-4c272a8926a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bd8c2b-55a0-4873-a14f-668385444c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44e3f2e-4030-4ee0-94db-2930f29d3304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b1fe0f-b2d9-4e18-85bb-22dee7305392",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd96e81-1801-4bb5-bd82-451b5bb090df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac69d7b2-105f-488a-ab7e-681635b9446f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179b70f-4061-4ddd-b704-d7a5182712d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a4998b-9462-424f-a218-94d80e2bf26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e58dd0-dc84-4cac-a546-032ea394c339",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57af70f-2c51-4924-acb3-6bdebb7642e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a19e6c-cff1-4a33-a9b9-16fa8c9bfeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d505b6-9606-4d05-884c-e3101fa658af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9032dd4d-49ce-4da4-88a8-37280e89348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b53914-eec4-4c6f-860a-26cd8bfb9956",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3d133a-9604-4435-8e2b-e71d26d5ac96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9072781-08ac-42c4-9752-2508fa5173a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39116551-b09b-479a-bc76-0b1ef932df96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344fdbc1-4bb2-4b96-8c40-9837fd88d3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68876a0-a36d-499b-b184-77ab64e2902d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a40924-c3e5-4ddf-9a89-c0e89ab8d6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038a7867-9ed9-4f06-aabc-fa834c58a0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392e5836-085b-410f-bd03-e6560007e289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb802c36-0dc0-4c20-af87-33f47615c28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8005ca-6e41-4903-8ce6-71441ffc59d5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac8a454-f7ee-4e2b-be80-690815a4230e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbea1b39-1e8b-4ea7-8120-536fcd87bf67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16457db-1278-4404-ad2d-613d0374922f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc09950-560d-4bf0-8a1f-f4b5c4c2c68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a806e6-21b2-4642-aa54-1bb1d6e9cbee",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e521121-f31e-457c-b373-dceebbcfc29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa86b5f-a8a4-4a98-9754-df06c9cfb4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baaa69e-69ed-4cab-9e08-fca56ad223c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919bf591-8526-4b65-bc98-72d1ec730822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d593cf-8b59-4cf0-a657-5e4e5e047217",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bce4ee4-0bd1-4430-8c5c-4556fe46861b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e86ed5-9582-47f2-a2b8-bc6b2b933399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fccf17-0f34-42c2-8e0a-96794fac75d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b421d836-76fe-40e1-b794-b085aca025cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466d2048-1bfb-4968-b652-e73d6fd92f89",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53163b74-ddef-4ab2-ae02-fa580e69a64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a528c2-bdfb-4fe6-ae14-5a5ad7f10b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c97c62-a522-4d14-ba30-48796c7a58f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaa0c98-3170-47c3-936d-daa7f0089888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00673832-baa2-4034-85d2-9145b32df9ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb77a172-b5fb-4099-bb7b-f2395df4007c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b40592-f42c-4018-a2b1-91a2fb318075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d2c168-27ac-461a-9450-8e29fb581621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4741667d-9193-41cb-b774-afdf86fa64a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a11f0c2-36ed-4d4c-a79e-e1f5bc648149",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77fd4a5-0c03-43b5-ad53-502178a475a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ff571f-3d69-4f47-a5b2-ea8db6d0c40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0614a4-96e9-4653-b62f-dc208914ccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d960a765-4ed6-4749-a07e-0ab2fbf56c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357e6348-6f83-4584-9869-1e1b52948e78",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22a5c3f-8859-48b0-ba42-864b4e7c7343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a5e290-8e69-425f-bf4e-bf8663711d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35513fdd-c4e4-4789-9495-72f8218b9bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a5c136-8f76-45dd-a6c4-3dcb0f1fbd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b818e0ae-6966-480b-aa1c-2f38122ed1d3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a3f1eb-279b-4c7f-b0ea-6fe061b9a1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf5e6e3-6de5-47e1-82dd-7e6852ffa801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b4a72-f7e7-493f-9e51-edcdf982b58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f33342-e11d-444e-b3bd-bafff4d06b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b3c96f-605b-4472-89df-2c7cdb572025",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c3278c-7078-4fb9-ba52-1901ba2c366c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b50a2a-ef85-412e-9dc1-90a694b25d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99335ed-d37e-4e73-946c-0159fa2fddfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a7519b-dad9-4a3d-bc9f-9cee49900b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c16c35-15f5-4195-bfa3-fd8155edf2c9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19766f-5fba-42bc-9ee8-cbb989259fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0e6897-c581-42f8-86bf-e659a92f1ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c987dbc-24ba-4a92-84cc-9bb453d573fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4550228-66c8-49c0-9cbb-d9c101239691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc6ae76-0d53-43c8-bdcd-c70a96be2086",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49522596-1740-49d3-b804-50f14724685b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f239aa-e7a6-4868-b34a-6bffbda4de38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b4f63f-2720-4a4f-b5bd-945b87107e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9853e88-f8a7-4d75-aff3-cfde4d9ffd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5617b6-21b8-4303-8716-725522d9a7dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04424be7-59ce-4098-988a-021cf41ed836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68968ca3-88e0-40e2-b42d-a2c0cb97d97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8740143-0d85-415d-9c3d-c92429ba2333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1948e1ce-20cf-48e9-accf-cf3da6f39e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df60afdb-01e5-43f4-853f-512f569837de",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a39cd5-79b3-4cbe-9a1f-7d42252c736a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc44eb4-51ca-422e-99cc-6fcd63ba3430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318788f-58e2-4f45-86b8-430d529ff6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d77d55b-7e23-4d43-911e-ccbe70771a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d227b-3091-4219-a1ff-24eef5f4d4ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5746e38b-0f03-46f9-aeb0-3b10a9996e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d4cf7d-4df6-4c71-8b44-416fa8235828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c619fb-02a0-44e7-a91f-6d80a47c9d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c9df5c-dc22-415c-8908-72ee1340191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cce6d62-69f9-450a-a812-f9ff02c5b532",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1377053-0adf-4985-8694-ca0bc1d532d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e0a5a9-1214-420a-bf96-0895bcad5cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f5310a-241c-45a8-9dd0-f82e869c75e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52cf8fd-5da3-42e0-b132-afbf7374d793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad9df6b-a4db-459f-9311-76ec6459a752",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddad3292-5118-4989-b331-fd99af94487a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3721f68d-b9d4-4e77-ad3f-14b8bd33be0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f82945-bfdb-4d5b-bb37-09227e2d8df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d4632f-ca04-4c41-ad3a-eef7f9cb0912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98a73fc-26ba-444b-8e59-58557c0564c0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f559ba-a1f6-4a70-bb22-681fb234c484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7548e5f3-3701-4eaf-a9da-0436e7a309fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a506f1dc-57e3-42f5-9b35-cf43980a6cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40c6c3a-c13d-46a4-bf9f-f87e3aa0ce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89e16cd-d3fa-4a17-bcac-c07e67ed39b4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718b90c8-2001-433d-b500-92e2d9b643e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b74ef5-8aae-4ffb-8923-ad713b32dfe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91ad35a-fd9d-4092-b006-4b9f52bd5720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9280c456-ae39-4af5-b989-188aa1cf0bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e781dafb-8858-4fcf-87f1-d246fd40258e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317f6361-aee2-40fa-883d-c4b5308f0dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d30bb24-5b75-49a5-bcbf-f43ffbfa3b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3157782-b4dd-480b-a845-47caf27e940f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3205d790-7012-414a-a42a-47277a27ff2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901c4e62-634d-4fc1-b278-d5b6f59e6221",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde57bf8-7fc7-4959-be8f-dd537cc34366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cbb7a0-42cf-403a-87ba-3ca192ac4d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d5978-55ab-4929-8adf-be50b7a4886c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b6f9b8-2632-4435-94da-fbd7dbad125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ca9761-f890-453f-a2f2-757c83478f5d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b3c696-0202-4351-b800-40ba2de04836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7cdb9c6-9fa9-47c0-a37a-3239788273ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d93cab-fd05-4245-aed0-0b936547a5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109bf457-f553-486d-84d6-f4912440dd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2074b2b0-0dee-42a3-a9d1-17a97aaad069",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37923bf6-7dad-42fa-8589-0c6bce02dd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60dc7de9-0cb6-417b-bae3-043cae21518e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6b0ec8-d81c-47de-a764-b60e4e3da1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bc3626-13cb-4186-a1b4-42e286d544ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c088c4e-56f3-4f3b-b66f-2e5f84584ccf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b85d984-049d-4201-a154-634c7b115533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e080565-6696-404d-85d0-59974b6abc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34766f8f-a6ca-4932-8b03-72ff91660803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25650b4-a05a-418e-af62-cd9d6814f39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8b4a99-5f01-4196-a8e9-5f5efd87025f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a520ff-5e4f-4a25-ae19-6bd0c0cd33f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a1b972-7fbe-480d-b5f3-3498734b4c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6e560d-1b53-457c-962e-1d8d43b6f9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9c6a1d-456c-44e8-b95e-009208c7723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee66d004-cdb7-41f1-bf74-bfaf5f7c46ad",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331af46f-cb0f-4e02-9e5f-d8ff17e3bbe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10af0a38-aef5-4dfc-a5cd-aa13472588ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f40ba8-a1cf-4087-93fa-47b95061dc87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6798ba65-9c76-440b-a520-dc0dd3241d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8891f5e7-5b8a-4776-b985-a35918723c42",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556eead7-4c59-4cbb-ab44-3eb1df06a3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84094b49-1bac-4a3b-87d6-4525734b7466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35311174-9789-4ca5-8a74-f62cd38c13ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48498cb-1e56-41f2-8acc-0358de95860f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168338a1-21b0-43dc-89ab-376528597843",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b6861c-d8f4-417b-b5ba-adb130d1fec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ce3e1a-ac19-4567-bce0-957c7b5e4d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684ffa1b-9ab7-4a43-ab03-217b68ab741f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1df54e-8555-4d39-b66c-53f6d7bc47ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d373cb1-c86a-4e68-b69f-2b4bbb3c9090",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70eb77d-a099-4f53-8b26-48d4689bcef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e327d0-74ea-45e9-a3e4-a2cc41343223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234b833f-d722-4f17-8186-f09eabfd28af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c34409d-60b8-4891-b1e0-1e86d58628c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db64b29-2bfc-496b-9cdd-4e5d4958b5dd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859e77b8-3ba2-4566-9903-c81e577fa065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70447f89-26cf-42ec-9427-97638612514b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9011f4-59f1-4946-8f2b-8c3be8b489a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9fb06d-d5fd-446e-b236-74bc611198a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ed33e1-9b98-4d84-aa54-619cb87c3fda",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2addb990-4683-46be-8a11-92df8d55dddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017ee2da-15cd-4fc3-a272-bd14a08d5ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956b3a9b-ebd9-4954-9a7a-997cec94e656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8321c26e-cba3-4555-9725-7c03b6e30211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0b8f09-daef-4590-b26c-5d787a7aecdb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04aba7c-6d88-4a0d-85e6-d3ac8035ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dfbdc2a-791c-4baa-af12-93255a8133b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9d802e-1436-43fb-a5ee-7d6ca6f1d790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6687ef-d5aa-4b5b-b6d6-0c51c612d66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cafb374-04af-4598-b11e-4279db98339c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b12a34-1e22-4e4d-a7cd-0c67fe11c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90eec963-9ad9-43f9-aaab-5537b6f21d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27c1019-6882-42db-8183-df931c14d111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1e9354-c1a5-4516-9124-7e8e682c0dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d6c07f-5a2e-465b-beec-e45288e9fbfb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad28f2e4-c228-4bc6-90fc-79c3d61f5f71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b792d2-bd42-4ecc-b36f-61d5f8e0c7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1711c3-8b99-4fa6-a608-859c09c12339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55395339-2c43-40f8-8884-4b2dcab3d16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d557d2f-1370-419a-a555-b5e6bc1deefb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6acb1-e33d-42e1-8a2a-5235b3519645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7148d4-0f9f-4ba6-8c0e-e56cf4b7dd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd92f35-73cf-4310-88b3-f3f2c4aa4329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4424898e-39fb-402b-9889-0a3820f19953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3abe85f-4e93-453b-af12-efb02bdd4a50",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad881fc0-b023-45de-a4de-53d92dcb9567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4071402c-a6e8-4bf7-9bac-5d5cd5ca55e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3322a512-c273-4de5-91b2-9096782d413c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9c2509-3fb3-4249-b5de-e3b37b05b275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fc9bfc-3913-4bdd-a0aa-7d4586064ed8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686a21fc-6e48-4854-ad74-f279aeb5c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf86eaa-de7c-4f85-adc2-62526493aa9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d238d221-0c53-4fb1-a4d2-8f20088bbeef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c875cf2-b181-4776-982a-db1db67ceffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a509b819-4bca-4e72-98bd-a0bdad460d4b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15073852-c4fd-4ee5-ac0d-9df26f28ed55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe92e8d-9240-4c29-aadc-14996f85178c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7c64aa-5433-4e40-8d9d-b14d594d8152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17102b2c-f889-4c31-bb49-d0b0d70b077b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a34e09e-55f4-4a63-a8c0-6f7603112619",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acf72fc-3a8d-4348-947b-2bbe3589225b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a755a89a-889c-4c78-96f7-6b297a3fa87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016ee6a9-78a0-4537-a80b-5d7bef7b5f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3769f2db-1279-4e0a-9f25-01de0bbcb968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d80f9f-8870-4b2c-8365-8b2ac9045903",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a01247-5204-4dc3-a05c-bcda1d997f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4573f8e8-fad5-48bc-aa2c-4f18a3b5612e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4c81e9-da11-4b84-8be7-9d4ef6c30e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a61b898-1cf2-466d-970d-1d58d2627b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b2aa9d-f8ca-455e-8d85-f4ebb569cff8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdebf67b-c062-4423-a146-f599543a7f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4617fad0-3734-4794-bd4b-3fb3e0d5f9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b1000d-54bb-4979-a983-24fa0dd5466d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07aa726-cbc4-4aec-8186-c711a8e44fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c8fc43-6f3d-40bc-a777-78dc361d9555",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd38dd3-334f-420d-b0b4-a841346572c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61856ef0-ebb8-4b7f-9686-9e070043752f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d2971-258d-4166-81f6-609ac235a662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95252b7e-a918-43ff-a98f-92e760b546f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9831e1e3-4221-489b-85b0-71d1b40b7e94",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aba76d-16f0-4096-a508-bdbfa76ba516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd07780f-de9d-4247-a0f7-48c9e23693eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b7382e-b26c-47ae-8bb8-7d8d3931eca2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc6fb9c-6128-44a3-b5d0-37ace4a16ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d120988d-8eb1-46c2-8482-6864c014301a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b9a5e8-45b2-4a1e-aa07-267a3c9f0000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3196ad2-78e4-4567-98f5-a9945e0e214c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f08e3fc-ec11-4019-b677-e5a3eb2d0285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0e36fe-46db-4c3f-993d-41f1e95a81fb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92284da3-f9e0-4487-b180-87dad7320d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ac3b3aa-f4fe-4814-81f2-dad873bd564b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adcfcb20-e4df-4ac4-a39e-93222b9570c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39b13235-d992-4591-81fb-37bab5671586"
                    }
                  }
                ]
              },
              {
                "id": "00678da8-7cc2-444e-83f0-8378d9fa35a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e2bb24b-537e-460d-bd14-df7a3e32364a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfcf475-5ed1-43b2-a081-1a52a2980d10",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "125d44aa-2411-47d8-9ea7-ab35762fdb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e202ae-ee9d-4d1e-bfc9-f739c374249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1345540e-71fc-418a-b4ca-f1dad4a906a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498146b0-e822-4eb2-9cf8-11a46453a33f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e41da24-33b5-45fe-8018-15fe3cbae5d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "917de450-f19e-4d22-82ad-e2c5871538be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fa7a33-71c3-4e28-b76e-2cf10c420d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4b4aa33-60c4-4d40-b4a9-80d55f9c8650"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b45f1074-f60f-418b-a8f2-a480bd3fac92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee23668-ac6b-4153-83a9-5a9ab6e90e77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7caa54c3-e0de-4d75-b889-17cec4215caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f6fa9e-28e6-44c5-a01b-8d478beaf364"
                    }
                  }
                ]
              },
              {
                "id": "783eadb3-daaf-4f64-b651-a19c069b0dbd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0118ff1a-4759-46d3-b83a-53dbdbab2866",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123f8d2b-bb1a-45f5-a622-079c6cd80216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "28263748-0a9e-435c-aeac-85038a99141a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99e17d7-c6de-4c1d-a0a4-86c800df5ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef63bd2-e802-44ff-92b9-54b89166438a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cce84d2b-2907-4825-a553-38d17fbcc3a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76aefd2c-d001-4201-8e04-c699aa7dc0e6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4cfc283-3337-4caf-8220-298f6a997dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96fbd430-cc12-4766-814d-361ab819ea5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c65c85b-3740-4bfe-b6ad-cc4eb20854c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ec5465-2779-4ffc-b1df-4881ebbd530c"
                    }
                  }
                ]
              },
              {
                "id": "db0c73f4-8b8a-4042-ab05-26e5566445d7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56201506-fb43-464d-8cb3-f9b681d0f621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f7255a9-747b-4f08-98f5-ffbd24a4054b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "facd74dd-add5-4919-9baa-c9a8488bb314",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07cd62f0-5492-4cf8-a0a5-bf0c6c749d35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8091ee65-4f33-4098-a2a7-7f6cd5fe9db6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6f2408c8-32e7-4c7c-9e51-e2dfa7d28338"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b2d52b2-c248-4fb7-b23e-520eaf5fac6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b97e0a74-1151-4923-94f2-ad0e8b0f76af"
            }
          }
        ]
      },
      {
        "id": "f285fe05-4085-4c44-b3a1-6f2d8b4325b4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f2b5e7a3-48b5-4275-8e6a-ea4b9649c552",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9308eb2-3bc7-47a8-8839-b1716b4a05cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce8a42f-20cc-451b-977c-7250e31b1e99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a743c5d0-3383-4688-9eb0-f781e0ed729b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0624aef-8156-45e1-8965-1e17950bbd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "841ce236-684c-45be-b578-3326ce34791f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d92b19-a987-462c-a8d0-500f74a2340e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d59770e-b8a7-4dcc-aea4-9f612741f878",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6d434f0-a7b5-4287-9b65-e71489d19e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e04c7a6-867a-4ee5-861c-363bf566e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b424d9c-079e-4bcc-9495-3e573faf9314"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "071c0861-87e0-40f6-a505-c670afdb8b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdac00d1-6f96-4c7c-93e4-0e4b23909446"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea93ce4-d410-4a79-a257-4f4bb396d630",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92652144-876e-4e28-a822-79b1fadf973e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00d35238-4e85-4e4d-9612-180e29bd2d4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0406c46d-24c5-4e38-ad44-b8b0d5484a72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c94eff7-2032-49dd-9cc1-f3d3b609c4a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0f36f4f-e84f-448f-8272-39583a685abf"
            }
          }
        ]
      },
      {
        "id": "46ace3ab-f1e9-4976-8d9f-26111ef896ad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "59805527-1e7f-4c6f-93e3-cf8033152d00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34e11a14-63c6-4472-8d81-8ed851aab201",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce58d562-b252-40c2-9216-a4f8127784f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb40bff-0377-468e-a7d4-007a6fa5aafe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "27db8b91-57b4-4708-8b5b-1737b634a9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc0eec5-5f32-4822-b0eb-385d62dd54e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d998618-b98a-4ac1-88c3-24112e3cc10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bc9a9f-7827-4169-8177-85f84fdee377",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9b5e78-9c71-42ce-9eb1-842500005755",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "677b8147-c5ed-4636-a095-f4216ae18893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bcc285-e855-458b-be94-65473c56cd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9b106e0-5d04-49e1-99cf-ecb668202ad3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adba7460-c993-44ff-98c2-1bc0341e593d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3a573ff-2538-411d-ac7a-c9420ebc529a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e9f69f3-0947-4d2b-be8d-9d70568e69d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4951c48d-e530-4b3f-8c33-8749d5fea376"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c085edf3-49f5-4d22-9bd2-061a3d8b007f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "15ad3043-c988-4973-907e-4bbef2415bce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eef75c43-b200-4dba-9ca4-490a8338df5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d25643ce-d78d-4898-a338-ba9d5f8db5cf"
            }
          }
        ]
      },
      {
        "id": "5d8d184f-3f02-49b7-84be-cff2340c1e12",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4782208d-4471-4a80-b0fd-797abd3267ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a5d09ba-9ac8-4245-aecb-a6a6cba55d84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ed2b5ab-d707-4670-a16a-596f5ef2f704",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe27fc8c-7732-4df2-91a2-317abdd9af02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "66b1cc3e-bd72-4cfa-bf5e-636666afae3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723953a3-9e1d-4524-9d89-0c951f10e043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d5ee92a-6d28-464f-b428-eb89d8848bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522225eb-7ce2-4924-8530-a1ff8a43001d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fb3c89-febc-4501-94e2-6ba90230bc86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f428e76-12f0-4564-929a-d3946405456e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0115e6-2197-47ad-bda3-3a48ba9711c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f68c28b-19e1-4eed-8fe9-f8af82a754e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3742c53a-46dd-4740-bcff-306021f2f0dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26aaec4-aec0-4e65-beee-7b257891496f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cd0e31c-5591-44d4-a813-2fbdfd283a19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d73c9b06-296b-47bb-87b0-f8af3644f95d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08e34c08-1fdf-43ae-b408-78d685d22113",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "64c5bc17-dd4d-46c2-a367-b4a80aee0dee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be81b855-61ce-414e-8931-c22636de8180",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b8f67af-dd92-4082-936f-aa42490d3d15"
            }
          }
        ]
      },
      {
        "id": "f8e21e01-19dc-42e3-8883-0f12ceaf80a4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45581619-d3fd-4574-a0cd-c3f4946d9ee1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b322da5-0d2f-4af3-bc8c-c89c1926d645",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23df3105-c7cc-4ee9-9011-ffedcbdd77a9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eccb2cd-cc3c-4238-8810-0c8421548493",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5def7362-2295-423d-9801-a53c14f1c434",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 597.5038167938934,
      "responseMin": 20,
      "responseMax": 4720,
      "responseSd": 649.4532330305458,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671582935522,
      "completed": 1671583102395
    },
    "executions": [
      {
        "id": "f975f12a-eda2-4eaf-8a4b-0c9a9926d097",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4689fc6f-d7c1-4591-8d2e-68b7dee9fe3b",
          "httpRequestId": "ce162f0f-f34c-475b-9755-b62d107a26e0"
        },
        "item": {
          "id": "f975f12a-eda2-4eaf-8a4b-0c9a9926d097",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "494f04c5-99bf-4c9a-b142-e560e57323b4",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "9034d851-3a15-48e4-a75e-75ab5e783b6f",
        "cursor": {
          "ref": "e7dc529e-2cac-429a-9f97-46edf8ce5aca",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "537f47d5-f5aa-4c07-bd04-002189d0f3e0"
        },
        "item": {
          "id": "9034d851-3a15-48e4-a75e-75ab5e783b6f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "120eab93-321d-4690-92e9-060b2f0c765c",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "f0a8bea0-5f9d-4071-ab42-2ec804e4aa45",
        "cursor": {
          "ref": "978878f4-9501-4ebf-9d5c-efe5ce51190e",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2cf38b0-46a1-469a-bc30-b672fa55b990"
        },
        "item": {
          "id": "f0a8bea0-5f9d-4071-ab42-2ec804e4aa45",
          "name": "did_json"
        },
        "response": {
          "id": "3be5ff92-f28e-494d-93e9-adf090779205",
          "status": "OK",
          "code": 200,
          "responseTime": 1012,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65091343-b13d-4f88-9caa-6663020ba795",
        "cursor": {
          "ref": "df09fe58-acbe-4330-b4cc-8e4e4d056166",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac3748ce-e9ff-45b5-9dc7-30f1b1302541"
        },
        "item": {
          "id": "65091343-b13d-4f88-9caa-6663020ba795",
          "name": "did:invalid"
        },
        "response": {
          "id": "bef89c23-1df4-4d8d-81e0-81d2f9b59ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65091343-b13d-4f88-9caa-6663020ba795",
        "cursor": {
          "ref": "df09fe58-acbe-4330-b4cc-8e4e4d056166",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac3748ce-e9ff-45b5-9dc7-30f1b1302541"
        },
        "item": {
          "id": "65091343-b13d-4f88-9caa-6663020ba795",
          "name": "did:invalid"
        },
        "response": {
          "id": "bef89c23-1df4-4d8d-81e0-81d2f9b59ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bab7db-32b3-4561-85a4-f3729efa0192",
        "cursor": {
          "ref": "ec8cc4c1-4996-42bb-bff8-92aae274d4c2",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9b7d59a0-8347-4248-9fca-9d7d95a979ad"
        },
        "item": {
          "id": "93bab7db-32b3-4561-85a4-f3729efa0192",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a9c3ad65-8c8a-4a41-bc1b-749e0b9003b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 636,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d808e3-6d75-4e37-ba15-02927ba9e2c5",
        "cursor": {
          "ref": "36ab9493-5588-4267-bf30-b834b49aa14c",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b386f32a-4b0a-4676-97cc-00d96c40148b"
        },
        "item": {
          "id": "c7d808e3-6d75-4e37-ba15-02927ba9e2c5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "31431a3e-64ef-4658-b83d-184098bf8731",
          "status": "Not Found",
          "code": 404,
          "responseTime": 526,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bd92f5-4456-40e8-b48f-3515201ee2a1",
        "cursor": {
          "ref": "57129998-dbb7-4835-8840-81b76de29a50",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "92df6396-f562-4bd1-86d5-436006b5d7cd"
        },
        "item": {
          "id": "75bd92f5-4456-40e8-b48f-3515201ee2a1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "da0b2543-16f4-46e7-a69f-30349c05a075",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4d53d4-b362-4cbc-b0e2-2df9aac8e294",
        "cursor": {
          "ref": "83f97b5c-1739-4ff7-8e58-d81fef213329",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01138a6a-f731-4c0b-b0e2-6ffcda535947"
        },
        "item": {
          "id": "4f4d53d4-b362-4cbc-b0e2-2df9aac8e294",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b62c75f1-8ad5-4c27-ba50-5c9c558f3e1b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4d53d4-b362-4cbc-b0e2-2df9aac8e294",
        "cursor": {
          "ref": "83f97b5c-1739-4ff7-8e58-d81fef213329",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01138a6a-f731-4c0b-b0e2-6ffcda535947"
        },
        "item": {
          "id": "4f4d53d4-b362-4cbc-b0e2-2df9aac8e294",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b62c75f1-8ad5-4c27-ba50-5c9c558f3e1b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b5879-89d7-41d5-b75a-5c1703e6c88a",
        "cursor": {
          "ref": "0a5df1f3-f26f-4a4b-a685-505c6b29691a",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2d025bb7-1b57-4ed3-841e-ad5dab5268d5"
        },
        "item": {
          "id": "0a1b5879-89d7-41d5-b75a-5c1703e6c88a",
          "name": "identifiers"
        },
        "response": {
          "id": "c2f8826a-fa0f-4999-9fce-276fb49368ad",
          "status": "OK",
          "code": 200,
          "responseTime": 833,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f9adc7-316a-45d9-b662-49439f671c0d",
        "cursor": {
          "ref": "6a752920-6263-4843-97b7-b8e2b27bb3f8",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c97d5785-33ed-40ef-8f0e-fa8f46f55692"
        },
        "item": {
          "id": "71f9adc7-316a-45d9-b662-49439f671c0d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7012ba21-def2-4e4f-9b6b-7ce8ad310c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f9adc7-316a-45d9-b662-49439f671c0d",
        "cursor": {
          "ref": "6a752920-6263-4843-97b7-b8e2b27bb3f8",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c97d5785-33ed-40ef-8f0e-fa8f46f55692"
        },
        "item": {
          "id": "71f9adc7-316a-45d9-b662-49439f671c0d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7012ba21-def2-4e4f-9b6b-7ce8ad310c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abebf461-6d1d-4fb5-ba72-063c308bd116",
        "cursor": {
          "ref": "b9d90adb-30d0-4056-af10-d3c6095de47a",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9488f69a-0e54-4212-9d81-ec13f75ea03d"
        },
        "item": {
          "id": "abebf461-6d1d-4fb5-ba72-063c308bd116",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f9623583-330e-4628-ae50-ff7314da3b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aa3328-97fb-4e29-88ce-e5197f676f16",
        "cursor": {
          "ref": "53a8d57e-9c4e-4b26-8296-923ec9b68d36",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c51fccae-9838-49ef-aa12-23ed1e3f3e0f"
        },
        "item": {
          "id": "03aa3328-97fb-4e29-88ce-e5197f676f16",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "7f53edd1-8c07-41a4-8a52-a7b370254ef1",
          "status": "Created",
          "code": 201,
          "responseTime": 2322,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "b211965d-de84-43a0-9542-b9a7eaef257d",
        "cursor": {
          "ref": "b593994c-5cf2-4cd6-9955-a59fe9aa6294",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a347dfee-bc5c-4b6b-a291-78867d030fb5"
        },
        "item": {
          "id": "b211965d-de84-43a0-9542-b9a7eaef257d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "16d35b50-1b11-4def-b8f8-b272053ba436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdd8857-4dac-46eb-8b56-0b2c1d2ac5e0",
        "cursor": {
          "ref": "826c18ee-b5e1-4551-bd69-d89b855d621d",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6015b5e9-5ff9-4b09-b46d-563f080c6139"
        },
        "item": {
          "id": "dbdd8857-4dac-46eb-8b56-0b2c1d2ac5e0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "66e05687-f0de-4cf4-a4ff-2b3645ef69ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d08d816-c97c-4945-8994-09436246bbb1",
        "cursor": {
          "ref": "22ebe6c9-3916-4c5a-8380-afdfbf36fddf",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12635941-0e54-4da6-a98e-ad22f4ff3ae3"
        },
        "item": {
          "id": "6d08d816-c97c-4945-8994-09436246bbb1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b3af12ec-a4ea-45c8-b5c2-70069f865d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae4ea4-e011-4acf-a77e-ba51cf07025d",
        "cursor": {
          "ref": "cd044cd4-e926-40db-b745-daddab80e53d",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc136bda-732e-4555-88f6-42ab5def5ca4"
        },
        "item": {
          "id": "7bae4ea4-e011-4acf-a77e-ba51cf07025d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "db2eb255-14f1-40b0-9b5c-3c5efdc148ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0684b1f2-4a04-43cb-ab7e-712638f83960",
        "cursor": {
          "ref": "99417633-a454-4b58-a184-3015f4670acf",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95339817-1944-4e12-b525-847597af1ae4"
        },
        "item": {
          "id": "0684b1f2-4a04-43cb-ab7e-712638f83960",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6e2c22ae-4787-4ac3-bedb-b5bdce2b051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aece96ab-7780-4e5e-af41-86a818b42d71",
        "cursor": {
          "ref": "01321044-38f0-4f9e-ac06-db2cad055e68",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1ca0c87a-7982-41c4-b269-bb137e8bcdc5"
        },
        "item": {
          "id": "aece96ab-7780-4e5e-af41-86a818b42d71",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e87b69e0-d609-4dbb-8df6-3b52183ad4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf89732-07b7-4986-9899-ed1af548b314",
        "cursor": {
          "ref": "3c544372-d83d-4018-af14-4c6da8dfbf30",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "347e7891-8226-47c7-8ecf-460e108a4a10"
        },
        "item": {
          "id": "dbf89732-07b7-4986-9899-ed1af548b314",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8de93017-59ea-4597-8db9-3ece8d9802db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4866b033-5255-4d97-aa4a-1ddcadf364e7",
        "cursor": {
          "ref": "4297e0d3-ff14-40c0-a14e-b4cfe5fe4bea",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1b69baf6-933b-4b27-b6f7-4fb4459f96a7"
        },
        "item": {
          "id": "4866b033-5255-4d97-aa4a-1ddcadf364e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "46073eed-42d0-42fe-888d-0e47fb63ad70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037ea735-14d8-43e2-bb4b-6070defb1745",
        "cursor": {
          "ref": "d40487ba-25b8-4209-bc95-ab5afbab33e1",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e0ddd1a1-2f44-4796-babc-499e0ce6483a"
        },
        "item": {
          "id": "037ea735-14d8-43e2-bb4b-6070defb1745",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7861adc9-43c8-493a-b338-4c9f25091bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78557eae-9d4c-4225-8482-31175b3b2ceb",
        "cursor": {
          "ref": "e0d447eb-4ea3-4614-aa7a-ac57cb6d5d21",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "403237e8-a690-4ebd-b002-3eb41f623b63"
        },
        "item": {
          "id": "78557eae-9d4c-4225-8482-31175b3b2ceb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1812ce86-72a0-411f-aaac-c9e91fc30965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bed78ae-0446-4581-a5a1-bd9891e29959",
        "cursor": {
          "ref": "ab444245-46a6-4b3b-a20b-bb0c216a3b4b",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e163224-ad12-4b2c-8966-4afd976ca75e"
        },
        "item": {
          "id": "9bed78ae-0446-4581-a5a1-bd9891e29959",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "0db6cf59-667c-4e5b-ad28-be19bb41a618",
          "status": "Created",
          "code": 201,
          "responseTime": 4471,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "168414ab-0d52-454b-9d49-9539babd8d33",
        "cursor": {
          "ref": "3353e9b1-8358-4f87-89d3-e5999fd04cca",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bd2e2839-bb3c-49f8-961b-5394cc0c679b"
        },
        "item": {
          "id": "168414ab-0d52-454b-9d49-9539babd8d33",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c5d8faf2-c016-4945-85ef-b0dc3058515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f8ab4-2ab0-4be5-8b4a-13a1680d74f9",
        "cursor": {
          "ref": "8957ecd5-ed9c-4773-b5c1-cb66db9658fb",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d0c4e1b-1415-4a02-ba91-a901740b2567"
        },
        "item": {
          "id": "b27f8ab4-2ab0-4be5-8b4a-13a1680d74f9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1f74074e-ffb1-4a27-938a-0aaf2348f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5c861b-01d7-4dba-8883-e415274befd0",
        "cursor": {
          "ref": "1e2bf455-11b9-4a65-9dc2-7efa4e9fb3b4",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e77afcfc-9918-4c20-b4cf-ec71e3bd479b"
        },
        "item": {
          "id": "5f5c861b-01d7-4dba-8883-e415274befd0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fa5583d1-3d29-4ade-8c89-3dcbfdfa7a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81151300-49c5-4e3a-880a-47e4f70842db",
        "cursor": {
          "ref": "91c189ae-ea9b-44fa-8941-bcf04ee0d722",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1079063f-3d12-467e-9d02-71bea4e0130b"
        },
        "item": {
          "id": "81151300-49c5-4e3a-880a-47e4f70842db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cc916286-3b86-410c-9e4b-9d7edc0fd3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2cba4f-baf8-4cf1-abbf-ef520709b7c1",
        "cursor": {
          "ref": "abb92eec-8499-4b37-9646-ecf4052fd1ec",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a965c21c-951e-4f4c-8d41-3d945417b4b1"
        },
        "item": {
          "id": "9c2cba4f-baf8-4cf1-abbf-ef520709b7c1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bac03cf2-e3f9-4b73-a9cc-1045771528c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe3665c-4ad9-4654-9181-202bbde5af8f",
        "cursor": {
          "ref": "ecbde2a8-d697-4e62-bcb4-d7ca8f079823",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "92cbb608-b1e2-4af1-b78d-9c42539e1550"
        },
        "item": {
          "id": "ffe3665c-4ad9-4654-9181-202bbde5af8f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b9ec794a-5f9a-4625-8411-8622635be430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182aa20e-4770-4ea1-b759-5c108f896ed3",
        "cursor": {
          "ref": "164a5399-dcb1-4565-895c-962c3e8a4abc",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24f78680-dcef-4139-9066-3d479f6e513b"
        },
        "item": {
          "id": "182aa20e-4770-4ea1-b759-5c108f896ed3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4eb2e37b-cecf-403a-9b0e-b46e794b0fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c9deb4-9057-41c0-b744-f42d574cfd52",
        "cursor": {
          "ref": "ec5333e5-8424-40c8-8807-ce75b96123a9",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15ee5a1a-87c8-460a-8aca-89e7a9607b09"
        },
        "item": {
          "id": "51c9deb4-9057-41c0-b744-f42d574cfd52",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "68b4c92a-d5ba-48b9-b663-aaaf7e286c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1b6da8-9f64-4f47-8b25-4a7135436c03",
        "cursor": {
          "ref": "526044ee-8046-4b3e-b449-151ac1509658",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5ee519e1-a9b9-4033-b2bb-86f42df35869"
        },
        "item": {
          "id": "ac1b6da8-9f64-4f47-8b25-4a7135436c03",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1b26851d-de7e-44a6-85f5-978220c32df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7d7338-4988-4fbe-beb9-301f8f680978",
        "cursor": {
          "ref": "09d384c0-01cb-43d8-999b-45a4a418d137",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "16bef536-dd54-424b-a6b7-cf827e2bf853"
        },
        "item": {
          "id": "8c7d7338-4988-4fbe-beb9-301f8f680978",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e0bc8f36-88d5-4d89-84da-09c359a96c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a047a95-2a58-4e85-9029-65c691acd7b2",
        "cursor": {
          "ref": "b7158103-9553-4a04-bc52-88912d22f3fc",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "172fcf35-39ff-4c83-ad70-1b08d77d2d57"
        },
        "item": {
          "id": "0a047a95-2a58-4e85-9029-65c691acd7b2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2eaad74e-68ce-47b0-853b-b44ad695aad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bedcc76-8b06-48ea-bec7-f24bba1912d6",
        "cursor": {
          "ref": "b9d1ec22-66c5-4ef5-aa55-115f60782e30",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c16d1f42-98e4-40dc-9960-d1567f4d9a91"
        },
        "item": {
          "id": "3bedcc76-8b06-48ea-bec7-f24bba1912d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d1874f7e-ed95-45be-856e-916958a24b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb64dced-5504-45d4-b196-4500b81f85ae",
        "cursor": {
          "ref": "d48f04b3-8600-4ed7-9ac5-04f5888ecc8b",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a262ae19-0252-43e7-8594-ec5040c2da5a"
        },
        "item": {
          "id": "cb64dced-5504-45d4-b196-4500b81f85ae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2f9f465b-b040-4061-9d32-5c7818981983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52e15bb-8349-4129-9741-972fcfa446ea",
        "cursor": {
          "ref": "fa4cf155-d83e-434f-8a52-3a63d7db341e",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6b78d7cb-b4df-49a6-b59e-777f76b995ef"
        },
        "item": {
          "id": "a52e15bb-8349-4129-9741-972fcfa446ea",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b82a3476-aa82-469a-97c0-38f05e137283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e761862-3354-4e37-bd3c-eae44a3b4b89",
        "cursor": {
          "ref": "b221a08d-dd73-4ae4-b4bf-8abdceced79d",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3a8b9ef0-f148-4f52-825b-6d0be777caf7"
        },
        "item": {
          "id": "0e761862-3354-4e37-bd3c-eae44a3b4b89",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "edcc656e-28e8-4570-ab93-eb8c79ce244e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5876b6-6a0b-40c5-a2b8-c5f38b60b39a",
        "cursor": {
          "ref": "d9182daa-bf5b-4194-84c5-adc1fd6fca8c",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "41193db0-57e9-4db4-ad2b-bb13e5f7bcea"
        },
        "item": {
          "id": "6b5876b6-6a0b-40c5-a2b8-c5f38b60b39a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9ec6ff2e-2ace-4d05-9721-89cbe45000d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323044f7-96ac-4e6f-a612-e04ea3422624",
        "cursor": {
          "ref": "dfc34963-e7db-4dd6-80db-236a5c5a2dac",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "85ddd1c8-49b4-4114-b91a-ad91791a91e4"
        },
        "item": {
          "id": "323044f7-96ac-4e6f-a612-e04ea3422624",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6b838917-375d-4df8-a08b-09c9cfa160ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a4c381-96ef-485c-9941-8dbb4f49a554",
        "cursor": {
          "ref": "aee107df-76ef-499a-a26a-01f8fb5a06c4",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "36d7091b-a78b-43d4-923b-4db4cf161ee3"
        },
        "item": {
          "id": "03a4c381-96ef-485c-9941-8dbb4f49a554",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3867cd4b-f042-4b1a-94d7-e4e31f5acfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9452386c-cf2c-4be8-9a3c-dd338fdc2aa6",
        "cursor": {
          "ref": "918cbedd-3c64-4f8b-9aca-618bb3cc224a",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a2b2266b-0ec3-4996-9b3f-2199e964b3c3"
        },
        "item": {
          "id": "9452386c-cf2c-4be8-9a3c-dd338fdc2aa6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fb5dd863-91b5-401a-a6ad-1385356739a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef031a0e-d633-4164-b29d-887d425fdc76",
        "cursor": {
          "ref": "94929d30-6ef4-46df-afd8-055b9a0e5e74",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "37cc47bd-2cc0-4b14-b902-51161b8a4773"
        },
        "item": {
          "id": "ef031a0e-d633-4164-b29d-887d425fdc76",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b8094da-a030-4481-90c0-cd92cdd065d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5320e9f2-fae3-44ec-8aad-34c4879c68a5",
        "cursor": {
          "ref": "975a28cb-7d0b-4da7-9d5a-c196c5ed65b4",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7c994cbd-00e5-4f5b-884c-2ad660b277a8"
        },
        "item": {
          "id": "5320e9f2-fae3-44ec-8aad-34c4879c68a5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "93dea583-7efb-4475-9280-44eb3b149b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82467de0-21bf-4bab-8edb-ae24459ef561",
        "cursor": {
          "ref": "663ababc-e0c7-4e89-9ff2-a52534240d33",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6a2c7144-a8f0-4236-a337-3540a4c90b5b"
        },
        "item": {
          "id": "82467de0-21bf-4bab-8edb-ae24459ef561",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2eaba31e-4d70-47db-ba1e-982396b5cb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b96263f-5abb-440d-bfbe-791edc51ac90",
        "cursor": {
          "ref": "4ab2a061-2ca4-490f-a432-70ca6436f53f",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7b8e21b-a34b-4467-885f-3f35bdacbcef"
        },
        "item": {
          "id": "0b96263f-5abb-440d-bfbe-791edc51ac90",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "13d8b84f-a69d-4e16-9dfa-d7b7eea69d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcb2c2d-9c6f-4ec0-a5fc-5b6076c88f89",
        "cursor": {
          "ref": "627e8877-7cb2-4c1d-b722-e2f3db7b1c2b",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e7ffc4f1-3b96-4cf1-893d-7975bf5b7754"
        },
        "item": {
          "id": "8fcb2c2d-9c6f-4ec0-a5fc-5b6076c88f89",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f65abd2c-1829-4535-b759-e2dd11b95bc6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 604,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b11922e-4c59-483a-b166-f8b0203fa7d1",
        "cursor": {
          "ref": "568449a9-0856-48f8-8e97-62d0c1c47031",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3947bef1-c6a8-4954-9521-f78b0811c4c9"
        },
        "item": {
          "id": "4b11922e-4c59-483a-b166-f8b0203fa7d1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b21012f5-8b1c-46c7-abc4-ab1a51d51cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7011f-4b06-49f4-afa4-53a14ced21c3",
        "cursor": {
          "ref": "a812cd2d-9ab8-4d23-b6b9-3173d5e2b50d",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6e7d7a31-701a-4dce-9fa9-3439d708f39a"
        },
        "item": {
          "id": "90b7011f-4b06-49f4-afa4-53a14ced21c3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2620e601-49ab-472d-944b-524b0e04a765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6888bc-f90a-4e03-bfba-9b52ec4c6944",
        "cursor": {
          "ref": "06d7f0a5-02bf-4805-9d91-8929ff207dc8",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1716cd37-4c14-4828-b32d-9b99f1e1870d"
        },
        "item": {
          "id": "fb6888bc-f90a-4e03-bfba-9b52ec4c6944",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3db76122-331b-41c8-a105-35e9e776ff0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f588a2e-b344-48f8-862a-2e00a5679006",
        "cursor": {
          "ref": "134882ef-c44a-44fb-bd20-09acbac6497a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1271b86b-64a6-4e23-8172-f7c603b3c9ba"
        },
        "item": {
          "id": "0f588a2e-b344-48f8-862a-2e00a5679006",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "817f8259-a2f3-4da3-b8d4-9f40c3f43f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e62a8c-ed3c-4433-9532-8b0dc5b04bfd",
        "cursor": {
          "ref": "74f9862f-ea5a-4003-ba76-062022017a3c",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2658afee-073a-4577-a4f0-03457b930a60"
        },
        "item": {
          "id": "18e62a8c-ed3c-4433-9532-8b0dc5b04bfd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3ce3d2d4-5b55-4e13-b76c-b3fcff76a0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4886221b-9c1c-4900-9c82-6292fdd67018",
        "cursor": {
          "ref": "8a956763-4dff-4425-8b05-7b25404b044f",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "edd19669-84c0-4c54-bf9c-4cc384a8814d"
        },
        "item": {
          "id": "4886221b-9c1c-4900-9c82-6292fdd67018",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1bc71708-c767-4bb8-a85c-c6c0a5ee23fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c4151-4bf9-4863-a796-53de6e9e521f",
        "cursor": {
          "ref": "0eb82cf3-3817-4d56-9c86-bfd215ad11c0",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6519c1e0-8bbc-4495-b9c3-f45da006033f"
        },
        "item": {
          "id": "b61c4151-4bf9-4863-a796-53de6e9e521f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "65d444e5-c495-4351-b316-bd44c6c17dff",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2daa110-f554-4399-a82b-52e8b6b502f1",
        "cursor": {
          "ref": "31e1b80e-88c7-454f-84b4-f0d90b06d860",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "abdcd4d0-3bff-483e-b5b0-901414fa370b"
        },
        "item": {
          "id": "d2daa110-f554-4399-a82b-52e8b6b502f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8a4156ab-1da9-46a0-9bc7-1e3ee5f4627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b361204a-bba3-4ac1-a67f-8e12ef438282",
        "cursor": {
          "ref": "408cb61d-3fe2-4e1a-9976-3b36cc97e7d3",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7790f42d-7473-4374-a5ff-5fa82989d88f"
        },
        "item": {
          "id": "b361204a-bba3-4ac1-a67f-8e12ef438282",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9f17ed1f-5764-49d4-bd27-533822268da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb3c21-bb9e-401f-b874-e6e893a9ff03",
        "cursor": {
          "ref": "64f4cc80-30c1-4ba8-8d84-dc7da4bb5c40",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "32c53277-8255-436a-808a-adabb4799095"
        },
        "item": {
          "id": "f9eb3c21-bb9e-401f-b874-e6e893a9ff03",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cfa0a4a3-d605-4ba6-87c4-354a320378a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e65f76-a6a2-4fb7-99f0-f9def066cce6",
        "cursor": {
          "ref": "9e480773-9921-41fd-9a5b-efa930ab7ef0",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a577570e-02fe-4870-a353-2782c314afff"
        },
        "item": {
          "id": "d7e65f76-a6a2-4fb7-99f0-f9def066cce6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "726d5055-ccf2-4956-a2ea-28b9d44b0eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258c3e7f-816c-43a7-b632-ae1ee62b9162",
        "cursor": {
          "ref": "d1785864-f4fd-461b-a59f-f1eee8e50581",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bdcde5f9-6636-48d7-9851-8d18c5d42d66"
        },
        "item": {
          "id": "258c3e7f-816c-43a7-b632-ae1ee62b9162",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ca248f69-e86b-4bf6-9e44-64b3eb916b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c10b3d-43e8-44c5-b1df-06cbd49e53c7",
        "cursor": {
          "ref": "3bfb6cbe-cd9e-4fab-9f7d-b039ab6c37e8",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9fe6e78a-ccf4-4651-9184-75eb70ff6a70"
        },
        "item": {
          "id": "a5c10b3d-43e8-44c5-b1df-06cbd49e53c7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3248d23f-fd37-40bb-b963-3a1c1ad01921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cadf4ee-20b5-4b1a-8db3-e6b34717a325",
        "cursor": {
          "ref": "c28ed9af-cb16-431f-8474-b71b6a5eff8c",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cf417fe8-e48b-4573-a810-951bef4ef8cc"
        },
        "item": {
          "id": "1cadf4ee-20b5-4b1a-8db3-e6b34717a325",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ec0855d2-6525-47e9-8804-99b67c6281b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b598b1-ee6b-4caf-ba0e-c8cd768e6b98",
        "cursor": {
          "ref": "763de64e-ea3f-4389-826c-30cce1923fd4",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "602f6aa5-1a3a-45ac-907c-ddf05bff9fc1"
        },
        "item": {
          "id": "58b598b1-ee6b-4caf-ba0e-c8cd768e6b98",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "70474201-3004-4ee3-8670-0f14832e4b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eac571-80aa-4216-9794-6bc65c35aa11",
        "cursor": {
          "ref": "b8cdbf5f-0ea1-41be-8b1c-4ac9f86ce611",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2980137e-7a54-4830-a702-4f43417398f1"
        },
        "item": {
          "id": "12eac571-80aa-4216-9794-6bc65c35aa11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "64fd3c1a-b673-40df-a14d-33955ad232ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee96027-04bf-453d-9702-7a7bad3de927",
        "cursor": {
          "ref": "16b4af57-effb-45bd-ac29-1a61dd786065",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "763d6701-67fd-4ed4-8155-7dc4787fc79f"
        },
        "item": {
          "id": "6ee96027-04bf-453d-9702-7a7bad3de927",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8de4d755-8230-4900-b751-03ce8375ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efda9b80-8027-45ba-9157-f1f5de205227",
        "cursor": {
          "ref": "3eb2232e-f4a2-4141-8d9e-32f0548b80a8",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f62bfe71-a2ea-4070-8931-477304673f9f"
        },
        "item": {
          "id": "efda9b80-8027-45ba-9157-f1f5de205227",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "31d9f375-d7ee-4a76-95a8-846fec8b7a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6329a86-6e90-4ddb-b602-c666b23d1908",
        "cursor": {
          "ref": "abde63ac-c43b-43cb-81e9-d6898421955c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "75fa1a1d-d019-4cb2-8eea-da8d33b1545f"
        },
        "item": {
          "id": "b6329a86-6e90-4ddb-b602-c666b23d1908",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ccefde7e-ffcc-4fbf-b023-d6b1e3d03903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c756d33-6e7e-44ba-a478-1f679a54bcae",
        "cursor": {
          "ref": "d53d0694-fce9-4cf8-9907-1b4557cdfb6a",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "438e5776-3d51-4031-80a4-10b976040c12"
        },
        "item": {
          "id": "1c756d33-6e7e-44ba-a478-1f679a54bcae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c9db4f9f-7481-4953-9990-292068728d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968ea64a-efd0-47de-b48f-356f22552331",
        "cursor": {
          "ref": "39ebc866-ff9c-4505-b841-fc8cfa396063",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "057c6428-11b7-4e9f-a140-f8e1d3090b25"
        },
        "item": {
          "id": "968ea64a-efd0-47de-b48f-356f22552331",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e2bc4478-76a2-4833-ac12-51e6185a5f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6517f684-85be-43a1-8c20-99c00ba0fd49",
        "cursor": {
          "ref": "52de49b4-598a-4f73-9816-e18c3c2cd83b",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "23c69dc7-85ff-4958-a81e-cee1454c6122"
        },
        "item": {
          "id": "6517f684-85be-43a1-8c20-99c00ba0fd49",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f37e0ec4-df19-4d06-85d4-76c7f6040cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426e7f47-4efa-4411-bce6-a098fb7cfb0b",
        "cursor": {
          "ref": "0e355d05-3c89-459d-ab24-2867586bb12c",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3241bd37-c992-4f9c-a465-69a1c54615bd"
        },
        "item": {
          "id": "426e7f47-4efa-4411-bce6-a098fb7cfb0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4f413e65-3911-434f-9fa3-0ccdbfadec85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25de0f8-1099-4f50-98d6-f5741cd959bf",
        "cursor": {
          "ref": "71fd3590-2f04-481c-abab-089fcfbf4092",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0a65a723-58e0-4270-8c31-767ff12974ab"
        },
        "item": {
          "id": "f25de0f8-1099-4f50-98d6-f5741cd959bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "da02f97e-0455-49db-a1aa-198aee32eb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ee6cb5-3828-4946-8782-7e61b94e4884",
        "cursor": {
          "ref": "5b60a7a2-fc4a-498b-a666-bb8f4077ec56",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "db350eca-3ab7-46d0-af63-50dda95b0b3d"
        },
        "item": {
          "id": "69ee6cb5-3828-4946-8782-7e61b94e4884",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d912b828-38a3-4a7b-9b52-f247079fb035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0129ff-c6ff-404c-8151-dafa848f3460",
        "cursor": {
          "ref": "53afbaf4-9fa6-4b5f-8854-d1ce0efea43a",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cee173e7-e22b-4b8e-952c-36e971eb0529"
        },
        "item": {
          "id": "cc0129ff-c6ff-404c-8151-dafa848f3460",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "17485d90-eb20-4c7b-883d-a4599a8dd363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd98a3e0-8a94-44e0-8e6b-44c44f74895d",
        "cursor": {
          "ref": "49be3656-6147-4af3-872c-08aec4a404c6",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b91a6e8a-8434-4dc6-9ba5-ccc52580d3d7"
        },
        "item": {
          "id": "cd98a3e0-8a94-44e0-8e6b-44c44f74895d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "71d65e24-5d19-4380-84d4-1af0c5449ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43055512-bdb3-4b13-910f-c3252a46af03",
        "cursor": {
          "ref": "06f2b233-d285-4697-adc9-857a25f8e36a",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "49345c8f-1544-493c-8cb0-c3f0ef294e9e"
        },
        "item": {
          "id": "43055512-bdb3-4b13-910f-c3252a46af03",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fea4fd26-3e0b-4108-bbd1-b7ac4ae9af8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcac8d19-99af-482a-801b-4589aa5bd7db",
        "cursor": {
          "ref": "6ea7f41e-cebc-4a12-8644-e8203929ce1a",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "59005ed5-a6fd-4566-a96d-378840e83713"
        },
        "item": {
          "id": "fcac8d19-99af-482a-801b-4589aa5bd7db",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "90694b4b-3883-4e75-858a-9de044b3b627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340c0789-9226-4d93-b931-ede30ad967de",
        "cursor": {
          "ref": "3cd10b7f-5a39-48a9-9691-2bcc3cb35ddd",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3c21e89a-c978-4457-b68e-32a8b0874038"
        },
        "item": {
          "id": "340c0789-9226-4d93-b931-ede30ad967de",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e4f2c8e7-aa42-4771-8c58-565c00a63df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b660271-e48e-45ae-994f-a8aeff83bb2a",
        "cursor": {
          "ref": "d8a85e2a-fc33-46d6-86db-750101a1c472",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "631d90d4-5cbf-43d7-8aac-632c18f6c3f5"
        },
        "item": {
          "id": "8b660271-e48e-45ae-994f-a8aeff83bb2a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "94113d02-5487-455d-980f-70f1576671e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5828f7-4108-4577-a33d-100d05e73424",
        "cursor": {
          "ref": "f2c69085-eae0-4561-8a28-c978b6482790",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dc3f50fb-1667-4f90-84c8-23f003b01897"
        },
        "item": {
          "id": "ae5828f7-4108-4577-a33d-100d05e73424",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a048ed65-abec-4149-b71a-d6283e36c1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed50973-0e91-4f22-9af3-af12316cd5c4",
        "cursor": {
          "ref": "10e8ab2c-f248-4241-81aa-6bbd5993cbdf",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "86a6bef1-8729-47cc-99a8-389a529575b9"
        },
        "item": {
          "id": "eed50973-0e91-4f22-9af3-af12316cd5c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "05bbdf5c-ace6-47f2-816b-e68c9acf294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8083811-2ee0-4c75-ba45-3cd001494bd8",
        "cursor": {
          "ref": "3a725d88-71cb-4341-a59e-ec3ccd7dc186",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cca04cae-a4c1-4199-960e-8a1455ee1af6"
        },
        "item": {
          "id": "c8083811-2ee0-4c75-ba45-3cd001494bd8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fde775ee-28dd-41f3-98ef-402d419a93e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02c6c38-09e4-4c35-8412-e2485f5f24df",
        "cursor": {
          "ref": "3f9deecb-2d9a-47b4-8b55-eac9145d28e6",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dd3dd78c-1c44-4ab0-a18d-7c2008042515"
        },
        "item": {
          "id": "f02c6c38-09e4-4c35-8412-e2485f5f24df",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "27e62b31-cad1-4688-be6e-932d57d959fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea72542b-5a8d-4007-add4-fc9ad57711bb",
        "cursor": {
          "ref": "1781c09b-4a61-45a2-b6e5-b5e2706ebd68",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "29572402-e388-4278-89ad-6f3e9bb11756"
        },
        "item": {
          "id": "ea72542b-5a8d-4007-add4-fc9ad57711bb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e7c97dbf-d997-4b8e-8a7e-d71dfb65c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c78c76-47f5-43dd-a3f0-c3983e296ea5",
        "cursor": {
          "ref": "69a26b96-4e8e-4d0c-bf46-a561b604d38a",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8e6d9206-c77f-4c62-bc2c-b053d7db7170"
        },
        "item": {
          "id": "13c78c76-47f5-43dd-a3f0-c3983e296ea5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7886d8bf-9416-46b2-900e-3a19c538f2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceb56e8-833c-4411-bcd7-d9ceaec0bfa0",
        "cursor": {
          "ref": "77f66668-d969-4e3e-b383-6dc9bd672413",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1c9f8ec4-2f69-45d3-bb67-ff1f5f7663f2"
        },
        "item": {
          "id": "dceb56e8-833c-4411-bcd7-d9ceaec0bfa0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6e1fa064-2226-4e66-bb86-d2c9e2169405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bcda8e-7b61-4853-b119-ac217ec018e3",
        "cursor": {
          "ref": "6690e052-8964-418d-b769-0ff5b8ed418f",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "da965909-e18a-4ff5-bf73-6ded84e1483e"
        },
        "item": {
          "id": "62bcda8e-7b61-4853-b119-ac217ec018e3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "072f6df0-d4c5-40fa-8695-95c42f4b77b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c30d99c-2ee2-4b46-acc1-d94ac7a18812",
        "cursor": {
          "ref": "0e1852c5-78cb-4453-a5f0-d767c142cf6f",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f333cf6d-3c3b-4c25-ad32-d9e4e3697db9"
        },
        "item": {
          "id": "0c30d99c-2ee2-4b46-acc1-d94ac7a18812",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d44bd313-7eee-4607-bbf3-3ce6d46d3b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a501919b-0ff4-4d4f-bc6c-96399754d17c",
        "cursor": {
          "ref": "ea6d0193-7548-4809-8de0-45682e2f6df9",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "94d61a5e-17ed-403b-ac5a-762d91e1b7ec"
        },
        "item": {
          "id": "a501919b-0ff4-4d4f-bc6c-96399754d17c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9d6dfa0a-f09c-41f1-88fb-f890bb5ee2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec32619-0529-4c31-8d6e-285f6e063088",
        "cursor": {
          "ref": "74da37da-37c6-4391-bd25-27b5fb04fee1",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "675e2abf-54b8-4d29-8e75-95e7bbcd0f8b"
        },
        "item": {
          "id": "aec32619-0529-4c31-8d6e-285f6e063088",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a81314bf-d797-4bc2-839b-b7c38ae233c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701f05c5-bcf6-4894-8699-36a7a9aa9279",
        "cursor": {
          "ref": "3ba23abb-49fc-480f-8aba-2f2688b5d494",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f7610732-3a37-4c54-aa53-07dcc16af14b"
        },
        "item": {
          "id": "701f05c5-bcf6-4894-8699-36a7a9aa9279",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2baa47f3-bac7-4847-a834-2847c91e7659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6ea544-8bc9-4908-8681-91108220f2a1",
        "cursor": {
          "ref": "585af0f9-2f7d-4dca-80cb-b73fb04c90c1",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5e8a4957-c280-4f62-9dfd-1e883d11e744"
        },
        "item": {
          "id": "6b6ea544-8bc9-4908-8681-91108220f2a1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "18d032bb-332f-4496-829b-3a93eb5c23e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b189e53f-ea7b-4f94-bf97-d62f22e6846a",
        "cursor": {
          "ref": "078c7194-326c-493a-bf77-b3828f0ee458",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f2c12905-ec14-478c-bbce-7a7dc1d81597"
        },
        "item": {
          "id": "b189e53f-ea7b-4f94-bf97-d62f22e6846a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "38950580-70fd-487c-be10-18c211eea2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97028a4d-a42f-41b8-8ce4-c81acf86204a",
        "cursor": {
          "ref": "5b2c37f6-5d15-4ced-bf7f-d180651574c9",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "06795f4d-1d24-4cd1-875e-440a9f64bd1b"
        },
        "item": {
          "id": "97028a4d-a42f-41b8-8ce4-c81acf86204a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4e76df92-2083-4db5-97a4-0293c77410e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe66a31b-40ec-4741-bf73-61a83753b21c",
        "cursor": {
          "ref": "cf97cc64-cecd-4a42-9446-16a9c461886c",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "387357bc-db73-41a8-a910-bc9d7f9bc2b8"
        },
        "item": {
          "id": "fe66a31b-40ec-4741-bf73-61a83753b21c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d455041e-8814-47b3-ae49-9023045c0cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd0d6cc-c920-4ab9-83d6-51ad2b92aa6e",
        "cursor": {
          "ref": "0a7607a3-e410-4c06-834f-6cc22be4272e",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b3ae6385-079a-4abb-8a41-c9c5ceee4a94"
        },
        "item": {
          "id": "9fd0d6cc-c920-4ab9-83d6-51ad2b92aa6e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d0f9eb41-6698-441b-b539-71c8785f23be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac92d764-86f7-4329-b1a9-1383d47b7972",
        "cursor": {
          "ref": "91558e10-2ffc-4350-bf17-fb74862c35ed",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ded957ec-0e17-4a22-9052-ee011c34a797"
        },
        "item": {
          "id": "ac92d764-86f7-4329-b1a9-1383d47b7972",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a0a31bb-11f9-4935-b2bc-9ab39089963d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48232f7a-462f-40d2-ba72-a67c6b5f0341",
        "cursor": {
          "ref": "680f621a-7420-4778-bc2a-72ce2d4a2976",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d30c01de-8f82-44b3-857b-70b37898323e"
        },
        "item": {
          "id": "48232f7a-462f-40d2-ba72-a67c6b5f0341",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "20026efc-9eaa-4a13-ae89-b818d4a6fb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a18caf-0a93-446f-a1e9-9e9be151a76f",
        "cursor": {
          "ref": "18bd68cb-2e14-44a0-a1c5-97e11e52fdb5",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "58f8a19d-90c0-4df2-a509-6bff9363d2ac"
        },
        "item": {
          "id": "f4a18caf-0a93-446f-a1e9-9e9be151a76f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "af27892a-bd58-41df-9d76-5512efc55754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219b9634-b8e8-4516-bad0-bcb9bc711ae5",
        "cursor": {
          "ref": "ea4f3ec1-4227-40f8-a2e8-ea0d1c1c2ad8",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f8a70030-f622-4cd6-99d5-803def83b3b9"
        },
        "item": {
          "id": "219b9634-b8e8-4516-bad0-bcb9bc711ae5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9a77bcd1-562e-4c95-93e7-95aca3dc4af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac54064-8b76-407b-b077-7ebb62bc1066",
        "cursor": {
          "ref": "ede1c721-c73c-45d0-bbcb-5d30976241b3",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0b0c50aa-aefc-4d05-8189-228ba541481a"
        },
        "item": {
          "id": "7ac54064-8b76-407b-b077-7ebb62bc1066",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "208a5e3a-bc3a-4f19-9753-2b2d899ccbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d8fef4-3d36-40bb-bf90-cf6f104adc6a",
        "cursor": {
          "ref": "8fa9e060-b6a7-4e46-9d00-cabbf19e3d17",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b6d7428c-fcc5-44f5-a8d1-a9cca100e56e"
        },
        "item": {
          "id": "54d8fef4-3d36-40bb-bf90-cf6f104adc6a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5403e9cc-150e-4fd8-960b-25897f3aa604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc1997c-1e55-40b7-8266-2685e982420f",
        "cursor": {
          "ref": "72752e74-80c0-45f8-9550-2f5c6a89b60b",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "56bddf42-a0d2-441c-9dd5-db3cd092da47"
        },
        "item": {
          "id": "6cc1997c-1e55-40b7-8266-2685e982420f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "20809b67-6f5f-45a1-bff3-b0c7569a0c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16c62d-283b-469e-9fb0-15cdad4ca52a",
        "cursor": {
          "ref": "45f476d8-7dc9-4a86-99d6-6fd0015cdc63",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "44a11c81-209f-4d18-a362-0813b88a19f3"
        },
        "item": {
          "id": "fc16c62d-283b-469e-9fb0-15cdad4ca52a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e8534473-5587-458f-b755-7f37abde70e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f9f5b-5c66-4660-918b-61f9f4088bb9",
        "cursor": {
          "ref": "8815d323-6b23-407b-a69c-993d2575ce0e",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0275762d-6524-4b48-8215-1d0a7cb4afd5"
        },
        "item": {
          "id": "bb4f9f5b-5c66-4660-918b-61f9f4088bb9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "14632bfe-6609-4002-9f40-bd0f80361737",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc2bf4f-5305-4454-9f1d-740a08124c9b",
        "cursor": {
          "ref": "c61e8b1e-20ed-4fa9-b504-29a3544428f1",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f0851a8c-141a-431d-96f0-9920faed8bd3"
        },
        "item": {
          "id": "4dc2bf4f-5305-4454-9f1d-740a08124c9b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d850eda0-f1d0-4ca8-a62e-a62b6fa0202a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4929735c-996a-457c-8ff8-865b1622d547",
        "cursor": {
          "ref": "58a73350-3d13-498b-a447-0d8ac9df7d33",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b4f6a057-af4a-4c49-b68c-56acd6191923"
        },
        "item": {
          "id": "4929735c-996a-457c-8ff8-865b1622d547",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f37e93f-773a-4461-8071-7b64a9d63467",
          "status": "Created",
          "code": 201,
          "responseTime": 3951,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "e5ee0217-ce30-4627-b05e-8ba3de5e6df0",
        "cursor": {
          "ref": "320895ea-455d-4267-9838-c98bff06e3e3",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "174be69c-beb2-46ea-b715-35ed0c3d4ea6"
        },
        "item": {
          "id": "e5ee0217-ce30-4627-b05e-8ba3de5e6df0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bbab1a5c-52c2-4db5-9675-12877e78f763",
          "status": "Created",
          "code": 201,
          "responseTime": 3595,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "0d2361fe-bf6e-4511-be25-532e58c5dd77",
        "cursor": {
          "ref": "d4571ae3-bb5c-477a-b32a-fab8ca6df1cf",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8f640fb4-5061-476d-bea7-f3a2cf6ba455"
        },
        "item": {
          "id": "0d2361fe-bf6e-4511-be25-532e58c5dd77",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7e769fcc-426e-47c9-9aa9-51dff9d70706",
          "status": "Created",
          "code": 201,
          "responseTime": 3615,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "c8114e27-94d9-4e1d-8db7-0a7e2d92b693",
        "cursor": {
          "ref": "e7fe88cf-7d6c-403d-8a97-871e5dbcf483",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eb51e3aa-9e33-44c9-91d9-7ecf15643725"
        },
        "item": {
          "id": "c8114e27-94d9-4e1d-8db7-0a7e2d92b693",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a9d789f2-c865-41f2-b474-bd106708b75e",
          "status": "Created",
          "code": 201,
          "responseTime": 3740,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "e4e66704-1652-4e58-8b65-a30689b6dc03",
        "cursor": {
          "ref": "a6919241-d0bf-4265-9976-88102a8b3229",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c5a2c84-dabb-4744-9c6a-73b426919131"
        },
        "item": {
          "id": "e4e66704-1652-4e58-8b65-a30689b6dc03",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "04173d3a-e3ac-47c2-9596-ba8837b2be5c",
          "status": "Created",
          "code": 201,
          "responseTime": 4720,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "ef922b0c-08df-47b4-825e-2d93a2316e68",
        "cursor": {
          "ref": "ab6f93ea-d0ff-4644-bbaa-4891345e7b44",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f2d5c108-8558-42b5-8be9-700c80620cd3"
        },
        "item": {
          "id": "ef922b0c-08df-47b4-825e-2d93a2316e68",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55c9771f-f5eb-4240-a235-a696a864978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef922b0c-08df-47b4-825e-2d93a2316e68",
        "cursor": {
          "ref": "ab6f93ea-d0ff-4644-bbaa-4891345e7b44",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f2d5c108-8558-42b5-8be9-700c80620cd3"
        },
        "item": {
          "id": "ef922b0c-08df-47b4-825e-2d93a2316e68",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55c9771f-f5eb-4240-a235-a696a864978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e8cb70-8413-4f58-b855-9e96775c9822",
        "cursor": {
          "ref": "bbe05310-b64a-4ad2-aae5-00c055bc562c",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "453bc9cc-70e3-4e3e-86bf-c1db42ddcec6"
        },
        "item": {
          "id": "67e8cb70-8413-4f58-b855-9e96775c9822",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dd34768e-5476-4c07-86b9-962eb11da667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7898b0b6-1134-40f0-9b3f-4d788d005b85",
        "cursor": {
          "ref": "8103ab05-44c7-44cb-a472-264b16c08f59",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f7e3121a-c245-4659-94db-c1a80eadea05"
        },
        "item": {
          "id": "7898b0b6-1134-40f0-9b3f-4d788d005b85",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56ba7558-668e-4748-a90a-24851f48febf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a0ff11-980f-4b51-a8e7-48896270a1d9",
        "cursor": {
          "ref": "73efaf46-704c-4a7f-8ad8-ce94b215ee7b",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4a3782d3-d7f7-4730-aad5-9c8421c57f76"
        },
        "item": {
          "id": "17a0ff11-980f-4b51-a8e7-48896270a1d9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a1b90ff-b930-4c6f-9e31-aef6ec4c08ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c888947f-1e3c-4c40-b522-acf008364179",
        "cursor": {
          "ref": "2a58ecb0-5865-4cf5-8dc3-5b7ad98d265c",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f0de8a49-b264-4725-b0af-b78de8e275b0"
        },
        "item": {
          "id": "c888947f-1e3c-4c40-b522-acf008364179",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "086bcbc4-6208-4980-a5bf-cd4372d700a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8409e142-b736-4655-b6b5-b62283dcb048",
        "cursor": {
          "ref": "55e1a5bb-78a5-431a-8376-9712fb48d06b",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1429be52-4095-4367-9096-af25e1613fa9"
        },
        "item": {
          "id": "8409e142-b736-4655-b6b5-b62283dcb048",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "84c5a8b7-240a-4c03-93dc-3e352f4217c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8891362-f669-40c1-8706-30dca52af0ff",
        "cursor": {
          "ref": "69245ec3-604d-4479-8ae7-b3de80f70c02",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f744b938-32b7-4b9a-b0ee-98a688c1ceb5"
        },
        "item": {
          "id": "a8891362-f669-40c1-8706-30dca52af0ff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30017d45-dfb2-42e0-b09a-f2b561dcee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a74f147-a731-42f7-b62e-7fe3e0fae207",
        "cursor": {
          "ref": "6864526a-3bcf-4e96-bf65-1b7d5d7bb02c",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "97b480c5-fed7-4901-bade-ea6eaddd8a56"
        },
        "item": {
          "id": "4a74f147-a731-42f7-b62e-7fe3e0fae207",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e2fcddce-e2f9-4b8b-b988-c6888a4246e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4557ed-7aac-4f9c-a793-b872772b1e8c",
        "cursor": {
          "ref": "31227a6f-0d3a-4a8c-9c01-8f0afead0e53",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "671bd471-0aca-4ccb-acd4-e7a3e16e78f3"
        },
        "item": {
          "id": "6e4557ed-7aac-4f9c-a793-b872772b1e8c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2444510f-d17f-4b16-9263-f970d8de01d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55ae576-4537-4c79-b6e5-36f26a3da606",
        "cursor": {
          "ref": "d5d6e47e-128c-4fb9-a8fd-0512754ebfd3",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cc5029cb-6633-43ff-bf25-313e2cc9778f"
        },
        "item": {
          "id": "a55ae576-4537-4c79-b6e5-36f26a3da606",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e4736e1d-30cd-4727-9694-e97ad254c8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfeb3ed-2639-486a-95ed-4a935466c624",
        "cursor": {
          "ref": "a202fb39-1188-4f49-8b5d-2601416ec3c9",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1813c0f6-5004-4f68-b4b9-b01a7acfc0b7"
        },
        "item": {
          "id": "fdfeb3ed-2639-486a-95ed-4a935466c624",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "13c07a49-c9c5-4907-ab8c-bc98c9e06107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64575798-daa5-4119-9820-c30e79cdefa2",
        "cursor": {
          "ref": "5b6ff811-5493-4d98-b41d-9ab110fc9132",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "00b1187f-c188-4fca-b935-d07cbd206b27"
        },
        "item": {
          "id": "64575798-daa5-4119-9820-c30e79cdefa2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aec5cbca-ee11-48d3-903f-78672a5792ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774b9a6d-9f9f-44e9-a289-3fb01d11cf3c",
        "cursor": {
          "ref": "1d72bba8-a685-4fbc-ba14-979314610a03",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "90756923-cc66-42a2-a23d-2cd0fc7c6e5b"
        },
        "item": {
          "id": "774b9a6d-9f9f-44e9-a289-3fb01d11cf3c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "141ee143-f1df-4565-bce2-49929ca3097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a018a95-3b67-495a-a08d-17f8b88e5ce8",
        "cursor": {
          "ref": "9f25675b-125b-4082-bd5d-2836cd3aa262",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7b9ff6d-bccb-4292-98b1-3b25663b8211"
        },
        "item": {
          "id": "6a018a95-3b67-495a-a08d-17f8b88e5ce8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1fc0fba9-39ad-434a-8c72-60d07f95a6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f27922-8677-484d-a1b6-f2319c5b7ef8",
        "cursor": {
          "ref": "509c30d0-46b6-4f13-8514-b29d886cfd9c",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4827f693-2b17-4c4a-bd03-3e5449ce1190"
        },
        "item": {
          "id": "16f27922-8677-484d-a1b6-f2319c5b7ef8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4e9adff5-a045-4bc7-86ad-9a9af8b35124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4a2c2d-5e41-440a-b3e3-466a4dc4a632",
        "cursor": {
          "ref": "81ba8adc-fe64-492b-87c9-36b302e61729",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d5ed64e1-f3ca-49b2-99af-74c02b89ae49"
        },
        "item": {
          "id": "ad4a2c2d-5e41-440a-b3e3-466a4dc4a632",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4836f164-7027-4dc1-989e-cbfaa1142b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8e4ba9-2cd9-4d72-9fc2-c343aa517abf",
        "cursor": {
          "ref": "c62ee9e0-83c2-45d7-9087-655ce597ab55",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3bd97992-3aa9-4432-bd84-0776d8ce9254"
        },
        "item": {
          "id": "4c8e4ba9-2cd9-4d72-9fc2-c343aa517abf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4c19a21c-4ff4-4319-b806-9999364597e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b98008c-35bf-4baa-981a-37997e1ecd58",
        "cursor": {
          "ref": "e2e503f9-67f7-416a-b0fe-dd0c6c51f2a1",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1af7df51-5e16-436d-9819-79af14d5c52c"
        },
        "item": {
          "id": "7b98008c-35bf-4baa-981a-37997e1ecd58",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3481b237-4ff0-4a56-8d0e-cd251792e8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7023c33c-1813-4140-9c4e-ce52d1fcebba",
        "cursor": {
          "ref": "eb1d2b67-dda2-46f0-86dd-f544c2e6b822",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "da9a936f-ad48-40b8-964d-a36c44793993"
        },
        "item": {
          "id": "7023c33c-1813-4140-9c4e-ce52d1fcebba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c156f2ab-e1b5-4998-886b-0e51a73691dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98178cb-e6c4-4502-b0ec-465e670b5f7b",
        "cursor": {
          "ref": "7b08afa0-20ba-42eb-8ac8-59c379e11e45",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fe91716f-cf2b-402d-bb15-6a3e9e00a41a"
        },
        "item": {
          "id": "d98178cb-e6c4-4502-b0ec-465e670b5f7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3fdb7b20-5068-4bd6-b128-7082e62dac17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92052ef4-803e-4e16-bd75-3c492d93c520",
        "cursor": {
          "ref": "25b93082-13d8-43ef-80a1-6fe118331463",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dbb9592b-6cd8-4348-87f8-af2ae087485c"
        },
        "item": {
          "id": "92052ef4-803e-4e16-bd75-3c492d93c520",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ad41b701-8689-44c9-a723-b2487e52208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319dcb6a-4214-41a1-980f-3d2742afdd7f",
        "cursor": {
          "ref": "fbe086a0-66fb-486b-9146-e33e58e6b055",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5cc96f92-d90e-4c77-a431-898fa33dbff2"
        },
        "item": {
          "id": "319dcb6a-4214-41a1-980f-3d2742afdd7f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "71fa8b07-6da7-47b0-b50c-9e5ae73fccdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589839ef-2dfa-4106-9d5c-42459fc6e03f",
        "cursor": {
          "ref": "70808012-c9c8-4894-ae80-179cefb0fec2",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ead921c9-c2a3-4355-b3ec-2dbf53361152"
        },
        "item": {
          "id": "589839ef-2dfa-4106-9d5c-42459fc6e03f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efda7aec-8989-4b65-a4a5-23551fb01958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1346060-26d0-45d6-904e-42efac8cc368",
        "cursor": {
          "ref": "059cfd56-3df3-45bf-bd29-eb49cd90efcd",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f7e1428b-1e1f-403c-b1ef-d5de627237f0"
        },
        "item": {
          "id": "d1346060-26d0-45d6-904e-42efac8cc368",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "818e0edf-384d-447f-b3e1-cc7fba02114e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2238c16-ec57-469a-b0ad-c1aef1b1a70b",
        "cursor": {
          "ref": "7f450c29-195d-4687-89d8-d69bab573149",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "79369f89-5f98-4ea3-ac10-9f23472a7dbf"
        },
        "item": {
          "id": "c2238c16-ec57-469a-b0ad-c1aef1b1a70b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "60bdee8f-7059-4f63-a3fc-9e2c227bdd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c81298e-552e-41ec-925c-45ebf8ab3afa",
        "cursor": {
          "ref": "fb853cc1-9f7c-4112-860a-f5172ca00b97",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fd2487c5-aaab-422a-852c-432d8662b912"
        },
        "item": {
          "id": "0c81298e-552e-41ec-925c-45ebf8ab3afa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3024c303-9dd8-4101-87f4-9012d45488c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a422a4-2742-4169-bcde-27199e4f11f6",
        "cursor": {
          "ref": "ad6eee8b-b39a-46bb-9fa6-f58046cbbf6c",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "80934432-c1aa-4f71-b527-c3cfb2f2b372"
        },
        "item": {
          "id": "18a422a4-2742-4169-bcde-27199e4f11f6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "632b3750-ec3e-4f03-8b2d-bfec964419c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca472c27-b5da-4fb5-9cf3-7b3aa4bc6da2",
        "cursor": {
          "ref": "28c5838a-8064-422a-8128-da0376881283",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "656befbc-6da4-4def-92e9-70dfbcf7fe3e"
        },
        "item": {
          "id": "ca472c27-b5da-4fb5-9cf3-7b3aa4bc6da2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "23afa921-80af-4b5a-ad1f-644c66f69acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f9b562-ca83-4e5a-9347-2bbc3307bbbd",
        "cursor": {
          "ref": "ee574a07-7bac-4528-9207-9f68f4f5c67c",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8cd59217-2722-40a6-9cc0-1f000bc470b7"
        },
        "item": {
          "id": "c3f9b562-ca83-4e5a-9347-2bbc3307bbbd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a2f2db6-7b0f-49b3-a74a-b01c2e6242a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff37082b-c29a-41d8-a22b-e6e61591ed53",
        "cursor": {
          "ref": "2c0d38e4-bfad-440b-ad4a-424942f76f82",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2c843944-c612-4aa6-9ce9-01f156649e45"
        },
        "item": {
          "id": "ff37082b-c29a-41d8-a22b-e6e61591ed53",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "22b8ced5-f43e-40c0-90ad-ca11e57e6d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126d6414-8597-42ae-87e5-bf55fe13dcc2",
        "cursor": {
          "ref": "97d5d2b4-e0ad-4572-b0ad-87575687a2b6",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e2636153-b3ce-42bf-a3a5-1138b4b3a7a8"
        },
        "item": {
          "id": "126d6414-8597-42ae-87e5-bf55fe13dcc2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7023fae7-4213-4b0e-9380-92421ac63290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87681876-ba43-4b1d-aeb2-8c7f7072321b",
        "cursor": {
          "ref": "d6ac69c1-8071-4ca5-a0b2-0b7bd0425de5",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a04e224e-e511-42f9-8051-d22c071ce2a0"
        },
        "item": {
          "id": "87681876-ba43-4b1d-aeb2-8c7f7072321b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9228340b-7d71-45cb-a04c-32a8a8719629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256a6cb0-c0ab-4163-ac20-cd14748b4490",
        "cursor": {
          "ref": "a5be9970-3398-4c83-bab2-5a9d0beb04db",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05372629-0197-406c-93ec-25227286a90e"
        },
        "item": {
          "id": "256a6cb0-c0ab-4163-ac20-cd14748b4490",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e852b59b-2c8c-4a47-a3a2-ebfb84116358",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4f1e83-ea11-457b-a4a3-8c4f028039bf",
        "cursor": {
          "ref": "1f39e2cb-ad0b-4e9c-b572-67e1b34f34cd",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "777dbe81-e6d0-430e-925c-5dd785cab7ec"
        },
        "item": {
          "id": "9e4f1e83-ea11-457b-a4a3-8c4f028039bf",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a373a968-e376-4f4e-8fbf-1ae28c0da1f3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eda2ec-20cc-466c-ac20-43ab461bdeb2",
        "cursor": {
          "ref": "c7e01e0a-9cfc-41b3-a3bd-31e2df6026c5",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "566b376a-1f17-4401-b4ef-4c3fcb19ce32"
        },
        "item": {
          "id": "e9eda2ec-20cc-466c-ac20-43ab461bdeb2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "733ba3cb-70ab-4cde-8edd-48306f76ef20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eda2ec-20cc-466c-ac20-43ab461bdeb2",
        "cursor": {
          "ref": "c7e01e0a-9cfc-41b3-a3bd-31e2df6026c5",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "566b376a-1f17-4401-b4ef-4c3fcb19ce32"
        },
        "item": {
          "id": "e9eda2ec-20cc-466c-ac20-43ab461bdeb2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "733ba3cb-70ab-4cde-8edd-48306f76ef20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37ac5cd-8c3c-4fde-b634-547457586f77",
        "cursor": {
          "ref": "136f3d0a-b828-498d-a4ce-3f58731a4081",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7867e320-66e9-4c0f-ba0f-1c677cf54b8e"
        },
        "item": {
          "id": "f37ac5cd-8c3c-4fde-b634-547457586f77",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7747d64c-abed-4614-96a6-d401cc2f40d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2794319-71ce-4db0-9314-d80affc2260c",
        "cursor": {
          "ref": "65fe5c68-2e73-44cc-aeed-ce96ca097952",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac88700a-acf6-4fbe-98b8-d3d38af9b298"
        },
        "item": {
          "id": "e2794319-71ce-4db0-9314-d80affc2260c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "884d3823-7536-49f2-b9d2-3ee3310cfb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e9022e-a09d-460d-b63d-e8ec55f22650",
        "cursor": {
          "ref": "1bd93365-5881-42ae-bf49-f395f18df558",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d76ea61a-6859-4182-81a8-d4d5ae368d3a"
        },
        "item": {
          "id": "e0e9022e-a09d-460d-b63d-e8ec55f22650",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8580efc6-2e8f-4002-9724-653871c7eb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e23f74-9bdb-463d-9de0-8ebc809798bb",
        "cursor": {
          "ref": "fee59642-e490-4c7e-96d1-8b2098f3cf23",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c04e1b87-2109-42b3-ab65-6d16cedd81b8"
        },
        "item": {
          "id": "d8e23f74-9bdb-463d-9de0-8ebc809798bb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f17a7d98-0770-47b9-adec-9cd19963039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac4014-f8ef-4394-917a-10f6ddefee9b",
        "cursor": {
          "ref": "475a0753-e634-4409-8f58-d582e1287282",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "680bb49c-30fd-4eb9-a827-609a0de46fad"
        },
        "item": {
          "id": "59ac4014-f8ef-4394-917a-10f6ddefee9b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "129b13d0-8310-44f1-8977-fafa60ddef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5575ea-2743-4fa7-8084-2c9059b820f2",
        "cursor": {
          "ref": "9acd2c52-7cfc-46c9-a5da-4cd1bd87123a",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6bc671cb-0b12-45aa-9c33-3ac9b01a9303"
        },
        "item": {
          "id": "cb5575ea-2743-4fa7-8084-2c9059b820f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e3ec5789-e82f-4538-abb9-eac0709e9eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f907be-a197-4059-82c4-92a24978f2cc",
        "cursor": {
          "ref": "aeeb4aa6-0e0d-4876-b2e7-7e6d0dd4174a",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "16a98acc-45c6-4033-8e9b-105b740386f6"
        },
        "item": {
          "id": "23f907be-a197-4059-82c4-92a24978f2cc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d5d8c39-d832-49cd-ba7c-6d5034ed0d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d67c294-83fa-466c-b369-50e617bf341d",
        "cursor": {
          "ref": "c8bdc1e9-ce41-4368-aea9-d9941b747c51",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "964b300d-646e-4846-81b4-6bf4ed7f3800"
        },
        "item": {
          "id": "6d67c294-83fa-466c-b369-50e617bf341d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "07c3aab6-5293-40b1-b29b-490543640f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d1aea-3719-4ae1-b5a1-d3045c5cdcac",
        "cursor": {
          "ref": "6065ce5b-ed68-4fd7-8984-42714f3034e7",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f09cba0e-81f3-4dbd-8400-3a9912b0928c"
        },
        "item": {
          "id": "fc2d1aea-3719-4ae1-b5a1-d3045c5cdcac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8716198d-7b37-4095-93cf-a6ee2dddfa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d2ac4a-b6a6-4a85-9cd8-f1ce444e7989",
        "cursor": {
          "ref": "939a64b5-6cba-4e1d-870c-356fafeb2904",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "abe849ff-dc05-4251-8e76-5f66363e24e6"
        },
        "item": {
          "id": "b6d2ac4a-b6a6-4a85-9cd8-f1ce444e7989",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "564a3d44-72a9-46c6-a30f-7b9ae0bd9f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aa6973-5005-4070-a7e1-e546a4c9dda7",
        "cursor": {
          "ref": "636d7480-1c7c-47ca-a16b-1dacb1821731",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "70e53057-607f-4770-8fa5-8e2152da70a9"
        },
        "item": {
          "id": "e0aa6973-5005-4070-a7e1-e546a4c9dda7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4d439c71-c645-4587-a959-5ab329c45f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349bfd8c-1ab1-4b46-817c-6c7f5973535d",
        "cursor": {
          "ref": "79edb045-113e-42f1-a5cc-63e0575aae37",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ca1399ff-2adf-4e9f-82cd-932fdf32b11c"
        },
        "item": {
          "id": "349bfd8c-1ab1-4b46-817c-6c7f5973535d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "320331fd-afd8-4aa8-b773-5f541b077f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39015620-f45f-4338-bfb8-bd1117deb8f3",
        "cursor": {
          "ref": "c3997c51-5b5b-4ac4-bc94-695705568c94",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2284574c-eeb7-43cf-9f26-3bdaa5151fc4"
        },
        "item": {
          "id": "39015620-f45f-4338-bfb8-bd1117deb8f3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f1e3c82c-3cfc-402d-8981-62d0de872d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c5f06a-f8b1-4de6-a7c7-f61f9671feb4",
        "cursor": {
          "ref": "8f91fb59-8f11-48be-865d-9cec1f6b774f",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "674aee56-49b3-4aab-ae65-6bcd24541ac4"
        },
        "item": {
          "id": "b5c5f06a-f8b1-4de6-a7c7-f61f9671feb4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "03fd45c6-a371-40d5-b7a5-6ce954a4c334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec6c160-fc8f-4efb-a144-5ef4643e4dc0",
        "cursor": {
          "ref": "cf9facad-d27b-4efc-8557-491963d0d174",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b625433-6258-48fa-a0cc-811ebb1620f8"
        },
        "item": {
          "id": "0ec6c160-fc8f-4efb-a144-5ef4643e4dc0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "19575a92-bb93-4050-8c99-70641705490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1fbe9b-c113-4dd9-8525-4e01218b5642",
        "cursor": {
          "ref": "9163a875-e542-4b10-b0b5-4cccd70030b5",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "49c10267-b29a-4933-b01c-b8898f607929"
        },
        "item": {
          "id": "9a1fbe9b-c113-4dd9-8525-4e01218b5642",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f2de436e-27b3-4978-8d90-a7f5a2d03542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126f3d0a-0f99-420f-880f-497c59d9fc93",
        "cursor": {
          "ref": "148ceb91-faed-4f20-91e1-62d991ba1f04",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7689af69-c877-4cfb-84dc-0b5acf72ddbb"
        },
        "item": {
          "id": "126f3d0a-0f99-420f-880f-497c59d9fc93",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "27cd4ba4-56ff-4f5d-b2e0-6c1d90fea4b9",
          "status": "OK",
          "code": 200,
          "responseTime": 3779,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "b4535f30-2cf9-44bf-a5ec-a1c906c1826c",
        "cursor": {
          "ref": "423bbbc2-46e2-4a9c-9e47-75f9df21ae2d",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "551b7bb2-d179-4e9d-a505-dfecee595a54"
        },
        "item": {
          "id": "b4535f30-2cf9-44bf-a5ec-a1c906c1826c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7b3f8600-2ff0-40c0-a3a6-a46a87537967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34631cd-2ce6-4d8f-aa53-486aa2516b1d",
        "cursor": {
          "ref": "c544f342-c01c-4629-a227-1882d64d79c0",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b807343b-db9d-4088-89c4-a56af05a4ac0"
        },
        "item": {
          "id": "a34631cd-2ce6-4d8f-aa53-486aa2516b1d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c0ba4a0b-9af0-4773-8025-7b918826855e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c3d6a9-8217-49df-97ad-6a005f390692",
        "cursor": {
          "ref": "deba5f58-9367-4a6f-8ee7-5fb2a727588b",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b90001a2-61b4-4e82-a025-546714edddf5"
        },
        "item": {
          "id": "d2c3d6a9-8217-49df-97ad-6a005f390692",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87f33b33-f903-4574-93bb-68c3dd0fb99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52694ef3-e511-43b0-9f55-ac5d743f3a1d",
        "cursor": {
          "ref": "e008dc19-2f08-47fe-b8e4-1c9afe74abc9",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ebbc0568-e8ff-4426-a16b-bf9ede412048"
        },
        "item": {
          "id": "52694ef3-e511-43b0-9f55-ac5d743f3a1d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8548cdd7-becc-4149-b3b3-217ae3cc05f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612e37e3-e1f9-43cc-9110-de6ed031bb2d",
        "cursor": {
          "ref": "b24efe6a-b5eb-405f-b089-e9516dd10b25",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "86712973-605d-4773-ad38-bef8c16340a8"
        },
        "item": {
          "id": "612e37e3-e1f9-43cc-9110-de6ed031bb2d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a1fc19f1-999a-4002-98a1-326e2cbbdb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b4f62f-d61f-4a97-937f-4636243efc2c",
        "cursor": {
          "ref": "e67ba3ec-ec75-4ffe-9e35-3ed3ddde0000",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f04c07c-985b-4d61-b61b-af8f59b34d80"
        },
        "item": {
          "id": "96b4f62f-d61f-4a97-937f-4636243efc2c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "29ce61f0-bcf5-4852-a105-3a986287cc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52bac81-2b2f-4564-a3b3-faa42b548c66",
        "cursor": {
          "ref": "8d4167d2-2f9e-4087-ace1-ee3b2aa4323f",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e127d090-da08-48df-83f1-1f77b8d54e2f"
        },
        "item": {
          "id": "b52bac81-2b2f-4564-a3b3-faa42b548c66",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "17b723c6-df6c-4f2a-9264-3b6cb59bfa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edfa8d9-e760-4c51-9693-1650250bb2c7",
        "cursor": {
          "ref": "6f0bb868-5fa1-44df-a5c3-43235ad49588",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e71e6c7-f616-4d3e-91dd-fca27d0ca2b1"
        },
        "item": {
          "id": "2edfa8d9-e760-4c51-9693-1650250bb2c7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee3d182e-aef8-4888-b088-71d86b412062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fe168f-bd4d-44e9-b174-29c300764ad8",
        "cursor": {
          "ref": "3d154260-f13c-4ed5-a81d-9641af4c5471",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57e4d329-4d7c-44a9-b026-064ae5aadf68"
        },
        "item": {
          "id": "c5fe168f-bd4d-44e9-b174-29c300764ad8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ebc4cca8-5ac0-4a67-a240-d0e4f152d65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c0c3b6-dd7a-462d-943d-548337d9402f",
        "cursor": {
          "ref": "f83e2bd3-43fc-4a12-8d91-432464c30bff",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2c63f931-a259-4e78-b10e-bb22e7d72492"
        },
        "item": {
          "id": "67c0c3b6-dd7a-462d-943d-548337d9402f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dc389bea-dbae-48f9-88c2-404b9fbd31d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175f8226-aa02-4001-92e6-bfc761d73732",
        "cursor": {
          "ref": "12748030-63d0-4df1-9fe1-a6c626759c3f",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3230008c-5b9f-4c4d-bebb-f6d2e5a0cccf"
        },
        "item": {
          "id": "175f8226-aa02-4001-92e6-bfc761d73732",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8df12e0d-8642-44d7-b53e-9c2851051298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaf9c1b-9cf5-4728-8e9d-92639cdafbdf",
        "cursor": {
          "ref": "7cfb6fed-41cd-42a3-beae-4d8f8750adaf",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "069bca9b-dd30-46eb-b6ae-d7758e3192fd"
        },
        "item": {
          "id": "5eaf9c1b-9cf5-4728-8e9d-92639cdafbdf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "775dfbde-421d-4763-bf5d-71778bec08b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc6e962-e4a6-4975-b566-bab050dc337c",
        "cursor": {
          "ref": "b4f0cd2d-4f51-43a4-b23a-d4c83d8523fd",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6ac20cc8-b96c-4157-99bd-55ec95262cbe"
        },
        "item": {
          "id": "8dc6e962-e4a6-4975-b566-bab050dc337c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "df333a22-d2fc-4510-a0d6-7defe2c380d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a72169e-34c3-4c90-98db-907c151177ef",
        "cursor": {
          "ref": "0211dfe7-fbe2-4af5-9190-c46bc2713c1d",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d010687d-132d-4267-ab05-25cfa67a1219"
        },
        "item": {
          "id": "4a72169e-34c3-4c90-98db-907c151177ef",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d48acd41-b442-4754-9446-ee4219745a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dc0975-3d9e-4092-bd44-06dfb3055619",
        "cursor": {
          "ref": "4e199e1f-64ad-4030-80e9-f035718956c3",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "826aafc0-ea67-4370-b3c8-f802511fc164"
        },
        "item": {
          "id": "d6dc0975-3d9e-4092-bd44-06dfb3055619",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "50cd1efc-d332-4222-a49d-71ecaf62d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1416a3-f34c-42e0-98ec-9c12f47e0c10",
        "cursor": {
          "ref": "81581756-2bce-4864-a686-3c94d194535a",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "93806732-e968-4877-ade4-eeee3558b188"
        },
        "item": {
          "id": "cb1416a3-f34c-42e0-98ec-9c12f47e0c10",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d244cc66-ed02-4892-88f4-d95f9a5e4bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3942fc57-a5b1-4061-9926-4b5761794fbf",
        "cursor": {
          "ref": "73350faf-6981-4fc6-b522-b9f3c2977b17",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7595b0d-3072-4d73-900d-217c86a2da75"
        },
        "item": {
          "id": "3942fc57-a5b1-4061-9926-4b5761794fbf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "76da9d83-e0cb-435c-82cc-389a2a950bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc368a6-2359-4e98-b485-739815106990",
        "cursor": {
          "ref": "3bfde70e-8f1b-4deb-93b0-61b988a6f2ef",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "86869090-b9b1-4a2a-9df5-6e08456e7211"
        },
        "item": {
          "id": "bfc368a6-2359-4e98-b485-739815106990",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0727ff68-d189-430b-b72b-3e14fdffec98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb64db5-6a22-4d0b-a304-aa9fa85fc9e3",
        "cursor": {
          "ref": "4b6dc8ac-f29e-476b-97d7-7b4f842ab5fc",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "04e048f5-d9a8-4355-bc4e-6899a8a2e098"
        },
        "item": {
          "id": "4eb64db5-6a22-4d0b-a304-aa9fa85fc9e3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "51bccad1-90ee-410e-94a2-1aa281277127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfa0917-856e-4c1f-b657-fd375271f60e",
        "cursor": {
          "ref": "3732b444-6c7f-4a8e-bcf6-6288df729bf1",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "450510be-b741-402b-80ba-65affa7dc42b"
        },
        "item": {
          "id": "ddfa0917-856e-4c1f-b657-fd375271f60e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "851fc057-afac-4d8d-8168-bdac241c2744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe03e599-6d01-4d30-acea-d2d1f3649fc3",
        "cursor": {
          "ref": "895469e4-9186-4d91-bf4c-35ea6947c596",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5dd6f00c-c070-4873-8229-5b8fd22cc931"
        },
        "item": {
          "id": "fe03e599-6d01-4d30-acea-d2d1f3649fc3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f4f6b6ab-c59d-4dd0-a82d-f58759d2c64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e0c02c-a0bb-4625-bf9a-e0ff212ee138",
        "cursor": {
          "ref": "ee6f117a-6a6e-4e30-9deb-50e01e9d2a4f",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0251a251-9972-4dbf-b705-3138bf567d5c"
        },
        "item": {
          "id": "71e0c02c-a0bb-4625-bf9a-e0ff212ee138",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c313cea9-57d3-4ecd-854b-617b27078e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a943d7-bc01-4018-b0db-648dd4d7032a",
        "cursor": {
          "ref": "6a3f160d-fa9d-42f2-8147-93bee32dc18a",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4dbfd225-8324-441c-84a0-75902fea2d03"
        },
        "item": {
          "id": "25a943d7-bc01-4018-b0db-648dd4d7032a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d6328a65-80be-43c6-a12a-f061bdfed9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed93aaf7-2561-4f8f-bc6e-df67fc73ab0e",
        "cursor": {
          "ref": "3ca64f10-71b1-4410-8a94-c82c4f0ecf5b",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c8bd5a07-6443-4dd1-b4e3-f5cb14cb4985"
        },
        "item": {
          "id": "ed93aaf7-2561-4f8f-bc6e-df67fc73ab0e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "081fc4fa-0e98-426c-bd18-6659a3e651cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c05c6b-8680-49de-96df-ba9e38f15220",
        "cursor": {
          "ref": "2b51c953-b4e0-4fb4-84b2-e2d6f155ef06",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5dff119d-a7a6-4fa6-81ae-37566a8a4249"
        },
        "item": {
          "id": "38c05c6b-8680-49de-96df-ba9e38f15220",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d08f5653-a278-4ec1-bb49-d1f251478315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900be50-80ef-4808-9bc3-c5fcff61f2ae",
        "cursor": {
          "ref": "76fc1f15-3dcd-4540-9c88-285b3d079a8c",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "71de471b-a434-4c9c-825b-2a434689e25a"
        },
        "item": {
          "id": "c900be50-80ef-4808-9bc3-c5fcff61f2ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d32802a7-0cc1-4c33-a19a-655b5a796d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704ddcf-40a5-433a-bd55-2afec18e62f3",
        "cursor": {
          "ref": "74a0c2a5-a467-4137-a342-1bdc02839cbc",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ce4a58b-683d-445f-be3c-0fc69da22731"
        },
        "item": {
          "id": "c704ddcf-40a5-433a-bd55-2afec18e62f3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "221258fa-c931-4629-bb0c-7da990382278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d56c41-05e2-4050-8293-3fbb6cd1d0fc",
        "cursor": {
          "ref": "e889c634-9505-4762-a601-c9000b8c1630",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3683836e-376e-4eb5-9f24-a319ab80bb39"
        },
        "item": {
          "id": "f8d56c41-05e2-4050-8293-3fbb6cd1d0fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7f0f57e1-00b0-4a5c-8334-4831bdf8b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a067466-d0c3-4081-be75-93b64bb95155",
        "cursor": {
          "ref": "a5e8ebb0-6054-476e-b890-8a1c187c37eb",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7334017a-e8af-4328-98a4-00a46a205b1c"
        },
        "item": {
          "id": "6a067466-d0c3-4081-be75-93b64bb95155",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9e2cf9f1-7def-40b3-8257-43dd8704fc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e73b6dd-2f41-4ff9-a05b-a88287a3680a",
        "cursor": {
          "ref": "28df7f3b-5851-44a1-81dd-aab4a65e9df7",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c3f4e26-ae7c-4edb-abc4-4dff8cf69634"
        },
        "item": {
          "id": "6e73b6dd-2f41-4ff9-a05b-a88287a3680a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e883f35e-bfba-4ae0-9bef-d00b2acf6996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ac7865-678f-4f01-bb2c-4ede0eb2d0d0",
        "cursor": {
          "ref": "8621a102-fb17-4e50-bb5d-a43aabb3cced",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3bf89e18-1338-402d-aa58-27df702a3332"
        },
        "item": {
          "id": "91ac7865-678f-4f01-bb2c-4ede0eb2d0d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b8074a0-8899-48f1-a199-6b97cbaa45e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e5074f-30ad-415a-8156-f93a30028661",
        "cursor": {
          "ref": "2c3e0547-4fc7-4b75-963a-2ee84d323820",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d24ca649-3a26-447c-919d-2069421729df"
        },
        "item": {
          "id": "06e5074f-30ad-415a-8156-f93a30028661",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ea095b0-38a7-4282-be7f-20eff82e6126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79f543b-d7e6-473d-898c-46edbacedcb8",
        "cursor": {
          "ref": "fc9a76bc-e4fb-44cf-8a1f-58d120fc8386",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e69daebc-482e-4634-a1cd-71cb73a82a6b"
        },
        "item": {
          "id": "f79f543b-d7e6-473d-898c-46edbacedcb8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "65f3a1c0-4b64-418c-9949-2e5afe12c3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b1fe0f-b2d9-4e18-85bb-22dee7305392",
        "cursor": {
          "ref": "38de3946-c0a4-4d61-bf8c-3a07b27a6f4a",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "90c92b8e-f119-42fb-b358-8dd4b786cdfe"
        },
        "item": {
          "id": "06b1fe0f-b2d9-4e18-85bb-22dee7305392",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eb7a73b4-57e4-4aae-b7db-d9347659126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e58dd0-dc84-4cac-a546-032ea394c339",
        "cursor": {
          "ref": "9427b139-fa08-4858-a788-bd3deb13e181",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7b9bbfa7-5a95-4940-a2e2-c58861ebd90a"
        },
        "item": {
          "id": "03e58dd0-dc84-4cac-a546-032ea394c339",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0c489027-a94d-4775-9d5a-b95444c7c2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b53914-eec4-4c6f-860a-26cd8bfb9956",
        "cursor": {
          "ref": "f52632b8-f9c7-45b9-9c35-a8b5c613b4a7",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "98d0a2c0-99a2-46d0-8d85-a165211f4d1f"
        },
        "item": {
          "id": "a3b53914-eec4-4c6f-860a-26cd8bfb9956",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9b2f5652-144f-418a-8253-79dcbbef3ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68876a0-a36d-499b-b184-77ab64e2902d",
        "cursor": {
          "ref": "ef2a841c-ffa8-4cad-ba2f-3a699eb9a127",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "361b5e0f-16e9-47a6-87f8-534c37153a8c"
        },
        "item": {
          "id": "d68876a0-a36d-499b-b184-77ab64e2902d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f0a71bdb-e0a5-4c89-a05c-4e6d32b47ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8005ca-6e41-4903-8ce6-71441ffc59d5",
        "cursor": {
          "ref": "0a346255-c275-403e-9865-07460c9549dd",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07e9b916-dec5-41fd-8ef5-9b8f6c7d20a9"
        },
        "item": {
          "id": "df8005ca-6e41-4903-8ce6-71441ffc59d5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d683fade-ca1b-46a0-b7f6-4ca171efd79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a806e6-21b2-4642-aa54-1bb1d6e9cbee",
        "cursor": {
          "ref": "02ee0c4e-2df5-4a10-83f3-bbb87b46d303",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1efc6984-d8a6-4ae8-9909-8edbe24dee34"
        },
        "item": {
          "id": "a9a806e6-21b2-4642-aa54-1bb1d6e9cbee",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b7806d4b-e286-434b-a5e8-c589b5c09be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d593cf-8b59-4cf0-a657-5e4e5e047217",
        "cursor": {
          "ref": "752390b4-6890-4960-8531-5c3efc154d71",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a52ed7c2-8838-4458-993a-8c9a5a601bfd"
        },
        "item": {
          "id": "a9d593cf-8b59-4cf0-a657-5e4e5e047217",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c114f199-fb5b-4257-8d21-d9cc0f7f650b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466d2048-1bfb-4968-b652-e73d6fd92f89",
        "cursor": {
          "ref": "afb08926-e495-40d9-82da-0172d79ac8f0",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7641332c-5304-4652-86ee-e0b159b471b2"
        },
        "item": {
          "id": "466d2048-1bfb-4968-b652-e73d6fd92f89",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "afb7e367-8a68-4fdb-802f-da2f674c97a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00673832-baa2-4034-85d2-9145b32df9ae",
        "cursor": {
          "ref": "5db766f1-2ff5-49b7-b89b-a0edaef541c4",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f3a922b1-1f92-4e64-8357-380b2e018c9b"
        },
        "item": {
          "id": "00673832-baa2-4034-85d2-9145b32df9ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff62a701-205a-40d8-99b4-a92103361af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a11f0c2-36ed-4d4c-a79e-e1f5bc648149",
        "cursor": {
          "ref": "3ccab00f-cb54-45bd-b7aa-0d3305a3f368",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bc17f402-fdc5-46d2-a9ac-c2abf65cd151"
        },
        "item": {
          "id": "2a11f0c2-36ed-4d4c-a79e-e1f5bc648149",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1530da49-139b-4b7b-bfa3-c356962b93ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357e6348-6f83-4584-9869-1e1b52948e78",
        "cursor": {
          "ref": "ee61fbb0-4085-44e0-b9da-8f571401b668",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "767df911-663d-4aab-94f2-923c0c87a528"
        },
        "item": {
          "id": "357e6348-6f83-4584-9869-1e1b52948e78",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "943db913-7f1f-49d0-8368-453249b6433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b818e0ae-6966-480b-aa1c-2f38122ed1d3",
        "cursor": {
          "ref": "d9093428-68f1-4cb2-8ed2-834ac57b1fc7",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d07ec617-2faf-4893-8882-6945fbf303c3"
        },
        "item": {
          "id": "b818e0ae-6966-480b-aa1c-2f38122ed1d3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1d7262d3-1a09-42ea-8852-7484b1e7de7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b3c96f-605b-4472-89df-2c7cdb572025",
        "cursor": {
          "ref": "5755ffbf-79ad-4176-af78-b2537eceaff7",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b8e5d310-0274-41a0-ac52-0ca04115b406"
        },
        "item": {
          "id": "78b3c96f-605b-4472-89df-2c7cdb572025",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b8a93bba-9b50-49de-bc6f-1ed249dad529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c16c35-15f5-4195-bfa3-fd8155edf2c9",
        "cursor": {
          "ref": "f52666ba-3e37-43d3-90a6-ea75827b2bdb",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0a35a143-898d-4e83-8f5e-fe96cc175ad7"
        },
        "item": {
          "id": "a6c16c35-15f5-4195-bfa3-fd8155edf2c9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f2bf6246-11aa-4600-b0fa-168cd6540daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc6ae76-0d53-43c8-bdcd-c70a96be2086",
        "cursor": {
          "ref": "1c439cca-c6f6-4b2f-b4fc-ce4f27690d87",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ab1a760a-6f2e-4e17-a59c-88c0664008cb"
        },
        "item": {
          "id": "6cc6ae76-0d53-43c8-bdcd-c70a96be2086",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0fcebf54-177b-426c-9a8e-8f553814e920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5617b6-21b8-4303-8716-725522d9a7dd",
        "cursor": {
          "ref": "3a515bff-dfea-45df-b85a-88f59464408a",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "79d087ae-46d8-431f-ba3b-b874bd758f30"
        },
        "item": {
          "id": "9c5617b6-21b8-4303-8716-725522d9a7dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e7edd28-4827-42fd-962e-afd6500f79ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df60afdb-01e5-43f4-853f-512f569837de",
        "cursor": {
          "ref": "77772127-622b-4573-a3c0-4606552a0ba8",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4a5bda71-9a65-4d2e-8f7c-c36d9df9eadb"
        },
        "item": {
          "id": "df60afdb-01e5-43f4-853f-512f569837de",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7a865fdc-f4ce-4ec8-b1b0-48754fb9bf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d227b-3091-4219-a1ff-24eef5f4d4ff",
        "cursor": {
          "ref": "8314db18-662f-4049-b383-bc5e37d873c8",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c7edcaf2-4c6d-43c9-a290-0ba338226df2"
        },
        "item": {
          "id": "f70d227b-3091-4219-a1ff-24eef5f4d4ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c678aac-3b10-45da-87d7-463f8c5a644b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cce6d62-69f9-450a-a812-f9ff02c5b532",
        "cursor": {
          "ref": "8ba4b904-51c1-45ba-87f9-7fabeb5f9345",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bafb493b-eaa4-49d6-ba16-c86b4372525e"
        },
        "item": {
          "id": "9cce6d62-69f9-450a-a812-f9ff02c5b532",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4dcb6333-d3ad-4cc0-99b0-dfa110a7aaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad9df6b-a4db-459f-9311-76ec6459a752",
        "cursor": {
          "ref": "85415c1f-70d7-4db4-8f04-6e8b198e3b6a",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1bff4534-9dfd-4974-ba11-65491a796903"
        },
        "item": {
          "id": "fad9df6b-a4db-459f-9311-76ec6459a752",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6115eb2c-b16c-4012-a97a-070859bcc87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98a73fc-26ba-444b-8e59-58557c0564c0",
        "cursor": {
          "ref": "6899592c-ab6f-447a-90f0-03a9f578dfb7",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "398a2513-c4c2-4ba5-acee-afda53bc1e29"
        },
        "item": {
          "id": "b98a73fc-26ba-444b-8e59-58557c0564c0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6d8710dc-a121-49c8-a3dd-61166a3b28e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89e16cd-d3fa-4a17-bcac-c07e67ed39b4",
        "cursor": {
          "ref": "5d851ec4-f7c4-4407-a4c0-8ba35dbfd1dc",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e048f175-9d76-490e-afca-38f5b8fa964e"
        },
        "item": {
          "id": "d89e16cd-d3fa-4a17-bcac-c07e67ed39b4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ece87a69-e95b-4813-9b85-46fbb0e49742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e781dafb-8858-4fcf-87f1-d246fd40258e",
        "cursor": {
          "ref": "5b051d02-e0e9-478e-8c66-612ace204808",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "efb2d010-9047-4215-957c-af8ee3961a0b"
        },
        "item": {
          "id": "e781dafb-8858-4fcf-87f1-d246fd40258e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3fd8bc7f-83b9-49c1-9d18-9a1c474249ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901c4e62-634d-4fc1-b278-d5b6f59e6221",
        "cursor": {
          "ref": "e0902c89-bea2-4ab0-8275-97fc84ac5171",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b123b9d3-807a-41aa-85f4-5d5c12f1c2d1"
        },
        "item": {
          "id": "901c4e62-634d-4fc1-b278-d5b6f59e6221",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c91637e1-33b2-4893-8bd6-86d869b3e69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ca9761-f890-453f-a2f2-757c83478f5d",
        "cursor": {
          "ref": "8762e579-7f8a-4ab3-b735-c321f00722b5",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9e866126-e116-423d-96d7-ea2cf27b9934"
        },
        "item": {
          "id": "d2ca9761-f890-453f-a2f2-757c83478f5d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "94103e6a-4d14-4fb6-8969-7a5832ef3ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2074b2b0-0dee-42a3-a9d1-17a97aaad069",
        "cursor": {
          "ref": "383f28ba-6760-48f2-ad8c-251f63cfeda5",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a162de3d-adc9-4880-9e74-dac1d27a9f22"
        },
        "item": {
          "id": "2074b2b0-0dee-42a3-a9d1-17a97aaad069",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eb0ebcbe-696c-41b3-8648-2aae7213179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c088c4e-56f3-4f3b-b66f-2e5f84584ccf",
        "cursor": {
          "ref": "9f63792a-6449-4804-8a50-89a9ee91ef8a",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a81453b2-26c2-44b1-8d07-dedab1a4e882"
        },
        "item": {
          "id": "7c088c4e-56f3-4f3b-b66f-2e5f84584ccf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ca9054fd-999e-430a-a4d8-ada15b746bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8b4a99-5f01-4196-a8e9-5f5efd87025f",
        "cursor": {
          "ref": "8c3490d9-fa97-4c3e-9eea-7222486b1a27",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8ddfcc49-090e-424e-9671-67193c3e3255"
        },
        "item": {
          "id": "ee8b4a99-5f01-4196-a8e9-5f5efd87025f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "846b3b86-eb50-4d53-888e-b4eaeab2dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee66d004-cdb7-41f1-bf74-bfaf5f7c46ad",
        "cursor": {
          "ref": "191bc7ff-4285-41fa-8cdb-e198e2cdfce5",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "98aebcb4-122d-4a48-891e-d639b4410512"
        },
        "item": {
          "id": "ee66d004-cdb7-41f1-bf74-bfaf5f7c46ad",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7db99f28-89c6-477f-8684-bd8f56502cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8891f5e7-5b8a-4776-b985-a35918723c42",
        "cursor": {
          "ref": "c89f7ecb-e684-4183-902e-74cef1b72967",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2fa5f6fb-de90-48ee-9486-54f508ea8a40"
        },
        "item": {
          "id": "8891f5e7-5b8a-4776-b985-a35918723c42",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d034504-ca9b-41de-bd9f-da69326f73d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168338a1-21b0-43dc-89ab-376528597843",
        "cursor": {
          "ref": "4338f2c4-20da-4aa2-8a59-8c759e3f4874",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7563024c-5d39-4786-b228-c16890879bb2"
        },
        "item": {
          "id": "168338a1-21b0-43dc-89ab-376528597843",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c51a5868-d587-488c-9dd7-8496eba75ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d373cb1-c86a-4e68-b69f-2b4bbb3c9090",
        "cursor": {
          "ref": "8eb5c513-dd63-4377-9f24-6e7366c407ac",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6c3a57d-d878-46e8-9577-ef76042b67ec"
        },
        "item": {
          "id": "9d373cb1-c86a-4e68-b69f-2b4bbb3c9090",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d647847c-c39b-4d79-af24-0ebd13a50bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db64b29-2bfc-496b-9cdd-4e5d4958b5dd",
        "cursor": {
          "ref": "8e9a01ad-f6da-4203-a8b5-5da13c0b0ad7",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ab7f4255-7fe9-45b8-823e-39e5ef85ba6b"
        },
        "item": {
          "id": "1db64b29-2bfc-496b-9cdd-4e5d4958b5dd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "268fa425-7876-4f90-9db2-5f760f2a3d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ed33e1-9b98-4d84-aa54-619cb87c3fda",
        "cursor": {
          "ref": "9c9ebbb7-8470-4842-ae39-15f247edf1f1",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5bc58916-dd03-43c8-9b26-72b31036be56"
        },
        "item": {
          "id": "51ed33e1-9b98-4d84-aa54-619cb87c3fda",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cf3300ca-fa74-4135-9970-73557ef893c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0b8f09-daef-4590-b26c-5d787a7aecdb",
        "cursor": {
          "ref": "5b9d4d1f-ad8a-4e99-9197-4919a0dbece5",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f9e1ff25-3066-4e92-beb6-9bb321bade54"
        },
        "item": {
          "id": "2d0b8f09-daef-4590-b26c-5d787a7aecdb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "25d5408f-500f-4ef0-bcaf-2a072d7e0df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cafb374-04af-4598-b11e-4279db98339c",
        "cursor": {
          "ref": "09cdb376-68b8-4335-802e-8cc805650d57",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a7b0bc5e-2e95-48da-926d-e181d0e256bc"
        },
        "item": {
          "id": "4cafb374-04af-4598-b11e-4279db98339c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "368689c2-219c-41f4-980d-fedfbb0ae588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d6c07f-5a2e-465b-beec-e45288e9fbfb",
        "cursor": {
          "ref": "201be87e-ac8f-48ad-815f-2eaffba6095c",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a23447bf-71f2-467d-b446-49dad09ea4a7"
        },
        "item": {
          "id": "f3d6c07f-5a2e-465b-beec-e45288e9fbfb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "13bb9124-f8d4-4259-b764-eb9372c15508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d557d2f-1370-419a-a555-b5e6bc1deefb",
        "cursor": {
          "ref": "705f8728-a762-4e39-b98a-7c59682364be",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b1b6554d-663b-4286-baf9-628cfb2286ab"
        },
        "item": {
          "id": "6d557d2f-1370-419a-a555-b5e6bc1deefb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c5b4eb98-b829-4bb4-8bd8-0d485cefefbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3abe85f-4e93-453b-af12-efb02bdd4a50",
        "cursor": {
          "ref": "6150e72d-8af9-434a-b958-c3f8401ae26e",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2d6de83c-6849-4ba7-968d-e4d140a18da4"
        },
        "item": {
          "id": "e3abe85f-4e93-453b-af12-efb02bdd4a50",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "999a74c5-9db2-4d8c-ab9e-418691a1d7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fc9bfc-3913-4bdd-a0aa-7d4586064ed8",
        "cursor": {
          "ref": "bb786a2f-5984-4d2b-873a-e8c2f77fffc2",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "07151165-97bb-45db-80df-e0c41bba9554"
        },
        "item": {
          "id": "b1fc9bfc-3913-4bdd-a0aa-7d4586064ed8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6cf4fc33-d66b-4e45-9377-00235b3b33ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a509b819-4bca-4e72-98bd-a0bdad460d4b",
        "cursor": {
          "ref": "7ea6ac88-76a2-4539-b054-9367715e4806",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eaf50801-c16b-4ead-bf66-ee58aa1a43be"
        },
        "item": {
          "id": "a509b819-4bca-4e72-98bd-a0bdad460d4b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "01715b3f-4a05-440d-abf7-8a487acb4259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a34e09e-55f4-4a63-a8c0-6f7603112619",
        "cursor": {
          "ref": "d20c0705-42ec-4681-9110-82d15ab609dd",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "70925178-6434-4400-8dd0-414406d5fcbf"
        },
        "item": {
          "id": "9a34e09e-55f4-4a63-a8c0-6f7603112619",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "867dcb0e-c5a9-4c3e-aee7-5c9e808caa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d80f9f-8870-4b2c-8365-8b2ac9045903",
        "cursor": {
          "ref": "4568ec40-a6b7-4cc3-92aa-656433abf914",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c16c08fe-801d-4631-a92c-e6bd86b1c2f4"
        },
        "item": {
          "id": "d0d80f9f-8870-4b2c-8365-8b2ac9045903",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c8f58f67-c4f4-40e7-985e-fc9c955bfa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b2aa9d-f8ca-455e-8d85-f4ebb569cff8",
        "cursor": {
          "ref": "39c73c20-f43a-4178-975b-05a387a080a1",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c4c86c21-4d6f-4874-8cc9-259d0cc7e747"
        },
        "item": {
          "id": "f1b2aa9d-f8ca-455e-8d85-f4ebb569cff8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "96b71c27-2629-4d4c-b80e-65304f098da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c8fc43-6f3d-40bc-a777-78dc361d9555",
        "cursor": {
          "ref": "292feae0-7173-4921-9137-216b1c26a9ff",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0d29d218-1737-4bc3-815e-69990a53cc32"
        },
        "item": {
          "id": "26c8fc43-6f3d-40bc-a777-78dc361d9555",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2760b565-c465-4741-9c44-c4f1e1e056d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9831e1e3-4221-489b-85b0-71d1b40b7e94",
        "cursor": {
          "ref": "07cff86b-66ce-467d-909d-c62bcdfeac5f",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f478cf9c-a192-4c6b-91ae-3ec138dba1b1"
        },
        "item": {
          "id": "9831e1e3-4221-489b-85b0-71d1b40b7e94",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "008e3455-0954-4cb2-8b76-69379f8b180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d120988d-8eb1-46c2-8482-6864c014301a",
        "cursor": {
          "ref": "8a93f19b-4611-40c3-86a7-54b487a0f6f5",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "450f9805-292e-4235-acd0-750ebf165947"
        },
        "item": {
          "id": "d120988d-8eb1-46c2-8482-6864c014301a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bc62db30-29a9-45e0-aa38-61b8fc5eaa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2bb24b-537e-460d-bd14-df7a3e32364a",
        "cursor": {
          "ref": "0ffa6a13-8e6c-491f-a52c-1ac2e9ac5c2b",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a824b133-0654-463d-82af-2a98f0024d1c"
        },
        "item": {
          "id": "6e2bb24b-537e-460d-bd14-df7a3e32364a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9185d7ca-1804-4984-93e9-5c57c4db4fff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498146b0-e822-4eb2-9cf8-11a46453a33f",
        "cursor": {
          "ref": "17487171-96b9-4706-8e78-db96fd3009d5",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "24f6b5aa-cc40-484e-b1b7-168bcf89d4e3"
        },
        "item": {
          "id": "498146b0-e822-4eb2-9cf8-11a46453a33f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1fe27255-2416-4359-a566-dd0b20d89428",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 351,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0118ff1a-4759-46d3-b83a-53dbdbab2866",
        "cursor": {
          "ref": "00905187-fb2e-46bb-8a73-6bb272efef71",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63567c69-eb31-49ac-9207-853827e2f4fd"
        },
        "item": {
          "id": "0118ff1a-4759-46d3-b83a-53dbdbab2866",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0a80d61b-a2d6-42c4-88f7-2724a0728395",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aefd2c-d001-4201-8e04-c699aa7dc0e6",
        "cursor": {
          "ref": "4ee1341c-6e83-4bd1-b9b2-6e6cbe20ffb2",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2e6e9322-9d72-4355-9f9c-f35edd6a939c"
        },
        "item": {
          "id": "76aefd2c-d001-4201-8e04-c699aa7dc0e6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9f96db8-6fb2-4e22-8736-68e48053431d",
          "status": "OK",
          "code": 200,
          "responseTime": 3506,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0c73f4-8b8a-4042-ab05-26e5566445d7",
        "cursor": {
          "ref": "1db43eff-cca5-4ca8-87a9-7cd684f3765f",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c7d9b34-90a9-4dad-9620-a2a09de2bcb1"
        },
        "item": {
          "id": "db0c73f4-8b8a-4042-ab05-26e5566445d7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6d5b6f60-ac5f-4afc-bf6a-8d5e75802b68",
          "status": "OK",
          "code": 200,
          "responseTime": 3414,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
        "cursor": {
          "ref": "a0f7a0d6-e84d-4d96-af29-005b09003279",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3e6fcc32-739a-40d4-a090-b36fccc5c511"
        },
        "item": {
          "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "92fdfd22-0888-4725-9d53-f80158f2a533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
        "cursor": {
          "ref": "a0f7a0d6-e84d-4d96-af29-005b09003279",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3e6fcc32-739a-40d4-a090-b36fccc5c511"
        },
        "item": {
          "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "92fdfd22-0888-4725-9d53-f80158f2a533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
        "cursor": {
          "ref": "a0f7a0d6-e84d-4d96-af29-005b09003279",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3e6fcc32-739a-40d4-a090-b36fccc5c511"
        },
        "item": {
          "id": "318e6ce1-e774-4764-82c7-e5c41f006fbf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "92fdfd22-0888-4725-9d53-f80158f2a533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d92b19-a987-462c-a8d0-500f74a2340e",
        "cursor": {
          "ref": "dc0c9c35-8c76-4c4d-851e-e52c04cb9f17",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6f911437-7634-442b-8d82-742a829877c4"
        },
        "item": {
          "id": "20d92b19-a987-462c-a8d0-500f74a2340e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7eddd428-001e-4a78-8aef-5b7cc2b0d939",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 366,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58d562-b252-40c2-9216-a4f8127784f1",
        "cursor": {
          "ref": "12a03cea-11f1-4da7-a0b2-9f2cc5e53364",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7293c811-9fae-4332-b263-a93947f958d9"
        },
        "item": {
          "id": "ce58d562-b252-40c2-9216-a4f8127784f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c1a023db-a331-46be-87f0-4c7977d632c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58d562-b252-40c2-9216-a4f8127784f1",
        "cursor": {
          "ref": "12a03cea-11f1-4da7-a0b2-9f2cc5e53364",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7293c811-9fae-4332-b263-a93947f958d9"
        },
        "item": {
          "id": "ce58d562-b252-40c2-9216-a4f8127784f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c1a023db-a331-46be-87f0-4c7977d632c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bc9a9f-7827-4169-8177-85f84fdee377",
        "cursor": {
          "ref": "4fbf7cce-8036-4a62-9aca-03799d7e36ee",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6fbdcaba-a67b-4990-a83b-a5aaf435cb7b"
        },
        "item": {
          "id": "56bc9a9f-7827-4169-8177-85f84fdee377",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d6deed7f-bfa9-427f-b563-71b6d35b5b91",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2b5ab-d707-4670-a16a-596f5ef2f704",
        "cursor": {
          "ref": "93b3ff07-f845-4e39-9584-99add8d423bc",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5a7fba48-a57d-4b56-8e2c-7247fdf53a13"
        },
        "item": {
          "id": "5ed2b5ab-d707-4670-a16a-596f5ef2f704",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ec1779e1-3a81-4f2a-a2d2-0fcdac51e741",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2b5ab-d707-4670-a16a-596f5ef2f704",
        "cursor": {
          "ref": "93b3ff07-f845-4e39-9584-99add8d423bc",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5a7fba48-a57d-4b56-8e2c-7247fdf53a13"
        },
        "item": {
          "id": "5ed2b5ab-d707-4670-a16a-596f5ef2f704",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ec1779e1-3a81-4f2a-a2d2-0fcdac51e741",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522225eb-7ce2-4924-8530-a1ff8a43001d",
        "cursor": {
          "ref": "6e9c66bf-75ef-4bfd-8e65-1288b1a2f0df",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2a77b52b-84a9-4b4d-b6c0-5a8152552e1a"
        },
        "item": {
          "id": "522225eb-7ce2-4924-8530-a1ff8a43001d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8cd98f33-21ad-48eb-a731-7e9aa6cecec2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 553,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}