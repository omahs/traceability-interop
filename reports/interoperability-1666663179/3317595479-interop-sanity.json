{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3ca70ac0-74ce-41a2-b244-c4e889273d54",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "347ea8a0-907a-4f76-94ba-c4343335cc85",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "a2f9b18e-db34-4ec8-bf6e-dc169fd4d841"
            }
          }
        ]
      },
      {
        "id": "50cc75a6-7a18-4448-a34a-ef5c8d355fac",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"{{$isoTimestamp}}\",\n    \"credentialSubject\": {\n        \"id\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n    }\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "252843b0-066e-46de-9ee9-707a1f8e9224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c69ee846-8f60-4842-8230-04502ffb09b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85fbd70d-5a4e-4916-bf51-6e12dd275638",
              "type": "text/javascript",
              "exec": [
                "const verifiableCredential = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "247d9eee-2464-4146-a6d3-d5ebbfb5fb5c"
            }
          }
        ]
      },
      {
        "id": "ffde8e80-c88d-4590-be4f-925039df077e",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fbd03930-e485-459a-9ebd-f492a9e3cb7b",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "37c6e0c9-a2c0-45f5-b44d-9d844cef2150"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2474.3333333333335,
      "responseMin": 411,
      "responseMax": 5635,
      "responseSd": 2269.4565183957347,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1666662987574,
      "completed": 1666662995064
    },
    "executions": [
      {
        "id": "3ca70ac0-74ce-41a2-b244-c4e889273d54",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b77a5a83-c6e8-4373-8ca4-5655730bf597",
          "httpRequestId": "3706a56a-eadc-4a90-a69d-118b79adc39a"
        },
        "item": {
          "id": "3ca70ac0-74ce-41a2-b244-c4e889273d54",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "18a234ce-dbda-4d46-965a-11f2094e94a5",
          "status": "OK",
          "code": 200,
          "responseTime": 5635,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc75a6-7a18-4448-a34a-ef5c8d355fac",
        "cursor": {
          "ref": "ee9c6829-16ce-407f-89d0-f1cd8503d107",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b5a42d5e-09e2-47d1-ba89-740217083552"
        },
        "item": {
          "id": "50cc75a6-7a18-4448-a34a-ef5c8d355fac",
          "name": "Issue Credential"
        },
        "response": {
          "id": "aff76835-8bd8-420c-9fc4-0d2fff4fba87",
          "status": "Created",
          "code": 201,
          "responseTime": 1377,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffde8e80-c88d-4590-be4f-925039df077e",
        "cursor": {
          "ref": "942297f6-deba-4777-afed-2ad85139b8d5",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "15f36e9e-4f67-4a63-b65f-a16b905ef701"
        },
        "item": {
          "id": "ffde8e80-c88d-4590-be4f-925039df077e",
          "name": "Verify Credential"
        },
        "response": {
          "id": "543fffc6-3aa9-4b58-95d1-17a6fc0f31ce",
          "status": "OK",
          "code": 200,
          "responseTime": 411,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}