{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8ab2c2b3-3644-4e78-8eba-c5c25291ac9f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e9df2e7a-f651-4bd9-9abd-a9dd06672a22",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d9b1100-0f6d-48f3-8c7f-04e39e42e741",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0f7704c-f36d-4f01-9410-ee6d16bd2c38"
                }
              }
            ]
          },
          {
            "id": "30dbe9d6-ec89-405c-9625-f4f186a7057b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07afa19b-7210-463e-8285-3547a1b7919b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19c7de6b-89db-4d8f-9484-8e8d01de44a9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "930be46a-1292-4b7d-a1ba-f678062e4db1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "96575b53-905e-4872-b082-22acb5f960c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18fcf6b5-5acd-4f3a-b17f-ed5183675c3e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c7248cb-5271-458d-bbc4-2b258c0b1a9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c807ea6e-71a5-49f4-9252-b89d957b0fba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "516f9898-77d1-4a20-86d0-ffb0e31ff2f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c047222-fbc0-437b-9a77-0893c56e18df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc7a9905-39f9-43e6-8dac-f4fa356697c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47e71965-6690-4e74-a0a7-baa2b52dd4d6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acad9b4f-fc0e-4df7-8fe4-7f05147ac141",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "204f3754-f512-48db-85ee-78e65c0151bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd045475-4091-4983-a97d-3ce2006357b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25f02391-ffa5-456b-bba9-a7b42f8e916b"
            }
          }
        ]
      },
      {
        "id": "29866473-224f-4880-af5d-47626cd35356",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3723e143-d4be-4460-9a4d-243bf3c42324",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f67895c8-eb32-4f54-91d2-8e127c4e2477",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81ae5966-6078-4dc0-aa46-f4ed5da824c8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bf88a7-5a6c-4243-bf81-e46e209db948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47333bee-3f45-45a0-9a20-52ebcaa9bf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263f2832-7412-4984-9ad4-93f47f1151b1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d91be3e-3ace-4737-9195-737cf321856b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9485d330-8c11-4bb7-a76d-8a0ed39de9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f240a6f-40a6-4895-b9fe-aef9449a97c7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac8533f-6667-4e88-be8f-2b7070a91658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d4d7c9e-af4f-4e87-8606-63e3e4846952"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "147b9b2f-c008-4f5c-b0f7-bea39aab2665",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57aae935-d9ef-436e-8d8d-8a3c0f932a73",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480a4f36-9952-40b6-910d-3ee362e6d792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f34e0532-4883-4a78-83e2-064adadf278f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9426040-5fbe-4a83-ba48-44411155933e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a86aa9-3167-4cb8-9a7b-ca81113e9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d09cf2a-6bab-4bb1-bf22-86d1b406dac4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481d41ce-d18d-4fc3-84d8-620ee1162ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc7f7979-1c54-4655-b1df-3651b3ed53e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a38067-ca73-463a-aaac-b814d6bb7d2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7cb19281-d7a9-4c4f-81b3-4c7c92fc8f06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fb1c2033-6d13-4ca8-b0e5-83225b7c8902",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f6ab0d7-92c6-4939-a910-7b9fb9075929",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c25fa7cd-eb74-4d47-baf8-46a72221a5cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c519487a-1159-4234-a1ad-55294d0b21bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ec5560d-11e9-437a-9638-faa50ca99e22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d39c1da4-eac1-4c9e-b85b-15a133a4b829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e50e500e-b34e-491c-9ab3-fda8afd4162a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f5fdc51-3e28-4cf8-88d3-8c093748229f"
            }
          }
        ]
      },
      {
        "id": "545c9070-89e6-4900-b726-0a478cf8af7b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3d73c805-e382-4438-87ed-3adf2d3a1407",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e2e3ac2-bbea-486e-b4c3-179d237c125c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "571757c8-d397-4b02-baef-7ae4f8a19eca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fcf8d5-b017-4d65-9322-e39ba7d86f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c28e90-81fb-4ab0-a2a6-2d01aaa909b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f247a69-4ddc-4f53-a1b1-461a581253b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3adb860e-3e56-4160-8bbc-d20dd598df87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5b13fa-b99e-4bad-a7f7-a877493e14c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eff221-a7a1-41ad-834c-178f6199a10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbee4d2c-0987-42e3-9555-1b7ee1ff47fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7511a07b-0a53-493f-8c7e-1b561961dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751a8f9a-53b5-4dec-925b-441f7090a7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de470f9-6fe2-4393-bf3a-885efa09cf08",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6b6813-f3fd-46d6-a0f3-8137026eef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2084ed03-85ab-4c90-b238-47c6151f6538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642f73e7-8184-427b-9b3a-e4235cbe95f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92af691-fc2b-4122-bdfc-6ec32b93f74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4963af2b-9d65-4945-a748-f0e9983bac6e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4e37a8-8ae0-4bd3-ac30-9eec98c888f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e80ed7-a0bd-4f58-93f7-1098fa0f311a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fee0ef-2ce2-4754-8672-928f87089be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36f7c9ea-8ef9-42c2-811c-5f884221a70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4527463-869a-4c3b-b4a5-eb02277b0c47",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673900a1-858e-4eb6-91b0-eb4eceaf8351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d9eabc-a765-4aeb-ae55-764c47cb9962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83df9e0-9c17-4458-812c-5601bbdec810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa35620d-56e3-46b2-bc59-47fdbfa92a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8554c539-6e21-48dd-a20a-4116ee4bb85d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcedc78-e955-4328-90ed-618a40eacc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4c3c9c-2edb-41e7-952e-6cbc6246efbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f20b64b-44e5-4bc5-9cc1-627e9e82ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c22e06f-3198-44ee-a244-a79313c3f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7becf54e-2927-4061-bfe3-9d9d408d09c5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ac280e-06bb-4b8c-9c60-b3c29473e650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6ae499-9332-4ed9-a185-f90858117693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0092fb-191f-4078-b314-aeefc8bfd458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fb19c04-6811-4268-b5c2-349259188780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1e2f80-464d-4e99-b4f3-1e8646d81631",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b1d97b-d797-4284-8390-0e0d1bcc51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab6de1e-564c-4507-83a6-da0cd083f389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bc4641-6a0b-4dc9-8dad-277efabc3bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76637300-e483-466a-8fdf-bf2156d26599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b404d7-1b30-4fca-ab68-1b5e27bbc185",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b79e868-6cce-4b81-bb2e-f05c01330804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2705dcb-5df6-4684-b695-077d62153b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc868f62-ebd9-47e0-945b-eefa73b1eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "615f4a09-00db-4abe-be49-dbab7b8023f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39c5d8a-3322-413e-857a-47948486647f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accfc10f-ac40-4015-b66e-271b5c514366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ec93af-ecd3-4904-b857-1924e2e92a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc45e96c-c166-4393-ab85-fd0e89d7ec81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5ff07bf-24bf-4071-b7e5-5378f3f94c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2316415-cf05-4f9f-9af4-992fda4085a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42a976a-7f5d-4587-acc6-7fad7c2a5f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ca9064-0cb7-4e36-8e18-0f9478fba7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa370253-ba7d-4082-8312-806ffee4f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2c18b36-c825-48f2-8dc5-f8cd7e8a9e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fb5039-b66a-49ef-8eae-488b35ff2b7b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d33cee2-f312-4777-959f-b036a8b508cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e6d031-bc16-4f24-a7b0-25fdbb6fcd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd21f89-931d-43a6-911b-d6bf0a5aba06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d2af18a-3af8-40f1-a7aa-8731a420d23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7360b22-85b2-4b33-a998-809695b9a2a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62ea7b5-b797-44b3-bdca-b43975dd709b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bdec76-d032-478b-83be-657300c286a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ee9f23-0291-4cb5-a677-9ccd08f4cb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da69b1f6-4f4e-4b54-892b-bb4ecfb866b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8741954e-253a-4472-a507-5fc21a3a0b08",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a4d909-184f-40cd-9788-73f41f607b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823855a2-2ab6-4357-ade4-7d5ba0b2325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d7feac-8303-43c5-8b09-6a8d00d9c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f61a4f1f-af0c-4890-912d-2d9e94a0be1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186ab359-8cd0-45f2-a8d5-53c9571935b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08c62b0-806d-4a89-9b7b-4cf149c928d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02421f3-d872-4fed-b1b2-e67bf034071b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578c72e9-55bf-4124-84db-b22fba2f181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3e7828e-a6a2-4f59-ab70-26e233178fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcaebd9-733f-49d2-afc6-9096064c31ca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd80ac98-2b08-4065-9af2-e503164df050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ec133-8db7-48c8-989f-d92b5244d5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212e41bf-b820-492d-a9e6-40a7fa0e8ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "874c8354-55a3-477d-8a9d-fd696efc67c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b221778-ecf2-421c-8d44-96e96d520e0a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dac1ea-767a-4654-825e-1d370c46bfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27599d90-8e23-487f-84ee-70b13af326c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd5ed96-843f-4ae5-8084-a37ad88bae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be601647-78a7-49e0-94c4-40b7ec695eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2f7f4-92a5-4b9a-8f99-870213cabf31",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0034ab76-32e6-4857-830f-fdee48fc714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249a79d4-cf37-45e5-af12-08e4f08abf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7822a5c2-a7e3-4f11-8507-ec729618aaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8ce8c2-c954-4e12-8766-05dc6315e667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d7611e-aad8-4c0f-b108-3c9a5d9efa55",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cb071f-e4f8-47ce-981a-ae1d2f626132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4720fc5c-c268-45ea-b8a3-e0e3d37bd884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0b4693-2996-4b0d-b73a-5fd81b5e65ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9f246e-f389-4590-a5b0-be20ddd1dfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4cc29-82e2-4489-9d9b-e4d957dd2d57",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2ad730-807b-4441-8470-e522007e1180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d6c1e4-5555-40dd-a7e2-7ea339d7661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8ae24a-f761-41fc-b33e-f57b56f82269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38056085-68ac-4c78-81f3-c8f70d580fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1196812-98d8-4f74-ab6f-bb35931a48c4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f26b3ae-3c71-4373-b83f-d2afdaf179ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8a7aeb-fbda-42db-9616-17229907537a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53169646-7bb5-427e-bfda-9184af89e75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccca9a5-2a8b-43d0-86a7-d200cb2ea5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65771e48-1101-4ec0-8ec7-266d667af57c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea49e16-043c-427f-bf82-d683b20f4cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bf0d73-ea3b-404e-85b7-c678f7d1a5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6251d5-4e1a-4326-b87c-07eefdd9467b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "408bfb97-257b-41a4-b65c-3c5de0a4796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaffef2-9157-41ca-8d29-f8ce04547b47",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a727c16-6075-4177-a270-cdcad0e7289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a430d6-a89e-4d7e-90fe-239cd34ea29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed341b96-9880-49a8-842f-7499fe5d4b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab04744-6080-4347-af21-79abede6ed21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf7bcf3-8057-44bb-b7bd-e0b90d6d95c4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f36d04-294e-4e73-bee6-09c579466c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a4bce1-6c4e-4348-b5f1-6194f4a8ce7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5bc677-cf5c-4556-8eb6-1b2a199cc478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec3575a-9ccb-4c74-b0b4-415ec473dac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42fd47d-1555-45db-9bae-791688841e11",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772d085e-264b-497f-a194-385ad2c50ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c86c2ca-2dc5-40d2-a55f-19bb7aec27b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956e4336-b06c-4a24-a5a2-469432de17fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a39789-0c11-4a51-956a-38ede8448568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e132e8-d191-43e1-93c1-15c68ea41a7b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63796b59-d37c-407e-919d-ce5204f75a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b31b0e-eaf8-4787-b55e-b3482e8728d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fe9f6b-7236-4f1c-b305-6a1a94937690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1375baab-bc1b-4acd-8f20-e3abe6741dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d3405c-9aa0-4ad2-98b6-c26f8a791c00",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307f8323-a527-41ca-8a0c-ce9b5b70f800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da07bff7-ad48-4344-abc3-42d719c0e654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95402db-380a-4ff4-a1e2-f7fc1fe25848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a444469-5d53-443c-91ab-aa7fce120258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99837de-b435-4edf-9e83-4386250078e1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff25f49-92d7-4774-9fbc-afecdd6d6640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64e347c-1bb3-4ad5-8945-f8c198e23565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c140b8d5-9623-4e82-b65a-404909058ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80753381-1c76-44cd-8390-03da6221cbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb5bec1-05c7-48d4-8a33-9f21ffc053b8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3390d61c-9ba3-4b99-9fe6-664a4983eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fbac52-3fb2-4f5d-a600-eeb8973bc509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42badc34-2fa3-478e-b03b-ad757621ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6bcd80-ca3e-45b8-b2cd-8675f75b0e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10afea7-b89c-4ead-a51b-fbdcc99be7af",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58705557-bf66-4197-a945-0bfb532e9eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be031f43-b44f-4b65-83ee-a3468a74c77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003d2a33-e251-48b3-a82d-75c158ae3bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1ad493-a2cb-401e-969d-61c320206e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ebea2e-2236-45c5-8f45-9d452bc859dc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44770733-7314-480e-8558-4b4a504de159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14c6501-dea7-437f-8c34-c1b2a00b530b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09672b-4fd3-4ef7-95de-f594ea873b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef29cfb-9b46-4cd2-b1f5-1ed47489252a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e84b83-3f74-4df4-8c15-ea6fe6a8570f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6075bfa3-303a-48cd-9c6c-e54a68159e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481bea7d-7a74-4773-9be9-1498b9261741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83445f4-4fe8-4dc1-b7da-0f17115b46ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec12d45e-4855-4167-96c6-471fd982d9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeae495e-e4ef-488b-ae44-e49cd3e03ba5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5beda0-e710-4d2e-aa04-8c4579e71c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361cb519-05c4-47d6-853e-e73200b62deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3929f65c-ea14-4b37-b055-39f238a4a1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b900d0-43e9-477a-b1a1-b0581f9456c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fde45f-20b0-490f-820d-b943cc6b4c8a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bae277a-9483-459a-90bc-9244ea1c6240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62de236-f477-4fc7-93f2-69f40a27e83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d275ef-e02d-4da8-8fee-56db9cc37138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66be22c-b0d1-4019-b371-f609407177dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e006b9-857f-423f-ac7a-0cf184c53558",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec99ad5a-41d1-4aa4-95e9-f31fac55f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23f3808-4827-4171-96f2-2976d65c4009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01afec35-6ee0-43b3-98db-4e176fb507db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ba8fcf-8586-40bf-b40b-36e6b87a98b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75c5ac1-e2c5-4605-ab81-cf71ec19982b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ef758b-871e-4c09-a3f6-d87afc1913bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "836879f9-1c93-4713-9f95-74036068dfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd116a2-3d6d-4b19-98bd-84e2a983b5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc34297-e013-4506-9702-114cb81a9968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560955c2-baf7-4e3a-b4ef-fb24fe7968bc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e50117-5b35-4cae-92ad-6322013b3463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6230eb0d-53c7-4761-861b-af10dd46e74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a2f8b3-ba2e-48c4-b26e-c15f6270821b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba029ea-ac46-4332-9ec8-a8194d5e3efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc9c3aa-fbb0-40ea-9c29-4f7a9f7623f3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b8cbc9-302b-4c63-9172-acbef5de39f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f843e7da-bc84-4e4f-9b6a-fae093091e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019cd18b-fe7d-4a91-85b3-0d3f7371b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4ae851-28c5-482e-b9dd-c6edb1b3b094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2e3b21-54cd-4983-93ab-3bc17e4c8c5f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e7a5b8-f911-4854-830d-84e73d488ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e21df1-3aa0-4b56-8cbc-ca41119db8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a2569d-f9d3-401e-8e5f-b32605f66651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b49bf5d8-2b83-45e6-9323-2123d801819c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05d6802-de2e-4187-8f28-e386a67d1682",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17855598-8a73-4dba-afe2-ac277cccef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f6c05c-9727-4efa-a242-a6470eba1fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b46daa5-4e36-416a-bb77-f71d8b3c51b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3424fa-7329-40c5-af5d-5342e57cfe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879c4924-1b21-441d-b5aa-24434e464af1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9765b6-1dad-4c93-9488-6c905692b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0d153f-616f-47ce-996a-6d334bee3a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9c9ce9-5354-41ab-9d2c-262817a804b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3049bce4-3589-452c-8477-9f9755c09cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a40010b-948e-4236-b097-c93fa1954911",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0504f0db-6d4f-4d01-b6d3-d288824c618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6231538d-202a-48a0-9284-329ee1c6c773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37066755-1d78-4622-b59f-3ffa590cd1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "693c8eaa-f45e-4232-81bf-36fc8ab7ddb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8f4274-8656-406a-9688-625f6f0e6e33",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a78e36-a153-4673-b3c8-125dedc598f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a011c81d-4176-4bd8-93f8-acb4bce30ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8960f61a-f0e6-422b-9bb9-5ef0513616ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eccb2c6-b7d2-4ca3-b36c-1b055f7eb97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670b82c6-0504-4c1e-b493-e4635e73ca5b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1bbb4d-8028-4f31-ad8b-ac3fe216e20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92206a66-43c2-4c37-9ba0-5cd46b3d6e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e035213a-4cfe-443a-9f7e-6f855947db49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeac6197-8131-4fc9-8120-84ca51c9b521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aef41c5-ab40-42c7-8cef-6ff76047316e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92613119-ea11-4630-9799-c67481ef62b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a07da49-06a9-4c16-97a2-b3a836cb7f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5918a642-6d36-4d8a-a9ef-87e71ca427f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efab1098-5581-4b10-9e7b-cc5cf9104129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b120681d-f860-469a-8d10-1e44d7226cad",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6416272d-697c-4aef-97d8-8fb3b66cbbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e46c00-a461-49b1-a098-76d998e4efb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd28189-85c0-419d-9004-dca6b6076b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d497ef45-3a4d-4ba3-a082-9f94805a2fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2dbe67-d3e2-427e-aaa8-c45a89a1f35b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621d0b21-cba3-4c9d-aecc-b75335e6ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407d4f5a-8ae6-451d-b705-fea0a395e258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6596a5-b1c8-4ecc-876e-a984dec7da4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71520fab-8c3a-47e9-a592-a5327ede5722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d7890d-5955-44a4-b76b-03cf9c749ace",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d7d7b8-4c8e-441f-86f0-5f92e049bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f80fac3-3fde-4e43-b89d-b8666e54015b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e714186c-7754-430c-8cb3-be6195a50a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de31ad31-b7b1-4e36-88ca-e14b1f3696af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d80072e-a773-4de2-8a6c-06f4b1ad3be2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d847d-a596-47ce-9a98-16bef0823720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd4b322-6c82-4255-8aeb-163ca1970e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5e8651-89ac-4469-996a-787453595483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac41850-b04d-41e4-bb0b-068a32b08f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d568dffb-6d43-4763-a40c-1ef459ed2496",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4acb2c8-77a4-42b7-983d-33c544b1b021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f75a7ff-ce26-406f-bcd9-9a31916feee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed224b8f-c982-472e-9a43-ea553ae8fe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "339f8a19-3ffe-4655-a0d9-98f8c81725a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b76bd2-75be-4eae-a6e6-51b99f0fac77",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4720917-bea3-4fa7-8086-ba9a8c1d3b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d996b7-d669-48a2-b2ee-9322b4e11d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce763608-c184-4227-844b-54f727b37b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d6bc26-0831-4930-9ab4-43c8feff154c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f587795f-2a7a-4bdc-b2c1-d2937753917b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468eb583-ebcf-42f4-a8c9-6aa3ff028e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ab6d98-ba50-4e37-8271-33fb20b71710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27979f28-868e-480c-ae53-7d176f504e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "555d6e1b-5b8f-4b8f-8467-a154f7567772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49929831-8dae-436e-93d6-1c5e1c819ef8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3cd3e3-dc66-4b96-8910-2be7d76989de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd21082-6bb1-4bf7-a677-545bcf6a38cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3600726b-9693-472b-8f1e-6b2fb3d21ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aabef59f-9aba-423b-87d1-843fb913bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e55fe6-600b-4721-aa4c-5f129bab9936",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43073e2d-c758-40fd-978d-715e0db97452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423c0a47-de20-4e36-b9c1-ffea13c9a806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16531972-7faf-411e-a09a-95837603ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd136847-1269-43da-b4f0-22b68653ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4109fc-3f78-4660-b70d-df5402ff010d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd9f4dc-e67a-4223-8984-83da515ef1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e580b824-9e20-4737-8846-356c2d656cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc66a442-b0a9-43d1-bab0-53f3f66b64c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c01504f9-5c55-4726-ab31-7ff1ea8101a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea362b-7178-4aeb-a0a6-f124f99e1cee",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748ff815-956a-46db-b91b-2e384f627103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de24f349-655e-45f8-8c17-9ee91059b532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d51cf92-f97d-4065-8880-cab4d2cd3059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "71e3a51a-9d23-4204-857b-1a431928be88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be232a6-d1e3-4fbe-835a-e8c83db28730",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed3acd9-2322-4bdd-99c0-b5b010173c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbfaf12-f5e1-40cc-ba8d-b0133bd50311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918ee511-4dcd-48f9-bbcf-82fb4c754b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e7346d-1f30-4d36-b8a9-443ecda4df38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f72409-bf58-480b-85af-334dcba9deb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5575a393-dff3-4857-9107-70c42a7afb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19c23d0-30ba-48ce-b829-926043a21a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f68201-c34f-457a-91ad-34007b6eb9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1052fa88-e473-4504-b089-0b88c74f78f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9821eb7f-5797-42d8-9126-bfc6a4930ebe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc10aa88-d1ea-49f1-802d-4f870e008aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486a771f-5a74-4286-a4c9-49309f002ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4917a5-776c-41cd-86ef-2457d07b7084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aff189-d7de-4fe6-9147-af8b1219802b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d8d0a5-1f3f-4aee-8a5c-c703114bccef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc09e40-aa48-4fbb-b149-c169cb12a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7103a17-7ae4-4e2f-a05a-7d89f02bb036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c89d64f-5a33-4448-812d-065071025c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c93210-7e27-4660-b6b2-690c91589607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb075d5-82ba-4719-a5aa-060bc8bb823e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9409ad9b-d8d5-4fc9-a4ff-719716cabd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01187827-2fca-44ea-aa10-d6a7184696f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ea3840-1629-44e3-98a4-2067519cad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5322e85c-7a2d-4a0f-8a76-eddfde7cb69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b326aae-7808-42ed-965b-4b9b2bdb5053",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d815c7a-c7a2-464f-852e-3934dee22248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd598b2-f2ff-4033-97e6-9b66cec33364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61dafae-788d-499b-aba4-91e366c969f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7fcff3-9988-4435-b42b-775221fdd871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44518d4d-0798-4e68-849e-dbb7bf24e5c9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dbeb34-b4c4-4c48-975e-c929276e9173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f037088-f365-4165-ae67-a27cfffd7c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb3b6d1-d152-45ff-9ce5-ca48be34b26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d810c5ac-031f-4d27-8a64-bea3211b0632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6717e166-e3ae-42a1-9aeb-535ab663ab6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b0edda-3b83-4b17-8bee-aa877e0f5ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f630ad-23ce-4aa7-9b5d-d4d4b4e13bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112ed353-37af-4205-ab6f-391104ff059c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76099571-c98a-4dcb-bb23-bf0c71d83b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e06a93f-f37d-4fcc-a06a-554fd4f6abd6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648fa13b-257f-466a-b0ac-6e4b3fcf2c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1f068d-c906-46b7-b836-028a069e29c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a64cbc3-6ce6-427e-a644-92dd4da76b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58abf688-1945-4062-a35c-cf2bb17aa8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d247d1f3-5304-4163-b307-04fe5a83181f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744631ba-3889-46ef-bb77-9d8a9139f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb7e0ba-d1ef-4f86-95db-a8491247c5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16de3aa7-7644-483a-bd7a-be13d8b27445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af230d25-5606-4565-b067-ee0e94129275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912fc975-ecd2-4353-a93d-0113a73d9d44",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6fddbd-61f0-424e-9e6c-0db2f12e4007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e3ae28-5bf5-4694-870e-684ddafb13c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8c70d2-ee1d-48a5-a180-b0f823553fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "015df705-282c-4def-8b28-620c3fc85c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc143f9a-0b17-447c-9708-a7487f6ab015",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f685bb-32f0-4de5-a411-40793a8ace2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47e6475-37dd-40a2-9e6b-7d2befcfc650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fb2395-85db-44b5-860f-22c6e1d96a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "819c51c5-78f4-43fc-9c40-fbe88b7c585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500188a5-0668-49bd-b8d8-002533e616b6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4380b37d-4f79-485e-986c-1672e5a77f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab018c98-213c-48ae-a232-430d02783436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae765837-d676-4428-a7cd-6848a414afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7105e4-6060-4a9f-aac8-a982e0a10083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27947a6a-319a-459e-b048-3ddf1d5ba9e7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da27d5f4-d0ac-4c2b-964b-6f9453e06221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d4521f-46b9-4c45-bd89-66d644682a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763dc4b8-e9d3-4a28-840e-460408ef86ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5135065a-5353-4c87-a721-971c11df5e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e358a5-31fa-47d0-87b1-f031a775e46b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecd7477-6f17-4a6b-a4e4-79c2f6fc916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768994a8-a592-4db7-9541-cd2cab459f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea86cd6-ff9b-4459-a4e8-ef90b8e14490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc92a03-15a6-443f-a917-a9a891a689d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a772aed4-5500-4654-beb4-3f4219fe79cc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7f5fd4-39f8-4bfd-b3a3-e9bbf4bcb7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000706f0-a9b8-45de-9fef-82fb0bc6fa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19f1c1e-ca6f-447d-b893-23e84597cb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b02f145-005d-46c8-83ea-2141e1de2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ca44ff-1721-4c60-9617-86edb1ac5fdb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a9b49d-0a54-40b7-a035-0f0f372820ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aca095-d7d7-4127-bcbb-7486d7e30ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcbb96f-36d2-4c5a-8d5d-42a0c3a1481e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "171e0907-9dc7-49de-af00-b6302784caf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b89e14-2d8f-4228-aaae-9a6b62afe844",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acecc46-84a7-45a4-90ee-b9b553b11ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afad64e-5795-4ef9-b2f6-8285eab468f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c31046-d7ee-41c6-a521-265c52ef7177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa73330b-6136-4973-9fd3-4493379ae322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ce8b59-358f-400d-8466-a5be0f4628e8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b935ced1-f77f-4255-bc8c-52b8bbe016ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af504de-b56f-4faa-8e36-df306e5db660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0b9d7f-03a4-4d0c-8e86-f207130661a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bf63c7-ccb1-4d6d-8298-fd00320dc4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498d41c8-7edc-43ae-9fa9-0e51e64092be",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1975c-c5be-4f48-9acc-3f30f5ff0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c496ef-ba53-4884-904c-64eafd2b4c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9b7fa6-51ed-4fd0-bd37-e774fbe383d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f5b9a9-3d34-4ca1-89fe-b908c776b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85b01ce-3ffb-4c6b-aeaa-1a4c76c092cf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e46c34b-312e-431e-8e82-9a6a0af87b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa7de43-8051-4890-9592-3cbe4c0308cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96728113-0647-4025-a2da-08406b2738e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b51a919-f5ac-4f63-a6ad-e0f868097cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e716fe-8943-4090-bf81-4d6cade8624d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f3b25d-203d-47a8-9200-5b99ca7a1a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf585cd5-8b24-4d18-ad47-5c05750381c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40136de9-4975-4b8f-a68c-9cacc68e304e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "822db12e-187a-4830-af7b-d6ea9697c90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4293865-9125-4bc0-9720-1330a6993311",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ea5e08-c1ca-4cf4-8e70-f091c06d9016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2c697a-dc56-4f75-a03b-cacfbcf52527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780db2c1-6433-4b61-b2a7-f0c813a94911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72c04256-bc58-4042-ae5f-d4b77c55663f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b663efe9-4f02-4e6f-98b6-787933c239e4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47c59e2-ad78-47cd-802a-fadaf5e58807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41908a85-4abc-4940-9939-6f0288a81a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f1499a-ee9e-40e0-8247-47512d35b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab46fc4-7810-42c3-9218-f569c422dd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080eff11-aaa3-4595-965f-b6eb9700f509",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9670c3e4-51d2-454d-9343-b1fa0403bbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fbbf08-7db2-4079-aa55-a90711a9dab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a35d8a-a0e2-493f-9bf8-3a5e313e94b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b2140e-be74-4a73-b124-09625dd48195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c04b94-760a-4ef7-b9da-50064fcb5668",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e50664-3a4f-4b6a-8c38-09deae051baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed4ae2d-0ff9-4bc2-a87b-4be0adbab176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca1f765-54ba-4cab-8173-b3add7281ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67dbd851-8741-4a6c-b069-a1a218d1db09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0bbdc3-5659-4e18-b180-08ffa0b0c0de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d3e65b-9350-421d-9fba-253e71a09d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e69d3f-e310-45cd-bfd2-ac1516f28f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0505a1de-e7d1-4a7b-a0e2-b32878e879a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cb9708-890e-4be3-8d4b-f1b8aad46302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d3624c-c396-435a-afcf-af6cc5a28841",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a253c4eb-6df3-4b2b-8c1d-f82c0a05d7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04cde23-f9e9-47dd-bc53-6322415e9104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41959afb-4237-4c6e-8885-e6a4108c5bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e29af500-63d3-4f15-8156-bda725d6008d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfcfb6a-0cd3-437c-9841-4c95f47b6594",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c49d336-3a39-4f73-b8f0-87237d1dd5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418df598-e7f5-491a-86b6-67ad85158bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed008d-a7a8-486b-b4e2-4ce4bc86d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4219b84f-d8b5-4b76-81fc-6bd4c7052b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1d02b1-e394-40a1-80ec-e9d2eea785a9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a701df-9045-4f92-b922-448258776d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bc029e-6f63-4de7-a83c-3f2242079db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99514ee2-d5ae-4105-bf95-3b93c9e7c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70562d1f-0174-4c68-88e1-e32df50e9be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271bc18c-feeb-4be5-bc80-fd23f767db07",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6a8e57-da02-4a42-81aa-bdb143694c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f04bb5-142e-4af9-bc13-b58cc1a98bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b3416d-d6a0-4ded-8ada-2f50b4332c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29899098-27c7-4f19-999c-8504d838d40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb51b4e-e654-48fd-bd87-8de6e3771652",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51878804-a3db-490f-9e0d-46ebd153a154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffea4ea1-bab5-44c9-9a7b-aed88be04833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b070d347-12e1-4997-a3a2-7493f0b96e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0b644b-d0d6-468f-bc6c-d4bf4a1db1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ade7a9-c249-4092-bb1c-9dd6ccfa4906",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009b5f57-d4a3-4634-a7e3-4db52385c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c901d6-9b84-400d-8abb-e539e03944eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd23c1c8-7399-4145-af76-56f34f1c340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13d38983-0161-4c36-a61d-2379e35d3acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234c46a9-9b1a-4d06-9bfe-6e134057aa63",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a4440c-cddc-486f-8911-00b9a5cdaf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e542823d-e04d-4d52-8141-35e165ea0da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1324f4a4-215e-4d8f-ace6-b2f77eb90707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e04b2fde-f5bd-4c05-bab3-cdc81bd783de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d19ac8-e1ee-42ba-9e20-1e77c5978578",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be4f292-bbdd-4ca8-b528-25a829f2cb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e370ab93-bc6c-44e6-a998-debeaf73c505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be2f57-9f3b-45a4-ae20-8e322a247f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e71b29a-3d29-4a50-b298-944819591958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8e369c-4502-4f96-9532-841278fa94e5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c2b92e-bfb7-4f73-b2d5-78d3cb049690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5674c41b-c087-460b-bc6c-66733f3717a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd14795a-9f37-4b47-a308-fcc1785c5c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5286d0b-1f15-4d39-80a3-1c2648aed1c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3394df75-3bc8-4d8f-9e42-029459f829af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "302af104-4564-4871-b879-1fa170752140",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc4be87-6c37-4dcb-89ba-aae25811bb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9e6728d-409a-46c3-ac63-7fed69489129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f2b89f-3507-499f-a21f-1f3ff8e3e5da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8dbabd55-cd90-4bc0-9dd1-da5659ce8261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d46710-4adf-4936-9d7f-413db05627dd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fad577-3279-40c1-92a4-786e14ebcc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29e4e7ab-7935-406a-9d9d-640e4c0693e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c795eb-b746-4cff-a375-afa8bf5938ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "36f1fb52-df60-458b-b58e-66b629d49622"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e7d120f-6053-487b-ac2b-3224ca718861",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89ee051e-9504-4c5e-b936-5a5c2f196e3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f83ffcfd-f932-4db4-829a-33e7edcd4296",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "264a6356-8892-4b37-abbc-fde906d53076"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54871004-7ebd-42fb-be49-500225d18951",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a432eecf-6d1c-4ffb-a2a3-51d32184d24c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89cadbe9-286a-481c-b37d-2abcea81dfcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87529072-2951-4d81-b219-084d78a82b5b"
                }
              }
            ]
          },
          {
            "id": "729270a2-cb10-40d8-a20f-063269bcdd12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12e119c7-2304-4e46-8284-1b5243c153ed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "165fb37d-82e4-426c-bc1d-514b0fe80012",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acdf7010-e6cd-4f9a-97cf-d5961a30253b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5c5f1b4-6644-432e-9c6d-4c1c3e5dc4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "beb57a3b-2f71-4b24-9da3-35dc6b7e70d1"
                    }
                  }
                ]
              },
              {
                "id": "73eb9040-2ad5-4bb2-b0bd-49845415187d",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eab755c-cd94-47e8-88f5-dd2c523426e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ca31cdd-65d2-497d-8e9c-ec4eafd1e84a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a60f6ad-9a6e-4d78-8d85-3945455ca2f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ca27964-dafa-4c9e-b809-6fa9af631b55"
                    }
                  }
                ]
              },
              {
                "id": "ff92b8b3-adc2-449f-b916-eec2dd65d6f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81d2490b-79f9-4d6f-89c8-9d276b594684",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21511781-1e92-4813-bf37-c296c52d4b69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "317488d9-f9e4-4349-96fc-e264e575bafd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fea94734-0cc7-4f23-80ad-51e57022ee9a"
                    }
                  }
                ]
              },
              {
                "id": "1ebac313-f951-421f-b296-98c68a37ecb5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33a57c71-58ac-4a8a-b756-39d029fd8d96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf43f378-a25f-42f6-a9f4-67764fc5b272"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a70fcba8-f5d0-45ee-9d94-2468e6415a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0ed0f868-5e8e-4081-b72d-c664dffcbf60"
                    }
                  }
                ]
              },
              {
                "id": "fca2afed-2b52-43c6-a97c-0421d4a4a05c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55b9acac-bf27-41b0-806c-1dee36252997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702fccd8-14c1-4d9b-90ca-77d8f8b616be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ed24313-1c49-4cd6-ad8c-ab5317c06ceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7c5e2734-5791-4635-827a-7f3b2a8799c5"
                    }
                  }
                ]
              },
              {
                "id": "5fb9720d-d5ee-47ef-a304-a04a081e2890",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d2f1f40-c723-4488-803b-e7317774f05c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7acb8b7a-b043-4eca-aed9-bc7dd3cdd24d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efb90a7b-91b1-4895-ae9b-142502a6db94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "116c5209-3452-4e84-8907-737c383f7b48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bee492a6-09ab-45a9-885a-432766458837",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae6abc57-58e1-4b00-9f81-fa199ae5120a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "126133c2-0e95-41e1-894c-7dbc0f9c5ecb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5289fb0-767b-4d35-8790-cb971fed0ff5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97840beb-97bb-4f99-a55f-6505f6accebc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9e990e02-b4b1-467a-9b63-d6bef4be3599"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73c37d50-d0bc-4c95-ba46-ff58977d7943",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7acbef0d-47a9-4a50-94e1-bde44958252e"
            }
          }
        ]
      },
      {
        "id": "b78fa99c-0ee5-40fa-8f8d-d5470e3ff419",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "79ad2add-d06f-4d5b-a90a-6bda6be1ed45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dd299a8-c7ae-408e-a2cb-3997810be13f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c2dd177-210a-4355-bbb6-bd0f4448524b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f45c8f8-e847-4d2d-96b9-94c43dc7e48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d07c10d-0df3-44b5-bde4-bbb9d38cd9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574c6e25-aab9-466c-8f25-07547660ade9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdafda3-3391-4d88-b4ee-1ab44476fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bce996-0f3a-4c4e-bcdd-17663b8315ff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1da0b9-e8b1-4c77-8788-c1b483ae6ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc430c0-5cd3-4e9b-ba4a-968f96b66e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589094c5-c584-49b1-89e7-790a4d5e74ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "922f6603-591a-45b3-8131-a09ba0fd2a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2183b08-715f-4456-ad70-d0bcd4ced91f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60097460-5e69-433e-8cf7-81e5dceebc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6639a51b-d534-4382-afeb-916d4ede56eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f188a5a-774f-497e-8d24-135ccd365271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0841ae33-78d9-49ac-b1e0-162e3d9e0567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1ccbba-264f-49fc-b5ce-a61a707019c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e3ef90-a08d-477c-af69-09cc7dc90aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97233eb-c4bf-4817-b194-7521b33f8f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5ba5da-1f8c-4042-b7c8-ba9f2483d984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63dc8421-9ab5-46ef-89e6-18eaea1c316e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed85e49-87a4-44b8-87c6-4b15fdb00bf6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d581b3-e1eb-4673-a321-d1f5552b1066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0776c0ea-de91-4a72-bc1a-6b19b5349637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5939399a-3699-46fd-aad5-21d8608a4357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "358be17a-e530-497e-824b-06c45b628ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc99ee-2180-463d-809f-d7ef37681f32",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5cfdce-2d77-47da-a542-2020d9f036bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3c2422-ea8c-4f2a-bd74-f6524b0c1c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b30e10f-a574-41b6-9f1d-47f95344eff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f1ffe8-1dba-418c-93a6-bda0116e73fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0630530b-af18-47d8-9d41-a73cf54490fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b5e50-59fd-4cb9-b22b-6c74aa0a2245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea141ad-5bbb-4504-a482-9dc5c1ead2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934fead1-9f92-4edf-94ee-d683041f5d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd499e4-4fbf-4177-958b-c2beee4c19e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53b7da0-1558-4792-a1ce-17bcaf7faac3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d5a773-ff21-47db-9833-26d6c5b58c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b9e65e-f5bc-43f0-8e4c-a9d7d53cd29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a88ce03-b0b5-445a-9bfb-cab46f0e49b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae34460d-9ed7-44ea-9f40-9a485b7dd6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20a58a4-cd23-4626-b517-8f9575ddf4ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd409b2-744f-45b4-ac37-27c3b3952083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e577784-4959-4ea1-aa1b-508b1d78b796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b30cd9c-8371-42a4-9bf4-1cc7b5bd94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a5393a-378b-41c3-86e0-a83cdd2d9cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f681ae17-1916-4130-a378-abfd88d1d30d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a650c74b-f5e0-4182-a59c-1e0a935a4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5edeca3-8f57-4e46-b0af-50b3e5540281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26647cb-b14d-4535-a4f6-7530f7e68ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f64bb55-9c71-4284-b2c4-8c53b99edffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c26c9c0-caa7-4c3b-a819-6c45852930e4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52493e02-9225-44b3-a12e-67f2fda84cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6882315-e0e1-4f45-9e94-82ef028c0a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86377796-c389-464f-953c-d69d4d931ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "50ab52a8-5053-454a-a3ea-42201b71cc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d652b730-1be3-4658-a71a-8c6de3493e87",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f614371-43e5-494d-8f67-82173aa37ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b15b57-a076-45db-8b91-77e32199d958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0228f942-b88d-472a-976b-52fa40f1b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cad65c6-5843-43ca-821a-66c1d1c5e346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd6d80b-dd4b-4412-bc5c-0d85218d716e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcb8d34-5f12-40e3-876d-3d8de49ad70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad8f367-e5cc-46cd-97a5-f265d497cde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dce4423-1892-49ca-828c-f6f86d54c13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92472032-705f-4ea0-a809-bfaae7ece414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c17e4f-58e6-4dcb-9bff-eebdd12cac7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1052d138-b64b-4bca-acce-c11848cc0620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71fda63-e3eb-49e5-9571-51cde1c84542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181a0f25-064b-4f89-9161-1646d877f135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f5bd49-3f3b-4dec-8f44-1cf764326fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f783a9-59ad-4d6b-b0c9-7f4b2599c976",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afe50c4-1540-409f-ab73-962611e184d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cdc93a-594e-48ba-8586-e6a2812e7da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002db5af-fa2d-423e-a862-17711c258a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85cfc17-2efc-4b29-96c7-1fb4a6279a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8c7fda-3c5f-4c7c-a8c4-06665cc2c5d5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3fc9d-9605-4018-8b7f-8630ad4a7278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b8849e-7212-4c7b-a980-7e00ddbebfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b7c598-f5b1-4bfa-9d3d-e1837176ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4d8c7c-7c0b-409b-857c-6e430ade5c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff59a8b5-4130-4759-a41f-59eda3032f4d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bef06c-af97-467b-9648-ac863fb00c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5468d20-6a48-4ac5-8580-c20966993d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e23524-c7bc-4a48-8f43-0bd90a00618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3db866-70dc-4275-a9ca-e26be5712003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f115afb-7b08-4a2b-b22d-4f304387e098",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab4bc6f-a6bf-4a60-8d60-44a403b5a3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf2e7fe-b0e3-42bd-8eab-e6848e061838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330edcca-4e03-47a0-9dd3-ed6720512405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "584c8ef7-a9d1-40c3-8d56-33d579564b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2c2745-c559-4138-ad4d-48fd11084dbb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fc11ca-d288-4ee5-a7df-842d68048de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b516fde-06c1-4c7f-a381-df7e1b9908ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb94a3-5564-4f3b-a17c-7d5c53ee4aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56ec74e-eef7-41ac-bdd5-549b85d5ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c9aa76-3f54-41a3-81d4-fb17bd1b3949",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a580e86-04aa-44b2-a6a6-15db6a578fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711dc30a-4376-40d9-b1c8-1490995bc76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49085dc1-408f-42ad-8d76-176b83154d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12ce8264-bd37-4fdd-87d8-f48d255e929e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5495ae-2e87-4020-a68c-e2b567c778fd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea6b7eb-de54-4cf4-a23e-47b7609d17c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912593a1-938d-4965-a8ec-7c2fe9df347c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413c5f21-355b-48b6-a87e-b3d12388a1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69600517-8065-4dab-9796-38613ce57159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19086e2-3920-49b5-9b40-b99fdf965285",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799f4bed-acb5-48e2-a49f-55e847a72cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b58a51-64e6-4028-ae16-06c5af8532c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef9f68e-cd7e-4274-ba06-489d5a669f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b8bd03-de53-4d49-86f5-df6e464e7d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa84b91b-7a82-4190-a973-e5f1fbf8bc0f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa32f99-4c57-4af9-bc60-69023e34042c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c56218a-8454-426e-88e4-169a8bafcfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88826b4-b3d4-44a6-b902-4273379956fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe441b15-3d60-4da5-806a-d471fbc7f46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550d8cef-4bcd-49d8-ad8b-f8139ac5897b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689ef94f-1f97-480b-8fbd-c5e8b51240ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83110b12-8cea-4301-9e7b-c213f72d1ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ef8fd8-c70a-4ced-abd4-fc816aba999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "360319b9-b038-4f0c-ae34-848cfd23abf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54b77f4-7890-4f51-86e6-baf03adf4dd4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc40c37-2e2b-4bfe-a6fd-2df4630ab386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8724a49-22c4-4624-bf2f-c7390fea315a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fced02d-7103-4f2e-a63b-3e8d1feacfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a461e88-f5aa-4634-a46b-8c16d7706ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb38c2f-1475-4e5e-9b57-0606543a496d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9000ccd-5581-4add-8d24-c269e1877528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed74cfa-d061-4eb9-9f5c-ca16296fbce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a0719d-7de3-4893-8c07-9ee8f552aecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeae1b1c-1f58-4309-ad54-81e998fea290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cb153e-e158-4352-8def-5f8ec92e3de6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d689373f-a0b6-4f9c-9b84-8e6a16a61bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d2c770-a63a-44c2-ad55-3f4493bd58d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fcaf31-d801-4a20-8677-ef151a7489fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6a770a-2a67-4ae4-88fd-2c8390b723df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623f5d4e-1f34-4bdb-a775-ae4631b23d43",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a7faa5-04c2-44b5-95b4-6463581066c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19eb5e1-8b6a-4939-9098-507782c2ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e544732-c75e-4344-9e87-5bc59f4b80ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd694e3-2b48-4a00-aba5-9f67172a1c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a7b775-2011-44f6-b51f-d5c87ba0c474",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7877f01-107c-4cd7-ae4a-13557c555f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf76eb90-6f95-4d43-8ca6-a5da4f5bc907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f022619e-80ba-4360-8561-86bccbc0840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20ba9e9-4cb9-4a6e-982e-9d43e0ca5fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276371f-320b-4fca-afce-933e07045f81",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f110094-704d-4794-8298-4ff4d666aaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f080ac5e-086c-45d5-8020-1c8350a24565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c547b981-8b2d-49b0-96d2-e7cb17297ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb1fd01-3a38-47f3-8233-9b0870072e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf88944-43f7-40f0-8247-6a7f2d4d7330",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a13094-b2ac-4182-8d0f-c6c53ab34376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f04777-c92b-4df6-a608-298dff6bf7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb03148c-bd12-43a4-b829-b9719603885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "870fe025-e059-4109-ad00-a21f3bcf461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4f3156-4808-4f2f-8b67-d55c0d07554f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f84dc7-a6cd-439a-96be-4d4a3ccd6287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12177ea0-8559-4dba-8997-ff7b10577bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f04f9bc-2999-49c1-840e-97fafe01125f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b62713-6b16-48a7-87ea-5fead7725aa5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bad03d4a-1382-43e4-9747-15fad35509ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a551c3d8-5894-4513-a8fb-cc37f6c0b6df",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b729f0-b5a3-44f4-a7d0-7a51fa230694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75069486-cb95-4651-aa21-9fcdc0f5ad08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301fc066-902d-4822-b2a4-9cff4f70d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afedf99c-32d3-4616-a449-dfffba070864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b0ca7c-4bc0-4d4e-917b-2324c374a9ef",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ef26cb-f1ba-4ee6-9b33-33ac0336fd9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5e736049-b522-44ab-81e2-f5f732d408fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e967ed-0584-4384-a60f-adf2837937a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7e6b3b5-eadd-4cfc-8c3a-6c8bb53f66cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b06aac5-1d42-4009-85f3-2832cbfb4d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eef61056-14f4-406d-8378-95e6cc23c9bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a258c23f-6cd0-4043-b27f-aa3eade39d04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad5ef9b8-8c8d-4eb8-b2c3-e00926706805"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e44120a-08b0-4e7e-a216-e5f1dfe2026a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a191b99-9b80-45b2-aa34-94ef1778195c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91ed55aa-4514-4f70-ac18-dc8ad1171c5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c717f25d-bf8b-47db-99d9-15b1dd8f35f8"
            }
          }
        ]
      },
      {
        "id": "10478c2e-4ac9-4ae5-99e5-711ffa6a55c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ac9571ba-e5b7-4b7a-a9d0-e6c0d51c249c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e44c2b12-e9a2-4430-ac82-4c28dd470488",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0660bfaf-92a2-4680-9e0b-768265978347",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01ec593-3d9d-4f4d-a6ea-6f3d410d395a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac3ebaf-1d18-479c-aeab-244057bedb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26932440-e568-40ca-9a23-20499468f836",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca510ca5-3afd-4fdd-a962-2972302fd0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b33742-e3ec-43fc-9e5b-134e5566302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ebc5da-69a7-4479-96ea-4aa5db0e31b5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b09397-d5a8-4d77-82eb-8c73913cd1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f76bdb0-9c04-4da1-9b20-73e46fa1a8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0ab778-ca39-4295-9fde-f6594c755cca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726a45d-2a41-4bf7-90c3-d66d33ec089d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adb9e6e-eebd-4356-b673-ce57a1006dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e658c81f-351b-449f-a39d-16bc2b8a0039",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ae837c-339f-4b2b-bef6-ae5ff465c0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcccf70c-c8c5-4d1e-9d88-36669d0cc2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb18d12-5e31-4377-998c-67fa086e5d36",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1355900f-4533-4c29-80d4-03a74700d007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6ac776-0aaa-4544-8cb7-0515cc2ea8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c5af31-7c8c-4a2f-899b-fd27cd958257",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a85757-9383-47c6-bddd-be9d66570f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a12ca65-7d51-45ba-b346-df12ee9fd9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a93f8b-07a7-4815-9b56-9fb5cbfb9b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28dfdb4-47bf-4c67-bc99-f6b21d391f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d0e24c-bbee-42a8-9143-5375ba481b03",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a815925-5cf8-4c8b-b8f5-f879ceaa536d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244ae4c0-fa4d-4313-9111-f229acbaabda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1abb57a-bd40-4550-aaa7-f6e78905a21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f82601f-05a0-4fdd-9b2e-1eeaf9f5a265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27046453-bfac-49cc-96e9-cef7f3524ca3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4fbb01-ceff-45a2-97ca-1a8ade736a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b3de7e-4b30-47ad-a09a-2144214a8e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea04379-1930-4e09-a306-ca4496a4482f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136ab25b-5a5e-425f-bc44-0dd09e73bc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2670885f-084d-4aca-a683-f7cc9293ac29",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6e3efd-b162-44d0-bba7-1dd9628d9bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad92aba3-7715-4397-a6de-e14da9390a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f1016a-6de3-4da8-b010-a9f25fd8a416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed742725-db4c-42a0-8cc6-d18786f2ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f85e5a-0950-46e1-b6b4-aafa247495e4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7ac36e-06bb-41b5-a72e-06e089ac050a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ed8bb6-2de8-48a8-95a5-34866f24ad58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a3683-9969-429b-8c73-4059f6572d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f74c3da-bebd-4fe2-bae7-8677516c7933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b269b93d-1e93-48f3-9c13-301daa4b3042",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a31927-42d3-489b-9009-59bd7aeeafbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea92b5a-3a31-48ff-9116-20dceb86b4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c78b6ca-9612-482d-afe9-baf897593570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e6872b-487c-4d43-9e85-9f4d0769d712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0c3555-ef95-4002-85fd-6ccebca8d1b1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b19c8f-73da-4615-a30f-e98a9d6a524a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d22a13-09d1-4edf-813b-e53e38772463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d1529-5778-4bfe-b4a8-627953f39a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ebba83-b5cd-4d86-9de2-e73989f282ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0754a571-4bd5-4a1e-9f28-416f04cfc73f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c181da-df78-4302-8dbd-dc58ef02c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6d9855-071f-4503-b55d-1d6a88a40052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6acb29-6797-41e7-9632-44bd10bb2871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c8ce42-a220-4e27-afc4-36058f8d327a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ff7ddb-ee55-4920-b483-bd7d508a972e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3317f6-91c3-43eb-adfe-e0100d1b4ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cadcaf-e7b9-4615-94b6-6ff3bd307c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b0d9b8-91bd-4036-ae24-c6be8ea61550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc97f404-54cc-488d-93f1-7b9195667873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26abd84-7915-44ef-a59c-51192fc57546",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e65b4f6-7d9b-4fd3-a923-85d8b6ede283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495b510a-3f60-4b8f-b446-e4e083c977b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8470c25f-c73c-43c9-a65c-b2190a2d8993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85be1899-776a-4de2-b63b-18cd078dda16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cb4a91-8403-4756-b31b-a121494aad4a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7be14a-cf63-4a64-abe9-cca2bded006c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547f6ad0-5399-4e6e-bae1-8cd491d41490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f513ec8-7bb1-46cc-b333-62a357c59b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe342b5-aace-426f-acd7-439e2cd838d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d19a0e-b236-4594-8e9f-a09281966508",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4644e74-7484-4d81-adb0-fc14e8de8c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6110fb99-7887-4a83-8103-e0d26716e700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c838c4-e068-4bd0-a072-3cb3425620a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1de02b-f6ac-499f-ba21-9f5c505412dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5e3133-446a-4936-9d32-6a1df058d11c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282b790f-a39e-4504-b640-0d2b10791fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9cd766-50bf-4434-8863-d8e5b8cd21e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb507bfa-ae77-474a-848a-c49eb7dae0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d5492e-70e2-4eea-95c1-bf08b1d9aa0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4a1711-8e33-49b6-bb75-4b4319158719",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f99d46-8612-4485-8959-196f641cd606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dad67b7-925e-42e9-8bed-e1b2b64004f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b7b4e0-ed44-4ecb-8ae3-4f6eef2da3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9ef6cb-de90-4d44-9c3b-14207f9bac9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66d664b-8288-48d7-8bc7-0743e5d61ccb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c40ea2-2eff-4c89-8446-2eb1293d62a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc0e8e7-0077-488e-ae69-1c862981fac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014bd07c-8b01-47f1-9fa1-d32650ae177d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a642857d-cc03-4ac9-8fc6-2f127fb4a7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2290b8-19b4-43c6-8828-e147f01dee74",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ee029-f660-4974-8fee-54500a24213f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd107f29-cf6d-44a8-919b-4481f2f1c654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c01450-49c8-4813-be60-b2d206c642b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853275b7-b7be-4f17-8a48-b4d9737aed4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9349e659-6f56-4a00-8b40-dd750bdef22e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16cd670-6082-4d53-81e6-4ff3ffae1bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eeda159-0f77-413d-b45d-20567d4ad1fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb04f202-1b13-423c-9020-e7d9528d19e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf39a2f-541c-4c08-a7b8-0879dfc0511b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52602a6-fbe6-4c59-87fb-afa4d6975031",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50775339-f3a6-4459-bd4d-5d0d19f60337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bcff5bc-4883-434f-92cf-f1cf9b26cbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504de418-d420-4d7f-aa85-5dedde029339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff866829-9b7d-457c-925d-bd66b579846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e716cb-b0af-4fae-8598-0ad57c8a3938",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3a3c33-8ec2-4e51-a1ef-e958f685a447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad9d54a-e61f-47e8-987b-7f105bc3562b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f5f539-2806-478e-b4a9-e0e63c5f8d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a5f3c0-d1d3-4958-8a7c-ceba91751911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0311dd-3705-4b77-a5f1-49c14250f6d5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f219805-caef-473d-8223-83abd9b14e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80b29ea-a60a-4dec-919e-3549e2afb52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c1c953-94b8-4ac6-acf2-14b83c60cac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4c1d8f-395c-46bb-b7c9-c9c647c22c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f76d06-20c2-46fa-8831-961bcbfc1a82",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc5753a-d799-4291-b531-b124cd381b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0197a32a-7807-40fc-a744-e26c94b95dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94de7c47-81dc-47d1-ac35-a97cad10007b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca11b52-1d55-4eb0-8cf2-7de9eb817877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3828938-7e81-4ba3-8ec2-d20d1f1293ea",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ed713c-58d5-498d-bb68-550461c7be8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa1c72a-885f-4947-994d-1ba027b8164d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb922fbe-3da0-454f-a320-cde5c671ca9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9908225-5305-431e-b343-c208ffa15d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5606b941-bd2c-49e0-bfdd-572127cc265a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a5e9f1-3232-4467-a648-be82874f7da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad888aa5-46d5-4017-9c1d-11335803ea42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ce640-91a3-466f-bc21-eaa21e5f248a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8644141-dcf9-44b1-826b-00f2c421d9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585ddde0-158d-4604-bdac-3a4e1acd4078",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a0b787-2b9a-4352-9648-b52816f81ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494bdbc9-5406-48b0-89d9-7bfa77fd9276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2487ee-2418-404f-817f-b9a01c629f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96247b5-c9b3-424b-af80-04c1916b6695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1bde19-7a71-4d3a-ad7f-ee55b9364624",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a39402-6f3c-4533-aa02-c74143389b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c17ab6-f4f4-4a38-8b87-c46120a489ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a89439-a680-47bb-93ea-c2407f354100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a155737b-e6cd-43de-8688-da2c75f358b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbb4064-cdb6-4f30-b9e7-e367bcd4ecee",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0405aa07-ffec-4576-b5fe-9f77fe79f796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aceb5d5d-7b2d-4bce-96ad-e67422e5fe0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e2b3be-3b48-48f9-ae23-e8001e2a5dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b38cf5-4eee-4775-9bc3-4da13f8a653e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f02d75b-5cd4-4acd-a420-b94f495631fc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8ec21f-4d63-416e-ae71-20b7b483ac63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc67072-f239-46d9-bf3b-8df84158a33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48fe3b3-82c9-4c73-b712-6728555abc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09166376-5ded-4f79-af62-ac41eeed8862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b408de44-d764-41b2-a09a-6769a4de89df",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6712aece-7267-4228-b09d-2d9c55548c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab66c76-8fbf-4e79-b66a-ae33d8d8deb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80fb522-56b8-42b5-8e90-7b2dc721d48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5b94b1-c78a-4b57-9e52-1daf053d5079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2203c5da-5e68-4157-89f1-43bcb36bb554",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaf6394-13d7-4a7f-89af-3294895664f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fd2418-e201-45fd-9a31-aa7ca52aea4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f0015-5bfd-4190-ab4e-855cc87fa5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2ccc35-544a-4784-8fef-1fd271eba762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e5297a-a193-48fe-add6-609ebf756e7e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf68c1f-36e0-46f4-ac1f-9ca32769da11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd4416f-9a08-4549-9630-7e13c8e141a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf68cfc-541f-4edb-a0a4-e4d772a45814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebcb92e-b12d-450d-9870-05f68c643d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a09ab2-88e6-459b-b360-ad9e43402cf6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fc04d3-4e23-48da-bdd6-c1b6f3df0559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ff2798-05c7-4959-9a25-0b1bb1940dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ad02f7-efad-4531-8e49-fda1e9178b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6fd214-6231-43c9-bb3e-ddc1bbc12bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c25f811-471b-46ee-a982-06bc9ccfa61a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbd2cfe-8fea-4fca-b7a8-97e5ae766830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a540dc-e0f4-4caf-b679-5483c7000d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd65bd60-e156-465c-aa83-51714f37b5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60fd00d-8fad-4c9d-a33a-26be57043f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8e07a3-3ad2-4789-8ce5-8ecb0589de82",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c597387-cfa1-4f2a-9b0f-7be6909c7623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2425afae-c03b-4836-a95e-3df788d821cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb60706-ac93-4c32-9962-6a3f3983f7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ee161f-dff0-423d-a9f1-975bc651a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53aa8b55-f532-4108-8f14-fd1dec4d14a2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f7bab0-38c5-4a26-b2f7-d96aa2d6d788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b97eb4-5e38-4a58-afe8-3c9c3e81f412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a577794d-4c5a-41a6-af88-b51e664c0830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bf47d1-df75-4e19-b491-94115b0b3fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fa7728-1b3d-4760-8165-211c59da6226",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e12251d-28aa-4238-afc4-4db04f4b2743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9c929a-9968-47a2-8231-b15b198b15ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bc1977-0d54-43f5-aa3f-5366dec32b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4975c2a-eb0e-476f-9c77-92af7c008f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd64691-d078-4d61-9bbd-cedafef25de7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa2395a-dc22-4fdc-bbda-98fc05fc926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414aa5c3-7223-4c65-9629-259a33d467d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962beee5-2a73-4acd-862e-d1a7618cd16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8529562-6d71-411c-b99c-de900b7d2d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e0b9c7-ea1b-4901-aea5-c56af9743b49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c81dd6-0023-4b64-9373-2454b1ffd2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9d7a48-fb2a-44f1-a107-895f1937d36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86401022-ff70-45f6-8cd2-5932e96ccca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe8ec8e-f708-4b26-85c1-df4b9fc0e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf756e3-b7b6-42d7-8ea4-210ca12a9842",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb74b402-c501-4fd8-9848-8deed18fd28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d49d0b-5efe-47c5-98d5-c27ca6832da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae02b81d-62a4-498b-b5d1-08e6dc0499fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6cb624-304e-4a30-af48-58c7f75aa4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a19acd-c055-416b-869b-d1193c114711",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13254a6f-8006-4235-8ae8-9b619529c65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9152902a-ac56-4cb2-856e-049116454a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7186d29-3cb0-4623-829d-33bf28d4018d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f69328-43fa-4e4f-9c04-0d058162cbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d3d1e1-66d7-476b-8f57-ca8834d764f4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56dd4b5-f435-44e8-b8d6-9715d05a0c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8877b92-2a8b-4059-85d9-63654c4a43d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc549355-e00e-40f7-bb9e-53c4d2059620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ac4cd8-a958-4e61-abcb-93afb241e7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e97ff6c-6b98-4057-bf8e-090057654256",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ccd31-7093-4039-95c2-8b1bdc4e6b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8917753-1cef-42dd-9035-75ee6386a0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d76a32-ed84-41c9-969b-bc1a24fb74a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4091c5b9-b1ae-4e27-a6bc-b1706e4f2f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0febe4fd-f2dd-47a0-abdc-7d124a6d362f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd15a32-7ec8-4ee3-be05-5d36b9d86d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2637890a-4f91-4f87-9670-1264e3285ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecefed1-5991-4a5f-8462-130fbe39ebd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cb61b2-98ac-482f-9f38-f49987940032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b806ca-9926-4014-8714-2cf11b510e56",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d1c6fa-e2de-46ee-a61c-d9310daa9125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cf0dbb-a4c3-46a1-8419-986b1a1da734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb767fa1-758a-4f35-8778-db88d1c62580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20479ab4-a5b8-44ac-a296-6ad2c52deb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2965e2f3-1d1c-4404-8bbe-57f57820de2e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8a1aaf-9abc-40b8-9b3a-354737017946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408e31e0-aa37-4f55-8762-bf21e57e7ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3c484e-7662-4033-9180-118cb8d19c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b518c775-490e-42b2-92e5-a3f8b4db14de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d324d0-e97d-4794-ab8d-bc12dd6eaac9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6e358d-c3d3-439e-b127-9ce088e78fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82a08ef-fd3b-4fe4-abf0-792da9c35c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc709d5e-b293-4ff4-9e50-3cd36f11241b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ce2942-3a72-437a-b0a9-a4c27be85737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0283aac5-66fa-4070-8c55-e89add243a0c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd175828-d0a4-4d96-9e73-68653ff40d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340ae3f6-6589-4891-9077-5fb1fe09c428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f983df0-aab2-452c-8ee0-810972eef3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb92a9c-c124-4980-97eb-a13b5e914843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3421d6f-9b35-475d-80a8-6ca650c730fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b9e93d-e12e-4218-a32a-eec634cb2290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af65d8ae-2a4e-4b8e-8302-6ed3d81c427a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ecec21-f286-4951-b850-369f6b844d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df53aef-5dee-4db1-bc03-de3af9d1ab6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46100ec4-b2c2-47b4-9974-9be294957a8a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a5d88e-ffcf-4e00-9f18-57cffc0a6d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4241ce56-23b6-4710-a529-05205f82afe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae3691a-4376-46d7-9914-93adc6e37ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e17d821-2292-42cf-8635-85ef5ef0312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1380bf21-96c7-41c0-a327-bbec8b3ade80",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd64474-2c3c-42fb-8c2c-f226c506b155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9a9d3f-4324-49b1-a5af-cc6cb31cf245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85819c5-c7cb-40f7-9120-cf6111b835f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bd174d-2816-4be3-bdc7-7a195f133d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ec2d8f-0835-4a5d-9e4d-07ac21f85b17",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaa9aec-b43a-4bd0-8306-e389554c7779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db71f681-3a16-4848-a69c-4b55fae5fca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f47d9d9-56e2-4cc9-a9e4-c691abc55bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9869ea89-aebf-4012-8dbf-fd26d7d6aa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f860a1-b7ec-40c2-a4c0-498e0e87c2bc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cae869-1f1c-404d-8867-ac4c14f340aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccb7615-01d9-47e2-8f67-669438a07e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264987af-cb40-472c-9dfb-840ea94cebe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8bb2aa-f0c9-43aa-835a-487810a3fc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484447e5-5b1b-451c-992d-06c342a407d0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee65cba-4d9f-4b27-bb71-1b5f26dac99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083eef1b-cd06-4e26-9fa6-3ceb02c33e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e760c12e-2e5c-4445-a7ce-478549625049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8374b2b-dcad-4cf5-948b-7d6398010737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b8870-ac7e-418d-ae69-25f2ddb1d3c1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e14aa-2e1a-4e53-b994-82a5c48faad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a65123-ee4a-43f1-b295-99d4e6634962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199791ef-7dd6-4604-ad80-2a6c8d405510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55983e81-d16a-49d3-a4ff-e281094657d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640d291-e518-4bf4-b287-07d7fb2d2544",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c53d049-bf45-4daa-b2e2-b8c2851c13d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cc8520-16d1-4258-b668-71879b892b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f56150e-2edb-4697-b50e-e67c989d172d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c59fa1-0bed-431f-924c-6a084f118936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7cd8fd-2cf6-4dca-b0b1-8e394214468c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf8b2b6-b608-4ac3-85e0-c8d5925c365b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f89fa2a-cb34-4115-b674-c4b8489d9d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795d9b28-3cc9-4256-aec5-1e2c0f1487b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0b0361-d228-454b-aad6-f76552da2bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1124adb-cf21-4a96-89b3-85185b323c22",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5ffa47-1928-44fb-88cf-182df7c469bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdacc13-cec4-42e8-b52e-dc1d8b87babf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517af630-b6cc-4815-800c-49e32331983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f2e020-8e7e-43b7-a55b-96dc24ee9b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab684aa-8b93-4774-a86d-8dd6548790c1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35baf95f-9ea8-4153-af3a-b33987784077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ac836d-1a40-49fe-a243-e63d25c11042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cf8432-3033-4807-b41b-228e181a56d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b9f1c9-d623-44b7-bab0-5676437565c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fa169b-d159-4f14-b063-f19d13913006",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b97618-8cb4-406a-9a76-90126ad89c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23fb0d23-39b6-4020-96c1-153e3b893d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63f18a8-8e02-481c-a9e8-432215f2bc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe04ff1-a5b0-4328-bc25-4b621297ad0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ee57d-4d40-48ef-80db-8922ecf9e796",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3504aebc-fdb5-4674-972f-11770a91148a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01207718-de2d-4d99-a8b2-81b96f415082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99613dd-f59d-4999-9792-35a4f8f0fa2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cab4c16-96dd-43be-8e9c-d8d3a92baa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f35fc5e-b064-467a-b781-f2747d547a91",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d79aba-108f-449d-af96-812bf9ca2e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e17ea166-266a-4d2d-9630-ed56e7bbcff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28b438a-c6e4-4be4-a431-80b1911f6d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0497b3e-ca59-4e1e-b0a9-fd8e399abad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480126c-5659-4177-8de3-7aa9c132d8e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a839b3cd-19a4-4c8b-9106-d757faf93ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83afe36e-8bdb-48a1-85df-642270c756ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331ea0be-97af-40d3-88f6-00c260bfd415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c8c7c8-df5e-48c4-8468-3743b7574b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f4635-b622-4f8e-8441-117b5c4330c8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d60643e-59ff-48c9-a4a3-ae0906f0c0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288a2405-5421-4a5b-b2c2-3edfb8ef463f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ae3ace-e043-4d4b-b401-6cdbc3b7d6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f2e73c-dc1a-4777-8a54-7f2cfe013aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee72b1e-53eb-4485-9db6-c6eb1b3c04d5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c318aa03-6e95-41a6-b471-db1d1a78e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8292703-aa31-4f76-82c0-9879b5770085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8630320d-03d3-4b7e-adf9-21578225e903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af4fc11-edf8-41a9-b08c-7dcdbdb12e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf463ac-e7d9-4a05-be98-d6ebb1d6d386",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d21720-bb03-4067-9345-156a5375249c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67088f1-d849-43e7-b52c-b1781419ad0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a10d33-480a-4ac9-8304-89d80154ff63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b302faa-aef2-4efd-ad67-fada569f99e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc259408-26e0-4868-8fd2-eb3f3a011f7b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099819ae-b9a8-4423-8c4e-036d8614e64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04156e7a-a855-49de-9c97-d9c7dd7ab74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963f87bb-b289-4a45-ac8b-4f71e396cb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b8d8ff-d242-45b5-ab6c-213b00c6fcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea1b524-e994-409e-bcd0-02b9016d820d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d646d9c8-35f1-4307-b5c1-9edc0716c01c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19f19662-e961-4194-af93-c8cd62aaf746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b358b8a7-f314-44f7-a867-22a6d67f5dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03133d7-2dbc-49d8-a453-3817efe380cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74770bf-b037-405d-9e36-2df926ea23c7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a51c28-4c96-4e9e-8e44-f6038137587c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecbcba49-8c34-4528-bbe4-541d3e9c99ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4512719f-4af7-4253-8240-3aa76bd89617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272fe30f-fccf-4184-8dae-107b1634215c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d04ded-597a-4e4c-9323-69a2f505f25c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3e256e-2c71-4848-9a5f-3cbd87172eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8093c1-fbd9-4b26-907a-8e938aeb09c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd53f25-748f-4bc0-9111-cf6b397c1193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db48e46-ff7d-4155-b0ca-b5ab8ce06dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cad750-c7b1-4197-89a2-18e51aff85c5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acae147-704b-4fac-80a6-7889e8dcd1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b110d6-9a35-46d6-b0fe-561b34f64f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78de9de0-d7b0-4809-bb48-7fc18c897c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314cd43-7dcb-4ee4-b0e6-42ed0391dc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c7bbf8-7de8-4e8b-8bc0-2729185f7646",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9e0b3b-e922-4509-8004-8046dc3205c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18de535-2b3d-4129-96ec-cc659dd81815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba4fa27-34ec-466c-a812-0ef4bba15d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eafbe90-78db-4c24-991f-89433c23108d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7456fdb4-faf3-4df8-8ff7-262b5eec85e7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b900dcf0-0d08-4791-b400-ed4aca29f07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1f9826-9979-4bc2-a152-49ec2a0b6def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425bd0fd-f3df-44f5-a000-76b40b27ed22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7e5f2e-d42c-4842-9a89-0c161494ee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f1bcd-b7c5-4b90-9159-5999815919a9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cccb40-a4ba-438e-8566-b0a5a7e0834a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc6754f-84a8-47a8-aa31-f1d52130fae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e693f9-16cc-457e-be3b-95597cc2db8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99463c18-0ed7-4ff2-b02a-86715c24fd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9b2734-b2d5-4e19-b9e7-507443bdae12",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e16fd-ffd0-40c5-b031-93bd360e037d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f8b976e-d881-4b32-9ccd-648c45d548f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf4d56a-1754-4d3e-bdeb-22319e885551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d26808f-f284-4284-86ca-bb8b2028485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec405d64-1e15-4ccf-8c12-9db3cc0a4f66",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df50ff42-e1a8-45c0-a0a8-b6b0773616fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b92577d-36b1-4565-9939-2c4587d3b036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74c5dd1-7600-4ca9-b465-ed2f2be25956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4300b89-3e33-448b-aa88-ec2bf61ca52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f5dcd0-1770-4192-b972-bd0fbfb7ec87",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5584a151-30fe-4d21-b5ea-d18a2c43f160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f8fce4-cb26-482a-b4e5-c37bce2907dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb9034f-7f83-4c1d-a18d-3a7382d5b2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f20998e-e6d7-49c0-ae81-8fa13ef5ef49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5ef78b-dc76-4d9c-9c1f-fcae823510b9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82fc430-302d-4fb2-8239-429e54f01b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a72f59-8291-4c74-8d3c-d7653defa890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e8e2e-ab27-44c0-9517-f73a81650132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0be10ba-0f71-4140-a790-e2b44d3bf534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6b5084-4381-46dc-80a9-b26c7d37d892",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316fded6-fd90-4175-8f40-c26ca83f8e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be05570-55b5-4787-bdbc-2eb002ca1631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8859794b-10b4-4678-8693-09ae90494fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd535552-458e-4b2f-8946-0ea5dccb7d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be67326e-5f86-4e22-a2f8-f66ae9dab273",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650ec965-2d6e-4285-afd3-af88460eca63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550797d1-e08b-442c-a5e4-6c0f1cbeb441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfcc1ce-4d7f-401b-ae2d-358dec91c1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832df3e5-7882-40c6-873b-49aea54bd74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005c47a6-da1d-4bcf-863b-f2de7c52a80c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ebdbd9-96f9-48f4-a87d-59b2ba9bba04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f385873-d697-447d-a351-88ddb63589da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bcf2e8-2a36-40d4-8f34-8d50daeb0e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432b6930-d5e6-4a41-a938-860c18932ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d9eab2-ee3f-4710-ab2c-7b1c82e59a55",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080093b0-5811-407d-bf58-d64993f96569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ce93c7-80a3-4196-aded-ba42358132af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc29b4a6-b30d-4dbc-b75f-e95e885c29ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e2e7ed-a2c7-4c23-b002-7a95c6216653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858f8735-f70b-4edd-a913-aca5d884de49",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f59d54-2417-49a3-8dd8-b6c4ea09734b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66084674-c92e-40a9-90db-61a9e4e3dfe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a304def-adc7-48af-a058-13144f1e8562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a2fced-eb3e-4793-a9da-6145eca919bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc13e5c-0d5d-4fef-8080-241e81950f54",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1671d090-0985-4536-8bb1-dcc588d52120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba4b8b8-9767-40b4-9550-dd57ac82d35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82c861f-0fdc-4eef-b812-962ac986ec73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b83bf0-1785-418d-9205-d6c59c682bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08557121-8cd2-4b1d-80ac-7712b669d661",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0a4a6a-eceb-4df7-bb99-1e106c3de08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf47c61-6390-4a0c-86d0-e2968003472c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e73119-9799-409a-b008-abd1fb0d39c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8f806e-6433-4562-8d0b-e7afd12ba6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a33063b-4158-4859-930a-f66dca5299fc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbe92c2-428b-46a7-8b7d-4402fe41a403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "490795e8-4aad-4a95-928d-272844e13fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c54fec6-ae9a-47e3-88ca-1d4c14dd5020",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e35886-0054-4d92-b19e-8fc848382139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e52c6d-0980-463f-b1c5-b31fa8ebeb02",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaac2b6-e0b6-4bf7-950f-6180018617a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be63b60-42fa-4c99-b8ac-71f30c8ce662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d9e0e9-8af6-4949-98db-36f7eadf53b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5778f1b3-a5e9-4cf2-b3cb-840eaecb3d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e353939-7ef0-4b1b-b314-65915ad7bb20",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c9e5b2-f1a1-40ef-a052-1779644c4a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997a18cf-e474-4aad-8f28-b7cfabf549c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f033bc43-7f8b-4c45-9859-1667d133d898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06811b6e-8d91-4fa8-8a78-3a4ea34821e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0f0bf5-4463-4f40-8e70-57466ceccf42",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36429658-75fe-4ae0-af31-0090ba431d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5431526-83ef-4580-b91a-340f21156383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc001d93-8602-49e4-ba1c-8b25a4323659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6321f361-8066-4c5d-901b-45a87d55ff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0233a2a-0dca-477f-a24f-91acdd570d90",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5346a52-15a0-4a8c-a621-cd627d5bf9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157a771f-1a08-4f0e-a75d-0e49c3c70aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4623129d-0c23-4e84-9b41-a4a93c02cbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeeca965-d2cb-4f96-96a2-64b8265ad8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87edfd5-5720-416b-96b7-05484a9138d6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7793d1be-598c-498f-8fec-cf95a0d599c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f957b1a2-7bac-48ef-8be0-a1431bb7a3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90a1bd6-ece5-4fd7-ab1f-25a5abbf1ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060a8fcd-c9ef-4765-95ea-b31920a58360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39adb93e-8331-46d9-8cff-ef6f2ae0afdf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc6378-b4a6-4a07-a4a9-d160ea3be1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13609e98-7f05-4592-939d-ab4b4281edb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b202ec2-6bd1-44ff-bdf4-2febb3bca94f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75031e17-0f36-4281-bca0-4a661ea95086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f231983-70f2-4076-846b-2dec23aeda3a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb007e34-d669-48f7-9781-550a5eec1ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc2dd61-581c-4692-ae8e-70c3685de39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94dd79a-18d9-48c7-bbbf-8f3f0f526510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb04a94-5885-4224-91a2-be88e6f1eae7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1039beda-3d98-49d0-b32b-2dec2bcd3f00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfbd4cc3-e574-4830-87b2-44220b2fc49a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f65c314-401d-4804-b388-a518643a9fab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eaf5fe5-d04a-443b-9bea-6d589489fef8"
                    }
                  }
                ]
              },
              {
                "id": "4cb005a0-b528-4d43-934a-59ee1a076b58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbdc1deb-d714-4e11-871e-d28a014505e3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b70475e-4586-447b-a34a-95c21f04f1c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ef3d2ccc-6dca-40de-bc66-792c7053e4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d34d05-cd6c-4e0a-9957-33f6886ea507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4584ce84-bf65-40f4-b20a-31e829850a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2885c0d4-d52e-4b03-995c-b42cd9d40d77",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bd0038-4ebe-4b74-9e98-fc8538ca4faa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bd291846-ff95-41c8-ab1d-8dfcf0ac678e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d0990-13fc-4aae-8d9e-e99fd6e68ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e1ef257-aa7f-483d-991c-6674300b47a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "028dc3c2-4e46-43f5-84e7-27287ce1b71e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "924ba2c4-bba3-411f-a829-3800edb99674"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d79c2cda-150d-49da-b0f0-84938628787a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b08bb2b3-6530-4a14-9cd6-5199d3df6f4a"
                    }
                  }
                ]
              },
              {
                "id": "61150e28-7a1f-4817-8398-e9a91ca75ca9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f2f2d9a-2518-477f-be0e-5337d0058629",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d44929-8c26-446b-ad5c-b6ad66a4c6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "58039b8f-9074-4769-94ce-87d09c180065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4a5153-af57-4b54-adaf-563685a37b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b722782-1f1e-4cfd-9bb0-031d211f43c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82aaf384-5f4a-4d17-8f42-b9a5e269e2be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10db6ff9-3fc8-4a04-a827-842748042581",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f70b693f-c0c7-4785-b027-4404dcff4b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a11b0c37-5eac-482b-b8df-c481f2ab6c73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f0aae3-451b-401c-8d30-c33ec3228acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0c83694-3315-40a5-8151-e379f30d85d6"
                    }
                  }
                ]
              },
              {
                "id": "b6efb7d6-b09d-404f-9047-ba0b98eee688",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e237b9-1c62-4b01-b20c-b59e1311c742",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b99895e-3803-4315-b8df-caf1255e5270"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bf99959-935b-47c6-a386-43edf426d3d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4322a4e6-f696-469c-947b-a39dccb0ed48"
                    }
                  }
                ]
              },
              {
                "id": "bedd90cc-47bf-4dad-9d02-c38392382703",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "317101ff-8943-468a-9ea2-a1db0bccc44f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6e8b21d-6b73-4ee7-900d-d07a78841de0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f5f3912-45f4-4fa2-9eaf-080f83c25791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa597a47-25c9-45f5-9599-f2c544a26bb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f005abfe-400f-4b8e-a062-bfcaad348321",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a9eb8fc-b3fa-438a-9f59-25c69db0502c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425dc96f-47ce-4695-b2ba-c80e2f0bcbb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0459236-16e2-49a7-ac0b-4261b8744699"
            }
          }
        ]
      },
      {
        "id": "ac172145-e0de-4cf0-a555-6df32aa32c07",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d8cebea-bb1b-454f-bab0-05a44c4fa763",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b36797e0-97cb-4c90-8d31-c3c4cd22ca20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bec37b-fd21-4912-b329-ec7f93095a29",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d2e7297-f45a-4028-809e-9a6acfb27757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a2a760-613a-4a59-a5ef-71ac8974ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d2df851-79ce-40ae-983e-9bb98398a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013ca018-6d60-46ed-8eb1-43db732accc8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce236349-0114-4816-834d-cfbc10f9e7db",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd103006-8dae-4783-a495-8ef788ed7e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8552aefb-c396-4ff4-9be8-24342b130f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dfadbc3-aa7f-4939-9831-00d53232e373"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0341b883-0ba1-4d52-92f0-0ffe40f421bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72d081c5-a155-4c14-9185-67d13aca361c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f47d1b9-75b2-47c8-8c9b-052213990440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b5d05d7-40c2-4628-a772-6fb44b3ca788"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c2106ee-a1b0-409c-8d29-637ea50522ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63a3392a-68a4-4d58-82c3-67fdcd6ffb7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a68423eb-2010-46cd-8e55-c9869a6e15f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6de12406-da52-4b68-b25a-25508175b9dd"
            }
          }
        ]
      },
      {
        "id": "a4feb40e-4313-467c-b9e0-61df6afe9b7b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a177092-12df-415b-9c7a-f87760a58f39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "445599f7-b78a-47ef-8b02-4be4a81655d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a724c645-0676-4c28-b97f-6823a1b1d473",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23614ba3-1b2e-4568-bb9f-1c234dd6826a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "afd30a89-8dbd-4d49-9dae-11771ba7b85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa72abd-c446-46b6-ba1a-87703d53be39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8376c62-dffb-4952-8eac-99c8b14cef51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617c5c1f-3184-4c76-b27f-ee49cef1a159",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3447fd6-900d-4f26-9605-140d8cbc38b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f82829c1-a4ae-477e-b9c0-77fc4a728ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc1a3ad-0cce-4087-9dbf-0ef36e5c1eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46d826d3-d44d-4b6e-8129-dc48c5cd9391"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72ae555b-b7e5-4eec-9cea-4d2725475901",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34f0e2a5-5ec1-48c3-9479-2cc89c30c6e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ac833ef-c87f-4c79-bb5f-c010134c3eca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d15d08d-ab67-4eb7-9606-d5071b4488e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6af49d7-45da-4a99-8ac5-fad3dd860257",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5f96f015-03d7-478e-a70d-352b389ac366"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc4886f7-2371-4f1c-8408-b83f132fa3af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f524473-c687-47ff-8e32-7d636bf4c61b"
            }
          }
        ]
      },
      {
        "id": "16ab0417-cf73-48c0-9256-5262742845dc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8b95d830-b512-42ff-8ac1-6760cdda78a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11ed536e-1a7e-449e-9490-307877aa2c87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "616f3e8e-e917-47a8-8cb3-34a7c392d8dd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f600479-6cbe-4ad1-ad2b-3da428d05e4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "296ed819-e6a8-4b97-bab6-c2152582a172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e44ecc-13f4-41cf-bc6f-2313548c5c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af62079a-c29a-4224-a6fd-db6cd4ceb19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace21a63-1be3-41e2-896f-54c8072a1940",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd06160-34a0-46c9-a1c9-2f68217a6648",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec570d67-6a98-42cf-b536-066193e899e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a04651a-8006-4bc8-858f-d8b9a6bf88c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d207d0ab-51c3-445e-bdb8-f1286bc403cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0697f314-c291-456b-ab23-f43aa81cc1f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d68b4902-ed6d-4bd4-b8e8-63508d003744"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b357968d-1854-4c86-96f7-8f7c3da0edd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a45f422-9045-471c-8f4c-f7884acad662"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dee74b6a-df27-43e9-b1f6-7fc4a36112aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dd3b3a49-eabb-4824-a3d8-d00d16dc6af0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a7deb67-973c-48eb-8216-16d25b25bce7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6cf0fd0-a2d3-4c20-943b-647bdfaf1471"
            }
          }
        ]
      },
      {
        "id": "57425ae5-c158-4934-81cb-173e83af76e8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3029e78-255e-439f-ad05-8082266e4c89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27030901-88e4-4cda-acff-ccecae5ffe28",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bace064d-0843-4edb-a9db-95b04514bc75",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc67d511-fc18-42e4-95b4-858e8b241917",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acb34787-7d85-4168-ae8d-31bdf529d905",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 491.5095785440612,
      "responseMin": 10,
      "responseMax": 3278,
      "responseSd": 411.10333379538196,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669509819987,
      "completed": 1669509959044
    },
    "executions": [
      {
        "id": "e9df2e7a-f651-4bd9-9abd-a9dd06672a22",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32a5ef84-7bd1-49f9-bc8a-04880f9cbd73",
          "httpRequestId": "48464b03-4e90-407b-afbe-9f5ac0fe31b9"
        },
        "item": {
          "id": "e9df2e7a-f651-4bd9-9abd-a9dd06672a22",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6c542bcf-6daf-422e-935d-e5679820de29",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "30dbe9d6-ec89-405c-9625-f4f186a7057b",
        "cursor": {
          "ref": "31af7c4a-5508-4164-a39d-40b63c584133",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "149f3930-912e-4f21-86f8-ae2b3599b164"
        },
        "item": {
          "id": "30dbe9d6-ec89-405c-9625-f4f186a7057b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8b5370b9-6b54-415f-a756-aa1a00cb19d1",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "18fcf6b5-5acd-4f3a-b17f-ed5183675c3e",
        "cursor": {
          "ref": "21bab00f-c34e-42ec-9800-9a267db8404d",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "039fd581-0d2e-4403-bab4-5f106d4e86a2"
        },
        "item": {
          "id": "18fcf6b5-5acd-4f3a-b17f-ed5183675c3e",
          "name": "did_json"
        },
        "response": {
          "id": "5d264ca0-766d-4e95-9a07-c7509ff6b34b",
          "status": "OK",
          "code": 200,
          "responseTime": 764,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae5966-6078-4dc0-aa46-f4ed5da824c8",
        "cursor": {
          "ref": "e46222a7-133d-49e4-b679-0103d765b756",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81b15b03-b5e6-4943-9adc-94d761412ffb"
        },
        "item": {
          "id": "81ae5966-6078-4dc0-aa46-f4ed5da824c8",
          "name": "did:invalid"
        },
        "response": {
          "id": "213fc295-4dec-48d8-b216-e4021ff8d5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae5966-6078-4dc0-aa46-f4ed5da824c8",
        "cursor": {
          "ref": "e46222a7-133d-49e4-b679-0103d765b756",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81b15b03-b5e6-4943-9adc-94d761412ffb"
        },
        "item": {
          "id": "81ae5966-6078-4dc0-aa46-f4ed5da824c8",
          "name": "did:invalid"
        },
        "response": {
          "id": "213fc295-4dec-48d8-b216-e4021ff8d5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263f2832-7412-4984-9ad4-93f47f1151b1",
        "cursor": {
          "ref": "c0f38e4c-dae4-455d-9999-a8cd7d9f19ee",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "59dec1eb-c72b-4987-b9d0-ae215ee7229e"
        },
        "item": {
          "id": "263f2832-7412-4984-9ad4-93f47f1151b1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ad396039-b6d3-42d4-9d34-812988e7b32d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 627,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f240a6f-40a6-4895-b9fe-aef9449a97c7",
        "cursor": {
          "ref": "1d8e699c-f2a6-4fe9-a104-080b827f7184",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22bd84ef-502d-4449-90a5-64fe5d6d8d15"
        },
        "item": {
          "id": "0f240a6f-40a6-4895-b9fe-aef9449a97c7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "14e98b0b-d03a-4a27-bb8d-4ec0ab739cb6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 535,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aae935-d9ef-436e-8d8d-8a3c0f932a73",
        "cursor": {
          "ref": "07be8a2b-c585-492e-a003-31fbf6315e8c",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d1c3fa8a-2ed5-4010-8cfe-c56289d5f84f"
        },
        "item": {
          "id": "57aae935-d9ef-436e-8d8d-8a3c0f932a73",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fbfe5f7e-c561-44bf-8f4c-58ed1aad880f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d09cf2a-6bab-4bb1-bf22-86d1b406dac4",
        "cursor": {
          "ref": "c10e7498-c27c-42a4-949a-6e3a195c03ab",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e20dc3e0-bc4b-47f1-9b27-3a4fffb9d6cf"
        },
        "item": {
          "id": "5d09cf2a-6bab-4bb1-bf22-86d1b406dac4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "424d886b-eae1-42b0-8cd4-a11aba4ea610",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d09cf2a-6bab-4bb1-bf22-86d1b406dac4",
        "cursor": {
          "ref": "c10e7498-c27c-42a4-949a-6e3a195c03ab",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e20dc3e0-bc4b-47f1-9b27-3a4fffb9d6cf"
        },
        "item": {
          "id": "5d09cf2a-6bab-4bb1-bf22-86d1b406dac4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "424d886b-eae1-42b0-8cd4-a11aba4ea610",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6ab0d7-92c6-4939-a910-7b9fb9075929",
        "cursor": {
          "ref": "9f4d1de3-639d-40f6-8a6b-2b3df28af4d4",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f36af09b-072a-4aac-a6db-86ce6c395d35"
        },
        "item": {
          "id": "5f6ab0d7-92c6-4939-a910-7b9fb9075929",
          "name": "identifiers"
        },
        "response": {
          "id": "a6919f7a-52f7-48d3-b121-df133fa94172",
          "status": "OK",
          "code": 200,
          "responseTime": 760,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571757c8-d397-4b02-baef-7ae4f8a19eca",
        "cursor": {
          "ref": "ce2faf0b-4ff8-4545-bde8-827c59e76fa9",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "03068609-0029-4275-bacb-9438abfedd14"
        },
        "item": {
          "id": "571757c8-d397-4b02-baef-7ae4f8a19eca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4039b69-8696-456f-8a97-6b07d9fd7afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571757c8-d397-4b02-baef-7ae4f8a19eca",
        "cursor": {
          "ref": "ce2faf0b-4ff8-4545-bde8-827c59e76fa9",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "03068609-0029-4275-bacb-9438abfedd14"
        },
        "item": {
          "id": "571757c8-d397-4b02-baef-7ae4f8a19eca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4039b69-8696-456f-8a97-6b07d9fd7afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5b13fa-b99e-4bad-a7f7-a877493e14c7",
        "cursor": {
          "ref": "972b394e-535f-4b3d-97ba-12d2f6bd5aeb",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c5c8eb51-e705-41ca-abc3-aac9cc514a19"
        },
        "item": {
          "id": "3e5b13fa-b99e-4bad-a7f7-a877493e14c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2f440437-2a8b-4246-ab29-4d47bbf92ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de470f9-6fe2-4393-bf3a-885efa09cf08",
        "cursor": {
          "ref": "8d1ee318-f66e-4c72-af22-e8630297d2e1",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "820805b4-f8c0-4c74-a339-0242746baf9a"
        },
        "item": {
          "id": "9de470f9-6fe2-4393-bf3a-885efa09cf08",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c59be9c5-0e15-437b-9622-6e255ae4fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4963af2b-9d65-4945-a748-f0e9983bac6e",
        "cursor": {
          "ref": "60dde455-c6d8-4c7f-bc84-c302e1d25e6b",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "091e3bfb-0720-4a18-8a78-cbf7a79f746d"
        },
        "item": {
          "id": "4963af2b-9d65-4945-a748-f0e9983bac6e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a9060734-3edb-4ad5-83b2-3cfc6924a565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4527463-869a-4c3b-b4a5-eb02277b0c47",
        "cursor": {
          "ref": "06893b6f-9186-4fda-8130-9a88dfa670a8",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "19fa49d0-3770-4e5e-8073-a24061578b16"
        },
        "item": {
          "id": "d4527463-869a-4c3b-b4a5-eb02277b0c47",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "af3b73e6-989c-40a3-a0dc-b570a12c0730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8554c539-6e21-48dd-a20a-4116ee4bb85d",
        "cursor": {
          "ref": "d35a6f59-a5e8-4bdc-a9ac-f8e5ae01741c",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c9c24511-ea42-4174-abd6-486601df0867"
        },
        "item": {
          "id": "8554c539-6e21-48dd-a20a-4116ee4bb85d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0802246c-9f9f-4d17-ab6f-4ec7cd3fd884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7becf54e-2927-4061-bfe3-9d9d408d09c5",
        "cursor": {
          "ref": "a1084b06-be4e-42ca-a1f7-1a95c80c943b",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0aa23484-13b1-4a04-8e2d-fd7b78f5e5c1"
        },
        "item": {
          "id": "7becf54e-2927-4061-bfe3-9d9d408d09c5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f835f72-548f-4f3c-9bae-5c7ec291a6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1e2f80-464d-4e99-b4f3-1e8646d81631",
        "cursor": {
          "ref": "8cc631eb-5025-4bb4-9cdb-39bb10aea2c8",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c54b71ef-6a67-4d0f-b77f-0ba80df18b04"
        },
        "item": {
          "id": "0c1e2f80-464d-4e99-b4f3-1e8646d81631",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8dca8ec1-604d-40f9-84b3-cdfb012d0ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b404d7-1b30-4fca-ab68-1b5e27bbc185",
        "cursor": {
          "ref": "4ac160fe-940e-47f6-b86d-c8d32bf264d8",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "26edc78a-c91e-46bb-85b0-046a0720a1eb"
        },
        "item": {
          "id": "03b404d7-1b30-4fca-ab68-1b5e27bbc185",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c785083b-453f-462e-a4d0-affe9ef32990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39c5d8a-3322-413e-857a-47948486647f",
        "cursor": {
          "ref": "d4072a72-1144-4258-9ca1-14a166599504",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "260bc288-629e-453f-85ec-dfdd9df18459"
        },
        "item": {
          "id": "e39c5d8a-3322-413e-857a-47948486647f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "36330eba-e0a1-4610-bdbf-54b8c160c876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2316415-cf05-4f9f-9af4-992fda4085a6",
        "cursor": {
          "ref": "2ae2093e-d2c0-436a-9c9f-2f19b5cc3207",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8b772d3-79e3-4745-8e59-6b5e26b4f14d"
        },
        "item": {
          "id": "a2316415-cf05-4f9f-9af4-992fda4085a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b41ddd65-e2f5-4e7c-910b-a4b03f177f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fb5039-b66a-49ef-8eae-488b35ff2b7b",
        "cursor": {
          "ref": "2fc135b9-5246-4349-9c0f-57bdc52536c0",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "29e5a8ca-d3ae-4bd5-bd21-abcd373f9aa2"
        },
        "item": {
          "id": "29fb5039-b66a-49ef-8eae-488b35ff2b7b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "555d8996-5098-4761-90a3-acc50dbcf82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7360b22-85b2-4b33-a998-809695b9a2a9",
        "cursor": {
          "ref": "3330eefd-13e6-486c-892c-c2e5d047bfa4",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3bcdee89-3e43-4fe0-bbd7-ad55caecd2e8"
        },
        "item": {
          "id": "d7360b22-85b2-4b33-a998-809695b9a2a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "38f29bda-4192-4474-8137-c04a006bfeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8741954e-253a-4472-a507-5fc21a3a0b08",
        "cursor": {
          "ref": "8bad1770-5fc3-4833-8808-faa1699ce6f1",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b1b59273-6b8f-47e5-a4f3-c90abef124aa"
        },
        "item": {
          "id": "8741954e-253a-4472-a507-5fc21a3a0b08",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ec356ae2-f4b0-4d43-a29d-0a55dd8c279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186ab359-8cd0-45f2-a8d5-53c9571935b6",
        "cursor": {
          "ref": "4575d0a7-7ec3-4384-8ce0-67c47930a902",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10d5d282-2290-4c3b-9d2d-3ec71d8658cc"
        },
        "item": {
          "id": "186ab359-8cd0-45f2-a8d5-53c9571935b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b33c7f90-c64b-40ca-9f4f-e2e553bf17e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcaebd9-733f-49d2-afc6-9096064c31ca",
        "cursor": {
          "ref": "96f28cb3-aa2a-485c-8fa9-a73e73cfc49a",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "749be1de-fff5-4daf-b15b-ea74c766cd01"
        },
        "item": {
          "id": "edcaebd9-733f-49d2-afc6-9096064c31ca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "53ea5459-e6e7-4655-b5db-164acd943aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b221778-ecf2-421c-8d44-96e96d520e0a",
        "cursor": {
          "ref": "5e2e011f-9b6d-4803-9975-b758e8b174b3",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b4eac2b3-6b5a-46d9-a03d-99025cc6d03b"
        },
        "item": {
          "id": "5b221778-ecf2-421c-8d44-96e96d520e0a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0c88d31e-d86c-43bd-8d5a-69bd88503509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2f7f4-92a5-4b9a-8f99-870213cabf31",
        "cursor": {
          "ref": "32994854-2f82-4882-8601-9d8c5fcc75bf",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "02b7427d-365c-47f7-8a6d-deb8fb0ac09a"
        },
        "item": {
          "id": "6cc2f7f4-92a5-4b9a-8f99-870213cabf31",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fb64f024-db10-431a-8c42-e28a34c7a2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d7611e-aad8-4c0f-b108-3c9a5d9efa55",
        "cursor": {
          "ref": "8877b75f-7b02-4715-b301-809656a19e96",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4aef1d44-6dca-4f6c-8d78-232b57cab572"
        },
        "item": {
          "id": "e3d7611e-aad8-4c0f-b108-3c9a5d9efa55",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7daa3897-f9ad-45af-ba9f-7dd0463264e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4cc29-82e2-4489-9d9b-e4d957dd2d57",
        "cursor": {
          "ref": "09f77cfe-d7e6-476a-8d4f-50506a5ef462",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5695635d-8bc6-4caf-a2fa-4aef0bbcf0d0"
        },
        "item": {
          "id": "11c4cc29-82e2-4489-9d9b-e4d957dd2d57",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "521a5d24-c3ea-45b4-9426-b41e1b29a688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1196812-98d8-4f74-ab6f-bb35931a48c4",
        "cursor": {
          "ref": "4ee7c045-d4fa-4e9e-b8a6-1a3744118b50",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2f06867a-4100-4691-b987-7637d42835bd"
        },
        "item": {
          "id": "f1196812-98d8-4f74-ab6f-bb35931a48c4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8e130126-f1f2-43d5-ac9b-20a91768298e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65771e48-1101-4ec0-8ec7-266d667af57c",
        "cursor": {
          "ref": "7647aab7-24a7-4337-89bb-3f5cbbc1a300",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d61a774-095b-4e4d-9ca5-11c4cd61e116"
        },
        "item": {
          "id": "65771e48-1101-4ec0-8ec7-266d667af57c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6d612c53-6851-4938-89ee-ff9e345ea219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaffef2-9157-41ca-8d29-f8ce04547b47",
        "cursor": {
          "ref": "25a79e67-f9df-42bf-8162-be82fd2a05de",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "28db14dc-f938-4e6d-9bfe-0c143e834243"
        },
        "item": {
          "id": "bdaffef2-9157-41ca-8d29-f8ce04547b47",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fcd385ee-eba8-43e3-86a3-c402be1594f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf7bcf3-8057-44bb-b7bd-e0b90d6d95c4",
        "cursor": {
          "ref": "d4a4b3dd-6323-4eea-8741-b27c93d688ab",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c62b240d-7c5a-493a-9fd0-e37c91626430"
        },
        "item": {
          "id": "acf7bcf3-8057-44bb-b7bd-e0b90d6d95c4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a6eeda62-9d47-481a-b79b-ad394576c292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42fd47d-1555-45db-9bae-791688841e11",
        "cursor": {
          "ref": "d4c6c272-d6cb-4132-a887-d698150aa4b4",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8308a3d3-4c60-45c6-b6de-f0b118d399d3"
        },
        "item": {
          "id": "e42fd47d-1555-45db-9bae-791688841e11",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9494b0e8-0be7-4e5d-b4be-66fb27346d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e132e8-d191-43e1-93c1-15c68ea41a7b",
        "cursor": {
          "ref": "fbd35d89-315e-4095-8e60-e8463864aa81",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cccc7c50-fd94-4cca-a985-fc0b4cd96ae5"
        },
        "item": {
          "id": "99e132e8-d191-43e1-93c1-15c68ea41a7b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "07429e7b-d87e-4107-bcef-002b5174195a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d3405c-9aa0-4ad2-98b6-c26f8a791c00",
        "cursor": {
          "ref": "d4d53e69-313c-4d8f-ac2c-ffebc7e53f58",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6f2dbb81-82de-4f4d-b9f4-e97cb8d492ff"
        },
        "item": {
          "id": "a3d3405c-9aa0-4ad2-98b6-c26f8a791c00",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cbd6be85-af31-4f86-b4fb-cd330f2711e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99837de-b435-4edf-9e83-4386250078e1",
        "cursor": {
          "ref": "b53ace8b-8a86-4a9b-8d02-faa51e451f5a",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dc041dbc-42c6-4a3a-9a70-cd147597ef79"
        },
        "item": {
          "id": "a99837de-b435-4edf-9e83-4386250078e1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "72c09e6c-82af-4b77-8daa-4e5f04772367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb5bec1-05c7-48d4-8a33-9f21ffc053b8",
        "cursor": {
          "ref": "6965d9b6-d723-4e10-a3b2-fa354489706b",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9ecdf755-b081-49ca-a5b2-54f0f4e1ce85"
        },
        "item": {
          "id": "edb5bec1-05c7-48d4-8a33-9f21ffc053b8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "612541eb-2716-42ec-8a1d-e9f23e4de779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10afea7-b89c-4ead-a51b-fbdcc99be7af",
        "cursor": {
          "ref": "9bf214ba-2e7f-4516-8cdd-f472bac48a59",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ee286372-e556-4625-bd8a-48989abdc017"
        },
        "item": {
          "id": "f10afea7-b89c-4ead-a51b-fbdcc99be7af",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b52385e7-9976-4d34-ae2f-bcbacd571daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ebea2e-2236-45c5-8f45-9d452bc859dc",
        "cursor": {
          "ref": "70feeedb-9cbc-4753-9c9d-7f2e3a4e6ad4",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "49c13959-7ca8-4576-8484-61930901940c"
        },
        "item": {
          "id": "33ebea2e-2236-45c5-8f45-9d452bc859dc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "daa23286-0dfd-436d-9215-cfe186754c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e84b83-3f74-4df4-8c15-ea6fe6a8570f",
        "cursor": {
          "ref": "2241e94a-9354-40e2-988e-948351088f39",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "59dae1b8-19b8-4324-a8f1-a46ff27df2ec"
        },
        "item": {
          "id": "38e84b83-3f74-4df4-8c15-ea6fe6a8570f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "95315fa7-58c7-4b25-972d-12cb8d7409f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeae495e-e4ef-488b-ae44-e49cd3e03ba5",
        "cursor": {
          "ref": "f6e2f80e-e2f4-4270-933d-3f9505f8e16f",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dbb77a3e-c98e-4ddb-a8c6-b0426ccf5351"
        },
        "item": {
          "id": "aeae495e-e4ef-488b-ae44-e49cd3e03ba5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "11ece267-8d2e-492e-9c54-03aa1d8dd9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fde45f-20b0-490f-820d-b943cc6b4c8a",
        "cursor": {
          "ref": "ea0a863f-2aba-4c80-ae64-927546160608",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b07cf752-790e-4f98-97cb-4707cf67ff90"
        },
        "item": {
          "id": "58fde45f-20b0-490f-820d-b943cc6b4c8a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "21973544-a1a1-4ab4-a2e7-b809011a5063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e006b9-857f-423f-ac7a-0cf184c53558",
        "cursor": {
          "ref": "783879e0-2e72-4c6c-99af-eba2bf0cb31a",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1cb34c47-7410-4a71-ad5e-5fe0d23eb251"
        },
        "item": {
          "id": "84e006b9-857f-423f-ac7a-0cf184c53558",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bd9406ab-ad35-4c37-8b53-aa578f0a6beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75c5ac1-e2c5-4605-ab81-cf71ec19982b",
        "cursor": {
          "ref": "1f8041ea-f18a-4a9b-828a-3821f77a0f98",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c8f3031-f800-4043-b366-5e37c5e23d8c"
        },
        "item": {
          "id": "c75c5ac1-e2c5-4605-ab81-cf71ec19982b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aaa94e0f-f71a-4e0f-8594-d86486f77202",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 793,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560955c2-baf7-4e3a-b4ef-fb24fe7968bc",
        "cursor": {
          "ref": "26cdd762-f9a7-47f3-9373-cf2d6e55e4e4",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "562b59e1-527e-44fb-80c2-25d687c1140c"
        },
        "item": {
          "id": "560955c2-baf7-4e3a-b4ef-fb24fe7968bc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "54f74aca-4275-4903-927a-fe87075e6901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc9c3aa-fbb0-40ea-9c29-4f7a9f7623f3",
        "cursor": {
          "ref": "b6892a20-953a-472a-b379-a6edf27ead67",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f8db3b38-025c-4d91-a67f-8eb9ce3a61f7"
        },
        "item": {
          "id": "7dc9c3aa-fbb0-40ea-9c29-4f7a9f7623f3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0a245326-6b8a-4add-b603-da88d2fca50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2e3b21-54cd-4983-93ab-3bc17e4c8c5f",
        "cursor": {
          "ref": "e2850f12-300b-411b-a9b9-617615f61b8d",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b52e2419-96f6-486a-b723-aeb57b52bf83"
        },
        "item": {
          "id": "ab2e3b21-54cd-4983-93ab-3bc17e4c8c5f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "823f75f0-5464-46df-b5ff-b6f907cdee9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05d6802-de2e-4187-8f28-e386a67d1682",
        "cursor": {
          "ref": "a40917cd-50b8-4ac5-8e51-cb12f20f8885",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f39e1e26-10df-44be-98f5-24cfcdbef4ef"
        },
        "item": {
          "id": "f05d6802-de2e-4187-8f28-e386a67d1682",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "634d68a9-cf1e-4d3f-9e4e-7684e35ad67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879c4924-1b21-441d-b5aa-24434e464af1",
        "cursor": {
          "ref": "40995b16-37a2-484c-bc62-1ec3b39b5554",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "86a7ae62-6ec7-492e-876a-932904fba6de"
        },
        "item": {
          "id": "879c4924-1b21-441d-b5aa-24434e464af1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d923d18a-122d-4b48-a558-c558d8b89f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a40010b-948e-4236-b097-c93fa1954911",
        "cursor": {
          "ref": "b66cc3a0-4124-4063-9c26-ad0c98df61ae",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e90a2343-57f2-455b-8b0a-17aa47a65a24"
        },
        "item": {
          "id": "8a40010b-948e-4236-b097-c93fa1954911",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3ff3844f-5061-4e57-a2b3-a7f27ed8df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8f4274-8656-406a-9688-625f6f0e6e33",
        "cursor": {
          "ref": "0a908dc2-b224-4a0b-af6e-6453ed8dbe79",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "10eafd47-c212-492f-b51d-39bb4cdd23b1"
        },
        "item": {
          "id": "8a8f4274-8656-406a-9688-625f6f0e6e33",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "382985b9-984e-4ee6-a270-f66deaab3e53",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 631,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670b82c6-0504-4c1e-b493-e4635e73ca5b",
        "cursor": {
          "ref": "f351a334-f2fd-4cc9-9954-245565825f80",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "106c6a96-8db3-4ff7-a265-178975de611c"
        },
        "item": {
          "id": "670b82c6-0504-4c1e-b493-e4635e73ca5b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cf0a9229-eb0c-43f2-b008-1e3cd12263f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aef41c5-ab40-42c7-8cef-6ff76047316e",
        "cursor": {
          "ref": "9c875f80-6094-40ff-93b2-1c3459b3f223",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aaec8115-1cdb-49ac-bc50-8d7fdda40e6c"
        },
        "item": {
          "id": "6aef41c5-ab40-42c7-8cef-6ff76047316e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e683f919-7d24-4069-9ee8-30d363d74df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b120681d-f860-469a-8d10-1e44d7226cad",
        "cursor": {
          "ref": "5917c032-4008-4508-b1b2-b755b3b3b724",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6eca8898-2fe9-4d56-998a-39d9cf9a4296"
        },
        "item": {
          "id": "b120681d-f860-469a-8d10-1e44d7226cad",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dfadfa5b-eaf7-44e7-80a2-2eb090ac3d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2dbe67-d3e2-427e-aaa8-c45a89a1f35b",
        "cursor": {
          "ref": "c3afe69d-0b62-4bc2-bcd0-1b44eb012f0f",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cc5b25b5-9d69-4e14-9ed0-ea7a67904082"
        },
        "item": {
          "id": "ea2dbe67-d3e2-427e-aaa8-c45a89a1f35b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c8cd7d6e-5769-4eb5-8ce5-8475bea4f050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d7890d-5955-44a4-b76b-03cf9c749ace",
        "cursor": {
          "ref": "48b9e3fc-8048-4d08-b7c3-d976d1e1f673",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d1c58a2e-a65f-45c8-97b0-5e532315b1a2"
        },
        "item": {
          "id": "01d7890d-5955-44a4-b76b-03cf9c749ace",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "72518827-5eac-4d73-a3a7-52bfca04459a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d80072e-a773-4de2-8a6c-06f4b1ad3be2",
        "cursor": {
          "ref": "77c9835e-202b-4fe3-a2d8-435ebbaa6dc4",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4c0bb7d6-444f-44d0-934d-446239378bf2"
        },
        "item": {
          "id": "9d80072e-a773-4de2-8a6c-06f4b1ad3be2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a777ed41-2c05-49cf-af16-f31b709789b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d568dffb-6d43-4763-a40c-1ef459ed2496",
        "cursor": {
          "ref": "185ba09d-5d80-4389-9c41-f265957fce96",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73db0ec9-4b7f-4eb9-b232-e5748aaf378d"
        },
        "item": {
          "id": "d568dffb-6d43-4763-a40c-1ef459ed2496",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "52804faa-6378-4124-bbd3-7f4994ec58f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b76bd2-75be-4eae-a6e6-51b99f0fac77",
        "cursor": {
          "ref": "0e711cc5-2fcc-4069-862e-faa03eb69e49",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e9a018f0-c02d-4557-a5d6-fa81333c91b5"
        },
        "item": {
          "id": "54b76bd2-75be-4eae-a6e6-51b99f0fac77",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1acc452c-72b6-4628-9f51-e15a81a72002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f587795f-2a7a-4bdc-b2c1-d2937753917b",
        "cursor": {
          "ref": "db451d9d-8f88-46fe-9ae2-bd36384b4027",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8db79968-03c1-4fa8-84c3-430c538efade"
        },
        "item": {
          "id": "f587795f-2a7a-4bdc-b2c1-d2937753917b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "528a5fe2-657a-439f-8f7c-0527a84e5565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49929831-8dae-436e-93d6-1c5e1c819ef8",
        "cursor": {
          "ref": "be2ca08a-741b-4868-b4a1-776ed884a372",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8ded08b2-63c0-4521-867d-a108f1a55a66"
        },
        "item": {
          "id": "49929831-8dae-436e-93d6-1c5e1c819ef8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1abaff65-9404-4d84-9339-3be7e67134d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e55fe6-600b-4721-aa4c-5f129bab9936",
        "cursor": {
          "ref": "607ce5e7-b176-413c-ae30-974dc0825651",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4a0d3bb7-12e0-4437-89c9-8b6b54d61684"
        },
        "item": {
          "id": "18e55fe6-600b-4721-aa4c-5f129bab9936",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1f24a5dd-be0d-4a2d-a1f6-83eac6f41bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4109fc-3f78-4660-b70d-df5402ff010d",
        "cursor": {
          "ref": "eee6bd44-b4ab-4ffd-b1d2-1b9a8baaef07",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d736d54c-2d43-434a-ab94-37e09170c67e"
        },
        "item": {
          "id": "2d4109fc-3f78-4660-b70d-df5402ff010d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c4417f6-8a30-49fa-927c-7396c8d82a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea362b-7178-4aeb-a0a6-f124f99e1cee",
        "cursor": {
          "ref": "890e8beb-71d6-423a-b9f3-a4acac25df09",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fd11d835-a030-44ab-9019-f32f78be415f"
        },
        "item": {
          "id": "b8ea362b-7178-4aeb-a0a6-f124f99e1cee",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "60162a93-53f8-43c7-8c45-4787a72cc7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be232a6-d1e3-4fbe-835a-e8c83db28730",
        "cursor": {
          "ref": "417ab094-6327-4806-8c9a-c6f8b0256562",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "14a27b30-a9ba-4b4a-98f1-6f78e323eac7"
        },
        "item": {
          "id": "4be232a6-d1e3-4fbe-835a-e8c83db28730",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ba299f89-61fc-4da5-aa56-994de6446a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f72409-bf58-480b-85af-334dcba9deb8",
        "cursor": {
          "ref": "0d7b8fc6-28cd-4152-9c50-fe005561711c",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9c0f126c-a09c-41bf-8804-57a9ffb5f4ba"
        },
        "item": {
          "id": "18f72409-bf58-480b-85af-334dcba9deb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c19d9314-3fe3-409a-8ffc-382568b002e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9821eb7f-5797-42d8-9126-bfc6a4930ebe",
        "cursor": {
          "ref": "54f0acdc-46df-4d95-8482-76ef8b6a2f35",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "73925110-7081-4fb5-afd4-77cb2f906ca1"
        },
        "item": {
          "id": "9821eb7f-5797-42d8-9126-bfc6a4930ebe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0d703b0a-e46e-421d-a0f3-38a00710333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d8d0a5-1f3f-4aee-8a5c-c703114bccef",
        "cursor": {
          "ref": "372e59ae-21f2-4b85-b41d-7ddaa020881f",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f8bdd919-60a7-4218-b4bf-21ad6c78909f"
        },
        "item": {
          "id": "77d8d0a5-1f3f-4aee-8a5c-c703114bccef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a7842f9-58e8-4ac0-aec9-18367cca843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb075d5-82ba-4719-a5aa-060bc8bb823e",
        "cursor": {
          "ref": "d2df8ff0-5014-4c98-91e3-849d2d9d830b",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3c11369d-e10d-4871-94fb-358a43643f1f"
        },
        "item": {
          "id": "eeb075d5-82ba-4719-a5aa-060bc8bb823e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "107f9a53-ff9f-473e-bd7e-2b979f7c6c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b326aae-7808-42ed-965b-4b9b2bdb5053",
        "cursor": {
          "ref": "9e79a211-5a52-442c-a5ac-fc2c86d2ebe2",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2a295d46-a118-48a0-9891-31f94c061c1f"
        },
        "item": {
          "id": "8b326aae-7808-42ed-965b-4b9b2bdb5053",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "875e261c-5434-406d-b53d-7e30e4028ef7",
          "status": "Created",
          "code": 201,
          "responseTime": 2328,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "44518d4d-0798-4e68-849e-dbb7bf24e5c9",
        "cursor": {
          "ref": "d1b53716-2c5d-4c5b-b8c9-1bdb345bc4a3",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "90a756fd-d7bf-4246-a62f-02ec5edf2f65"
        },
        "item": {
          "id": "44518d4d-0798-4e68-849e-dbb7bf24e5c9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "65b10a3e-aa5c-4a5d-9795-0daaacf7f519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6717e166-e3ae-42a1-9aeb-535ab663ab6d",
        "cursor": {
          "ref": "c0daf435-ec0c-407e-9c1c-e280116a11a4",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca7491cb-a748-463b-be0d-342c6fa03fb9"
        },
        "item": {
          "id": "6717e166-e3ae-42a1-9aeb-535ab663ab6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a225440b-2549-4304-9e08-dc057c6aae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e06a93f-f37d-4fcc-a06a-554fd4f6abd6",
        "cursor": {
          "ref": "ee7d1eb4-b0c9-4ee2-b219-c674ea80d1a7",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8929c856-973b-439a-82d0-3600f00c1107"
        },
        "item": {
          "id": "0e06a93f-f37d-4fcc-a06a-554fd4f6abd6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eb825f27-b99f-4e22-8f34-74f8e13edf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d247d1f3-5304-4163-b307-04fe5a83181f",
        "cursor": {
          "ref": "b1faebab-59b9-478c-b4da-37ebd395278d",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "da5eb13e-57c0-40b0-89c8-9480111bba7e"
        },
        "item": {
          "id": "d247d1f3-5304-4163-b307-04fe5a83181f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1f93489a-31b2-44a1-9d34-aa747f3efff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912fc975-ecd2-4353-a93d-0113a73d9d44",
        "cursor": {
          "ref": "1c23494d-d9b4-40db-8023-94e47ac8f2cf",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "28b81e79-ace2-4df5-9666-463322278582"
        },
        "item": {
          "id": "912fc975-ecd2-4353-a93d-0113a73d9d44",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "493a501c-5d77-4832-a4d1-2da081ff531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc143f9a-0b17-447c-9708-a7487f6ab015",
        "cursor": {
          "ref": "ee795fc1-4217-4ab6-9754-92dd08c741a6",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "735c4c75-06a8-4e54-b1ae-66ebf704ebe1"
        },
        "item": {
          "id": "cc143f9a-0b17-447c-9708-a7487f6ab015",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3277751a-4d06-4295-9955-e3b704dca67c",
          "status": "Created",
          "code": 201,
          "responseTime": 2186,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "500188a5-0668-49bd-b8d8-002533e616b6",
        "cursor": {
          "ref": "2b6cd9f0-e3e6-40dc-a2ed-eef9f8c40f62",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6f9db85b-0a45-4e20-8184-8cbf7bc19d13"
        },
        "item": {
          "id": "500188a5-0668-49bd-b8d8-002533e616b6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b0729dac-da6b-418e-a56f-dc5ecd0bed3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27947a6a-319a-459e-b048-3ddf1d5ba9e7",
        "cursor": {
          "ref": "958a5352-8f87-4e85-98c7-9900a3a8f4c0",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9661e750-0046-4ad0-8e27-14eebc4a1626"
        },
        "item": {
          "id": "27947a6a-319a-459e-b048-3ddf1d5ba9e7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e687394-37ea-4e61-84cf-96c9ffd934c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e358a5-31fa-47d0-87b1-f031a775e46b",
        "cursor": {
          "ref": "a9ebd205-1476-4cea-8f9d-c33310bb161d",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2243c804-cb81-49de-b11a-442d7bda9cc6"
        },
        "item": {
          "id": "c7e358a5-31fa-47d0-87b1-f031a775e46b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "84c38c40-837f-4ba3-ba0b-a3ebbeaf6b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a772aed4-5500-4654-beb4-3f4219fe79cc",
        "cursor": {
          "ref": "0aa7f5c5-07a1-4bd8-a97c-7fca961e70be",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "36b0e9ff-f648-4fc9-96a7-d36f407b84ad"
        },
        "item": {
          "id": "a772aed4-5500-4654-beb4-3f4219fe79cc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e7d44131-9cf7-47ca-b3b3-a79cb4be659c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ca44ff-1721-4c60-9617-86edb1ac5fdb",
        "cursor": {
          "ref": "8829d016-7f56-4ef4-aa89-d89523b26c5e",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "379a20c5-ae7e-4ea7-b07a-048c41438cd1"
        },
        "item": {
          "id": "f4ca44ff-1721-4c60-9617-86edb1ac5fdb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3760162-bf1a-473b-a53f-66ec22240d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b89e14-2d8f-4228-aaae-9a6b62afe844",
        "cursor": {
          "ref": "a11375f2-34a5-4c05-a7db-ced21946f8a4",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "894794d8-a1ef-479f-9db2-329bea38cfb7"
        },
        "item": {
          "id": "77b89e14-2d8f-4228-aaae-9a6b62afe844",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "de04b902-2a47-4cb0-a369-4d3fea2d0df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ce8b59-358f-400d-8466-a5be0f4628e8",
        "cursor": {
          "ref": "0b2d7d96-e280-4534-87a0-749600016d0b",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4ccbb988-4a0d-4709-a09b-c9595b7d0c6d"
        },
        "item": {
          "id": "e6ce8b59-358f-400d-8466-a5be0f4628e8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3e3cad1d-c91c-4949-901f-87cf454fdd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498d41c8-7edc-43ae-9fa9-0e51e64092be",
        "cursor": {
          "ref": "bd3c204a-b2a1-478b-a992-3728abafaf07",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "51e48d30-5bdf-4a4e-817d-84c419cff7f6"
        },
        "item": {
          "id": "498d41c8-7edc-43ae-9fa9-0e51e64092be",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "933f3052-3024-444f-9f9c-6175cab8db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85b01ce-3ffb-4c6b-aeaa-1a4c76c092cf",
        "cursor": {
          "ref": "1a566bf5-53e1-49a9-9253-4896a8798dae",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0c975035-ea3f-4150-9669-18b662250f1b"
        },
        "item": {
          "id": "f85b01ce-3ffb-4c6b-aeaa-1a4c76c092cf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "840a0234-1581-4518-a881-b52b45a42d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e716fe-8943-4090-bf81-4d6cade8624d",
        "cursor": {
          "ref": "61de2463-1add-4eeb-9686-f6ec6ed04000",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0cde907d-6f96-4ec9-bfea-f6fbea8dfd5c"
        },
        "item": {
          "id": "00e716fe-8943-4090-bf81-4d6cade8624d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3151e329-60be-4943-b024-40f304d2fb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4293865-9125-4bc0-9720-1330a6993311",
        "cursor": {
          "ref": "2b2d16c8-404b-463e-b5be-99ba934b8bff",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b0d60517-1e70-414f-b4c2-cbb07ac7448d"
        },
        "item": {
          "id": "d4293865-9125-4bc0-9720-1330a6993311",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ab078911-5f73-4260-aaff-4912376b1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b663efe9-4f02-4e6f-98b6-787933c239e4",
        "cursor": {
          "ref": "2d33f20a-7400-4ceb-8821-8d5e5001a97b",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "875a23af-cf27-4467-9ac5-0867c7b48200"
        },
        "item": {
          "id": "b663efe9-4f02-4e6f-98b6-787933c239e4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "15f08cb2-e899-4778-8f8a-12cf44f3cfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080eff11-aaa3-4595-965f-b6eb9700f509",
        "cursor": {
          "ref": "fac6a19e-4a34-4ecb-a4a4-26a8c212ebaf",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6e083374-1ab2-40a0-894d-0258824332ac"
        },
        "item": {
          "id": "080eff11-aaa3-4595-965f-b6eb9700f509",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0201a59b-2533-4aaf-9374-fa038a1ff84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c04b94-760a-4ef7-b9da-50064fcb5668",
        "cursor": {
          "ref": "29c4951b-7d00-4298-a39f-2e8b7a906dc1",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2a4cb807-a589-4e1a-bfff-0b095ae89b01"
        },
        "item": {
          "id": "11c04b94-760a-4ef7-b9da-50064fcb5668",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dd10b4d4-3af5-4d48-b066-2badde748933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0bbdc3-5659-4e18-b180-08ffa0b0c0de",
        "cursor": {
          "ref": "b15e003b-b4cd-4a6b-9ad3-2996b2355ce8",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2e236d63-68d2-40d9-9e9e-b919048e6cab"
        },
        "item": {
          "id": "4b0bbdc3-5659-4e18-b180-08ffa0b0c0de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a68fe2cb-a38e-492e-a00c-5e31e8f15053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d3624c-c396-435a-afcf-af6cc5a28841",
        "cursor": {
          "ref": "0fc157d6-526a-4e2d-9568-8045d1c664dc",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d02721e9-5c05-4617-aa11-0d29337659e8"
        },
        "item": {
          "id": "d1d3624c-c396-435a-afcf-af6cc5a28841",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "025da61c-cd2e-4e8c-8d90-d57c217877ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfcfb6a-0cd3-437c-9841-4c95f47b6594",
        "cursor": {
          "ref": "e5201f23-e21f-4b17-a54c-a59d74a97e54",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9872a3eb-a78c-4141-b8d4-05e2bc9bab9f"
        },
        "item": {
          "id": "6dfcfb6a-0cd3-437c-9841-4c95f47b6594",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "707c0035-deab-4158-b58e-60b8255845e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1d02b1-e394-40a1-80ec-e9d2eea785a9",
        "cursor": {
          "ref": "604a3d8f-ddd7-465b-a364-2de570bbb7b0",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9bbc2755-d36d-4530-bd49-fef05175220e"
        },
        "item": {
          "id": "2b1d02b1-e394-40a1-80ec-e9d2eea785a9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6bca3453-d3c8-439d-93bb-4f38531989a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271bc18c-feeb-4be5-bc80-fd23f767db07",
        "cursor": {
          "ref": "4b37706e-fe4a-457a-9bb6-6d74f353eedb",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9f0b46de-9c61-41e1-a15a-18118441e894"
        },
        "item": {
          "id": "271bc18c-feeb-4be5-bc80-fd23f767db07",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ebb1059a-cb4c-4539-a99d-8110aa8f6143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb51b4e-e654-48fd-bd87-8de6e3771652",
        "cursor": {
          "ref": "55ac4428-c65f-4b14-ac95-f26e37811fe7",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1a6ceac4-c4e6-454d-b527-5504c0650058"
        },
        "item": {
          "id": "2cb51b4e-e654-48fd-bd87-8de6e3771652",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "07cae47b-8e4e-4c79-b0c1-e1740aa0a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ade7a9-c249-4092-bb1c-9dd6ccfa4906",
        "cursor": {
          "ref": "ebb0ab84-f426-48d4-b92e-b39346f95c1a",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "aa9fa09e-023b-478a-95f6-8dd498fba969"
        },
        "item": {
          "id": "80ade7a9-c249-4092-bb1c-9dd6ccfa4906",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "30eaa5b8-cc19-480b-9ce6-9d0a1622cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234c46a9-9b1a-4d06-9bfe-6e134057aa63",
        "cursor": {
          "ref": "cc260a02-4475-4c13-8b80-1d68fb77c931",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a1cd5adf-33b5-419f-ad6c-54ff463b202b"
        },
        "item": {
          "id": "234c46a9-9b1a-4d06-9bfe-6e134057aa63",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6d2bddfa-6a3a-4040-94c1-0f670846b5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d19ac8-e1ee-42ba-9e20-1e77c5978578",
        "cursor": {
          "ref": "cc7a288c-5fad-4ac7-bd75-d18a3b40c347",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "66d1382c-15ca-48ca-8b2d-1351db4de6d6"
        },
        "item": {
          "id": "18d19ac8-e1ee-42ba-9e20-1e77c5978578",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a07f9483-f7b2-4858-ab2b-90598938ae09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8e369c-4502-4f96-9532-841278fa94e5",
        "cursor": {
          "ref": "2c4b43e3-8a07-4535-af3f-01dad7b336b4",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "13c031ef-b3de-4a44-b5e6-9f50a12ec508"
        },
        "item": {
          "id": "3d8e369c-4502-4f96-9532-841278fa94e5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "51800ed0-642f-4b27-8ad7-ebe9fb6c043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302af104-4564-4871-b879-1fa170752140",
        "cursor": {
          "ref": "f38fe7cc-014a-4175-be21-4152a999051c",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4f429977-3da9-4567-9d1e-0b0474a10344"
        },
        "item": {
          "id": "302af104-4564-4871-b879-1fa170752140",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "919e6b55-cc5a-46f0-9d5f-5b215ec89518",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d46710-4adf-4936-9d7f-413db05627dd",
        "cursor": {
          "ref": "387d8a58-c0a8-499c-a29e-d6c37e30fe5c",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eaded093-f81b-4184-91e3-d4dc24e50264"
        },
        "item": {
          "id": "f0d46710-4adf-4936-9d7f-413db05627dd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "6daea623-d808-483f-a764-de73736fd278",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e119c7-2304-4e46-8284-1b5243c153ed",
        "cursor": {
          "ref": "e9251d9c-dfd7-4519-86de-8945b05ae9f1",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5eee83a9-f6f4-4aa6-aaa8-914d19061cc2"
        },
        "item": {
          "id": "12e119c7-2304-4e46-8284-1b5243c153ed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "57b9d59f-2b6b-40c7-b3cd-08dc396aa8d8",
          "status": "Created",
          "code": 201,
          "responseTime": 2334,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "73eb9040-2ad5-4bb2-b0bd-49845415187d",
        "cursor": {
          "ref": "c70f546f-3487-4e29-9227-3004ca2adbae",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "437ed3df-a0fd-41f9-b63d-f849dd9f12f2"
        },
        "item": {
          "id": "73eb9040-2ad5-4bb2-b0bd-49845415187d",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "d47132c3-6fa3-4baf-ba25-668b59e4a350",
          "status": "Created",
          "code": 201,
          "responseTime": 2979,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "ff92b8b3-adc2-449f-b916-eec2dd65d6f0",
        "cursor": {
          "ref": "bbe36d68-ee72-426d-ad29-2419f3f4c130",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7034ebac-4380-4895-b770-68a5c3cba907"
        },
        "item": {
          "id": "ff92b8b3-adc2-449f-b916-eec2dd65d6f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d0977710-5c86-4436-addd-b0c07d08282e",
          "status": "Created",
          "code": 201,
          "responseTime": 3278,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1ebac313-f951-421f-b296-98c68a37ecb5",
        "cursor": {
          "ref": "4b2587f8-07be-4c97-b392-6ea133b6355d",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "44dabf67-0b3e-4fb1-806d-c086484ec986"
        },
        "item": {
          "id": "1ebac313-f951-421f-b296-98c68a37ecb5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1eef1fcc-b569-4a6d-b628-2263a10f0966",
          "status": "Created",
          "code": 201,
          "responseTime": 2260,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fca2afed-2b52-43c6-a97c-0421d4a4a05c",
        "cursor": {
          "ref": "a37feb59-69af-4412-9333-b141c3374319",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2adb1115-6ff6-4dc6-895a-9007926329ab"
        },
        "item": {
          "id": "fca2afed-2b52-43c6-a97c-0421d4a4a05c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "03554d1a-cde4-4e1d-bd73-2bf9c9fd74bd",
          "status": "Created",
          "code": 201,
          "responseTime": 2196,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "5fb9720d-d5ee-47ef-a304-a04a081e2890",
        "cursor": {
          "ref": "4675d86c-a693-403f-8ada-c85acbcb2eac",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "77668fd7-baba-4cd6-abb9-f718295f6d91"
        },
        "item": {
          "id": "5fb9720d-d5ee-47ef-a304-a04a081e2890",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "51e51377-b380-450b-9294-29b8fa6d85dc",
          "status": "Created",
          "code": 201,
          "responseTime": 3156,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "8c2dd177-210a-4355-bbb6-bd0f4448524b",
        "cursor": {
          "ref": "10aa5755-ff67-4b34-bde5-a79421268984",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5ca8865-388e-4597-8ea6-cbfed8ae55bf"
        },
        "item": {
          "id": "8c2dd177-210a-4355-bbb6-bd0f4448524b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "efe4445d-e99e-4a61-a3d6-dd6fe25edd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2dd177-210a-4355-bbb6-bd0f4448524b",
        "cursor": {
          "ref": "10aa5755-ff67-4b34-bde5-a79421268984",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5ca8865-388e-4597-8ea6-cbfed8ae55bf"
        },
        "item": {
          "id": "8c2dd177-210a-4355-bbb6-bd0f4448524b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "efe4445d-e99e-4a61-a3d6-dd6fe25edd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bce996-0f3a-4c4e-bcdd-17663b8315ff",
        "cursor": {
          "ref": "3ad27a0b-c347-4d3a-a9c8-3404be2dac52",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9be05d1b-2326-48e8-9f12-e7b6dcf24b10"
        },
        "item": {
          "id": "23bce996-0f3a-4c4e-bcdd-17663b8315ff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e93c948b-0416-44de-afcc-0c65a5f64291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2183b08-715f-4456-ad70-d0bcd4ced91f",
        "cursor": {
          "ref": "b612eccb-ad53-4643-b54a-5e7bfe37e7df",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a5636d77-4f76-4011-ba63-ff8fd6471587"
        },
        "item": {
          "id": "b2183b08-715f-4456-ad70-d0bcd4ced91f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d2306a07-3677-40cf-9191-5f074a7764fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1ccbba-264f-49fc-b5ce-a61a707019c5",
        "cursor": {
          "ref": "edc7e06e-53e1-43bd-9caa-9ad4d5d6422f",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f2a637fb-065f-4fdb-8d5b-d78769715f52"
        },
        "item": {
          "id": "2b1ccbba-264f-49fc-b5ce-a61a707019c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "412ee41a-e408-48c3-9350-c8448a0cf671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed85e49-87a4-44b8-87c6-4b15fdb00bf6",
        "cursor": {
          "ref": "b1e5f237-4f5b-48bf-b718-f25499cac5fe",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7c2b5a68-1c38-44eb-a9af-65f378e7836c"
        },
        "item": {
          "id": "3ed85e49-87a4-44b8-87c6-4b15fdb00bf6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a5121164-6301-4cdf-a801-7f490887490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc99ee-2180-463d-809f-d7ef37681f32",
        "cursor": {
          "ref": "82733017-78d5-4ff3-8b25-192549c6e824",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "17cc5fe9-08ed-4e1b-88c1-c790332c8745"
        },
        "item": {
          "id": "e8cc99ee-2180-463d-809f-d7ef37681f32",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3b300b6d-352a-4ced-8482-ea44999a7aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0630530b-af18-47d8-9d41-a73cf54490fc",
        "cursor": {
          "ref": "e650505c-5fc7-4e3a-834e-c9ad174e73a0",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7991ef57-84ce-4ef0-95c1-884b45c2a2c0"
        },
        "item": {
          "id": "0630530b-af18-47d8-9d41-a73cf54490fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "16f3f8e5-2ffb-427f-9ad5-0da4a5368057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53b7da0-1558-4792-a1ce-17bcaf7faac3",
        "cursor": {
          "ref": "4fc742ca-45bd-4ea8-be6f-d757bd375778",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2821c8fa-3f64-4c36-b910-192b355964c0"
        },
        "item": {
          "id": "f53b7da0-1558-4792-a1ce-17bcaf7faac3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be11ae71-4255-48d2-b402-c107719c0e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20a58a4-cd23-4626-b517-8f9575ddf4ed",
        "cursor": {
          "ref": "8f6874cb-a532-4f66-8940-2602c5765bf4",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "475ffce3-69ea-4b07-9ff1-2caa4c9aa768"
        },
        "item": {
          "id": "f20a58a4-cd23-4626-b517-8f9575ddf4ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9b872eca-7276-4fb4-9719-7b7ca2e06373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f681ae17-1916-4130-a378-abfd88d1d30d",
        "cursor": {
          "ref": "d6d7eaa4-3923-45a7-9cf2-28161e1f4586",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "32978091-3304-49b4-b8ad-0d3772b2c809"
        },
        "item": {
          "id": "f681ae17-1916-4130-a378-abfd88d1d30d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5977f86e-178f-4418-a8bf-8baa11e93c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c26c9c0-caa7-4c3b-a819-6c45852930e4",
        "cursor": {
          "ref": "e0f1bcb3-0e85-4837-99f9-f5541312cc62",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2a810639-14e1-488f-9039-3e4208198f53"
        },
        "item": {
          "id": "3c26c9c0-caa7-4c3b-a819-6c45852930e4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93a81f3e-d6a4-482a-a604-13b26b5b8b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d652b730-1be3-4658-a71a-8c6de3493e87",
        "cursor": {
          "ref": "fbd6dd7e-943f-493e-a1ec-4c0656f672b1",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0fa6c065-8365-418b-b5db-982000117862"
        },
        "item": {
          "id": "d652b730-1be3-4658-a71a-8c6de3493e87",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f9c863b3-741a-40c5-87c7-b65146ce621d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd6d80b-dd4b-4412-bc5c-0d85218d716e",
        "cursor": {
          "ref": "e5404439-449b-4d46-806c-1001724a66ad",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e2a24ea3-e710-4e06-9c83-cdf66664e4fc"
        },
        "item": {
          "id": "6fd6d80b-dd4b-4412-bc5c-0d85218d716e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e53d391-69b6-484a-85d6-4bed95a470a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c17e4f-58e6-4dcb-9bff-eebdd12cac7d",
        "cursor": {
          "ref": "897c3d3b-10ca-4a5d-986f-c127003f0a2d",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7b9ae2d9-9a13-45a6-88f8-d37be40105e0"
        },
        "item": {
          "id": "f4c17e4f-58e6-4dcb-9bff-eebdd12cac7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5fd430b-3aef-4317-b092-20834e3c4707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f783a9-59ad-4d6b-b0c9-7f4b2599c976",
        "cursor": {
          "ref": "9c3c3ed3-a0f9-4a8e-a9c3-df3c16ac187c",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "773c9bdc-352f-48ac-9a22-fb26f909666e"
        },
        "item": {
          "id": "c8f783a9-59ad-4d6b-b0c9-7f4b2599c976",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8be5b7cc-d8b9-4b5b-93c4-62178fff1b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8c7fda-3c5f-4c7c-a8c4-06665cc2c5d5",
        "cursor": {
          "ref": "3a8c23b4-c022-4f36-9f0e-107145adfca0",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa5e3c42-cc6d-4c6f-91ce-6c806c394b7c"
        },
        "item": {
          "id": "0f8c7fda-3c5f-4c7c-a8c4-06665cc2c5d5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "77959e3a-58c3-4d22-9b09-4a37816e1d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff59a8b5-4130-4759-a41f-59eda3032f4d",
        "cursor": {
          "ref": "43bbb75c-43ee-4245-9da6-3b7e20cc3300",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ebf7c61b-7ddd-4d4c-98cb-25898cb8374d"
        },
        "item": {
          "id": "ff59a8b5-4130-4759-a41f-59eda3032f4d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b5e4c833-c423-4aef-9ecc-d0b9394c634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f115afb-7b08-4a2b-b22d-4f304387e098",
        "cursor": {
          "ref": "79d7dcc2-c14c-4aff-b8c2-a32dd42a2e76",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4615062a-f20c-4a19-b064-efc4dd7ed105"
        },
        "item": {
          "id": "6f115afb-7b08-4a2b-b22d-4f304387e098",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a980883b-621e-457a-85da-b8651aea11f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2c2745-c559-4138-ad4d-48fd11084dbb",
        "cursor": {
          "ref": "786b0de1-7b54-492d-9965-c16dc1d471d6",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "24672748-958d-4b9d-b07f-3c3747007d0d"
        },
        "item": {
          "id": "7f2c2745-c559-4138-ad4d-48fd11084dbb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9456bb1e-ac30-40e7-8d3c-7c7978190eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c9aa76-3f54-41a3-81d4-fb17bd1b3949",
        "cursor": {
          "ref": "dbbe9474-8a01-4599-9574-cd7401e53a24",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b53700f8-890a-4e90-b567-41b23a726e39"
        },
        "item": {
          "id": "47c9aa76-3f54-41a3-81d4-fb17bd1b3949",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "70ba9c6f-ffb9-408c-8b9e-dad6217d1afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5495ae-2e87-4020-a68c-e2b567c778fd",
        "cursor": {
          "ref": "40404a8f-d252-4b67-9e93-74933ac17175",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9f3a3b2c-59fd-4904-b515-6ba70d1a7675"
        },
        "item": {
          "id": "0b5495ae-2e87-4020-a68c-e2b567c778fd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4b8c61dc-a84a-4788-b426-d0442bc49a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19086e2-3920-49b5-9b40-b99fdf965285",
        "cursor": {
          "ref": "f70bbfe4-451a-4263-b17b-75c3ba4a1f2f",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f11cad63-5a5f-4ee2-b3a6-b71cba934c8c"
        },
        "item": {
          "id": "e19086e2-3920-49b5-9b40-b99fdf965285",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b1bf388-699c-4f98-b6a8-057e3df5c02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa84b91b-7a82-4190-a973-e5f1fbf8bc0f",
        "cursor": {
          "ref": "41af8af5-6b57-437c-9137-44ece0ccc920",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "90dcb330-560d-4862-ba07-12495b92e6d5"
        },
        "item": {
          "id": "aa84b91b-7a82-4190-a973-e5f1fbf8bc0f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9e147ec0-4ec5-4997-82ee-c403b0a8d766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550d8cef-4bcd-49d8-ad8b-f8139ac5897b",
        "cursor": {
          "ref": "66855527-027f-476b-bd96-3b2034304ff7",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f7c25d4-7746-4062-8ae3-878c5b4e1f0f"
        },
        "item": {
          "id": "550d8cef-4bcd-49d8-ad8b-f8139ac5897b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a6580c7-9118-4eb0-8ad1-efba13936d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54b77f4-7890-4f51-86e6-baf03adf4dd4",
        "cursor": {
          "ref": "823e74db-8d56-4186-b36b-fcf08c7c2110",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ab9b64bd-884c-497a-a49a-b30e0843d5a5"
        },
        "item": {
          "id": "e54b77f4-7890-4f51-86e6-baf03adf4dd4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "381495e1-ad17-4bc9-a305-4dfdf7962be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb38c2f-1475-4e5e-9b57-0606543a496d",
        "cursor": {
          "ref": "5d89a48a-00be-483e-a1f9-477e263af88d",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d064a76a-95b6-401d-95f2-4f2495653ba5"
        },
        "item": {
          "id": "8fb38c2f-1475-4e5e-9b57-0606543a496d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe084631-87de-4ec7-b26d-b521f1300eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cb153e-e158-4352-8def-5f8ec92e3de6",
        "cursor": {
          "ref": "81b5b7e9-a9c5-4983-ae22-4a6d303f9db8",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "686ebeb3-071f-4691-8683-7e7d4c197c58"
        },
        "item": {
          "id": "90cb153e-e158-4352-8def-5f8ec92e3de6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "95bfd6b4-87d7-46d6-84b1-c674a1214034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623f5d4e-1f34-4bdb-a775-ae4631b23d43",
        "cursor": {
          "ref": "6cd58c04-16dd-416c-8f4b-f3d859bd3463",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "747dced9-d11d-4eed-a751-04a747e215c0"
        },
        "item": {
          "id": "623f5d4e-1f34-4bdb-a775-ae4631b23d43",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d83a55f-99aa-4db2-9df5-ad9608ea2cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7b775-2011-44f6-b51f-d5c87ba0c474",
        "cursor": {
          "ref": "1d5de650-0155-4356-bfe7-430be0abfcbe",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ef6f7deb-ab5b-49c0-a705-8756d73c4672"
        },
        "item": {
          "id": "16a7b775-2011-44f6-b51f-d5c87ba0c474",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "123e492b-fe94-4072-8b45-4fc95847cb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276371f-320b-4fca-afce-933e07045f81",
        "cursor": {
          "ref": "7bf40c4c-af73-4d18-b310-c8032a64d65c",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "edc84bc1-1227-4664-bae4-aa8e3507574a"
        },
        "item": {
          "id": "8276371f-320b-4fca-afce-933e07045f81",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a4a72ec2-abb1-4398-b4db-d9da00f5c507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf88944-43f7-40f0-8247-6a7f2d4d7330",
        "cursor": {
          "ref": "4e07ae0a-2853-463a-819c-67096d84e22a",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "63364fdc-b3be-4f94-ad0a-3777b4fa5659"
        },
        "item": {
          "id": "edf88944-43f7-40f0-8247-6a7f2d4d7330",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "77a3d233-50ce-418a-b280-07feec20615d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4f3156-4808-4f2f-8b67-d55c0d07554f",
        "cursor": {
          "ref": "7d485ae9-f47f-4d69-a281-c6d22ae2d70c",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "61c12329-58bb-4d84-a247-9c8deecb9541"
        },
        "item": {
          "id": "dc4f3156-4808-4f2f-8b67-d55c0d07554f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1a933693-b660-4d55-a117-1b33b385c061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a551c3d8-5894-4513-a8fb-cc37f6c0b6df",
        "cursor": {
          "ref": "03852b00-a105-4ef4-85b7-32dec1992b48",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b1276ea6-25aa-468f-9d59-d1a65fb1583c"
        },
        "item": {
          "id": "a551c3d8-5894-4513-a8fb-cc37f6c0b6df",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34e21817-fb66-46b1-9ee0-229efb112dfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b0ca7c-4bc0-4d4e-917b-2324c374a9ef",
        "cursor": {
          "ref": "43f46129-1426-4092-a974-27ec7ebd5d9e",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0b108d08-31c6-4d70-b23c-b8ea023fb419"
        },
        "item": {
          "id": "94b0ca7c-4bc0-4d4e-917b-2324c374a9ef",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c59c4787-e3ff-44d1-b611-09c8cbecdcd2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0660bfaf-92a2-4680-9e0b-768265978347",
        "cursor": {
          "ref": "59df5375-92d1-43d8-baad-62e5bad43849",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc8769bc-ebc2-4884-977a-f788a2118669"
        },
        "item": {
          "id": "0660bfaf-92a2-4680-9e0b-768265978347",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d6c6e989-615f-4664-b3f1-4b5ae617ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0660bfaf-92a2-4680-9e0b-768265978347",
        "cursor": {
          "ref": "59df5375-92d1-43d8-baad-62e5bad43849",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc8769bc-ebc2-4884-977a-f788a2118669"
        },
        "item": {
          "id": "0660bfaf-92a2-4680-9e0b-768265978347",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d6c6e989-615f-4664-b3f1-4b5ae617ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26932440-e568-40ca-9a23-20499468f836",
        "cursor": {
          "ref": "f400b9e8-8a50-45a6-bd1d-bdcb705dc736",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "90ef13be-d7bc-4ed9-bf1c-1e6c29a3569b"
        },
        "item": {
          "id": "26932440-e568-40ca-9a23-20499468f836",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f962f291-0589-4119-ba54-a729966b6415",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 294,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a0ebc5da-69a7-4479-96ea-4aa5db0e31b5",
        "cursor": {
          "ref": "4993f803-7ba5-406a-b4df-4f568b2b154d",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cd1a32aa-c64c-49de-b503-05700671250b"
        },
        "item": {
          "id": "a0ebc5da-69a7-4479-96ea-4aa5db0e31b5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a32ef219-0edd-432f-8949-3eb2f9e0881e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0ab778-ca39-4295-9fde-f6594c755cca",
        "cursor": {
          "ref": "295b7797-be84-4f4e-8018-abf0e83fae85",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4c1c57a6-6c4e-4f05-bdd2-b1a0d5d67430"
        },
        "item": {
          "id": "ba0ab778-ca39-4295-9fde-f6594c755cca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9028791e-8ccc-454a-8f60-a77c51bebddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658c81f-351b-449f-a39d-16bc2b8a0039",
        "cursor": {
          "ref": "31f9ff9b-55a5-4a6e-ba4e-a9cade18be83",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a86940a9-6bad-46ee-89d7-52ea665adc37"
        },
        "item": {
          "id": "e658c81f-351b-449f-a39d-16bc2b8a0039",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1a49161d-af5e-4039-8357-5d1710cc4083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb18d12-5e31-4377-998c-67fa086e5d36",
        "cursor": {
          "ref": "579747b1-67ab-4bf8-97fd-1e17a6ae5179",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a4c5a891-58b5-4906-966d-aad1e2c2ebfb"
        },
        "item": {
          "id": "9eb18d12-5e31-4377-998c-67fa086e5d36",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8be0bdf3-a485-46a6-b4c4-8e2fc832cbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c5af31-7c8c-4a2f-899b-fd27cd958257",
        "cursor": {
          "ref": "675e9e39-ed2e-4fb6-91fb-d7295316f6e8",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c6809488-d33a-41ec-8508-ba6f506b3c2b"
        },
        "item": {
          "id": "08c5af31-7c8c-4a2f-899b-fd27cd958257",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6207ca3e-8f79-49b9-ac40-00c11a9e13d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d0e24c-bbee-42a8-9143-5375ba481b03",
        "cursor": {
          "ref": "9d125593-d904-4b99-bc11-dd27ecd82fb8",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4794da7a-1b2c-468d-bb58-2f7be127f18f"
        },
        "item": {
          "id": "b9d0e24c-bbee-42a8-9143-5375ba481b03",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9494f171-83d7-4846-a47d-103aa88eb578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27046453-bfac-49cc-96e9-cef7f3524ca3",
        "cursor": {
          "ref": "cff858d9-2268-4507-92c8-98226fb228a6",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5cc2d0bc-2cb1-4d79-935d-8462339e7e5a"
        },
        "item": {
          "id": "27046453-bfac-49cc-96e9-cef7f3524ca3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "972a0b2a-43f1-4359-9833-1662f9dcdefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2670885f-084d-4aca-a683-f7cc9293ac29",
        "cursor": {
          "ref": "53ca9022-0c16-46e4-85da-c77d912f7834",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9cb24de4-bf4c-45e2-8c0c-8d1323794cf7"
        },
        "item": {
          "id": "2670885f-084d-4aca-a683-f7cc9293ac29",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "76b3d412-bbd7-49ba-929a-25b560de072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f85e5a-0950-46e1-b6b4-aafa247495e4",
        "cursor": {
          "ref": "01d87044-22b7-4a0c-95b7-ca0e20ff5a39",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9f65c570-68cf-4ef5-9294-e80360ec2fe8"
        },
        "item": {
          "id": "15f85e5a-0950-46e1-b6b4-aafa247495e4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "266eb039-6b59-4663-b59a-72b2495167ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b269b93d-1e93-48f3-9c13-301daa4b3042",
        "cursor": {
          "ref": "e3461aa6-f21c-4ae0-949b-d81e18d763a5",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "88a4e66b-f512-44c9-9d96-e177d9b2a703"
        },
        "item": {
          "id": "b269b93d-1e93-48f3-9c13-301daa4b3042",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2f8ba671-f7ff-46ed-bccb-f5a76070c304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0c3555-ef95-4002-85fd-6ccebca8d1b1",
        "cursor": {
          "ref": "b081f2c2-15e5-45df-82d5-52fb8dfca35b",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "68248738-95eb-49a1-bea4-62629757a4ec"
        },
        "item": {
          "id": "1d0c3555-ef95-4002-85fd-6ccebca8d1b1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b8349fa9-5066-4410-a1d3-13847ef4b980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0754a571-4bd5-4a1e-9f28-416f04cfc73f",
        "cursor": {
          "ref": "631ac1be-ab5f-48af-a5d0-21af1f88dcc2",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2069e312-c9e1-4ea6-8830-36164c601429"
        },
        "item": {
          "id": "0754a571-4bd5-4a1e-9f28-416f04cfc73f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "699e3360-eb99-4d94-aa0f-a0773f4d35f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ff7ddb-ee55-4920-b483-bd7d508a972e",
        "cursor": {
          "ref": "ea501399-9468-403e-a2f3-f216d20ed6f6",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b24db632-4bc1-4db0-8085-82aefcf513fd"
        },
        "item": {
          "id": "12ff7ddb-ee55-4920-b483-bd7d508a972e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f12eff69-4a3c-47a4-a6c9-97f5221c7b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26abd84-7915-44ef-a59c-51192fc57546",
        "cursor": {
          "ref": "257098cc-4e39-4813-a9b3-c685d260415c",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "34c03108-5d70-4be8-9de0-20751c210e69"
        },
        "item": {
          "id": "b26abd84-7915-44ef-a59c-51192fc57546",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "99997908-761f-46ff-bf83-484bd4e19d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cb4a91-8403-4756-b31b-a121494aad4a",
        "cursor": {
          "ref": "e74cfc61-8f16-43b9-b580-42272cd69506",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aa12b6c5-3836-45b1-8a0e-dcdb515e5172"
        },
        "item": {
          "id": "f8cb4a91-8403-4756-b31b-a121494aad4a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7c30dfc3-3b50-44b6-b45e-3267d33a118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d19a0e-b236-4594-8e9f-a09281966508",
        "cursor": {
          "ref": "1b0a9ef7-8b15-40a0-88d3-a9ffcc43129a",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2824c1de-f962-4006-9b09-3462bacc2c41"
        },
        "item": {
          "id": "42d19a0e-b236-4594-8e9f-a09281966508",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b3ce86f8-d87d-4611-a126-3415bde893f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5e3133-446a-4936-9d32-6a1df058d11c",
        "cursor": {
          "ref": "72268f38-826a-497d-9ed3-2da99dba6bb6",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb7cc9be-7bca-4a62-9ca1-32291cbb1622"
        },
        "item": {
          "id": "be5e3133-446a-4936-9d32-6a1df058d11c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f89f3d10-1e2e-42cf-a3f7-214dc2b1402c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4a1711-8e33-49b6-bb75-4b4319158719",
        "cursor": {
          "ref": "d56be6d6-8e15-4095-8ac5-67ed50c8b7fd",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7b26e1fd-83cd-4875-b05f-3b53bb5b24e4"
        },
        "item": {
          "id": "8e4a1711-8e33-49b6-bb75-4b4319158719",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dad6ead5-5652-41f5-ab17-efa4ad89144c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66d664b-8288-48d7-8bc7-0743e5d61ccb",
        "cursor": {
          "ref": "114952ad-dc70-48a9-b7f0-c804f42f7292",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "adb265b4-1f32-461a-9db6-23e6f8814f96"
        },
        "item": {
          "id": "c66d664b-8288-48d7-8bc7-0743e5d61ccb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bc086ceb-243e-4619-b633-b49bc42257f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2290b8-19b4-43c6-8828-e147f01dee74",
        "cursor": {
          "ref": "a9d694fe-30e8-4146-be9b-366e9d5be2af",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0ebce540-5b9c-4bc5-aa56-478f915821ba"
        },
        "item": {
          "id": "2d2290b8-19b4-43c6-8828-e147f01dee74",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5328cacc-1012-4290-835c-a5b336a3b702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9349e659-6f56-4a00-8b40-dd750bdef22e",
        "cursor": {
          "ref": "c9414a45-58d4-4a41-a0ec-64b00dd1c116",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d7e8c84-72ba-4e57-83fa-ceaed4ba2eab"
        },
        "item": {
          "id": "9349e659-6f56-4a00-8b40-dd750bdef22e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d49e974-6d64-4738-85c7-15e643e1251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52602a6-fbe6-4c59-87fb-afa4d6975031",
        "cursor": {
          "ref": "b780c467-02ef-4779-a27b-613cffe98aee",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bd18af2e-8a16-4772-bcd8-66a77f28f013"
        },
        "item": {
          "id": "f52602a6-fbe6-4c59-87fb-afa4d6975031",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "718956d8-9f38-4b1a-9618-ed268dea1a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e716cb-b0af-4fae-8598-0ad57c8a3938",
        "cursor": {
          "ref": "5f939d82-3b0f-4f74-80ca-695ff4a41b54",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "66f88db2-34dc-4a53-8d1d-fdfeea71da4e"
        },
        "item": {
          "id": "a7e716cb-b0af-4fae-8598-0ad57c8a3938",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c3a57764-3b1f-4fc1-a4f8-05097d36db9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0311dd-3705-4b77-a5f1-49c14250f6d5",
        "cursor": {
          "ref": "d29af14d-625f-4ef3-99e3-bf7cd79ba702",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "48fef6b6-d67c-469e-87eb-00184e893dcb"
        },
        "item": {
          "id": "5e0311dd-3705-4b77-a5f1-49c14250f6d5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8bad500f-e4c4-4ff7-b71c-4b50541ce9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f76d06-20c2-46fa-8831-961bcbfc1a82",
        "cursor": {
          "ref": "ae4a0497-0798-43b4-88c8-84dc88bb5849",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bc73d281-e98e-47df-b9da-0cd1ec2b97b1"
        },
        "item": {
          "id": "a0f76d06-20c2-46fa-8831-961bcbfc1a82",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3a4fa288-0319-4cac-9a47-3eeb0c057778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3828938-7e81-4ba3-8ec2-d20d1f1293ea",
        "cursor": {
          "ref": "b5d48690-2699-444f-9ffa-d3eb073fbdbd",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d4f1ed2a-07ca-46a6-b8c5-44e190fc532c"
        },
        "item": {
          "id": "c3828938-7e81-4ba3-8ec2-d20d1f1293ea",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c899e00-8409-425c-81a4-82bd91c5db8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5606b941-bd2c-49e0-bfdd-572127cc265a",
        "cursor": {
          "ref": "d7b51497-e89c-4667-a136-2157a907dce8",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3f402b28-36c2-4dc2-aa19-0942bd3b440f"
        },
        "item": {
          "id": "5606b941-bd2c-49e0-bfdd-572127cc265a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "84370f9e-5dfc-41ac-ba56-21e07c3c16e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585ddde0-158d-4604-bdac-3a4e1acd4078",
        "cursor": {
          "ref": "f61678c4-1bdc-4471-886e-fe5c5db2ec14",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bd78dcd9-732e-4579-8d3a-b2e99c881b31"
        },
        "item": {
          "id": "585ddde0-158d-4604-bdac-3a4e1acd4078",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "296922c4-1f0e-4143-a73c-c14bc999469a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1bde19-7a71-4d3a-ad7f-ee55b9364624",
        "cursor": {
          "ref": "72d7a296-ffe2-4e30-be0b-878e120ceaa0",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8b53fb99-c0c4-4ee0-a704-6530552b8008"
        },
        "item": {
          "id": "9b1bde19-7a71-4d3a-ad7f-ee55b9364624",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a85cb7e0-b727-45e4-b410-44fbc532a836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbb4064-cdb6-4f30-b9e7-e367bcd4ecee",
        "cursor": {
          "ref": "b45b24d1-a7ed-4118-a637-48f2c14a08f2",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b18a0dc8-f8c1-42ac-b60f-2587276ea8e3"
        },
        "item": {
          "id": "bbbb4064-cdb6-4f30-b9e7-e367bcd4ecee",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "587a8a8f-7c25-49eb-8304-6a2f5cbc60b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f02d75b-5cd4-4acd-a420-b94f495631fc",
        "cursor": {
          "ref": "fe9da81c-1d47-4fb8-9fa7-c2232d69127a",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cdc675fb-d69f-42e9-83f4-d439b5dd1f82"
        },
        "item": {
          "id": "0f02d75b-5cd4-4acd-a420-b94f495631fc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2d5d694e-c73b-44b2-8e98-f0f432bd85d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b408de44-d764-41b2-a09a-6769a4de89df",
        "cursor": {
          "ref": "a5928ad7-b6de-4371-94cc-d8175fff193c",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c726b761-45cf-46a3-9d8d-d36eab7f1100"
        },
        "item": {
          "id": "b408de44-d764-41b2-a09a-6769a4de89df",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf2c6a16-afe0-4d77-9238-2791d569db3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2203c5da-5e68-4157-89f1-43bcb36bb554",
        "cursor": {
          "ref": "b32bdf65-0a30-4a87-958e-2c11446a10c2",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "70b312a1-9bcd-4880-9fee-9d61f4e61cf6"
        },
        "item": {
          "id": "2203c5da-5e68-4157-89f1-43bcb36bb554",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2dd88752-8c01-48c2-a334-4971bd1fcf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e5297a-a193-48fe-add6-609ebf756e7e",
        "cursor": {
          "ref": "82386914-79fc-41e3-8046-ba14e2aabf33",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "23f848e0-ed9d-46f9-8052-753bdb4dcb2b"
        },
        "item": {
          "id": "78e5297a-a193-48fe-add6-609ebf756e7e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "26640af4-2889-43ed-8b89-56bdb6cdc557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a09ab2-88e6-459b-b360-ad9e43402cf6",
        "cursor": {
          "ref": "e62be962-4fe2-4115-bddf-ded1d41115f1",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "95f6ef88-63f0-4d74-b0cf-cc787da0d5fc"
        },
        "item": {
          "id": "29a09ab2-88e6-459b-b360-ad9e43402cf6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "350a3254-6627-47b1-a898-7c3949760cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c25f811-471b-46ee-a982-06bc9ccfa61a",
        "cursor": {
          "ref": "5f3c9a3d-ddf4-4d59-9179-3c0bd63b1260",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1414cfb5-50c3-44b4-a574-30afb5e59b42"
        },
        "item": {
          "id": "5c25f811-471b-46ee-a982-06bc9ccfa61a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6042ac14-4b89-4292-a99d-b79fa2833dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8e07a3-3ad2-4789-8ce5-8ecb0589de82",
        "cursor": {
          "ref": "799614b6-0733-4a75-9568-0fb2b339e4ec",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "45d2f511-2b47-4c05-ad18-a60f730698b9"
        },
        "item": {
          "id": "de8e07a3-3ad2-4789-8ce5-8ecb0589de82",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb393c8c-5d4b-4b4a-b367-2cf7041c57e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53aa8b55-f532-4108-8f14-fd1dec4d14a2",
        "cursor": {
          "ref": "0868a2be-629e-4afd-9ed5-8aa82dbf9dd4",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15b579dd-45dc-48d8-9235-e02050fe6861"
        },
        "item": {
          "id": "53aa8b55-f532-4108-8f14-fd1dec4d14a2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fa5ffbac-c328-4fc8-aae7-86794ba0ad48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fa7728-1b3d-4760-8165-211c59da6226",
        "cursor": {
          "ref": "2d77a7bc-1fbd-49c0-abef-dd4d3626bae0",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f74907f8-8e35-4a78-9a34-dd0f5ab910c8"
        },
        "item": {
          "id": "78fa7728-1b3d-4760-8165-211c59da6226",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d0fb52a9-c707-4c27-bf6b-8fd207ca6036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd64691-d078-4d61-9bbd-cedafef25de7",
        "cursor": {
          "ref": "7ae27e99-1e48-4ec7-9317-28be1a8a7c25",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f734b110-dde5-494b-a3d0-1d04a8316e96"
        },
        "item": {
          "id": "1cd64691-d078-4d61-9bbd-cedafef25de7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d314ecfa-1a7a-45c9-a845-070f3d108c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e0b9c7-ea1b-4901-aea5-c56af9743b49",
        "cursor": {
          "ref": "23b9ca53-c8a2-4361-94f6-8eb1cce15e91",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a58299aa-791d-4488-a505-ea84ab6b1992"
        },
        "item": {
          "id": "68e0b9c7-ea1b-4901-aea5-c56af9743b49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0d0891db-8a04-466d-b246-5a906d81809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf756e3-b7b6-42d7-8ea4-210ca12a9842",
        "cursor": {
          "ref": "822bac71-a564-4bda-bad4-bba768692b04",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8de3d488-6b9d-46c4-b3ec-77b94bcbd688"
        },
        "item": {
          "id": "ccf756e3-b7b6-42d7-8ea4-210ca12a9842",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6afc5ab3-f916-4a8d-9dc0-784cc71c2041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a19acd-c055-416b-869b-d1193c114711",
        "cursor": {
          "ref": "1a4b2c88-6931-4b13-8ed5-6f1258c00c71",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fc5847a5-2e7b-421b-9147-8cd228450d44"
        },
        "item": {
          "id": "10a19acd-c055-416b-869b-d1193c114711",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f87edaf8-fc06-4a1d-a50a-598f492c0dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d3d1e1-66d7-476b-8f57-ca8834d764f4",
        "cursor": {
          "ref": "175fdd2a-e336-4653-b4aa-1f9dadb2f32f",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4135426f-f5b5-4b07-a7a4-3cca47babdb7"
        },
        "item": {
          "id": "29d3d1e1-66d7-476b-8f57-ca8834d764f4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2bc23aed-976c-429d-8902-bb1538b33064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e97ff6c-6b98-4057-bf8e-090057654256",
        "cursor": {
          "ref": "13d1d9b3-d575-4b3e-9ad9-5b45904f956a",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ffdf88a3-fe95-4767-9edc-98c8d2046933"
        },
        "item": {
          "id": "8e97ff6c-6b98-4057-bf8e-090057654256",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9041f4d2-a4d6-4958-8462-997eddd17d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0febe4fd-f2dd-47a0-abdc-7d124a6d362f",
        "cursor": {
          "ref": "21b8a9f9-ff2c-41eb-bbe9-3f987349d2fe",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c81d7ef8-1371-40e1-8a84-2e6c0fedce0b"
        },
        "item": {
          "id": "0febe4fd-f2dd-47a0-abdc-7d124a6d362f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8f431ae3-b8d0-460e-8d95-8361967c3127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b806ca-9926-4014-8714-2cf11b510e56",
        "cursor": {
          "ref": "a500bfa3-5503-430c-8fe9-fe5cca2340ce",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eaa30254-1e26-41d0-aa1d-d68eef628456"
        },
        "item": {
          "id": "47b806ca-9926-4014-8714-2cf11b510e56",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9dfca83d-8e7e-433c-8034-4ba3c89a0948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2965e2f3-1d1c-4404-8bbe-57f57820de2e",
        "cursor": {
          "ref": "6dddf5bf-f00c-4079-baae-824a06207a7e",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b929edf7-8446-48a4-ad7d-5f1db11b5ef0"
        },
        "item": {
          "id": "2965e2f3-1d1c-4404-8bbe-57f57820de2e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7d01281f-d461-4f05-9b01-fbc642663cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d324d0-e97d-4794-ab8d-bc12dd6eaac9",
        "cursor": {
          "ref": "b5c92b95-54fe-4d95-815c-c1211227a238",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9914cb95-6a11-4712-bf24-06d83886d10d"
        },
        "item": {
          "id": "47d324d0-e97d-4794-ab8d-bc12dd6eaac9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8fe179da-e5fd-453e-9905-ef1fe6aafa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0283aac5-66fa-4070-8c55-e89add243a0c",
        "cursor": {
          "ref": "b961ac05-e5ab-442a-a55b-f7454ce80cb9",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "71a052d0-065e-425d-a927-9d5587f2fefe"
        },
        "item": {
          "id": "0283aac5-66fa-4070-8c55-e89add243a0c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "39c23bf2-8250-4161-acea-95409f9235b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3421d6f-9b35-475d-80a8-6ca650c730fa",
        "cursor": {
          "ref": "bd78e0bc-06e7-4939-a253-d0fcab777a25",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2c898c29-1917-4d87-b20c-d0056f91d30d"
        },
        "item": {
          "id": "d3421d6f-9b35-475d-80a8-6ca650c730fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "10d13737-c2c9-4ad0-93c4-30229f778502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46100ec4-b2c2-47b4-9974-9be294957a8a",
        "cursor": {
          "ref": "1aebe976-3f48-4c55-9832-6e8b0fb20e2a",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3989c05e-1ca6-44e9-8b34-9cc764db317b"
        },
        "item": {
          "id": "46100ec4-b2c2-47b4-9974-9be294957a8a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "90f22ec5-00a1-4d41-86c7-37e4969448f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1380bf21-96c7-41c0-a327-bbec8b3ade80",
        "cursor": {
          "ref": "757f9564-5629-4325-bf3d-1c9e4b96dbd7",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d1d7a9e-75e7-4483-a64a-d17c77242bda"
        },
        "item": {
          "id": "1380bf21-96c7-41c0-a327-bbec8b3ade80",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d597abb8-cb16-4e69-a777-0093e70178e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ec2d8f-0835-4a5d-9e4d-07ac21f85b17",
        "cursor": {
          "ref": "a777b2d2-ac3d-4969-b493-5b4b6a1fec44",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a8094605-403d-4ad6-9031-b32ba556c4bc"
        },
        "item": {
          "id": "13ec2d8f-0835-4a5d-9e4d-07ac21f85b17",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85d41366-4456-4d1d-8166-40d5a0b68fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f860a1-b7ec-40c2-a4c0-498e0e87c2bc",
        "cursor": {
          "ref": "828dca83-5dd1-42e9-80a2-9debb2bfe8ea",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "048db8da-07f4-4fed-820c-7c9a17617b8c"
        },
        "item": {
          "id": "27f860a1-b7ec-40c2-a4c0-498e0e87c2bc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b1415840-5e1f-4c65-a128-c4126036e3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484447e5-5b1b-451c-992d-06c342a407d0",
        "cursor": {
          "ref": "2e90e222-9a8e-48fd-827a-cd51c5da4c2b",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b19cece0-4bad-49b9-960f-0f01715f84db"
        },
        "item": {
          "id": "484447e5-5b1b-451c-992d-06c342a407d0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "47d8df2b-d6a7-46d9-8849-b55ee664a0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b8870-ac7e-418d-ae69-25f2ddb1d3c1",
        "cursor": {
          "ref": "d4f9fad0-1ecc-4f9b-a385-45990edea5d7",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "412ffd90-489c-4809-9403-b806b06fe93c"
        },
        "item": {
          "id": "fa9b8870-ac7e-418d-ae69-25f2ddb1d3c1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "68fee526-a245-4d39-b5f8-1cf3c0b1a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640d291-e518-4bf4-b287-07d7fb2d2544",
        "cursor": {
          "ref": "fd511e2c-0f59-45bf-b7b7-b2ee8aca6956",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "12466d32-500a-417d-9109-d6e9e348fc50"
        },
        "item": {
          "id": "6640d291-e518-4bf4-b287-07d7fb2d2544",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a3c234ed-0637-4bbe-9653-51a4bdab0fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7cd8fd-2cf6-4dca-b0b1-8e394214468c",
        "cursor": {
          "ref": "6f86e39b-51a1-4b1b-9a62-bcc418841dea",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2f0b736a-72ab-419c-be19-ffb02c027b92"
        },
        "item": {
          "id": "9a7cd8fd-2cf6-4dca-b0b1-8e394214468c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36ecc0f0-56e8-4b74-a1ef-1e3e94e9d047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1124adb-cf21-4a96-89b3-85185b323c22",
        "cursor": {
          "ref": "a1c23f71-6629-4db5-9839-c50a411cd484",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e3afb5be-f1b3-4c1d-b316-2ead94defefc"
        },
        "item": {
          "id": "c1124adb-cf21-4a96-89b3-85185b323c22",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ab4b65f1-e87d-4b92-bd4d-b3b5682e7188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab684aa-8b93-4774-a86d-8dd6548790c1",
        "cursor": {
          "ref": "62132fe9-33b2-4321-bbaa-d3dd93309a69",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b177e0b4-f32c-478b-8895-f9bdfadb0d15"
        },
        "item": {
          "id": "cab684aa-8b93-4774-a86d-8dd6548790c1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "57ccbd64-2bf9-4ee6-aca9-6925a0bfa5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fa169b-d159-4f14-b063-f19d13913006",
        "cursor": {
          "ref": "1db75adf-a12b-44b7-80f3-c79ba9dfb3ff",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cabc67d2-f681-4631-b551-2e4f86e625b9"
        },
        "item": {
          "id": "a9fa169b-d159-4f14-b063-f19d13913006",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8ae13047-e6b0-461e-89ca-081147894d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ee57d-4d40-48ef-80db-8922ecf9e796",
        "cursor": {
          "ref": "2278b2de-5f9f-48d2-bf86-5bfa75b7e9e5",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f1547961-4aa5-4ac3-8753-15bd0e0b67ca"
        },
        "item": {
          "id": "ca3ee57d-4d40-48ef-80db-8922ecf9e796",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3c73eba2-5aac-4e4e-9248-f756f425750c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f35fc5e-b064-467a-b781-f2747d547a91",
        "cursor": {
          "ref": "5fb546ad-163f-4db4-9c1e-438f0af490a7",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9cbbd31b-9c20-42a7-b7a8-f7bafce67810"
        },
        "item": {
          "id": "0f35fc5e-b064-467a-b781-f2747d547a91",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d6b19261-633f-45b9-b07e-817638c0cfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480126c-5659-4177-8de3-7aa9c132d8e4",
        "cursor": {
          "ref": "25742a3d-1e02-4ac3-b896-809a7bdf7db8",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3ecc5e82-a7ad-4c34-9184-283b3c9551b7"
        },
        "item": {
          "id": "f480126c-5659-4177-8de3-7aa9c132d8e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cd58cebf-31f0-4003-bdd0-8b8a9e726171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f4635-b622-4f8e-8441-117b5c4330c8",
        "cursor": {
          "ref": "54e00f09-af1e-4d39-b4fa-498488c91438",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8569e867-787b-4538-8287-a5f97b7d3543"
        },
        "item": {
          "id": "640f4635-b622-4f8e-8441-117b5c4330c8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e67b9f83-1102-431e-b797-b65121538edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee72b1e-53eb-4485-9db6-c6eb1b3c04d5",
        "cursor": {
          "ref": "efcaa1fe-29df-4f82-b20a-4ddc66fca608",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b971f3c7-4fff-4f26-8c73-ab0ae7ccfe87"
        },
        "item": {
          "id": "9ee72b1e-53eb-4485-9db6-c6eb1b3c04d5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c4a74406-57e5-40d0-8094-40b4b7976ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf463ac-e7d9-4a05-be98-d6ebb1d6d386",
        "cursor": {
          "ref": "7a60cb91-956a-4a02-800e-aa295e28e9b1",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "80e146ae-c3b9-49a3-abe7-7a786adf8324"
        },
        "item": {
          "id": "ddf463ac-e7d9-4a05-be98-d6ebb1d6d386",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "26d5366c-ef0b-4f27-a625-221d5064d900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc259408-26e0-4868-8fd2-eb3f3a011f7b",
        "cursor": {
          "ref": "c0c163d7-3851-4cae-b9c2-7f2c730b8987",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b17f1394-3b30-431c-981e-97903dbc008e"
        },
        "item": {
          "id": "bc259408-26e0-4868-8fd2-eb3f3a011f7b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a71c82c3-4e1a-435a-9425-6af5d4c5432f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea1b524-e994-409e-bcd0-02b9016d820d",
        "cursor": {
          "ref": "26ee7ad4-9944-4726-8ba1-c455baeda0d9",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2ef4acfc-9f1c-4547-82b0-9de8020cffa6"
        },
        "item": {
          "id": "0ea1b524-e994-409e-bcd0-02b9016d820d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "aafa4c8d-9c23-4ab7-af6e-2dcc55f2dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74770bf-b037-405d-9e36-2df926ea23c7",
        "cursor": {
          "ref": "8e673cae-1f8d-4faf-bb2b-2f6c43724257",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "575bcd68-418c-42da-8f4f-48cb3220a2db"
        },
        "item": {
          "id": "d74770bf-b037-405d-9e36-2df926ea23c7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50232d36-7d98-41b9-9ae5-7a6217c2935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d04ded-597a-4e4c-9323-69a2f505f25c",
        "cursor": {
          "ref": "4f90e60d-0c55-4191-84ab-4f879166a8d8",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c2de1946-309d-4a36-b09c-f736c144852f"
        },
        "item": {
          "id": "c2d04ded-597a-4e4c-9323-69a2f505f25c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e6d159af-b4db-4438-af8a-9f0c30f3a392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cad750-c7b1-4197-89a2-18e51aff85c5",
        "cursor": {
          "ref": "6eaf7a00-01be-421d-8174-b30bd9299b4b",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5f71d662-55c0-4b94-b9ae-1568b32a68a8"
        },
        "item": {
          "id": "97cad750-c7b1-4197-89a2-18e51aff85c5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14d78280-49b1-4b7e-abf4-d6c83bab3496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c7bbf8-7de8-4e8b-8bc0-2729185f7646",
        "cursor": {
          "ref": "f917b3fa-2d33-493a-b39e-e61cb4664564",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "eef03712-63e6-4ee4-9a74-5b81c25605d7"
        },
        "item": {
          "id": "56c7bbf8-7de8-4e8b-8bc0-2729185f7646",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1e2a0020-0682-415d-93e1-fd900b0314e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7456fdb4-faf3-4df8-8ff7-262b5eec85e7",
        "cursor": {
          "ref": "aeb98f25-3ae0-43b4-8fb4-bce60d2f88ad",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0ce475e7-edf0-43e6-989a-4cb6fb6c8ae3"
        },
        "item": {
          "id": "7456fdb4-faf3-4df8-8ff7-262b5eec85e7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0d1454a4-6c62-4b22-ac41-f5016a3cac92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f1bcd-b7c5-4b90-9159-5999815919a9",
        "cursor": {
          "ref": "c8761f0c-359e-4b3f-ae2b-2b5b3bce0715",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "18945c4e-75c0-4f21-baff-0f1fcd5410e4"
        },
        "item": {
          "id": "2d7f1bcd-b7c5-4b90-9159-5999815919a9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "693dff74-0e44-4f52-972e-05bcf0378c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9b2734-b2d5-4e19-b9e7-507443bdae12",
        "cursor": {
          "ref": "c0f02801-fe56-47d7-8142-7244449d84f1",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86e0ed2d-28c3-4255-8752-918eb1a9a110"
        },
        "item": {
          "id": "bb9b2734-b2d5-4e19-b9e7-507443bdae12",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ee33880e-fb99-423b-8844-e17e6488b02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec405d64-1e15-4ccf-8c12-9db3cc0a4f66",
        "cursor": {
          "ref": "839caaf2-71cf-4abd-b4d6-245823862acc",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20a0e4cd-1d6c-4a4e-acad-6a182f52bad7"
        },
        "item": {
          "id": "ec405d64-1e15-4ccf-8c12-9db3cc0a4f66",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c240a62d-fcaa-4fbe-8bb9-835e8c8b5abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f5dcd0-1770-4192-b972-bd0fbfb7ec87",
        "cursor": {
          "ref": "742cc0e3-241a-4019-90bb-4a791afec654",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e9b53283-2554-4b77-b9d7-b437ea7969d4"
        },
        "item": {
          "id": "28f5dcd0-1770-4192-b972-bd0fbfb7ec87",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f06ccb3d-b538-4221-882f-ff66ba1459c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5ef78b-dc76-4d9c-9c1f-fcae823510b9",
        "cursor": {
          "ref": "4340dcd0-8a76-4dc6-ad67-79ac425b79a7",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1dabc84a-a1a3-4396-ad8f-d12db36f4bf7"
        },
        "item": {
          "id": "5c5ef78b-dc76-4d9c-9c1f-fcae823510b9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "77ea5c2a-40d3-4506-9889-21e290b9b11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6b5084-4381-46dc-80a9-b26c7d37d892",
        "cursor": {
          "ref": "7d280782-9dc3-4a20-84f6-b7d061099eeb",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8e065e99-25b1-41a7-82ec-5d718ba79c52"
        },
        "item": {
          "id": "fb6b5084-4381-46dc-80a9-b26c7d37d892",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7cf45845-da55-4cad-a79c-c6697c9624f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be67326e-5f86-4e22-a2f8-f66ae9dab273",
        "cursor": {
          "ref": "da045043-a045-47f8-a5eb-3860290f2ade",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "65da4bef-c6e8-4591-b802-9f1d67208459"
        },
        "item": {
          "id": "be67326e-5f86-4e22-a2f8-f66ae9dab273",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2814c5e8-cb46-48b7-9fd0-153f008837de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005c47a6-da1d-4bcf-863b-f2de7c52a80c",
        "cursor": {
          "ref": "d670edc4-62d9-4977-bfe5-516bb400ce32",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ff48dda4-dd94-4bbc-999c-e21bcf279381"
        },
        "item": {
          "id": "005c47a6-da1d-4bcf-863b-f2de7c52a80c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "266fc186-c5fe-4a39-ac34-ad82248656fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d9eab2-ee3f-4710-ab2c-7b1c82e59a55",
        "cursor": {
          "ref": "e9d38a89-221f-4dc0-899c-0a9dfa9e0ab6",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0ba0e8a4-f15d-451e-b006-81c8d2924361"
        },
        "item": {
          "id": "09d9eab2-ee3f-4710-ab2c-7b1c82e59a55",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ea0a6eca-5949-427c-a824-061ebccae456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858f8735-f70b-4edd-a913-aca5d884de49",
        "cursor": {
          "ref": "e64d28b3-b3e0-4c5e-8d7a-b385bda440de",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c6596a4d-0e11-4d97-8acd-2758eabed6ab"
        },
        "item": {
          "id": "858f8735-f70b-4edd-a913-aca5d884de49",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "958c6f8d-99f2-43d1-9b9d-a43b040ad891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc13e5c-0d5d-4fef-8080-241e81950f54",
        "cursor": {
          "ref": "de16b3b3-a570-4d56-8f9e-231d13f8226c",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "53c52b42-4ab9-4b04-81b0-075c437b663b"
        },
        "item": {
          "id": "3fc13e5c-0d5d-4fef-8080-241e81950f54",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "23c4cba7-cca4-4c1b-9089-120f5ae13879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08557121-8cd2-4b1d-80ac-7712b669d661",
        "cursor": {
          "ref": "046709a2-5344-4ee8-9967-feecdeb89e55",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ff4432bd-a1ba-4e96-bdb2-2ffb165624b8"
        },
        "item": {
          "id": "08557121-8cd2-4b1d-80ac-7712b669d661",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5954dfe2-a259-4a37-bc01-bdd2300c4efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a33063b-4158-4859-930a-f66dca5299fc",
        "cursor": {
          "ref": "545c0483-d0ef-479f-90ea-087aba70b3ef",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b294a344-2a89-421a-b80b-3a97955204fb"
        },
        "item": {
          "id": "4a33063b-4158-4859-930a-f66dca5299fc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ee7a0d26-49fa-43a9-87fc-7ab92a2bbaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e52c6d-0980-463f-b1c5-b31fa8ebeb02",
        "cursor": {
          "ref": "d9dae533-39d6-43b3-97d1-95d616faca83",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "20cb41a6-33d9-4c65-af29-de3ca697dd4b"
        },
        "item": {
          "id": "c1e52c6d-0980-463f-b1c5-b31fa8ebeb02",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fa4e7337-083f-4b75-8392-a4c393cfb581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e353939-7ef0-4b1b-b314-65915ad7bb20",
        "cursor": {
          "ref": "e1e12bb3-35d9-43c0-b2f5-88836465a94b",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "59593fd7-da4b-4302-a08c-eee5316b7b00"
        },
        "item": {
          "id": "7e353939-7ef0-4b1b-b314-65915ad7bb20",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d2b66222-547c-4ee0-8ec1-314c8fb8b4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0f0bf5-4463-4f40-8e70-57466ceccf42",
        "cursor": {
          "ref": "354d8959-4f10-4c4f-96a5-abbedb2c0ebc",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c735e90d-6c6f-4539-8892-800dbe76e954"
        },
        "item": {
          "id": "4b0f0bf5-4463-4f40-8e70-57466ceccf42",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0ae506f2-0d55-4f87-b9d1-fe95ed3521fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0233a2a-0dca-477f-a24f-91acdd570d90",
        "cursor": {
          "ref": "b965a7c5-7eaa-41ed-8c9d-4925f03b06a8",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "66131802-25c7-49e3-86ba-68550134db76"
        },
        "item": {
          "id": "a0233a2a-0dca-477f-a24f-91acdd570d90",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "03d9a982-2b92-4234-ab2a-ca27432a81d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87edfd5-5720-416b-96b7-05484a9138d6",
        "cursor": {
          "ref": "97c0526b-9dc6-416e-b710-7b18c93aea29",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d48e0f12-57d3-49ce-b038-bf894d33e465"
        },
        "item": {
          "id": "b87edfd5-5720-416b-96b7-05484a9138d6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "99767f14-f5cd-43fb-a548-06533e9d8c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39adb93e-8331-46d9-8cff-ef6f2ae0afdf",
        "cursor": {
          "ref": "0fc655d2-d0b4-49b1-845b-4baab4342d02",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b744896c-58cd-4bac-b945-703eb98c9f3b"
        },
        "item": {
          "id": "39adb93e-8331-46d9-8cff-ef6f2ae0afdf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "420a2b2a-0961-4461-95a6-b339ffca69d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f231983-70f2-4076-846b-2dec23aeda3a",
        "cursor": {
          "ref": "dfb767d7-2f1c-400d-959d-bfb86fc14bc2",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2bfa5e93-770e-4210-8470-dad807ed12e0"
        },
        "item": {
          "id": "2f231983-70f2-4076-846b-2dec23aeda3a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "39f07d6e-d445-4349-94ad-ab8a8f2874c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdc1deb-d714-4e11-871e-d28a014505e3",
        "cursor": {
          "ref": "6907a32d-ff88-4364-b784-df157bf066af",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "880fb542-972e-499b-bbf8-90e81376b469"
        },
        "item": {
          "id": "dbdc1deb-d714-4e11-871e-d28a014505e3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9529b9b9-cf15-43f2-932b-11820690e4bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2885c0d4-d52e-4b03-995c-b42cd9d40d77",
        "cursor": {
          "ref": "0cbe9d49-d9d4-4125-bad0-e3a1a4810750",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c90594aa-8ce5-44f2-b02a-20efe28b0c62"
        },
        "item": {
          "id": "2885c0d4-d52e-4b03-995c-b42cd9d40d77",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "69c96a8c-1c39-438c-ae2a-0434910c1fb2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 285,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2f2d9a-2518-477f-be0e-5337d0058629",
        "cursor": {
          "ref": "30b844b7-e77a-4996-8172-dba447f9ceaf",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "43d72f70-59f5-40f0-8a84-540b378cb6b4"
        },
        "item": {
          "id": "0f2f2d9a-2518-477f-be0e-5337d0058629",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ec37643d-aec4-4ad7-a291-6c52c64b75da",
          "status": "OK",
          "code": 200,
          "responseTime": 407,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10db6ff9-3fc8-4a04-a827-842748042581",
        "cursor": {
          "ref": "723744a7-7c9c-45ea-9334-d507905c6e22",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3a83b77e-2884-4cc8-a161-afcfd2d8271d"
        },
        "item": {
          "id": "10db6ff9-3fc8-4a04-a827-842748042581",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3dc53190-01d2-443e-bf3e-662b27276947",
          "status": "OK",
          "code": 200,
          "responseTime": 502,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6efb7d6-b09d-404f-9047-ba0b98eee688",
        "cursor": {
          "ref": "2f9c8908-5359-4154-b253-be2e37fd4f41",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f4a0dfd2-82a7-4da3-a607-da98232d9a88"
        },
        "item": {
          "id": "b6efb7d6-b09d-404f-9047-ba0b98eee688",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "d62f59bb-321d-463b-968e-ab8be2383e5e",
          "status": "OK",
          "code": 200,
          "responseTime": 341,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedd90cc-47bf-4dad-9d02-c38392382703",
        "cursor": {
          "ref": "06629abb-4d01-4bda-b4f5-34640a7afb18",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d225fe0f-f17a-458e-a9d1-5364382dd7ed"
        },
        "item": {
          "id": "bedd90cc-47bf-4dad-9d02-c38392382703",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "60cd25ed-0430-4ef7-9bc9-99b6ebb8ed75",
          "status": "OK",
          "code": 200,
          "responseTime": 367,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
        "cursor": {
          "ref": "51e52364-7fcd-40e5-b4c1-22535aa5bdd3",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "255ff0f7-42fc-4602-b86e-220c215d9b23"
        },
        "item": {
          "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ff7bed2-93b2-43a7-8694-b9d48e5518da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
        "cursor": {
          "ref": "51e52364-7fcd-40e5-b4c1-22535aa5bdd3",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "255ff0f7-42fc-4602-b86e-220c215d9b23"
        },
        "item": {
          "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ff7bed2-93b2-43a7-8694-b9d48e5518da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
        "cursor": {
          "ref": "51e52364-7fcd-40e5-b4c1-22535aa5bdd3",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "255ff0f7-42fc-4602-b86e-220c215d9b23"
        },
        "item": {
          "id": "22d6cadd-f479-4b7b-8c66-6f9152abd9fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ff7bed2-93b2-43a7-8694-b9d48e5518da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013ca018-6d60-46ed-8eb1-43db732accc8",
        "cursor": {
          "ref": "14e20e2d-dfcd-47c0-b3d6-4889f05ddee3",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a9f96d7-1a72-41cd-a619-a1b60183e1c9"
        },
        "item": {
          "id": "013ca018-6d60-46ed-8eb1-43db732accc8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "291b8f4d-0afe-420e-b21a-02099b385cc2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 296,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a724c645-0676-4c28-b97f-6823a1b1d473",
        "cursor": {
          "ref": "48486418-3704-4d41-8047-dfc2cd56069a",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "edd62984-1bc1-43bd-85a5-a942563f6cc4"
        },
        "item": {
          "id": "a724c645-0676-4c28-b97f-6823a1b1d473",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "777c421c-33ad-4519-a1b3-fab73ca205c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a724c645-0676-4c28-b97f-6823a1b1d473",
        "cursor": {
          "ref": "48486418-3704-4d41-8047-dfc2cd56069a",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "edd62984-1bc1-43bd-85a5-a942563f6cc4"
        },
        "item": {
          "id": "a724c645-0676-4c28-b97f-6823a1b1d473",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "777c421c-33ad-4519-a1b3-fab73ca205c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617c5c1f-3184-4c76-b27f-ee49cef1a159",
        "cursor": {
          "ref": "5bf546f1-ce6b-4c1e-9f1b-6d2594148a03",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8d09e501-1327-47c4-a7cb-af14e0572a6c"
        },
        "item": {
          "id": "617c5c1f-3184-4c76-b27f-ee49cef1a159",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a0cf99c6-a685-4b50-aab3-c2a835d77193",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f3e8e-e917-47a8-8cb3-34a7c392d8dd",
        "cursor": {
          "ref": "ea239e4d-7872-4556-963d-55078985e3ff",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9e9fca41-b85c-434b-9625-5d342903e232"
        },
        "item": {
          "id": "616f3e8e-e917-47a8-8cb3-34a7c392d8dd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5b8d1464-0f16-4925-ac73-074acc36fd30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f3e8e-e917-47a8-8cb3-34a7c392d8dd",
        "cursor": {
          "ref": "ea239e4d-7872-4556-963d-55078985e3ff",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9e9fca41-b85c-434b-9625-5d342903e232"
        },
        "item": {
          "id": "616f3e8e-e917-47a8-8cb3-34a7c392d8dd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5b8d1464-0f16-4925-ac73-074acc36fd30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace21a63-1be3-41e2-896f-54c8072a1940",
        "cursor": {
          "ref": "8facf5a2-fdfc-4f54-8f81-8daa34ed3981",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7b545f25-450e-47f9-8f38-9deb13685790"
        },
        "item": {
          "id": "ace21a63-1be3-41e2-896f-54c8072a1940",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5e1d919b-9bf3-48d5-a10a-31de537f7511",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 734,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}