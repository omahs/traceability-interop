{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f08ddacf-b4fa-4a8a-91fd-4ac5885104af",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a02a30d4-94a6-4173-975f-e237cebe4cf4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a44cfb6d-c96c-4cd4-b26d-3704e177dc7f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee9cbf62-449c-425b-85cb-9c478a1c2cba"
                }
              }
            ]
          },
          {
            "id": "71047784-3efd-4acb-b9cd-1144e6894874",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf9efc38-1085-4f45-87b4-fc7f8f7e4f13",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "16750ccf-9c4d-4ac2-a0e7-a935daeda3d7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "35bc537f-493d-482d-a240-3833cdda193f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4897bd70-0d16-487e-bb66-8ef1c1f4efe7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2df953b7-e2ee-4b27-9756-7afbe3873fae",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd76d003-464a-4600-b48a-c9885f4c2fef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "111c15e6-d12b-49e8-8633-fb9d0ed44079"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ace46c8-3542-4aa1-9625-29a961583b7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0036c577-5182-4ced-8972-d516e5ce8841"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44823f4f-c547-49f1-a8a7-9d0ac90d1427",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c771ffa4-e773-4d33-adb2-3f06a48df59d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75c8b833-14a7-431d-b582-fc3ae93e515d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5ded318a-0851-4d66-b4d3-f3b2b1aa22a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "069fc775-434b-4011-80e5-78c7b8f67322",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "305edcad-c0a0-4036-a64e-20e79a218c96"
            }
          }
        ]
      },
      {
        "id": "3109b081-4a73-4b6b-8c7e-3113fbf6460d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "35b87282-6095-4011-8d4f-709dbf8ae48f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7db11f54-035c-4cb9-b47d-fa1abff7d867",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8d9aa22-3553-43a4-8af7-e756ea8838d9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d19af78-a7c3-4f25-b6bb-cc307f235c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e85a90c7-0146-43da-bf6c-3e44d40fbf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ca5ed9-1e5b-4f06-ba67-a1129585117c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09679e99-d05f-4f73-9c66-6a23f2a54d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d5eeff3-a1db-4655-a02c-e2bdf8d51837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2a823b-571a-4bf7-9b33-fcdf6ab7c03f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd04f17-372d-47e9-a7e9-7ec253bbff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0785e09a-fdbb-4736-bbd2-359e9fc715bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5e78c75-c70b-4eb4-b050-41af92a0fc4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6efdaa8b-5aa8-4f45-b0cc-1880cea06205",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf3fbe5-28e2-42dc-80ad-6970002d9858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "403ddf6d-791d-4ff2-8c2b-eac556431c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae0e276-ba7c-4970-b0e9-b0a6cfe7b172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad3286d-3a29-447c-8394-a0aead87ce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af953350-7af7-4043-b472-ce1874e5f9f7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5844d0cc-f593-44bc-b766-dd45d907196a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de95ab71-a70d-4d9d-9877-eecbe4a27765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730a1a90-0e41-465d-adab-fb00bda57d22",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d24511a3-7b62-4fd5-a613-b912797191ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b554c372-3a2d-4c8a-9a2f-b62e23e631db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b73b1cf-cebd-4d88-ae03-504b5410d1fb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11cf9114-c51f-4d5e-a0e9-162fadacbcc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "760d42b8-7ebd-4eef-801d-15ebc94082df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "502e5d3e-b803-43cf-90ee-548ec29cb242",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "72bbd55d-84bc-480c-9a99-33bd4233d8e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db8886ab-8920-46c8-abd7-a4d3201862bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "451e4b3f-3826-4cf7-9306-707a41b7a772"
            }
          }
        ]
      },
      {
        "id": "f054df5b-c1a7-4f11-959c-156b61e38551",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f3ad7650-6185-480c-a050-d877b6b71971",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d443731c-3903-4349-99c3-0c7b483ae840",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7fb3c260-dd4a-4583-9464-7f94457b0191",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aca055d-3ccc-4fdd-9205-f26f708ef004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd13cee9-98bf-4937-a001-ebb923196d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4f6ab8-86ba-4217-84be-6aefe8cc4649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6c1463a-9c0e-48e0-ad59-4b8c496b1d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ec6a6a-af5a-47d7-bf29-5698d521574a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6796741b-000a-4f68-a42b-a256a1fac7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9c0fe2-2093-4778-a9ce-2d7688265f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b9fe71-ef80-4d1a-acb0-67af9fc7826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82fefb39-079d-4e1b-9413-587ed7c3d504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e45012-41d4-459a-a128-dc27759a5df9",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e1cab4-201d-48ff-b4ca-96e5a8f04ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5a95e5-5f62-4a48-af3a-933161031996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a119f16-df4a-434d-92c5-5b1a76d1d4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c8d9ce1-a520-4144-ad6d-57d28a5e08bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29563f17-97ce-4301-8ac5-642397f736e6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ae10a1-7d76-4479-ba51-1f0e7b15e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec6698b-7412-4320-9fba-e743576e3b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516f6ad2-1ef6-4042-98f7-2a24288c8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c85d2b13-c61f-453a-af88-e82d015c4c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb04a14-55e4-4ab4-80a4-37af0afecdb0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cb9122-7de9-4eed-8573-5889351dfe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f69b1b9-3a25-40f7-a9e5-c82359fb4724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2666d9c-24ec-47c9-9190-40141d7dd342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc5b8b49-c466-455a-ab80-72889e4c6f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb43af2-ed95-4f44-af3c-b99511baa896",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de939590-0fef-41ec-b810-2cfe4d884d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6714780-1664-4e7d-82d7-f3903b0830be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eca1e2-bfe2-450a-bc12-caf0d37d1366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d31bf82a-7ad4-48c6-b133-63dda36ff4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abee27d-0e5e-4b41-9d6b-d8f7cc25c1bf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96546e89-a8b3-446f-995a-9870517baff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8edd560-b326-42ac-ac71-2970bfb67847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347a2625-bc41-42cf-96e4-5c8f0cbc856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01520fbf-ab17-4433-983c-c3b33507df1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cf1734-414e-4fef-b03e-55355bac68ec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8301e58-4214-4cf3-b303-d2518fa5dfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3862711-d3ff-41be-af61-b338342f086f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077d16b9-a364-4e1e-9e7c-31defb4faaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8bd15b7-3f9d-4a3f-97bc-a803d01eedec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b80620-8d34-4111-a689-42b8700c2137",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf97ccd-23c2-4355-8064-5231d6b47166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438dfd3d-9af6-4a33-991b-feada857a061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e29d6d4-4716-43c6-8532-69b032a66e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dcc48a1-aefa-4c71-b933-1472bffbb1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9fc939-2429-46bb-9fd9-bed1b52658a3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dcabd7-2513-413f-9a1c-c901550ffce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecaf59f-039a-48d4-aac0-4a95c8a565a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898469c6-22bc-4c44-a3ea-b498e2211dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd27eea8-536f-4fe9-abdd-61ee06441725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5d5684-50bb-4f43-aa0f-369b4d4e6fe0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b675f6d2-8bbf-46e6-ab3e-3675f5cc1982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756efe2f-30c8-45c9-a58d-0bf0710d6af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42990452-19a3-4d1d-aff9-283f3fd407a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40402681-feb9-43f9-9693-11009c3f91a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e18b59-8d6b-4053-88d2-10ffc94a0daf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f262d29-92e9-4ec2-92d7-bcdc7cdf5bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba1c0a4-d331-4151-8f04-01f33a19ba37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004d9b50-7dca-461c-bbb0-0d75424d8eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293f6097-40fa-4607-9112-764c4674e9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28430a93-b77a-4477-a27f-ed36d4788769",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f0e05d-ec87-4169-b555-fa98d8d6f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93baa64-02e7-44b0-84fe-0d61ce0ffa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6cb8ed-6dcb-44c7-acbf-7d124fa30ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "635b6a16-120c-4a6e-9c9e-8b96bc355483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5b84fa-d0f4-41a9-8191-5b4937c2a581",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db42752-29c1-4f33-8513-4feee7115dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa609e37-1bb6-4093-af60-09b632c3a6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a3caae-3543-4832-907a-be65363f30c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "48abb47f-c4b9-46c8-82ba-8310dabdf264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326fea51-1e1c-4b17-904d-fc966aa1c1cd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24954242-3946-4bbd-93a9-6063e9f377b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ad5c41-d506-4bc6-9de9-0c6bad3d2758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d4b18f-db33-4966-98e6-3d25973778b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a59655-0448-4d9e-b8ee-d19786da29cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e11d397-a385-4ae5-a6e0-abb0a6a6a0c0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e86a529-34cd-4fac-a23b-c4b1bdb38881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d92723-3395-4c42-88f7-b2ca2fb05a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e323bfa-8c0c-466c-99fb-5067a2dc95d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b64fc9-7d74-4861-b25b-fe39bebde27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1761fead-fbed-42be-820b-21382b0e1f53",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b496da6c-b1ed-4d5e-b1ac-a0b5e16ac5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cb25cd-cd92-4b30-863c-9ae1c9d7b4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726606e0-01b4-4d6e-b78e-3a080f031dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3954cbc-adb3-4bb4-a570-e76b5a86504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79332b81-cd50-43f0-a2b9-7d8e8056cafc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7dc3c9-081a-410f-ae78-755fd176402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2d4c4d-5138-4fe3-a097-17cfe5aadde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484173d5-8942-4489-82f4-b72f42e21d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8695a826-0733-4033-ad05-b7746bbc13ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df463cf4-af93-4bd5-8451-eb8ae2cb9bee",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee52f4ff-2a2b-4fb8-864a-3031f5d17a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8e182c-8911-47f1-8a99-b6c5311f55a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9092d6-fa63-4991-bd46-b13a4222d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a57b50-ff30-4430-a4bb-f9b1bef3b86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e48fe4-1495-43ab-ac78-77e5ddf36d17",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53db3b13-ab5d-4157-ad5d-07108f9449b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e214540-5d10-49b7-a089-fcfc796b1a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a8e8d3-5546-42dd-8a98-e4a072698936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6363b7e0-2c24-4b3a-838b-1c6d8212be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04fbb2f-9dd0-4d74-86bd-6fe4f6194656",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9599d7f-ccc9-4f20-b4dd-c3e98c37249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6e1003-4cc8-43dc-8863-09ff8b2e8d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c3c6e-df2d-4f48-a157-3463663bdcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e2669e-9595-4dc6-b370-04d7a3f024e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b86f2-d2a4-42ba-9358-8e4c3afacbf9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6e1637-0f2c-40a8-8094-5fe7622910c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ec84da-f31b-4d80-a8c2-da932f322faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53be405-d37a-478a-8af9-64773068a7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf78688d-b539-4e34-bce2-af9f5add5b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0867fd11-4b0b-4e38-867f-19ba9fbf67fe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c976679-5d9d-4022-9d72-06ba01b7eec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ef29fd-0683-4b1e-9747-bfcf3f352b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448a76e3-30f3-44c4-b925-b4a7ba6a9119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b16c7189-ede7-4b86-a8cc-e0bf49e0e2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9d5165-b98f-4795-a9ce-5c3145c03a81",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d83a35-4236-42e4-9642-955961949c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863b96c1-9dc9-426b-ba25-79ff7e9bb951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6c231b-a21e-4df3-920e-ec4dd67eb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc0a58d-a7d6-4f44-b86b-c50a54d1f266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eda83e-2928-4d92-83b7-ccb64ee20e3c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adcef09-b0df-44a7-99bf-24c1b9176347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21025134-6559-4ee7-852b-b190aeaba2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a579fe4-65c6-42a6-a8f4-ec8875ee6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e30ad8a-f18c-4292-97b9-9d4201d5704a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfa75a7-2477-4a24-bbf5-9e85ca13c7ed",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16d6a33-2446-4c32-ad23-48939d299b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edf9b1e-1e39-49a4-b6e3-7aecfab22517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3714a08f-bf6d-452b-b9c3-2be77a9436cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "121f0917-3245-45a3-a0d7-f354c4ad9f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b94f878-5c6a-477b-8739-a5f11ce12f47",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eb653f-e288-47e1-8a1f-4d950f512731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86025d17-c0f4-4220-9754-b4150dbf9a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3981d3-9a30-4df8-9ab9-9585addf26b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "986a013b-2f61-4c27-9c63-b411ead3d7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4f490-928c-44a8-a1a9-46564c79fc7c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e621c3d2-461a-40f8-98bf-7f6e66d54511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0568d02-1b9f-45df-b356-1862f22c1ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5995c19-64ca-4f42-8cb4-006a29673ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cb89df-0280-4c14-851f-3680afc8cc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4dd6bc-c89a-4573-a7d4-9eff45e84c73",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a636939-2fa2-4343-bb15-1cae687a32b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e2ecf3-b99f-41f3-9b75-0c4a559d319d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c8426f-c25d-47aa-a6af-cd205e920069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef448eb-e018-47cb-bc97-59622bccbe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf31633-3069-4ed9-82cd-d89b0f9d2712",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6b7e92-c470-4ee8-bcc1-1c3cf0e58f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c372a303-a457-47b8-b3b2-0bf6945a899e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d5556-8a1d-4d2a-b2d9-82536430babf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ed5a8d-6a25-4993-b00f-57410d05dee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7315e19-deb8-4c19-8b93-83a06a131762",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d87ed5-371f-4a23-adbc-05516e80148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a1fb76-fd6b-4566-bf99-152425d3363e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271fef62-8b24-49d8-8d55-2bc0bf85100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5239172b-5dd0-46cf-a228-f9a57978ebef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44909c1-0935-4ce1-b100-f37637394de6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8aaa0f-1bde-452f-85ab-0fb45d365465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929e9a59-37a4-4e69-9950-c5309702e57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd2bf97-5a0a-4a89-843d-34176db182ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc27575-4ac6-4e49-9d92-d05d83362218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2becaa-d843-42a3-9e1f-9839082ab0a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd1da55-adb6-4e24-92c3-371742a43cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec1ce90-16c0-4c6f-89d4-786faccd2dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c34d39-8750-4ef5-8a18-97e72a215b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2021e63b-61c4-4577-9244-2a3f1f5447c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d52d85-4ea7-44c1-87ad-50d8a443bda7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f56a2e-d36f-40f2-97b3-17b69cc9709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3530da4d-8b1e-424b-9c3a-1ac98d929de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cea6b4-91f0-4e41-a5b8-ae89d438113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "805e6c06-4a46-4f18-a674-0184be60439f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c552510-34e8-42ce-8ed7-4bdcaea50257",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3824b6-cc7e-480c-9bd7-8c8f3a23e70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c983c6-32c9-4b05-938e-56ef176181ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb951272-8c9e-425b-b3bc-86f239acad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c4eda6-f890-4575-a39a-5d4826f8b179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b656bc8-f4f1-4978-b68f-5e5a05d499c8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2eac14-0e41-454c-97d5-7c9f54290845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d54646b-ae08-4e43-8efc-033cd2309121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e35641-e1fc-4873-8391-4a7640bf5944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c383004-f726-475f-8f06-cc465de9b102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0fd064-eeb9-4bfc-9b70-57bcda406ee8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b111b9f9-37f9-4c08-afd8-e2f551f3918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ff682b-ddc3-41c1-90b2-a18dcf75d808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3ce112-3572-45c7-989c-ff4c6dd9b6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bb5916-10bc-4df7-8b40-bdf7c011b211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90c60cf-73ec-44a6-8dc1-6475cbd92860",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e11b4-193f-471f-b84b-0078e6dca9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a93acbef-57f5-4378-8e92-e0462549ef25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e3da73-1c2e-4a03-ac20-5764a27feecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18995dd1-9cd1-4272-8d41-788aff719cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cec72af-9148-45ce-92b0-4cbd09cb7e51",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121e4708-10dc-44f0-8765-f8c675c23485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9b03f3-968a-416f-be8a-a6d27d6e6cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52caa14-a1a8-430c-b6e8-b41c18ecd860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7441aae7-b131-4c9a-b6dc-970513416b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e690d1d0-9301-465a-827a-137f9a0ee553",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06884f08-2a45-4f55-9076-0b4e870c45ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41445429-1bf6-4f6d-bac4-de308a81b656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081013a0-651c-4ba3-84d1-838b5438a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f26b6d32-174f-4325-bde8-91b7be78e965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a15138c-c8e7-416a-91eb-38ab8f603575",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022dcc52-fcb7-4c2f-9a53-3bbfb4e728f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21463df2-831b-4a9e-913b-86bc92e08023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03593c84-e29c-4559-b796-242e2a499746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf82ba5-f74b-4fe7-885b-e0e4ef0c3b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04823224-c14c-491d-9c4e-8cf423b06cad",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd63194f-62ff-4cfb-8788-c539bd42778f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b7267e-8824-44f7-8081-caff85dc396a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6034e4a9-0a43-4a63-90e0-14f37055f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ed1c7d-cd5b-4e9d-b623-ef4f3fd267d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665bd46a-4916-417f-985f-fa6ebf9cc9bf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225bdcda-d102-4b2c-ba7f-78ded322577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a137d33-cafd-4cf0-a54e-7977e32de2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ac0908-c588-4a63-aa7d-f0d95fec00de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f87d75b-59a1-4528-8a25-60175b591f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cea756-89ac-44a3-9b5e-dfbab93d8114",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60798e70-0bc9-452c-b180-66c7a91e58a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dfa938-1734-47e8-8e98-03a74501bb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2e6f87-3f5d-4334-bd38-4ab38544d174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1cea6d57-8abb-4197-af74-6586bc12e2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9afee54-7a3b-4ca5-8b85-271f154681bf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fd9ec7-1b60-400f-b991-25003bd3b55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c10920d-4542-442d-9a81-33be5c6b003e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989a0418-5330-436d-bbb0-4ed6940d8a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c51aee-6dc5-406f-b0c2-7521dee2e0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feefeff8-aa5d-4651-9b5a-454b707cfb9d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01388cd-49b2-4bfb-b0f3-0c76b3697bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab76963b-a224-459b-80d3-3fe65de8a44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d6931d-2c3e-406c-9a42-5ca13ab1e271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b28bb91-5b2e-4151-82bd-f8a8359b26fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7730e7b5-f48f-408d-8b00-83001c11814f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645e04f2-ec3a-4ef6-8ca5-514708213cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63457107-cd7a-4a72-b99e-6c00fb108111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b5a920-cf0b-4059-9621-de29407dbf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c7f3da-3f49-4930-b26c-fe90d0cb2793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b65202-bc01-4f25-b8d5-08d5e2c4df80",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4783ce6a-115f-4133-948f-ea9a3828c437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dcfa1c-2ce7-498f-a435-35caf12c5e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba6bcb3-4f9d-4cdd-82ff-2a81805e8579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "158f0f96-1396-4ff5-b285-c24f2873b284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6daec22-186e-491b-a4d0-b737c4ed52ec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e43593-25fe-4930-9f23-b7d56f8be283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a819db2c-5da4-4d30-be01-fcf1e030abe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbb1890-b919-4a2c-bbdc-2a23f6fc53f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b27598-07a7-40f0-9ee9-0c4144b5ac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b0f09-7c39-4e70-9fa5-a52ee6bc60aa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72dcae1-13eb-478d-a121-aad4734240a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ef5c2c-6250-40ce-997d-0139aa00074f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d58f6-d6cb-46db-8d98-67798dc935c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b514424-caae-495a-95a4-c3a772b41143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9b60bf-4768-4550-b482-882aefc04176",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9d5e61-c1cb-480e-87c5-159aa0865baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4f30b4-5d50-4228-b7b5-e4a8558df7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0740ba-4bc6-4703-8178-1d0c601ea754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "379460dd-1bcd-453a-8cbc-d21deaf7e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6842ee8d-8a36-4e23-869e-dd2cde8af2ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2715d59a-70cb-458d-aaaf-0c3ab8216b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8c3d5d-f9fd-4a82-a2f3-39b468936c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fa799c-c176-4265-8414-602ef120ce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5cde6a-acb6-4f3a-8d08-bddbacbe3bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ad1ec1-44a1-4a2b-ba7f-4aefb87187b1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4df6762-af2a-4bb6-b9a3-612a9b526e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d72e85-4a93-4b41-a924-2a2e38c2a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1922c0-ac7b-4c8f-bd22-1d29c2419d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "11491a9a-fde6-44e5-b838-99d227c57465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6485f6d-8213-4efa-a19d-25a09f6867c7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d3bfa2-14a6-42d5-87f4-3de03b0a592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe7d95a-27df-4ab9-9871-159d91070a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dc9960-3349-4d66-9fc8-7828ad47b17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3d4afc-4a33-4213-899c-fcbb1edb06e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66510ce5-e65e-46ad-846b-113b95bcc495",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee8bcf6-63e7-480b-a632-36f4382a5c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd7156d-64fd-4e85-824c-580a0ffd9e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b715b8-52cb-409c-a762-debc5849f341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "040e2037-8bd6-4ea7-a464-2a025b1c1541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb33a91d-3b87-421a-b6b1-27a155a51bb7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8397d1-69e0-4880-b4db-12c40969d083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf61549f-65e3-4f99-a833-0ffcb6a09077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1735f9-86c0-48f1-a5e2-ccd7b38fe09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd63b423-5964-438a-a656-a00f805a5cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7f72ac-1bd4-4739-94b1-3d8c556ffabb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866aab29-fc80-4797-8f87-a37361d3b1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951d3d65-8e04-4145-8d97-692b741ac648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbf6c00-b5ff-43ca-ba82-da25cb2ac5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2a5be7-90aa-432b-ad48-bcec68a437bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30cf8b7-8606-4b81-9cae-261552e5e14b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bcc860-ca76-4434-b500-e733633c3023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5c0f6d-7614-4fa2-b708-febbd1cd7929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcf1e87-393d-4878-b62c-c9170b361c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "febaa480-b82b-4226-bb1d-4e515cd29e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e00ea3-4f3e-47b9-b43a-aa9c4388aa6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb880d9b-b1de-4db9-a0c2-39bb3b02759d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c71a3c9-948f-456d-bd63-1f8ee182d66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaf269d-ad96-4e8e-bb75-b4997c8455a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6689015-ea82-46ad-8391-47f1fce73519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1509ad09-28a3-4a0c-9350-7ccf4e6271b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4045aa5-7711-4c97-be9d-29311eb98877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bd2466-e4b7-42df-8ed5-38b7d6c8fe2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7f1ea6-f91d-42b6-9b29-eb7fbb56a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "886050d7-9a9d-4ceb-8775-55015db93de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7f0e11-7a8f-4e38-9553-b6c4851cb0b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce688254-b377-4df3-993d-2f977265ce8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997093b9-f6a9-4728-959c-8797954ba07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa80139-46f3-4e3d-908b-e015651aa9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3db453-e845-4053-8f8f-fd89cd1f896e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bed5e2-80ad-46c9-a074-31e8cbaa0f8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14c15af-3c14-4eb4-9066-7f45cf69d80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938ca40d-cc9c-4ecb-a1ed-5f78ff5dc986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350a5798-5687-444c-9a67-f2dbff70a748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9867fd7-854f-4db6-a4dc-5c2f951d36b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c74bf0-4616-4cb1-993e-16dc16ec8d95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974b70f7-7c71-4c86-a062-124146570b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd41c9fa-0315-4399-88a6-29bac2314531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dccf74c-619f-4e2e-9386-986da2083ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc73acb0-5e46-4c34-b2ba-9de57fb96da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fa083e-d50c-4001-93dc-6f452559923f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2831863d-8163-4d66-863b-8ba09f4f1546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1815f964-96d4-49b3-a9be-d351ec24d389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4445ad5-531b-43e5-a0e3-e4a242c0de6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "881b34ba-7570-417e-94f4-5c24e6a75a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9175451-96aa-42df-b6c2-9387f2ff5b2d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f6a4d-b704-4d47-82d3-ab991ea0381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d22931-351d-4e51-ab52-fe72e09d3390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584584f8-e381-4a71-a434-8d42ef9e61e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09dfdc16-e828-4006-a70d-4914cc01961a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d2e57c-1bbc-411e-86db-e48ad92d6ab3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201c6368-3d28-4177-b405-39696f3d813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d65456-b9d0-4d46-94ee-6aebf0964f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b6710c-f9a4-45f7-8dfa-ada1fe5437f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "719cf29a-a320-424e-8d01-741f02653bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa3c02f-1cb0-4592-bd87-f655e0aaffb8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9c8f78-8be3-4e08-b9ad-5d39914371cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe3f5a7-4d6e-4741-8c91-0447d9bb3ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aec693b-2491-4285-80b5-962e9df623a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cffe9cd-cd04-4be9-9099-53d8b6760fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e3368-c71e-4083-be20-b23af8f6c1c7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f211b5da-1487-416b-92a1-d7bd2f87c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2062e3b4-c37a-471f-9cb2-c250d2997680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83779cc-2ce4-43df-9714-4a5439e1405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1f8b40-4344-4198-a5d5-c567b3e28a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ed6e67-b146-4dcf-ba6d-42f586e28fbf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c5c16-44b3-4b86-8f40-ee54d82821f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d8c254-2103-4c05-9f86-475008543b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f2a9ec-2bfe-41de-b887-93726ef73061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90e8ee86-a42e-458f-9f11-8ec904a3c846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7858bce1-b27c-4119-bc37-7910fb054d4c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e090bb-cd75-4de3-b4fb-529c0bb59719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40d260e-3673-457e-ac6e-e0f5a87a9e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae42f8c-203f-4302-832f-cd4a71b5781d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "02eecfbe-c452-4474-b4b0-4b957b74c592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bf8b36-44ec-4fac-a1b3-d7f288bc55aa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62696b04-dc45-4118-b05b-05bcaf9d3b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63152bc1-68a0-47ad-9e4b-4d18dd611fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63338889-2fdf-4ac5-8ae5-c5319500ad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75f52e1-040d-4b38-8140-2f54f2df77ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c17fbb3-2488-4af0-a492-8a899bf69049",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ae3269-0113-4aba-a2c1-9aec6430face",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74847e96-5a2b-47bd-866d-da79dc74d540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20532de4-b4f5-4582-87b4-af0229c7f27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83c3559-0943-4b31-8f9d-c903dc4ead23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0030b9ab-b9fa-4551-8ce7-1d37eda12f3c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d808665-1248-4065-981c-62977997e18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298e5ab5-c457-4f5f-b3bb-5772b840253d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b314b0c4-9af1-4ef8-8d05-ce14990eaac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb371078-39c5-4452-bb00-6cf0c5ebe70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf1f280-1fe3-4dde-94fd-2885e4923e4a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a7b46-be7f-4338-bf40-9026ceea81f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3ac4f4-ff5e-423f-aae5-1d6e77e3057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17de6099-1577-4c16-ba53-11d0e992eb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b892eaf6-3ed7-4be2-bedc-f20077ec9172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f44679-1af5-423b-b111-29a1afb1b14c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c0d39d-2b37-4eaf-ae29-b491e1f80dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4294a6-3d44-4c58-a598-5bc43c7d0b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14025ed0-3796-48fd-81b9-feecbfc9c142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2091ac7-15dd-436d-942b-5f01742e771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a722b5-db1b-4c80-97e5-10e07203e1e0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8de5b5-e6b6-4b32-85c7-23c98b485909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f30e490-6552-49fe-a6e0-cc7bc11b44d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51a1fe1-c34e-4f90-bf76-4a0cbd079763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70bfcf23-57ac-4bb0-ab2b-027c20b67c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f628eb3-f43d-4db6-9150-64f8d81b4e97",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d2b5de-6f72-4e19-bbb0-1f5546e5d2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0216d4-86c0-42da-9833-7a9f38f9bc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b87f6c-f1ed-4cd5-b918-161154045e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09be63c2-ff4d-45b9-9b4c-1b83740c32f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772fc550-13f2-4c38-bdbd-93ad129c7765",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a2e597-132b-4f39-82bc-5b8cd20a21a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa3602e-f30f-4f3e-ba40-50b220b5b1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be4a886-6229-4077-ad15-4a23149657fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34d5d99-9d43-4c84-a2e8-c9adb4abadf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3418b95d-df6a-4371-8852-0d43c4121511",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699375ec-9a04-4138-af19-180630c732f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f101028-4596-4dbe-8210-b25c6157be1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a75180c-bd92-4890-9cf4-94a3cfde3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d8a399-8b16-44d2-bedb-8f9e491b2c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbf784b-2ee4-4667-b2a4-299d20e09b9f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8163eb3a-1e35-4624-b965-63ebc9c6f45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a805c0-e6da-4271-834c-9bf10a7b95b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5daea97-7d9c-47b8-afbf-ad9a68d3ce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87ceec4-454a-4bfe-93ab-35e4a44fc706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f701489-461c-4844-b1b9-9bd23b8ea86e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283a6db7-882c-43e9-9362-80d668238c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ec352e-c5bf-4794-9155-6137654070e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cef890d-ca94-44a9-aa31-f0f7feeb2bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62615f06-164a-4fb9-a87f-806ae9ff6fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff6e9e-4022-4d63-a674-01d15a291a37",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07e653e-1cb2-4691-bdad-a4a88052cfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c21d28-8ee0-43f9-ae7b-c13dab7ef6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd99ded-f214-41da-abe7-3032cdfdee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18d31d96-68b2-4780-93ae-e5bf867703dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea043a8-7978-4802-a7c5-31ec8a0b00b3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592d1553-bb6d-4176-affb-303479098b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca377f07-024f-4846-adf4-0de8e812b558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c954032-039e-4c05-8c4b-70f0f5336454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8163fb9-ee98-41b4-aeb4-3b7ae97a8313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1669909-ecae-46d4-bae2-efb2133bbb88",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd02c57-6519-4e5c-a475-961c0a6d93a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88ba1d8-6c82-415e-9050-39cc7f6e57a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca3f56c-6c76-4294-9f4f-2bb1471a5038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa94af8-6ae2-44e5-92ad-f05436639f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b392e218-2f0e-4781-a431-3bd3a14babfe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a02b8c2-30b2-4405-a787-acd0fffa5fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ceb4560-af57-4010-8f8b-b82e347f9b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9d52cd-09b3-45b6-8f7b-9f8cda47d1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "373bd10f-e917-4125-83fc-0f0ab2e99225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee53e16b-7016-4f99-906f-2e52ab11b25d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48830fa-2a14-4db3-9fd9-4f15227bce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0a1ea6-f4d9-4d1e-83ec-a874c63e6be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed33e58-cba7-4014-81ef-ce29c72806ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5292fd-4c0c-46ad-a5ee-a66b81e39c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7f431f-d345-48b4-b50e-e3e1d356563c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ea6c09-a65c-4a18-b334-d05e11bc3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d01e78-e2e3-4466-a99c-adbf82508d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35ca25-1d4b-4a4d-b379-9aa76334125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da4fc665-19c1-470b-9fcf-83d970bd53b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c73e90-9ff5-4dd4-8d33-8c59919bb5e5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3d5d2f-49c5-46ec-8ce4-f5f522f93889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c2501-4a3f-4545-8306-462a96352329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de82753e-ca38-4828-920f-194dd6368f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73b958f-3c87-490d-a01f-77d61f63b6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168e03db-7ff5-4d84-8f2e-75a32a144f20",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70e8f39-fc94-4ff7-b471-e5712e92013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec5ebbf-bf80-477e-a54a-276b4499014d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf7fce3-4536-41ce-9d48-f4b6103780cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6af7a1ed-7d75-4ee4-bf04-29b16438a339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb5f0e8-4ca4-4703-b4ce-d48d8b4bb524",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ff180-84f2-4996-b9cf-1c803baa1540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54204ec-72ac-4c8c-aa44-f2a846189f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9533cf1-afc9-44d3-8f70-a791cbfa3cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0856eff-9ca8-47f0-b472-71f94fcf5667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b474b78e-4dc5-4bb8-8e86-5b9f554c09ce",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bf0c20-43fb-46be-9084-acfde916c54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a3e2a3-ad93-41f4-9d22-5e9136e7a9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cf1100-e157-4bde-beee-6706943aa4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcee000-64b1-4371-adc4-fe7b748ba7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8db247-c0f8-4293-bcf8-8051ac2d2227",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6d77b8-e868-46ca-b35b-b3b56ebe28a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acaacf8e-b786-4c89-a915-22d215f5d4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3a188-f41c-4cd2-aedb-32c249f80370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34d54ff3-e21e-4383-9db0-34e0b41d1fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a752ac76-119f-4294-b5f7-5dd48dd324c7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a4d506-af14-4b28-85e0-6b8eb86fd915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ca9dab-3618-4da8-bf83-70e3a98b3421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455237ef-ceba-414f-9ea7-77ab61860d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c717ff6-24e0-4a5c-9096-6019c10846b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defac15c-c63b-4342-a9b7-ebc879f703ee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26338e59-49ed-47da-9179-fbfa479b809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3d77d847-fba2-4c81-a54e-5c34dca7d987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ff9ddb-5dcd-44b5-9cf8-9310f47d3d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6006c9f6-cd68-40ba-a0fd-c7f354d66098"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88d05fc1-6479-4e06-b576-c1b6782fe242",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d9df696-cc39-40d0-9236-b0d7e4fb93d7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be913cb-fac9-4652-94bf-95b68eb58899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4acef3b7-8213-463c-8574-2454502b550f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fe931d-3b09-4cbe-a88b-6b55bf706de9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "595d8e4b-b413-4602-bba5-7f7d138cd3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922a55af-75a7-48e4-bb11-11dc0fc50983",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c47f717-4b99-4c05-a8c0-048d0a6e9bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9964854a-4480-4f52-b91f-d93dcb26cbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5bcaf-c6a7-450f-bdbd-b048bf0d53fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3b44d2c3-f394-4f22-a064-305f9174a961"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee4f0915-1ea2-4aa7-bcf7-6b22e0039920",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de8fad1-e958-4224-bb19-522af0972a97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1cf04a9-7ba9-4a7f-a056-88de7a4b1812",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c7fa4cb-15c8-4809-a540-b77c6f8e0113"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "930cb0ea-f583-41e6-a8fe-4aaa7b553c9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1538c00-efd4-4013-9ec1-1784a3135017"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f80eef4-3b73-47b7-91ef-8480d5f8d508",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "278df95f-776f-42c1-82ad-bad08c9ff288"
                }
              }
            ]
          },
          {
            "id": "924183f0-a0d9-400b-80cb-40d005756c54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb960223-3199-4771-9579-21d97e936f4b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a35f3608-f8f0-4fdd-b729-56a6c74376a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50a2eaab-a6df-48f4-ba56-f2ca86f7cf5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a735092e-5575-4502-bbd2-6209b54e8c90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72027ffc-538d-489c-8b01-989381d6915e"
                    }
                  }
                ]
              },
              {
                "id": "9840b050-4159-4432-a62d-78c517e279d1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "458b739a-f6ce-42f5-909f-903ce7fc8e40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33302a58-8c8f-4816-bbc0-806ba4994987"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "946d59a4-5ec4-484b-8169-ccdf62cc3aa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ccac7b5-3c6e-42ca-8d40-7aca88f06d65"
                    }
                  }
                ]
              },
              {
                "id": "40cc7f80-c739-4157-8ae5-a252f63a18d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7373b8f6-3252-42e9-984f-ea9dbf5fd2f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c46cd02-ac03-4619-8af0-6142a03a5980"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecccce4d-7d86-47a0-92a8-3e950ab8b335",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "52126c57-8b65-4106-8d3a-a498e552b69f"
                    }
                  }
                ]
              },
              {
                "id": "3bbd4b55-d4db-4b7d-b48f-4db041e76ca8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a62c4e19-a29d-4af1-83a3-6d8ce233cd93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1858bb64-3ed2-48d7-b17b-a884d141b05e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de89cf8d-5782-4c79-87ac-8b71c3c0e2d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4849b1fe-e416-4f96-b381-49d78afa9151"
                    }
                  }
                ]
              },
              {
                "id": "0d334018-9aba-4041-b586-dd250e55e578",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b498aef-1e04-4d4b-bb59-4096a5a36616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbbf7b06-cfb8-4272-b459-28b2f158dc82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba64b896-6f8a-476f-a1b8-a79971a55c2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1908931a-4cba-4e88-8b7b-6d1634a09a21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "591ce1ac-782a-4019-a024-003a09d490ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a456e2d7-3027-478c-b283-1191c87d4509"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f21ff398-8d28-47a3-9715-9cb149541647",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "faa0c6b2-44f7-4833-9ed5-7f7e4260683b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85ad05be-8c20-474e-b66f-e20c6441d197",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c6ec51ff-32f2-4168-85c4-85c7444b0153"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "949d5540-40a8-4d55-ba23-782dddd7e52a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a792e579-9135-4310-9c55-72b9f0f53c46"
            }
          }
        ]
      },
      {
        "id": "25db9637-4a3e-4fa0-9c0f-c6fb36a0fbab",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0d4e9034-984a-40d6-8c74-8aef55bf82c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e6da6cb-8ddf-4e32-8d98-5278c915191e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a984017f-6bf7-49a5-b05c-1de976d138b7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a7754d-1d73-4326-85d1-0109700ac701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161ab9de-a35c-4bbd-b2c0-253eade49938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498598ef-9286-4862-9ba4-b5ef64e5ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5330773a-e6e5-477e-8f57-a435fcce51c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a556389-5c57-4569-9fe5-ef4cff63fd4e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec260415-ef04-475d-acd3-4807154b9cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fd99ba-3777-4ebf-866d-44f76fc149b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175b5fa1-0458-48bb-b87c-2027c40ddf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "002348b1-4e11-4f90-a4fe-d03e4e9fec40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41426094-e1ca-4121-b81d-260174be19f5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27a69f8-8145-4f33-9a11-5a14e3d4d6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5867d85-18d3-48e7-b925-c965467b4f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2698bb9d-aa4d-4134-b022-cd6772e9a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c6d1d6-01f1-446f-b11d-5938d3dee54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f5488d-eb18-4372-a685-68375d2fe68b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc1e6a-1912-4928-8b9c-17edea0dade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a64a01-e9b4-4cc1-8ca9-ac3be2fd9cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc05034e-e340-44bc-92f3-8240d2a8287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a30f5fb-9b5e-41f0-845b-239730541ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a1858-f0ef-4f92-a3b0-212c1a9b5b79",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9775d40f-daec-4283-8fdf-99455aee140b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b3bb9e-183b-4147-9800-baefc7d4d6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6cc03a-b4b1-491e-b743-4cecd3c2cf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab556ca-1767-4ce7-9263-39bd37c61d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2648069-7e8f-430e-939a-c06d4b3eb82e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c5f76-ce33-47c2-8da7-8c4706f126ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32174a1a-5e47-4bbb-92a9-e094d4d3fc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d260d402-88b9-4000-bde1-4085e01427a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12efb762-83b3-4f31-ad04-072f82477d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4218ff32-3176-478a-bb29-639357f9ca6f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483ae864-3bb5-4ac6-8131-7a16e9585199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcc2d8d-6ce3-49d1-985e-a1be26d7ca30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdee6dc-9e74-4986-96ce-d20df1bacdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "853da2dd-e2a3-4c4e-9083-72fbe890e1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57743dd-de05-417b-91a5-203ea150182f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd426dde-39cb-406e-84e4-a9fc87a310fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bcb6ad-3a1c-4d98-b0b4-5dc857c10a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6528198-99f8-4b86-ba25-55bede016c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c1a093-1011-46e9-9b5f-8881401bb10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcc946f-59fb-4259-9ea5-11a9fbdf5d76",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d99b58-2031-4e13-ac8e-ef5773a7bbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c381c4a-3ed1-4fa7-92a7-d7ad4164ac4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c783e90-2341-4d66-a7ff-96cc0e632b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c7e04f-aa7b-42a3-8599-50d705fc8caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d24294c-b090-40f2-ae43-dd8ee23ab3a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c76558-aa39-41f1-84e5-e760b0a1577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23914e54-7a42-443d-a6f2-bf8b111f6017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06dd9cf-6102-48cc-bc28-c27dc4108861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d8bf56-8669-478b-9a7c-051f9dfbd74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9109e15-8d9b-4815-9fa1-4e2bef71ea26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fd7bb0-b2f8-45a6-98ed-26a64be3149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204c9737-e190-4ce2-8b04-e8a373ce00cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9285809-b86f-4ec8-9002-090eb7d24fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f86309-8082-4019-ac52-926af433fe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad836571-c682-4f06-bf5f-36ee09e96fd4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd214cb-0819-4011-a767-f855f6c89bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be01563b-caf3-412c-a32c-5f4640c11b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7641a42b-f268-47ed-bb0f-bc8c33655e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "029a880f-8dfe-49e8-8334-696ca9d543f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce01811-089e-4d76-bd9e-ab2f95c4a8a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8186a476-2d81-4fc6-b4b6-a21ee3b6a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f5392c-edb7-40fc-baaf-f5bffdba5c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e52456-9882-45c2-9f05-0a35294f90ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cf8845-375e-4b5c-8753-e565a58055b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e660233-f9ef-44d8-93a7-391f77f95b45",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e2b542-1c50-46d6-af2e-23faa93bddb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96edaf58-55c4-47aa-bdee-f0317b75d747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86d853c-01ce-4265-aa36-87f6eb4184e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1949a9-d862-4c4b-9779-1c60cddc9cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce553e8-cd09-4800-8b19-981f9a1b2743",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccef400-9c99-48a6-9865-ea5daa7e75d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fe56ce-ca6a-4afd-b895-2b0054039296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ffc5a3-7bd8-4feb-b423-f36bbbad2826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8bb777-f191-45eb-a5a3-7de9da8de958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d295400-dc4c-4c3f-b00a-5731460fee02",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a84d84d-35bd-4f14-a900-eaa62a088cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795cdc55-ad97-45e3-aeb0-13c8f6fb7a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fdbbd2-5443-4154-972b-d745ba80f382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2a284f-f674-4a3a-80e5-e93f47f1f98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac1b2a2-a531-48e1-a39d-bda2a378fff5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe249690-5734-4461-9dc9-b26266e19404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66915801-c259-4da8-a82f-116aef4a0b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9becc7b6-824c-4bde-be20-61645abcaa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3cb7c8-a3b6-4956-81ff-9a060f4a90dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a78a44-7edb-4097-a166-9f9d59cd6f26",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17efd11f-5433-44cf-8a0f-cc97b0d68cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd93027f-079e-4243-a38c-e02213836587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653673b1-f573-4185-a34c-7ff67f48984a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36323d50-26d6-40ea-992d-1a4d2594ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e932b07c-0eeb-4f16-a83f-9acc391ed3de",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0da509-8dc6-40ec-81a9-eeda30066d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d18fa0-c306-4749-9194-7795aa70bb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a57725c-56cd-4ca1-8753-a6fb6945908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b1a32-d455-4939-b88d-ec20c22402b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfc088c-d551-420f-9def-8772d90675b7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b472c-66cd-4a4b-927b-ca94df59d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288325df-1b45-413c-b95a-7a08be9a9218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c2b2b9-e955-4503-af4e-bf2101de8b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "444991ac-5ca3-4084-a7e9-939547a7c1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97df3d6-4697-4ab4-b6aa-725b089e1c0a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5c1adb-4bd5-4716-920a-aee76672e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025e775a-1452-4515-9290-80079c3653e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4e6cac-983a-4ba0-8c4b-9af4ea8a5e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad623340-5289-4d56-8afc-93620587377b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ecc404-88a7-4cea-8a02-8d0d5f2755ab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e53541-9ffc-4984-9c0d-8f8af7cc475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dcfb02-97a6-4e2d-a6b3-b07f032acc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7edad51-e11c-4449-b6d9-c41306faf838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bde80e-68d2-4205-831d-97c823369540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241e4234-a045-4cbf-9992-806543493759",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f738c256-3a8c-4985-a7c3-8bb4f6841b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4219b8-20d2-4532-b481-87cb24067a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c35dad1-01c5-4970-b59f-1269855ec61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1822cac0-4783-4dc9-bd69-4a4567e54e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f89993-9925-4369-93f9-e520108ce74c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df6571-f1f5-4876-90a0-167e134fc944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de99ba3-be0a-4803-a1cc-f676013bde4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a94048-e38f-4859-a4fb-9b133eb66529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc41bc5-6913-4c43-a689-5029bb9b8dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270aad9a-0e83-45fc-a3a3-4975ffb50d91",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ce8510-28df-4d18-87cb-70d3b84df2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d4dbae-2a22-4325-8a46-0f5edb591fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ef588-aa0f-48e7-9431-7056fe2555d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "800c4fb8-df3b-4394-a41c-dace9320bd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6ad992-daca-4c31-b73e-b85eee628e0d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f897822-8b88-41d8-85ff-ab0fa906195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006e6420-69af-4967-9b8a-20840e683fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9583a057-4133-4e4d-b558-ae6e6dc79067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fff003-04d2-4c00-96ed-e9449c52e3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4076131-0b54-406c-a4bd-a99ed3e7ea97",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db02e59-1c0d-4a94-9834-d989f316e74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c29b0e-d725-49be-94ba-486369a0a4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c2e325-f8da-41c6-8381-40e312f4f1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c528c2d4-df86-478c-b019-46f84921624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed98620-2e29-45ac-9053-b041372c9844",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25539835-8e6a-492e-beeb-ba3df0b4f99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f997d1f-224f-4c15-b8d0-d314f27d3f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30022a3f-2b00-4997-88ae-1d34e47c69b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8735ce42-d573-4078-a61e-2b006f8c07a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc4efbd-9ca7-4808-9afb-589ca148dae7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522824da-3e4d-4450-8bf6-9267f6ec94de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0c1c6d-6976-4278-abad-706e7b37e63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1abd60f-e97f-4853-bfb4-46cd8f650181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87637158-bb47-41f3-9c5c-79c154a6481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806f9143-ccba-4e25-8d05-23e9b30a5fc7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e2db3-6e82-46cb-91c3-81fb9b9232f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8c5e46-5c02-4494-8318-56575c08f6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbf7b1f-e282-4bbb-8b3f-9add373906b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9007dcff-9810-4211-b476-c407c55ab93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1b59d7-6e5f-46c8-b36d-0420250d5b7d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b01ba-c913-4820-8bdc-20251ca6596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ec577b-cb9a-4702-a732-19f4759e1e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c589e0-01d1-4501-91f7-66d69442f115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a598e0a-16de-4f2d-b54e-b623592be0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc85c3d-4494-470e-90c6-857ed6e31278",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7cb4f7-8590-4ea4-ab23-1e7c057659e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d80822e-8162-4b52-935e-beb05edfcbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5504de9e-1b01-4ab2-bb46-d2204aca88ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "575f4545-8ead-46e6-bf48-16b0cf9bd828"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3cb0a6ff-0230-425b-be91-1b02873d5ba2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f44624c-609e-496c-b77c-446b226dd538",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a75a41d-f72d-4ec4-ba28-c82b15dc533c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04001e30-d34d-4786-821e-59dd6816d7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917f8cc3-a0a0-42fe-acc6-b8c3c2e5dca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0c47062-c555-4957-bfcb-c8153d4623cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e739c8e7-1867-4276-a818-335bc69b2d79",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc28792c-e8ab-4ad3-82e9-f852e29967fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "22018423-d55c-456d-b9c9-1fb3dec71b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e3e214-8f8a-45c1-80ab-932866ef2f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2d9e29a-7773-4403-ae46-b5679ae01f7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63f5c170-3f6b-4f4f-a498-516fad89c372",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f651e43-fb50-4c40-8ab6-f819d03210e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "391ad763-4362-422d-95d7-6e38c36c92d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c786e2f0-62f6-45fd-b747-64ac4c31a065"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b3b03d4-a874-4c66-ab99-f5d5aef90999",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8bf14dab-544c-4b69-b621-f825738352b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f8c8c8d-844e-454a-ae02-39813e6e5836",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68f56602-8a7d-44b6-874c-272f77813e2d"
            }
          }
        ]
      },
      {
        "id": "64050350-7f8b-49ba-9b0f-5f4aa731400a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c16c21d-c0bc-4375-bd98-496036bb9e4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3bb502c-0d98-461d-9bc0-7a67fb913742",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6179d140-abf0-4c19-92e8-e1a2cc35aa96",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce3ddaf-6bb8-4d80-b7a0-067a14a4f81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e224a3-a9c8-433f-bd20-bbf65cc4db52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c2bb69-b59f-4fdf-a898-53b0279ca5dc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a345658-e79f-43e9-ad34-73c4e39ec3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b9c094-0bb1-4831-8832-23239ebfc8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425eb1ad-2b3b-4e11-87ba-e7dd9af54450",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c69b90-5771-42fb-a6fd-5c2212d0d652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46f0b62-a195-4673-b701-4ab254711e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37691551-c2bf-4bbc-a864-7c703fd96d90",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2aadc3-2c83-4066-bcc3-8d6f6208e60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319c1f82-f5ae-4ff1-a433-90a5c3d342f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b7b27b-d0c0-407c-921f-25b5738cfec4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d95d40-561e-49b5-a3b8-6822a3e37679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5a3641-5438-4308-a089-96718cc5bb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf633019-37e3-4a4a-ae7e-9a37447dbd73",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26fa91c-8186-4fae-b353-0cebdb5a9051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d4c40a-47a0-441b-86f3-49ceabacdff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6eeed4-aeca-48f2-a43c-be2f92cc7e17",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb09ee-037d-4d01-aa67-e7565c5acf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a87812-e288-42ef-8b34-b2edd51fd2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736974f9-6c72-40a6-9914-acde9904116d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9fa211-bd29-4ffb-869f-e3a9de94f915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71fa5f6-3a07-4cb8-9f34-5cfe2454f9e6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddd75b1-9e2c-4cff-8873-84c0210f588e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7411f2a-bd96-48f3-ba7e-9dbc452ef50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee21c56-62de-4df2-8b32-bbbe6d8509ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681c001a-4923-4eaa-ab9e-6c2f53ae2de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b24f3b4-5e7e-412c-910b-1721e66a0ae6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02b9201-004d-4102-b4e2-88a0158f0938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e16166d-b53f-4208-a7e9-c3061ee9f95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729a7f97-ff90-44ae-9ee6-8db7bbcae562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f815095b-33e8-4783-a8c5-96eca0efa353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ceb105-0237-4a59-aa0f-878c635910ed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46a175c-47d6-4344-ade2-20ce27327667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95e2cf5-16f1-477b-9ffb-5cf9ade60bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebbd0c4-b416-4209-8263-b448cfd9af3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4784c60-d024-4aad-a548-85bbd8d64877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a71a50a-bef9-42a9-8070-8addb1350a9b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a08d46-53ef-4d44-868e-e4b95c579ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f15b615-fd66-4881-b2e7-ee559adfbe25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d833bfe-02bf-4052-b9b6-2450bce30d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f8abdd-87a4-4519-9973-2d81dd33731f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5308dc46-49a5-4247-9ee6-85600a41a540",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcc613-bb6f-4716-928c-5cedc41f990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da091286-92bd-40f7-82dd-b37e2ea47fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99bacda-8a18-4f12-aa13-51a7d1f3ab49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8105f721-4398-4bb5-a3ea-f4482cce52fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8075fa47-90a6-47be-b9ed-09712a89bd69",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94363d5-757a-4ab9-8ec5-db6e2918180b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f92170c-90db-46a2-9096-214870b76ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ccb2e-3572-43f8-a91c-29651f809f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c985202b-9d1c-4794-8871-a83e93840972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbed2b3-8f34-4977-838d-fd70d43905a7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38cd861-f211-4421-aa07-41440d3e706d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd000f48-7537-447b-be3d-062b27f15052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd221d6e-99a1-4e31-9d80-ed2adc6d46c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1beef1c5-0f03-4cf0-b4cb-4c739812789e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d4721-8f1a-4890-b2fb-a15532262cb1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d4dfc-701d-4dda-852e-d573ee4f7f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdcc7322-cae1-40d3-b227-7e32494ce4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d3d925-7b3c-4a9f-9b9c-d1bee0b1fd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15abfda2-32dd-4c5c-a3c1-b3d08e4a5067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0165cd44-2d11-4a63-9ec0-0284be4e8535",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec06fa4-39ca-4867-877b-0ec3e837056b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de10c5e2-e3e0-46e3-91ae-2eaf779a36e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2f1f9c-d9bc-4491-8363-f24ebdf9e469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9214c876-ae31-4547-9429-99f1a1db502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93376a46-4b0e-4e3c-b7cc-6a95ca20985d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33a8ccb-f456-46d1-a298-60931577acd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb75cb8-94e9-4229-a29c-729ec70e0df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7031241-3407-4f5f-a2e9-53c0dd84650c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e899eaa-3178-4d9b-b90e-33ec7a783e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af12770-1ce2-42e4-a1b4-2897d10172aa",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e89322-bac9-4a66-ab86-a12588b3bee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66509c2-7618-4f53-ad4b-956b3f57f701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425bbbc1-716a-408e-9cd5-9b910acd45cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2f433b-5bf0-4921-88be-0c790717ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9e649-94e9-440d-9914-cfc7729b8df2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce8cb39-b10f-42d8-9e01-dc6e15f9e938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57667d4-9b2a-4726-b469-3bb259ca2a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c5b35f-eb4e-4366-a6fb-9b25ae646c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94fa9b2-59fe-4fb9-bc68-eb737d35ba09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee4e4ba-ea3b-4efa-8aae-8c1d9536a899",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba63c8-65ee-4ce9-a8dd-2d7e88a1571e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7285f7ac-23b2-4f70-b70c-3f497c0ccc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb96715-882f-481c-9b35-1ba243883610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb240f7b-f0d3-42c9-8066-12e44be4cb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5ca2f8-f5a4-49e0-b909-8c49c3fdf281",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a499fc-9384-43fe-91ed-50a4738e7034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8480038-0b33-4cce-8ed8-91ad7267157e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedf497e-4f9c-43b9-ba74-d8b15f0b3c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3212ce48-5774-4ed4-a37d-e9259c761b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28335e56-5753-4117-b3a7-56fcd8d59ed2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a53f62-b369-4125-b865-ae1141649132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c413b3e-4086-401a-b818-347e04fdbfb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52c20cd-dfdc-4df2-980c-808f3ff4687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d320e48-cc63-4bd9-9134-c3432cf180e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569152ce-b5f8-4ef0-926b-a305ae5152c8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec237ac9-8ff6-43a0-a14d-f1972535db53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9529dd8-2c68-46ab-b722-d833d27926a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd292e-27d7-4953-83d9-5527c7beb070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7645c5c4-c4a7-4d3a-85df-048b3ad65e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0731e7ed-b155-41dd-acab-056efb3a4365",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2f33c1-96a4-4224-b4b1-58b0071857b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2980fdc-55f5-4585-9696-65b8e373cb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53420890-9d73-4296-b667-86a5afa5a252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c96f4ee-1cc6-4e1a-aba0-a733928082ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd56f3cf-aca2-40cb-9579-47b1be4f4c7d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b804fbe-d080-440d-8e3e-9f6de80fcfd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd42df9-241e-4adf-aecf-c85d0a62e484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff34446-3a85-47c6-a199-3e267ac30125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cc76c8-7211-4187-9d5e-a2671451a035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d74222-17b6-4d14-b723-817514184c07",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83c9489-7a65-432b-89df-6dfd0f771314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83b8763-ee39-4f42-9a38-26f0b7676892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ab4557-2f17-4944-acc2-cc32ef215dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44febb2d-b61a-494f-84c8-6ad8c7db9bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e3db6a-16aa-4229-a789-44810ebca6c6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a16de0c-23a2-4679-b972-a54aaf8be962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e437940-91c2-4706-b825-b994176b5ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c23ed5-e5a6-4da4-b33c-3431f361b7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3320b5-5e43-4c84-94c6-a888cdbc646c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7688661-9c7b-4ccc-b0d1-e078fc1e22a7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33195546-99e4-42dd-b664-ec9a3b7c36bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d1d0cf7-dd86-4450-8a89-36220f823e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b01eac-d76e-4236-85be-2212163945d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784385a0-b40c-4e97-927c-ada38e2f78d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076c1c9b-8485-4404-bb4b-c2f71ae8892b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73c0d94-cfd8-413b-b810-6d40c5a7618a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dacc90-5943-4e02-899b-55c89ea22f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f508fc8b-b500-4fb8-b698-7a1c9456a4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97acc8d9-838a-4c5d-ad69-5a8a9c1928cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfcc531-b0ef-4fab-805b-a4e188b14286",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd96057-92ac-450f-8e5c-c62c57c6dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2d83d4-920d-425d-9d06-7f518bbd7adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eedc2db-ebd8-45d3-8ee7-79865a14de7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0159c397-3274-43f0-837f-5c6c37a58813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfed3d8-0b76-452c-bd4f-3c59c49590ca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9597a93d-6082-4f9d-881a-89e2d8eb5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffbe5edd-5291-49bf-a355-c8d72d0e9e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca3b676-36c4-476c-82e7-0e102207fbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a0b0d9-06de-4f1b-82d2-a168fb948626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db86c2a0-0ed9-400d-bf51-06b825ea1a6b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c932efcf-8d38-4636-abe4-ec117a8b5349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3bb6594-6ac9-440d-ab6d-97c95596f2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59f6fb3-11b3-4c4d-8528-db91c40cbf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e0f6da-4fc7-4473-a7f7-a4eb74e3b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc1edcb-820c-407b-bf64-be997253c1fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5d2ffc-d9b4-4488-8708-6ed22e67ae4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e97f2d-d4ca-42c9-b0ca-ee0edfe30394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155951ab-023b-497b-b971-ad1fa61ea5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b456c49e-6695-4031-a9ae-5adb4cc9a2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28efe08-e244-4e93-a470-cf654f794eb9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fbc86d-dfc2-44a8-bebe-08bdfe92fd97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950c3cae-5fcc-4540-a7c6-314af3fbc4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f282e9f-1ffe-41a9-94f5-cc02bf52d8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced41905-fbfb-438d-8bfe-f5701af42e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70ad92-357a-404e-98ba-52010fd84193",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7754ae0d-ca22-447d-a875-a7c145ad4674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9fdf35-ecd9-482c-a236-ed542f06c807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bd7bad-7dd8-499b-8526-5924e18c02d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98244407-ba44-4523-81fa-554846ea0b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39206ecb-278f-43e7-a494-b1e912e6101a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16e07a2-a7fd-4bf1-81ee-5584f74eec6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba8c896-8605-4dcf-8c4b-6cd3c9690e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc67934-0ee0-4d98-ac0c-2cbd083bbdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056bec97-f6b4-485e-8b45-ff5cd3160a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fca5e7-063e-4991-bb5a-456f5c805cfb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1213a31-0ddb-4586-a3f6-db9b30e83500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7105d8b-3c3a-4feb-b21c-1e5db103111d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94db0e3f-1524-40eb-8579-208dc5bdd5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d50d35-f9ee-4862-9158-0b6714a7b56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e10e98b-0014-46b7-ad0b-7d2ba5854cdf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75ce636-27f0-436a-9d55-6130a30f956f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd1bc2c-92be-4624-902a-e860d8a23093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0f2070-19e9-4ff0-9d82-327cb8ddff5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a7c6e3-36a7-4eff-a7cc-7009a58313c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e89c03-51e1-4555-970d-67a21e53e81e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524c3f65-a56b-439b-b33d-a128e59e9ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88f2941-b540-4638-aa42-ce9275043909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1061f51d-2e80-4f5a-849e-7a9ed71c787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6788a04e-ba18-4225-bbbf-a617f6e7e281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87f3ac9-840c-427f-ab96-15f1b8871204",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb600c29-be20-48f5-822c-7c3524808ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44e354b-b0e3-4130-82bd-c70105b5e19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e24a6c-7ff8-40de-817f-c490e82d364c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2d8a99-64f2-4a09-93f4-2891d59d0ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc04d1b-bb2d-41b5-b33f-3e81fe532422",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce110ac-a355-40c2-8223-665f5367440b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff08e9e-1ae2-4411-af07-3b3389b928da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfc7855-9de8-4056-82f3-b1897c8f090c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d064bc9-6861-45bd-9728-0d7b97e92b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113842f-59c2-4cb2-9b07-a113f3bf6a0e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc78c71d-c201-4d3c-a13b-8c9c5556d83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31159172-18ec-48ef-88ff-877771b4eafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba09fbfa-f146-40f2-8649-9104664a9e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9b0c2d-32c8-4372-b3ce-fafaed4d2f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff542492-b114-44c3-8de0-1010d5eab5f3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244a94a-a352-4b30-8811-1350f49f1724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0273df-a0e1-4279-9599-5e9947e81503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7823fcb9-e7a6-4348-8ca8-7707cc712679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ce7525-2be3-495e-a8db-f93e08989c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4d5f88-b6ee-452a-a139-4da6d30d7368",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f5a399-5483-4f4f-b4ee-cc4eb100559c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddc3964-2799-4e1a-ba84-2241011554fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f9877f-9ef6-4211-b16e-69b98d166ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d2696a-7ccc-4118-87e5-d9505c8ecfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b8d846-733e-4c33-8602-41f33506d22d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e7c8d6-ecd7-4851-8989-764dae0f41c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169087f5-3abd-400d-b93c-811561c4e7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90cdd84-97b9-4c34-863c-beeeb448daf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d735c523-248f-4944-8747-743dfed484f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c31a35-5dd8-417d-bafa-8fe36255f22c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae5f50c-7ce2-42ff-8c35-1a51f024c23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa032355-4e15-4b05-8372-6f36e4ae6f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6465330d-637f-4191-91ed-abcda3d8b973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d2cafe-a497-4efe-ae25-f62f14d8f158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be71686-b0b6-413a-b4d6-a3bf1c6b031a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79f0ab6-41bb-43c1-ae55-44e4bc314ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556612d5-1876-4cf2-8854-0e0f797c5f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b746fd8b-685e-47ea-91ab-10de41c175db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a91fe31-fbaa-4282-85e2-3a635de8ba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9c914a-21f1-48ab-a158-35bd4fb172af",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4576875-05cb-4bc7-9a12-6e0b403ffc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b53faf-0352-45a2-b44d-d1d3895aaf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b2e7c6-7eae-48d4-b05c-9ebf20e19fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0596e0d-ff94-4765-a438-b3c522e86da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a541756-7220-4e47-9ffb-1f4e7a950264",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff6355-9ab0-4cbd-b634-a4fa3a38533b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aced322-8381-4fb1-90ca-2f3aee27bca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199eea87-1d83-4fa0-830b-0755db00e27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b8d575-78fb-4152-bbc7-a66d6406edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a530e2a7-0444-42f3-a558-27f95b647c7b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628d0f78-5297-4ebe-af72-9dc577fbda62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f18e44f-c08a-4185-8d28-dcca635e8ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e043a7a0-3c2a-4a41-a0f7-d029e6418d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170dc813-a697-4546-a43d-0d1daf9e33bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45341b62-ee00-4ebd-a804-97cb449a50c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c78a794-4f37-469f-b561-2f264f368dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cadc37-1802-4fb5-8811-82d76dda8608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a96706-c423-4e3c-80b0-12ce0be4fbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ad8747-b777-4ce4-9688-b69ab9e9647e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b231237d-7d33-4042-99f5-00d5b692ce74",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312c29da-ddd3-413f-8e7c-213a2ba3b151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727d1e4d-fb26-403d-b0c5-1e50658a12ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798e84b1-a59a-4d54-a8c4-6223132b04aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da258f0-172f-4837-8735-b1194e329392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54769b5c-3ed6-43a4-83ef-b4d8236fbb0a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a59fdde-80b8-47b6-b70f-3180030b6b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab2481d-e892-4ceb-9bf1-c6488189fc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beda6fd3-1cd5-40a1-aefd-7e122ec94ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14977db1-8742-4b6f-a9c9-209e6073ba53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5737f06c-5173-41e2-8968-3ed183dcc066",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1132d77-1ebb-4097-8298-93acb14d90ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c47d72-8548-4c6c-b58c-e5a94e9750ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d244026-6d25-4706-8e08-77de2d69334c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6216bd4f-6e71-4c84-8720-adc03bf91b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338741b6-1dd7-4b9e-a0c7-0ff5c24ad315",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be213b4-783e-4ba4-b5c5-8c506b7a0830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e06495-ab08-47f0-a7ef-71fed0546533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62c8b24-c380-4aea-aff4-59e440c373bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7bd7d6-6d8e-4dc8-bfbe-42533da702dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4587be10-e1f9-4ffd-9226-1d0400ee1d64",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90338e9d-20d0-4e7b-be5a-3ec18f26bdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9453499-d608-41c3-92a8-6c5986a959b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3a6e0b-3ec0-4319-b68e-bc3a8bbb0715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f869583-b3d8-48e2-9b9e-7c408ca8ebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81af559-6c78-4ba2-8644-089f2154deb1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dcc5b1-0359-4e16-bb7e-5137ba0acdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17764fc8-a4d0-4c94-abd3-905a030fb9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8a6854-4ed2-4524-a2d1-307ba63d1e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5b8bf1-14ae-4a74-91f0-577489096b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9142552-6d81-4a38-9b0f-b805bf8bb47f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a15fc1-93dd-4b0c-9e3a-6e6fc8f686e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744a1e28-a073-456b-92f7-35f435876cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f99c152-4de7-477c-8c8e-dbde92d04534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da842ca0-1852-4898-9d7b-ba785b736eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ba50c9-fe0c-4b3d-a528-45c498d27a7b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96655f28-1e2e-474d-a5b0-460b01d013a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5eac65-19f1-4e7d-a301-5514e54bb176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b611db6-dc1c-4939-9175-6c3840840c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb7327f-f568-4106-b2e3-263cca63c676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a57a40-2923-4d10-bc9f-08ee5d1b6d94",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71545bb2-ee5b-4486-afc9-f4f47ef19b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0b4a32-57e5-45cc-a3dd-e5dc565d2501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b65783-d874-413d-8887-56539abeae87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a948395-47cb-4ce1-8e86-b9fc2ea22e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46ce91b-1341-4602-942b-c02916ab598f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90773604-d960-424d-84ee-9b05c66ac5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdac4688-ba53-4cfd-9673-636e7c219d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5ba544-5c28-451a-8256-be94833fb5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb392a5-bda3-4a65-b33f-0a377a6691ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8329044-99e4-429f-9859-fd94ae87277d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7451e616-c505-4949-b42c-714dc5474818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75de28d-3ae2-4583-9a5d-2b44c455b88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea9f0c1-032c-4c23-80ab-db357f176328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e8f543-5912-4ca9-a169-ae341677a30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96939a05-d799-43b3-bddb-fb7e82a9acdd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0281e2be-6908-4d46-8b85-0b34598436ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43860446-b021-4753-9040-0c9667a57423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cab125-ccdd-4b8f-8bf8-1a391301cdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5280f40-f055-4852-8692-646e88c54c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345622a1-d86a-4b0c-8e35-dee41ab401ae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d55d2b2-9499-4320-ae59-a416a9e28cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8cd7fa-9dee-4615-a651-d540fa0ffede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb38c924-946f-4d2c-9203-11f531191065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb468d53-eaef-4a57-8804-ead45e4b92fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9058f46-7ee6-4971-93df-bfd6ed692d68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa881b5-44bf-461b-80a6-d0847d59029f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23c7f7e-08ba-4d3c-aa77-99663389a9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75785613-64d6-43de-ba6e-0a57687aba3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb11e00-526c-4d4a-abae-ba9a1a788bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967de62d-9487-4cf1-8337-f594f740aad7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95104fd-b722-4824-b2e2-2e796037ffb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57c0968-86ae-4032-91bb-4e67e99e43d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab924863-dc6c-494c-bbf4-95b25d960fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea50e3f-bd0b-487d-b297-9f6ce06fa210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad68f8f-346b-4159-848c-0691d1f2fdda",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef6026-f105-40fc-ad39-69831603fcf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c2805d-9059-473a-89b7-73c2fac6bd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c0c7ed-4d7f-4758-a862-26c2ee08107a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84adb6b-b956-45b4-94e2-65f9c2fc2f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499cd903-6da0-4736-be45-8218c7026b3f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fff5f06-bf5f-473a-bcb3-4fdb026a5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a84e39-3be0-4aff-89f8-94958f259bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822973a3-5860-444c-912e-96a7625ec287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2993b9d3-f8e8-433d-8562-7ac5b85becc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2bc8e4-c7b2-4ec6-ac43-e2ec23d83594",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fe4dc0-7b87-453b-ab64-026173978a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d47dcb-5feb-4988-bbdf-8b7f2eaf0ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1959fc-19b2-4522-bd04-9d0017fa4ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215a21ca-dfae-44f4-8d66-af5c650b0d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032a318c-89e8-4587-a30c-ec0d48809af7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced01d92-e88e-4abd-9a5d-fb56d0c85757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89be4bf0-cf66-403f-947d-50cf7eb2a331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedfd533-b75d-47e4-9da2-dba700303ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1567609b-6f33-4970-a23b-362ee8839567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0dcad5-2d3d-43ec-9319-cebf5573b5f2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff642865-8ee6-4eb7-a2cb-c8054d4d9181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b32f65-efa2-4fa4-8e70-9b475b2726ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d838e8-93ee-402f-82ff-aeb41d6f76d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd200b4-2177-4531-8880-ed18e9fbc0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825c8772-37cd-4a18-949c-cc83eeb7955c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442b67d0-dcf0-43fc-82f6-1a27f7623ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e39ac2a-082a-4f81-b50c-c45b771438c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770186a8-8e9a-4e6d-aec9-c427a42292f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0bd92d-bcd5-4ceb-86c4-33bbe52459a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2541c8e2-bfbf-4511-85c7-65d650ce52dc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f1a79d-c563-49a3-a46d-6441d1865f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13be7ae-9ed4-4b59-b120-61c4defb9e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89084ae-b2ba-4469-94d2-f4fb89033849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602fb32b-f45c-4ff1-bda0-dbb949897251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cde9f6-1b9a-4e3c-ad09-cb709526b931",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee51535-8c6d-4f92-ac3d-f34af2da9286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994d14a1-27b4-4903-892a-517154798916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b091d0fc-4115-4b5c-b7c6-32ad197403f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6aff5bd-3df3-488c-9d2a-fad71daa4827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ef5676-2122-4386-bf34-c38d79bf3f00",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696b8dc4-660d-4e7a-9c59-6e5248e038f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b82b88-442e-4a52-8b14-2146ccda9f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa46876-02cd-464d-858e-d2119faf99f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cd4b1d-180c-40c5-8932-0e6c4a1a311d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe1a94e-563e-47a9-b9b5-f57911af3282",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17748a1-d471-4305-b0be-45055a754cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d771df0-10b6-47ba-8052-18a6f07a36f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5223d99b-39b1-40b9-a4c1-d17e6da4108d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c651b25-f95d-4561-962d-e62341557709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e40262-058e-4874-afbb-4b9c8949d50e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563409c0-a8e5-47be-ab0a-a0d74368f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b7f949-3eed-44d2-b7a3-cf7e7c3ccc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987553bf-cbb4-4805-9ebc-5f9593372a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c0277f-8234-47f6-bde6-a8eac5572515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3897a928-3d60-4805-ad8f-e905d1d6c26b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80f3092-e4ce-4bc3-9a85-330ea60077bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a147bc56-c665-412b-8beb-aef3e1b0ec56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8bb4c2-e897-4655-938c-f7c452f47803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71443a63-ca2d-43e4-a6b1-80bdd82a9570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6eddbd7-c99a-4f03-b27f-5ff8c0f07023",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b0b790-1909-42a6-bc88-fed09d0ecbf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a69ef40-284c-4647-b0a9-23e8b8464a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed271bbf-67b9-496a-9377-51aa3d235827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512e3fe6-50fd-49f3-8d39-89dfc39b8a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5f3af8-eed3-4153-b3ce-0e0f4cc1c9be",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0aee07-7a35-4e9a-8ef5-5a5de0325231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410c853f-2eef-46e5-b659-507595657bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2319cef2-1d86-4ca2-9f9f-714d04192d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f2ae43-99d9-452e-a346-063be771430e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93dfc7f-3fbe-4ea0-aad0-e2e2a66e31ba",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df61bdd-87bf-4dde-8690-b94c316e5d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46f2af3-2bd6-4fbb-bbc1-ee9ddbb2f769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8cb102-2907-4c78-bb51-715d9d53667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a824ea97-e56b-4f4f-b0ef-9bd16a4b5d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1913fb-d679-4483-93a0-2242f5044778",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cbaae4-7eca-4bae-8391-3ed7317d51af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5efc8e8-e990-4d82-8833-0e4c88e6ca43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baab0a8-a83d-4f92-92fd-4fe3103ea143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721d6412-d193-45e6-9897-aaf9db8756fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d797047c-7d07-4e9c-856b-7d8ecc5fb4e5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e198a0e-79f2-4077-958b-e8da80626784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebeafb74-bb11-4981-b19f-d0419755bd08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381538ab-363d-406f-bd5b-2717da2d1921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2974712b-24f0-49d7-9f99-2927eae0efb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a743559-642a-4cdb-91d1-ac4a81846f16",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfd5813-81cb-430b-bcb2-abeff7f132cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3288fb4f-7fc3-4071-ad3a-17e8d27161ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1af0431-1b00-468e-95d3-70dc07f4ba3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd78102-5c2e-4779-b236-e0adfc1ed962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4490bd5-1550-4367-874e-f163c19785e8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f202437-ad72-40a0-9b32-c5674cc12d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d8a9f46-9a86-4c58-8c7a-2c5a698a0432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500f07ff-954e-4ef1-a304-5ba5922704b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75475443-1736-4f73-a8e0-bc406750ea4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8026403-b84d-4ba5-8b0b-c44876fcbc41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8919f4-6cdb-4737-a726-d517e4dbace7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d079960-9d2e-4034-9b53-87fb3097ac41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a770e6-44cc-465a-8141-f351328dc828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70794c87-d17c-4d20-8077-be07c9c8ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494fdba7-4b47-423e-9f06-b3df5168491b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed78398-a070-417e-942d-a8260eac3fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb11e18-2fb6-463b-8d3f-618b27b02c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5554de10-4aa6-47ca-83c7-74f45ffff7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a7b8be-2e01-4bc5-b6d1-c291b0857856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cf57b5-d055-4f0c-8a08-a5482e558e18",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d6cb92-7d79-4094-b230-67b1e3d889cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d883ae4-946c-4e04-a42a-4f9ef67f5db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f976e4-f075-4565-b5be-c4608cb918b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2755fc15-eade-40fc-a0d4-27b897f9b737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c574f875-c710-4194-b8f2-1b28a6936761",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b7ddf9-bef3-4109-bf91-419f485a138f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c987affd-a5bd-45a1-9b47-14999ff95ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1808f233-4b20-498c-8ab3-0bfb8b7c9765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a217581-1a87-426a-8113-7f5abbd6cf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f827ac-cf2b-445c-bc0a-cc996f4c2abf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66485d9-5e69-4dd1-8cb8-9b24415d0ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45bb665-e60a-443a-8bb2-435f80bda8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eece9af-bbb7-4815-b1df-a323a7dc724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf15c1b-c0c7-47d7-8830-c12be6ac9bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141f691d-4446-420a-9217-5a68e8399527",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25ef38f-b56c-4bda-8d25-2e8522ed3c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf28c2e-de74-4cb5-9ba9-460061a0a6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781d0126-3c81-40c0-9b87-11cc30f2c07c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab6a997-171c-4d79-9904-8df3579d2190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d593ae8-ca07-4b6d-ab28-c19fc3ec0980",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d074e3ac-8ec4-4e75-930c-1e7ca27332b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2a5494-9d46-464a-9d8e-00c7c411d87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ef92c-6ab1-47c0-bf0b-e1c348177e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b9db65-36cc-4d34-b7ba-e6b6196238b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19572c02-e6dd-4f6b-ac91-cb90a104080f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a8c8a5-3cab-49ef-a5d4-b447f71161a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44cd71dd-3d7d-4aed-82e8-8b932b117c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa180032-3b75-4d43-877d-0dfa92fdac9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f894416c-d2aa-46bb-8774-71c25933f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652f1f75-b3a7-4172-9613-a664e4046a60",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04262ce-4dc7-454f-a3c2-8f2b57eb537d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8baee273-60bc-4f0b-bef7-a13a93c19c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df93f67a-d3cb-4889-a491-0cf3beff70b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6167c89-c5d9-4297-bd9c-b7c5876d96f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3667ea91-4241-462d-af2b-65322b3aea8c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6ffdc5-d1f8-4b18-88f5-f5dfaff0a141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159eaad8-07c8-4d4c-a9cd-5351709fbd69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbd0253-dfc6-4a37-a47f-9b72a5856592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81bd1f1-a114-4abe-8089-3fa59b93564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bed3dde-0340-49f8-82f4-23fba0613c1f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4ee101-3876-4372-a685-8970de9d6ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c452ab-5686-48ac-920a-30c527ae7648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c6e009-58cd-4345-9443-799858c1d37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27beaf0-6b7c-45ed-a9bb-dfe89a854fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a02f9-19b9-49aa-8e5c-4852661459d1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d681841c-5f9f-4ce7-808f-88b64b5579d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9df3ff4-b9de-43e9-9097-0fb7eb0cc83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2672bd5c-0c03-4f06-9004-9343ffecf505",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ec6a90-1e88-4fc1-9ca6-6791ac77bd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7bcf44-b474-476b-8e98-f705fae92604",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b567956-1931-406a-85eb-2447fa92acfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e2b3cb-8fb6-4a95-998b-aac4365e5695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ff8144-8811-4ffa-a2aa-970c318fd60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffbad08-b5f5-4d41-a8a4-8d72d34adfa5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bd42626-c3b8-41ae-89e2-c8ed58037409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36b01966-fa8d-4295-b7f3-dc1d26460eb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cea782df-c503-4a07-bcaf-fe850f06765a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4848bf5d-a631-450b-a558-4a80781b757a"
                    }
                  }
                ]
              },
              {
                "id": "1d322a03-7e43-446b-bedb-27708dbd33a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "410e6595-95fc-4f67-b85d-321f4b68e29b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57836f90-fce5-478d-9bf3-c2156b4bb7a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "06cc4826-69de-4f76-9077-358e45984b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c3cbd1-115b-4f5e-a749-a20925f5ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cac653aa-4f65-4c01-9762-2dca878da2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ce9e7a-d2d2-4aff-af99-a70e4d97aae4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e45da6-2a45-4348-a8d2-a380f95d0745",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "253bb6bf-5e4f-4243-af45-5302bb68163b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee75bf9b-a504-4ad7-8a20-428ffbaba090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b9a89c7-cdd8-4a3f-a8e1-5b01c5fb9417"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bddba2d-3a39-4ad1-bb8e-854e78b3b44d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c59969d-c13c-4cd5-8dad-1f032f580afa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3cc33d3-802e-497a-8dd6-3c4e1fc51feb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "010e48b6-4951-4533-a19c-dd8c63e6892c"
                    }
                  }
                ]
              },
              {
                "id": "6fd6c3f9-193b-4b62-9898-4e98280922ea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c599cd3f-a68d-4e50-bfba-d48e68d65eb5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ab3c77-48dc-466a-86ca-0228690f1523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3db4395c-ee82-43c7-90b5-e0153836ec27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d50c3b-ef5f-427a-848c-13f7ff7fdd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de833de-9a02-4e62-8c10-bf88aa7be1b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31ada31a-3c11-4aa3-be34-db1b9a26a785",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e589c46-daa1-4155-ad05-46f35d3622ca",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fa84b97-c065-44a1-ae5e-4a59ee03b80c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c28cf977-f1f5-4d74-8e50-05757d2e1815"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db8b3e4f-9836-422d-9767-dab8898acb4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0142fb57-a3ff-4789-a622-13ff2c9aeb18"
                    }
                  }
                ]
              },
              {
                "id": "bcc9b918-2751-4b6d-8835-9d46cbc49973",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45b8f05-19fd-4c03-9ac7-c923719c41b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1bf93925-ff59-41c6-a0f8-91aea8401e06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "982a3370-e400-4ad5-8b5e-83b9666b2fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48753e8f-f1bf-4005-8470-7e857e6e7d01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c52d3155-3253-465e-8ad0-33436e62e213",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a43fc93-fc35-476a-bc48-42c654151ecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19afd04a-5748-4363-a879-bda5b68eee86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b91b5a46-bacd-49c2-8948-8b254dc08d68"
            }
          }
        ]
      },
      {
        "id": "31c4a424-b797-40cf-b587-669e842e1e03",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1dcb2932-51fb-49a6-9b64-92b7feddf5c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "312f43a0-51d8-4559-90a8-53421c47814a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442bd79b-bc70-45a1-a869-fe74ecf7c5c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c429d2c0-f247-4541-88e1-aefae74782ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da06d35-256a-4944-9a05-8bcb685f41ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f527791-f2c4-4807-9bc5-cffa5aa6e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e295514-1487-4cf6-b7e0-e4efb5354037",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa69d52-06bb-47df-9b5e-99ea4c0339ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d5b6e8d-bd93-43b8-826c-c1026441d383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909dffde-ef97-4b16-90e9-bf0bb889bb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5277f84-0342-4f18-85df-c6e956c15bb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2d1f1cd-220f-4f23-9adf-73327a22ddaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5594ff19-0c59-4122-9ddd-f78a6550a3fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e72e5549-7ce0-4669-b162-c414a4522fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b98313e-a086-4539-9ce9-b79dbf14bc59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a91ef44e-8c3a-4fe6-b5eb-8b767441e382",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ac96f8c-f86f-4278-bd02-fc279bf1ce71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08fb5f00-3c66-4bdd-bb1f-89b7fb93f415",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d2bb509-2393-4700-80fe-41b872366414"
            }
          }
        ]
      },
      {
        "id": "60e34b52-65e2-44bf-8a0a-df5835b19d1e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f5c3f83-7b40-40f3-9756-8d720c445917",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10ac7437-dda8-477b-9181-068b881e12d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95bca71c-f36a-44d4-b977-cff9b734df5d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7a1426-00fd-4496-aeb9-2f6587ab828a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7ab5dc9c-745a-4f9e-a743-cb654ef3e720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee45b32-3fd9-4d42-801a-95fc9fe85b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00a5112b-6385-4de2-9f45-604d31ada4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6171a77b-fede-404d-ad5b-b16e4da23d1f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0340ceca-2675-4ba0-a706-9683e4ea9bb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b422c6c5-3f7a-45f1-9b56-2463c57fc2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c192e5be-2311-42c6-9f72-b68815a33ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcec0485-a871-42d3-a625-68ae92de4538"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35758ea8-30f7-4643-a879-b9c84043135c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f710ce8-8085-434d-9f38-f02b185a6302"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92c2016a-4402-46c2-bf98-d08055f119c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1643cb6-a692-42de-9b36-032a0e106cb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "521bf389-57ec-4e60-b793-bdef8165d324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "824b4641-b7c5-48bd-8815-238426e61ac9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0ebb312-8f18-4031-a303-a9bd68d57f84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85800cfc-fa75-4cdb-bf54-289cad67e881"
            }
          }
        ]
      },
      {
        "id": "d3733236-24ee-4b34-87e0-6f9ec8d00a84",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "496aed85-a61a-4241-8487-bd9df9ed7f00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a258d98-964c-4ad2-9cb2-e2abb8aca2fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "008f911e-b611-40d0-a138-c1dff16ef817",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77935ac-91a7-4a99-b0aa-53f889f11335",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5508360a-5561-4f0c-a12f-82d49bcbff15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca506ec-f33d-45d7-8472-7c914e66517a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f599d12e-5b51-4a30-bdb1-fe543930054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c8b830-2464-4365-84f4-93f6f5747bd7",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8820b7-9e12-4825-8bcf-ff8f8d0f7035",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "87e7aca7-10ea-4bfe-9ca6-a2d419a31b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06f3fe2-c4ba-46be-8fd0-9dd2a899513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9eaa177-6bf9-475d-81a4-a0fa016e86f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06bcd772-6de9-4a8a-a1a4-c768f1d0617e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "256a7ef9-31ca-4692-b6ed-e7246a18359c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "986b3299-5407-4a90-b21f-470ab9d66991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b19f66f1-b45d-4c00-8ca0-25f6d7cfdf05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8810c72f-c00b-4657-8039-a575461f7c2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "db09d230-2570-4188-b673-a4f2a1dc54ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0e2a844-52c3-47a6-9c13-6c4ddc1f73b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "825d17e4-b74c-415e-b2a2-ef077c5d07a9"
            }
          }
        ]
      },
      {
        "id": "170406c3-1682-450b-9ffc-caeb585338c6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "873c7866-47f8-4520-8cc7-3363458b82d4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a1ac9a8-bc92-443d-b383-c0e1a385cee1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a0cc4e9e-cdf4-48f8-98cf-60d73812f10a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "248f36b1-4410-47dd-8f98-a45402f1305e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be03366f-8ec3-46b9-8b21-5408ba23f473",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 566.8091603053437,
      "responseMin": 19,
      "responseMax": 5692,
      "responseSd": 673.0140319817511,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671323801177,
      "completed": 1671323960294
    },
    "executions": [
      {
        "id": "a02a30d4-94a6-4173-975f-e237cebe4cf4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5ca0bb9d-1ee7-4a00-b2cc-2e12d7c7bbd4",
          "httpRequestId": "2f8debe0-677c-45e6-a321-9dd6acc1eadf"
        },
        "item": {
          "id": "a02a30d4-94a6-4173-975f-e237cebe4cf4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "935603af-fae5-4015-b1e8-0f9a1f0c9321",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 0
        }
      },
      {
        "id": "71047784-3efd-4acb-b9cd-1144e6894874",
        "cursor": {
          "ref": "926cf16c-e14b-43df-90e3-4c86f869e213",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "48468d56-bc72-4755-8857-3665f6929f49"
        },
        "item": {
          "id": "71047784-3efd-4acb-b9cd-1144e6894874",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c6672b51-07b5-4176-ae7d-f7a5ca1044d1",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "2df953b7-e2ee-4b27-9756-7afbe3873fae",
        "cursor": {
          "ref": "68dec064-08b0-4380-84aa-85f709cbbee0",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dac4ffd7-0c49-439c-adc3-dc41880dddd1"
        },
        "item": {
          "id": "2df953b7-e2ee-4b27-9756-7afbe3873fae",
          "name": "did_json"
        },
        "response": {
          "id": "80d4ea7c-0d1a-44c3-927c-fee5e730cfc5",
          "status": "OK",
          "code": 200,
          "responseTime": 778,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d9aa22-3553-43a4-8af7-e756ea8838d9",
        "cursor": {
          "ref": "2c591859-6de7-457f-80c2-7e6fb2841451",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e146038b-14e6-45d9-901d-98a075bd2a71"
        },
        "item": {
          "id": "f8d9aa22-3553-43a4-8af7-e756ea8838d9",
          "name": "did:invalid"
        },
        "response": {
          "id": "966fd3a1-b04e-448a-bc84-85816f32d02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d9aa22-3553-43a4-8af7-e756ea8838d9",
        "cursor": {
          "ref": "2c591859-6de7-457f-80c2-7e6fb2841451",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e146038b-14e6-45d9-901d-98a075bd2a71"
        },
        "item": {
          "id": "f8d9aa22-3553-43a4-8af7-e756ea8838d9",
          "name": "did:invalid"
        },
        "response": {
          "id": "966fd3a1-b04e-448a-bc84-85816f32d02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ca5ed9-1e5b-4f06-ba67-a1129585117c",
        "cursor": {
          "ref": "42c836fb-1a4f-4bac-a4b5-c10730f058ef",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c22a2b6-9239-42e0-85a9-ca59aef27d56"
        },
        "item": {
          "id": "c7ca5ed9-1e5b-4f06-ba67-a1129585117c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f0713f47-1625-4958-acdc-62aff329e4de",
          "status": "Not Found",
          "code": 404,
          "responseTime": 605,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2a823b-571a-4bf7-9b33-fcdf6ab7c03f",
        "cursor": {
          "ref": "7e6b9740-bd03-4433-9353-707087c7ae4d",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e24e413a-53e3-484a-8a92-36ba10a13ca0"
        },
        "item": {
          "id": "9b2a823b-571a-4bf7-9b33-fcdf6ab7c03f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a53f002c-fd45-4fde-8457-a89cb7c44637",
          "status": "Not Found",
          "code": 404,
          "responseTime": 483,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efdaa8b-5aa8-4f45-b0cc-1880cea06205",
        "cursor": {
          "ref": "8bb48424-079e-4ecb-81b8-8709cc730ac8",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "44dd8248-ebb7-441b-ae3d-ae085f17635c"
        },
        "item": {
          "id": "6efdaa8b-5aa8-4f45-b0cc-1880cea06205",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1f3767fa-a148-4f5e-b54c-cb198ed1d524",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af953350-7af7-4043-b472-ce1874e5f9f7",
        "cursor": {
          "ref": "d7c37026-bc53-4f69-b445-02b8602dce6d",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c65314bc-7a54-4e96-a1d7-ea699304b770"
        },
        "item": {
          "id": "af953350-7af7-4043-b472-ce1874e5f9f7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "afa6616b-9b6f-47ab-b64e-d1bd4bf3aba8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af953350-7af7-4043-b472-ce1874e5f9f7",
        "cursor": {
          "ref": "d7c37026-bc53-4f69-b445-02b8602dce6d",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c65314bc-7a54-4e96-a1d7-ea699304b770"
        },
        "item": {
          "id": "af953350-7af7-4043-b472-ce1874e5f9f7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "afa6616b-9b6f-47ab-b64e-d1bd4bf3aba8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73b1cf-cebd-4d88-ae03-504b5410d1fb",
        "cursor": {
          "ref": "92a994cb-4f5e-43ca-a110-9cf93fd3c304",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28b9383a-c651-4957-ad61-59c0bd1c2e93"
        },
        "item": {
          "id": "7b73b1cf-cebd-4d88-ae03-504b5410d1fb",
          "name": "identifiers"
        },
        "response": {
          "id": "3d6dba5a-6470-48af-a929-b3f21c96cd8c",
          "status": "OK",
          "code": 200,
          "responseTime": 820,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb3c260-dd4a-4583-9464-7f94457b0191",
        "cursor": {
          "ref": "98a6e392-c21b-4a6c-83f0-46ac56b3bf26",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef5ffcc7-4a9f-4685-82b5-c855530ab399"
        },
        "item": {
          "id": "7fb3c260-dd4a-4583-9464-7f94457b0191",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d89aa85-4eca-449f-afd9-b881875e01f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb3c260-dd4a-4583-9464-7f94457b0191",
        "cursor": {
          "ref": "98a6e392-c21b-4a6c-83f0-46ac56b3bf26",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef5ffcc7-4a9f-4685-82b5-c855530ab399"
        },
        "item": {
          "id": "7fb3c260-dd4a-4583-9464-7f94457b0191",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d89aa85-4eca-449f-afd9-b881875e01f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ec6a6a-af5a-47d7-bf29-5698d521574a",
        "cursor": {
          "ref": "db8b45af-48bf-468c-b038-9ae89701fde4",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0ca2c875-c9fb-4af6-8346-37a1ee9287b4"
        },
        "item": {
          "id": "60ec6a6a-af5a-47d7-bf29-5698d521574a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "74956578-2a95-4d6c-b31f-ad5c90c4ac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e45012-41d4-459a-a128-dc27759a5df9",
        "cursor": {
          "ref": "15b806b4-6987-41f4-8132-753e23a00668",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e875efe-5c4c-42a1-b16c-90ddc7b3536d"
        },
        "item": {
          "id": "85e45012-41d4-459a-a128-dc27759a5df9",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "aadfb5aa-6aeb-4db5-8e6c-71bbbf04e2db",
          "status": "Created",
          "code": 201,
          "responseTime": 2303,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "29563f17-97ce-4301-8ac5-642397f736e6",
        "cursor": {
          "ref": "277d7f1f-d24a-41b9-a82b-8189f89df3f6",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db468c07-3513-44b4-aa90-b0e9ea5a4b4b"
        },
        "item": {
          "id": "29563f17-97ce-4301-8ac5-642397f736e6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "488ade38-1722-4063-9b01-610de7617175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb04a14-55e4-4ab4-80a4-37af0afecdb0",
        "cursor": {
          "ref": "1b7df798-4f18-4d75-8768-a53d0d485040",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25585564-5296-4fef-af7e-29acbf64aff8"
        },
        "item": {
          "id": "7cb04a14-55e4-4ab4-80a4-37af0afecdb0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0f2a3886-ea53-48f2-8136-b92c1a9ce2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb43af2-ed95-4f44-af3c-b99511baa896",
        "cursor": {
          "ref": "25462181-f177-4f4d-ac96-e808ca1ab516",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2a5666ec-b6bd-453e-8720-e6b78390f861"
        },
        "item": {
          "id": "feb43af2-ed95-4f44-af3c-b99511baa896",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4d41321e-05ca-4a82-8f0e-a5cd842f3376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abee27d-0e5e-4b41-9d6b-d8f7cc25c1bf",
        "cursor": {
          "ref": "d5cce91f-20d1-4dfa-bef7-0d106b50ca7d",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "06c6fb03-b1e2-4e6b-85a5-2e7711539b30"
        },
        "item": {
          "id": "1abee27d-0e5e-4b41-9d6b-d8f7cc25c1bf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "33ecb890-2270-48e9-a0db-c467d409bb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cf1734-414e-4fef-b03e-55355bac68ec",
        "cursor": {
          "ref": "757d5fce-9a10-4d5b-9ac6-519a25661adb",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7055ae4b-8b57-423c-bd05-7641c3fa2506"
        },
        "item": {
          "id": "18cf1734-414e-4fef-b03e-55355bac68ec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c8dca12d-95e6-4c14-852d-dedaed33dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b80620-8d34-4111-a689-42b8700c2137",
        "cursor": {
          "ref": "b64e8fa0-27fd-4420-91b3-43c48cf7d698",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "41aff37d-328b-449c-b3ff-88ee1dad6f5f"
        },
        "item": {
          "id": "45b80620-8d34-4111-a689-42b8700c2137",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5bb93d86-9597-410f-9a5b-c891bba79e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9fc939-2429-46bb-9fd9-bed1b52658a3",
        "cursor": {
          "ref": "7aa6f1b2-3ec2-443a-aa67-d0b69e8551e4",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81679ac2-237c-43e6-9029-af9421255987"
        },
        "item": {
          "id": "db9fc939-2429-46bb-9fd9-bed1b52658a3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fec2a8d4-629d-4cf2-8e9b-b57c0005eb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5d5684-50bb-4f43-aa0f-369b4d4e6fe0",
        "cursor": {
          "ref": "78210492-e1b9-4949-8361-833ddc261c2b",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "96f687d0-4ae5-4b2f-93c8-5ee3f269a34c"
        },
        "item": {
          "id": "de5d5684-50bb-4f43-aa0f-369b4d4e6fe0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ca5828ce-7c45-4385-b4f0-f31d4f7b28ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e18b59-8d6b-4053-88d2-10ffc94a0daf",
        "cursor": {
          "ref": "ecc07007-632d-4439-b706-60bb38450ce5",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3549b646-7067-4ace-924f-c6a3ff4921e8"
        },
        "item": {
          "id": "59e18b59-8d6b-4053-88d2-10ffc94a0daf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "88bee2a7-8370-4236-a645-c11fda29be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28430a93-b77a-4477-a27f-ed36d4788769",
        "cursor": {
          "ref": "90cfcbe5-0505-401d-bd1e-11025aa355e7",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fb034b00-4b1f-4c9a-abbd-885798a601e9"
        },
        "item": {
          "id": "28430a93-b77a-4477-a27f-ed36d4788769",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a405de27-092f-4b02-ae4b-6dc93f2f9991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5b84fa-d0f4-41a9-8191-5b4937c2a581",
        "cursor": {
          "ref": "c621712f-89da-4c07-9ae0-ec1384352bc3",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d3f0b259-4f53-4dfc-9fa9-c5c18d4b8659"
        },
        "item": {
          "id": "1a5b84fa-d0f4-41a9-8191-5b4937c2a581",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "80e94e01-7167-4432-bc0f-d362d6a568c5",
          "status": "Created",
          "code": 201,
          "responseTime": 4194,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "326fea51-1e1c-4b17-904d-fc966aa1c1cd",
        "cursor": {
          "ref": "f2663a9b-0eb2-4ae3-9c36-656c17d6e1f6",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d81935de-0085-449e-8f24-71d6bd917620"
        },
        "item": {
          "id": "326fea51-1e1c-4b17-904d-fc966aa1c1cd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "999e1905-57a9-4784-a2b1-aec9dd4dc046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e11d397-a385-4ae5-a6e0-abb0a6a6a0c0",
        "cursor": {
          "ref": "e1b82142-d29c-46b6-9dec-3b0e80def896",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22862260-ac04-4d7e-bf20-67a96db3e409"
        },
        "item": {
          "id": "5e11d397-a385-4ae5-a6e0-abb0a6a6a0c0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "beca2bef-0dd5-4357-911c-aed8fe53cb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1761fead-fbed-42be-820b-21382b0e1f53",
        "cursor": {
          "ref": "ab31c381-49dc-4c02-a8b1-fd8c8e46bff0",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ea2f4110-3527-496a-827e-24f60374e008"
        },
        "item": {
          "id": "1761fead-fbed-42be-820b-21382b0e1f53",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8feb82ef-180d-46de-bf14-9bb0adf3bdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79332b81-cd50-43f0-a2b9-7d8e8056cafc",
        "cursor": {
          "ref": "7a2941ae-4672-4408-a1b6-77d8a71b0a05",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bb9af2f9-8dfc-4921-a160-04cb753b8540"
        },
        "item": {
          "id": "79332b81-cd50-43f0-a2b9-7d8e8056cafc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "21e11150-0e25-4d45-b355-e80854a2a16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df463cf4-af93-4bd5-8451-eb8ae2cb9bee",
        "cursor": {
          "ref": "82a436fe-93ef-45c9-b0cd-fe70bf86c0d2",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd2524cf-4f17-45d6-b3ba-d88d86ab7f58"
        },
        "item": {
          "id": "df463cf4-af93-4bd5-8451-eb8ae2cb9bee",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f46f7a1-e661-41df-9294-360f2ed639b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e48fe4-1495-43ab-ac78-77e5ddf36d17",
        "cursor": {
          "ref": "fc5e2b10-5e49-4791-88c0-cde8dfb84668",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0bad4424-39ee-415f-a424-e8de8240c08c"
        },
        "item": {
          "id": "15e48fe4-1495-43ab-ac78-77e5ddf36d17",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b1ecd3f-ae2b-4fdd-9f54-b0ece6787568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04fbb2f-9dd0-4d74-86bd-6fe4f6194656",
        "cursor": {
          "ref": "2441c3dc-2981-420e-a995-65d11cac6cb9",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "41f5a1a9-122d-4004-b224-7e3dde78d056"
        },
        "item": {
          "id": "c04fbb2f-9dd0-4d74-86bd-6fe4f6194656",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "afab989b-db04-483c-8f7b-c9e1ad3a8f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b86f2-d2a4-42ba-9358-8e4c3afacbf9",
        "cursor": {
          "ref": "6bedddc7-2d8e-4a29-b6e5-996fd3422453",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d59ee356-0aee-4e0b-8432-a3d8eded30d8"
        },
        "item": {
          "id": "460b86f2-d2a4-42ba-9358-8e4c3afacbf9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f530e556-cda9-4fef-a702-1ab01809fa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0867fd11-4b0b-4e38-867f-19ba9fbf67fe",
        "cursor": {
          "ref": "eed257cf-c73d-41bb-a0b4-4a3744362bcd",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d0e8ca61-0071-4d61-ad8c-5d67178e28c0"
        },
        "item": {
          "id": "0867fd11-4b0b-4e38-867f-19ba9fbf67fe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cbdd0ff9-c029-4d0b-9d2a-ebdff7726dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d5165-b98f-4795-a9ce-5c3145c03a81",
        "cursor": {
          "ref": "ffcf24c3-2bb3-4dd2-b38e-615df808695b",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ddc6ba72-9339-47cf-b854-1778dcd315b1"
        },
        "item": {
          "id": "ab9d5165-b98f-4795-a9ce-5c3145c03a81",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5e7e7d72-f96d-4828-a29b-123d4f5fe206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eda83e-2928-4d92-83b7-ccb64ee20e3c",
        "cursor": {
          "ref": "4f40cbad-fb8d-41c7-869b-642bd43417fd",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "503801af-6507-4f61-8129-256ad8947020"
        },
        "item": {
          "id": "75eda83e-2928-4d92-83b7-ccb64ee20e3c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "75d91fa7-42e5-40a5-b921-f93dd7692506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfa75a7-2477-4a24-bbf5-9e85ca13c7ed",
        "cursor": {
          "ref": "74848842-4361-47e6-98f8-64e5b042120d",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "52e71c5e-6832-4ee9-8365-712df1cde2c0"
        },
        "item": {
          "id": "3dfa75a7-2477-4a24-bbf5-9e85ca13c7ed",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "143c7ece-18f1-4f38-b0f4-576dd932becf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b94f878-5c6a-477b-8739-a5f11ce12f47",
        "cursor": {
          "ref": "85f04210-5256-4707-adf1-61e11a689cfa",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aa6be4ad-c544-4a2d-8b3f-c6d07c148349"
        },
        "item": {
          "id": "6b94f878-5c6a-477b-8739-a5f11ce12f47",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e9385412-dd72-4f25-ae74-07384f7f019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1255,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4f490-928c-44a8-a1a9-46564c79fc7c",
        "cursor": {
          "ref": "8e51ebb6-ea8b-4a5d-99e1-a3654d4c6d71",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2001f92b-c2ca-4724-8bab-369585a7b875"
        },
        "item": {
          "id": "2fe4f490-928c-44a8-a1a9-46564c79fc7c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b3180817-b035-4be1-8b7d-b5deebfe6f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4dd6bc-c89a-4573-a7d4-9eff45e84c73",
        "cursor": {
          "ref": "ddfd1bfa-c844-45dd-a47a-5c2e41d54d79",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0cc29b2c-45cb-49d1-bcea-3eabeea0fceb"
        },
        "item": {
          "id": "3a4dd6bc-c89a-4573-a7d4-9eff45e84c73",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b0f3fba2-9646-4212-8b0f-fa04058bd89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf31633-3069-4ed9-82cd-d89b0f9d2712",
        "cursor": {
          "ref": "6d4876e0-86ad-426e-8d53-963c65fa1c52",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dd1191e5-bf82-4a8a-b02c-3ed19dd73c4a"
        },
        "item": {
          "id": "ebf31633-3069-4ed9-82cd-d89b0f9d2712",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1af33a5f-25c9-4f56-8d46-303baf33aa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7315e19-deb8-4c19-8b93-83a06a131762",
        "cursor": {
          "ref": "3cea7bc1-6712-4429-ba83-3cd87fb80477",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "572786cf-d65c-4d59-8899-89687e6efe45"
        },
        "item": {
          "id": "d7315e19-deb8-4c19-8b93-83a06a131762",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "93e4e3dc-d319-495b-8022-68ee188f4eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44909c1-0935-4ce1-b100-f37637394de6",
        "cursor": {
          "ref": "d1469616-5b61-4ace-92ad-38c0f15e4091",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2f3eae2b-9cc1-46d9-aca0-7b47c8281d67"
        },
        "item": {
          "id": "c44909c1-0935-4ce1-b100-f37637394de6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f075b19-3408-4aa2-bcb0-562cb0f401cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2becaa-d843-42a3-9e1f-9839082ab0a9",
        "cursor": {
          "ref": "04fd6d4d-d9f9-4766-9afc-6432d5839a1a",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b3e3da44-f202-43e4-a90d-5c56186b86b7"
        },
        "item": {
          "id": "fb2becaa-d843-42a3-9e1f-9839082ab0a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e00b4496-32a1-4bf7-b8fb-003f09d38d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d52d85-4ea7-44c1-87ad-50d8a443bda7",
        "cursor": {
          "ref": "9d69aa8e-1c82-433d-b919-62ced3bd73cf",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "018691cc-e0a5-4781-abca-8152b5de539c"
        },
        "item": {
          "id": "15d52d85-4ea7-44c1-87ad-50d8a443bda7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cdaaab8d-812e-4001-ae38-94946f97e982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c552510-34e8-42ce-8ed7-4bdcaea50257",
        "cursor": {
          "ref": "a133aef9-241c-4f18-aa71-608af4b62b87",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e981aadb-f5a9-41d8-8bee-fb15a49b81fd"
        },
        "item": {
          "id": "1c552510-34e8-42ce-8ed7-4bdcaea50257",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8bd18731-ab4d-4fb5-ac56-3c5f006b03e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b656bc8-f4f1-4978-b68f-5e5a05d499c8",
        "cursor": {
          "ref": "3ac8df49-70a4-40c6-bfa1-e24880d59d4f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aaad20db-dbe7-44c2-93f5-9e71dbb1fc7d"
        },
        "item": {
          "id": "9b656bc8-f4f1-4978-b68f-5e5a05d499c8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "49142c56-0776-4e3a-85c6-0002eee9418a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0fd064-eeb9-4bfc-9b70-57bcda406ee8",
        "cursor": {
          "ref": "9ed7f5ce-3bc0-4527-bd57-ae7c37d4a895",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a09d6d59-c7f4-4ce6-ba8e-79efda21a263"
        },
        "item": {
          "id": "2e0fd064-eeb9-4bfc-9b70-57bcda406ee8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f3dd557a-d0b1-4e89-aa61-54ea9f49a350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90c60cf-73ec-44a6-8dc1-6475cbd92860",
        "cursor": {
          "ref": "58a2c738-55f2-4402-83b9-196452679d56",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8c17e403-6ac4-4215-a55c-6ccb5d94f596"
        },
        "item": {
          "id": "f90c60cf-73ec-44a6-8dc1-6475cbd92860",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "733bfd4f-18dc-4234-a470-b14f4750f949",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 583,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cec72af-9148-45ce-92b0-4cbd09cb7e51",
        "cursor": {
          "ref": "7ff7e21b-1db9-4dfb-ba23-a8a43dffcdcd",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "34b828e2-faa2-4769-be7e-15970af75c08"
        },
        "item": {
          "id": "0cec72af-9148-45ce-92b0-4cbd09cb7e51",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f6d3c2b9-b19c-4ab8-979d-be50adc6cd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e690d1d0-9301-465a-827a-137f9a0ee553",
        "cursor": {
          "ref": "00984a64-5978-4955-89d0-24d9cf8e6057",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ef72555a-ee5e-482e-885b-ed6d37bb5051"
        },
        "item": {
          "id": "e690d1d0-9301-465a-827a-137f9a0ee553",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f64c62f9-a59d-40fb-b07a-595a786901fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15138c-c8e7-416a-91eb-38ab8f603575",
        "cursor": {
          "ref": "91c15337-9280-4afb-8abe-d8966407af45",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e768f375-2142-4da7-b805-a48de5a53039"
        },
        "item": {
          "id": "7a15138c-c8e7-416a-91eb-38ab8f603575",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4a37f164-21fb-48fc-87df-b192ff410b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04823224-c14c-491d-9c4e-8cf423b06cad",
        "cursor": {
          "ref": "40eb4c53-bf5c-423f-b4d8-379eaa9cb979",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9e45d80b-0543-48ef-9184-8f905f5dbda6"
        },
        "item": {
          "id": "04823224-c14c-491d-9c4e-8cf423b06cad",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d43d2362-1a6b-40da-ba93-82e803aa2a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665bd46a-4916-417f-985f-fa6ebf9cc9bf",
        "cursor": {
          "ref": "5c1cadfb-aaa8-48f7-b5db-2efa75e82d76",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3c1eae53-2771-4fb8-ba4a-841631aad564"
        },
        "item": {
          "id": "665bd46a-4916-417f-985f-fa6ebf9cc9bf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e1db3958-2587-4445-8951-332e4202b65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cea756-89ac-44a3-9b5e-dfbab93d8114",
        "cursor": {
          "ref": "e25fa9c6-d6a3-451d-8640-f487f1586eea",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "588830eb-4f55-4fa9-98b0-ebeffdfe42c1"
        },
        "item": {
          "id": "39cea756-89ac-44a3-9b5e-dfbab93d8114",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4fc35900-9b0d-42e3-900a-ae32b0c61c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9afee54-7a3b-4ca5-8b85-271f154681bf",
        "cursor": {
          "ref": "4ca9576f-5f6f-4e20-a16f-13e81c0d9f5a",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2eae0020-7200-4d91-a042-8b7bd1e68f2e"
        },
        "item": {
          "id": "e9afee54-7a3b-4ca5-8b85-271f154681bf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3ba4a4c1-5d4f-4341-8e28-dba0ad09c285",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 648,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feefeff8-aa5d-4651-9b5a-454b707cfb9d",
        "cursor": {
          "ref": "ae878244-4676-47fb-8804-f7913a32991a",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "afc7785d-aeaf-4d2a-99a8-98ad68aefac5"
        },
        "item": {
          "id": "feefeff8-aa5d-4651-9b5a-454b707cfb9d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "24e3d71e-6579-4f56-acb3-d83febe6d7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7730e7b5-f48f-408d-8b00-83001c11814f",
        "cursor": {
          "ref": "08e3a5c1-3979-4fd0-a6f0-77f0a00afb47",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f204f22-7c75-4afb-860b-27e53e0cb156"
        },
        "item": {
          "id": "7730e7b5-f48f-408d-8b00-83001c11814f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8c21d773-ced3-4082-80ec-4caa275ebf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b65202-bc01-4f25-b8d5-08d5e2c4df80",
        "cursor": {
          "ref": "a21d4adb-7f3a-456b-9d16-9d8816433bf0",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d01af0ed-73fc-4b0d-952e-962558e63f41"
        },
        "item": {
          "id": "68b65202-bc01-4f25-b8d5-08d5e2c4df80",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "af8ece9e-f341-4ee9-9938-8d96ce059ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6daec22-186e-491b-a4d0-b737c4ed52ec",
        "cursor": {
          "ref": "7d31cfe1-c95d-487b-b911-79451b3373a4",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "784ea4cb-8e2e-4935-9197-6a92fdd974c5"
        },
        "item": {
          "id": "e6daec22-186e-491b-a4d0-b737c4ed52ec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d044ef7d-f571-4648-85fa-1814d76227b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b0f09-7c39-4e70-9fa5-a52ee6bc60aa",
        "cursor": {
          "ref": "9e95d75b-b3b3-4759-9862-46443bb59218",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b86c0ebf-f0ff-4822-b7e9-0c7cc3144ee9"
        },
        "item": {
          "id": "128b0f09-7c39-4e70-9fa5-a52ee6bc60aa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ad8795b4-9872-4861-a80d-999116763122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9b60bf-4768-4550-b482-882aefc04176",
        "cursor": {
          "ref": "abf18737-c033-4080-aaa8-37138b9a508f",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "40d9a0a5-3357-43e5-bb13-72103ca81396"
        },
        "item": {
          "id": "bd9b60bf-4768-4550-b482-882aefc04176",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b22c7930-ae57-4d62-8478-151eea75d59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6842ee8d-8a36-4e23-869e-dd2cde8af2ed",
        "cursor": {
          "ref": "273b8376-72fd-4c15-937b-394714eb36c6",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed24c736-b6c0-429d-adfd-51fac215c98b"
        },
        "item": {
          "id": "6842ee8d-8a36-4e23-869e-dd2cde8af2ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4cd6609f-2e09-42ab-a9f2-fd514775d2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ad1ec1-44a1-4a2b-ba7f-4aefb87187b1",
        "cursor": {
          "ref": "a5fa7a0f-ff84-45b8-b1ef-f3a56aa88814",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "677fca17-d905-4932-8268-4d60e08f91b2"
        },
        "item": {
          "id": "82ad1ec1-44a1-4a2b-ba7f-4aefb87187b1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3418db18-a518-4433-a7c5-5cd8826a87b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6485f6d-8213-4efa-a19d-25a09f6867c7",
        "cursor": {
          "ref": "3990650a-0230-44e3-b4b3-6c962c621fb6",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "25e157f2-3c41-4744-a779-fe0460beda05"
        },
        "item": {
          "id": "b6485f6d-8213-4efa-a19d-25a09f6867c7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8f2e49ba-9a0d-4768-91b5-1fce1929751a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66510ce5-e65e-46ad-846b-113b95bcc495",
        "cursor": {
          "ref": "7a0e8474-f33e-46f8-9e2b-bd7099229424",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b52233d8-504a-4f58-a6e3-cb1dba1566d9"
        },
        "item": {
          "id": "66510ce5-e65e-46ad-846b-113b95bcc495",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d9ae7f3c-11b1-4847-b790-f3029854cee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb33a91d-3b87-421a-b6b1-27a155a51bb7",
        "cursor": {
          "ref": "3692c673-d011-4086-a20e-632c1259aa95",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bbc0c140-29a8-4f54-8d4e-84cb62734b34"
        },
        "item": {
          "id": "bb33a91d-3b87-421a-b6b1-27a155a51bb7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a1886e35-046e-4158-89ac-d61a77c0adf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7f72ac-1bd4-4739-94b1-3d8c556ffabb",
        "cursor": {
          "ref": "9038d393-6c18-40a5-b542-ec848276d440",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "20c4c795-70a1-4e3b-8d1f-6fba46231923"
        },
        "item": {
          "id": "3d7f72ac-1bd4-4739-94b1-3d8c556ffabb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "69ae9fbc-35a6-49bf-9136-98b80b687cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30cf8b7-8606-4b81-9cae-261552e5e14b",
        "cursor": {
          "ref": "34a8ec1a-48ae-4111-ab8a-61298443397d",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eafc103f-3043-45f1-8829-92f447a7e8b2"
        },
        "item": {
          "id": "f30cf8b7-8606-4b81-9cae-261552e5e14b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "95dc652d-d566-4886-857c-cbde3893e004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e00ea3-4f3e-47b9-b43a-aa9c4388aa6b",
        "cursor": {
          "ref": "02169c27-8477-4ade-a7e1-fceb7f9c49a3",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "726fd831-95f9-4060-8ba0-cc7acd4c1fce"
        },
        "item": {
          "id": "41e00ea3-4f3e-47b9-b43a-aa9c4388aa6b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "37e468f9-b16a-4520-b616-6358871f4bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1509ad09-28a3-4a0c-9350-7ccf4e6271b7",
        "cursor": {
          "ref": "2994bb74-430c-430a-9551-0e52232b4f4e",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5bdccf74-ca44-42ce-81b6-d449a371be47"
        },
        "item": {
          "id": "1509ad09-28a3-4a0c-9350-7ccf4e6271b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1e572489-fc46-4e16-8f7b-47f57d32fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7f0e11-7a8f-4e38-9553-b6c4851cb0b3",
        "cursor": {
          "ref": "3aac2500-3aa6-48e7-a6d3-04cea2bc2eb3",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bac79a77-01ae-466b-b46e-ce18466f0716"
        },
        "item": {
          "id": "3b7f0e11-7a8f-4e38-9553-b6c4851cb0b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5e8b3f35-e6c0-4694-ac81-d32d746329f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bed5e2-80ad-46c9-a074-31e8cbaa0f8d",
        "cursor": {
          "ref": "cb27bdbf-6489-4d8e-aea8-263b82840763",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "167cbb16-86b0-4815-92af-609a53cd28ca"
        },
        "item": {
          "id": "e0bed5e2-80ad-46c9-a074-31e8cbaa0f8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79837f58-2e90-435f-a127-7ee606893012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c74bf0-4616-4cb1-993e-16dc16ec8d95",
        "cursor": {
          "ref": "348c7d91-25b9-4286-8737-eed59680ea2d",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fda3bbe9-fa72-443c-981b-847ac6200a11"
        },
        "item": {
          "id": "b7c74bf0-4616-4cb1-993e-16dc16ec8d95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ed70c19d-f8fe-4b32-bf9c-beaf6bc5df54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fa083e-d50c-4001-93dc-6f452559923f",
        "cursor": {
          "ref": "f01e33ef-301c-470f-b795-6f73b806f1fa",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c22ef7fe-7ba6-4a5d-a577-61e5505d8183"
        },
        "item": {
          "id": "99fa083e-d50c-4001-93dc-6f452559923f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "633de84b-e23a-4216-9e19-bd9e1a84a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9175451-96aa-42df-b6c2-9387f2ff5b2d",
        "cursor": {
          "ref": "9de05f52-2445-4d5e-b631-b4a0f97e6c4c",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d6dc3a3f-5f60-4035-b881-93dcb4928edd"
        },
        "item": {
          "id": "a9175451-96aa-42df-b6c2-9387f2ff5b2d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae28ffc1-70ba-4436-acc5-06fb04281d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d2e57c-1bbc-411e-86db-e48ad92d6ab3",
        "cursor": {
          "ref": "9c436f35-971e-4868-b517-bc2b89f3c0e2",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "452ef86a-c9bc-4ab8-96c8-394804c316a2"
        },
        "item": {
          "id": "11d2e57c-1bbc-411e-86db-e48ad92d6ab3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0676c899-be00-4eea-af0a-367db722bc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa3c02f-1cb0-4592-bd87-f655e0aaffb8",
        "cursor": {
          "ref": "276ce81e-fb83-4c05-85fa-99d64c239d5d",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47026000-0cf4-4937-826e-6d7fa95c4e41"
        },
        "item": {
          "id": "9fa3c02f-1cb0-4592-bd87-f655e0aaffb8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ff171886-df02-4f6f-96a7-5503543ef665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e3368-c71e-4083-be20-b23af8f6c1c7",
        "cursor": {
          "ref": "aceacdc9-fbb8-45dd-ac62-ff5349d542b9",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3809a0f1-0966-482d-ad6b-90b19ffbcbce"
        },
        "item": {
          "id": "9d8e3368-c71e-4083-be20-b23af8f6c1c7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a732f626-3f71-43d2-9302-3c5182f48c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ed6e67-b146-4dcf-ba6d-42f586e28fbf",
        "cursor": {
          "ref": "7a297057-c264-47c2-b5fe-12b0cd51ee5d",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b96258e-ca9b-44ab-9b1b-ee491d99fd8e"
        },
        "item": {
          "id": "f1ed6e67-b146-4dcf-ba6d-42f586e28fbf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7ad20fbe-850e-4972-a624-23400515a542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7858bce1-b27c-4119-bc37-7910fb054d4c",
        "cursor": {
          "ref": "229f1494-fc8e-400f-9d63-775a2558a331",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7b3554fe-b852-4c8d-acd6-2681b2fa3db7"
        },
        "item": {
          "id": "7858bce1-b27c-4119-bc37-7910fb054d4c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9da45748-2aac-478e-8148-b16ab939339f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bf8b36-44ec-4fac-a1b3-d7f288bc55aa",
        "cursor": {
          "ref": "8aaf4d81-522f-4d41-8695-1dace5819d3f",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8a2f0c5b-2d4b-419f-9e81-13a39b191fa2"
        },
        "item": {
          "id": "95bf8b36-44ec-4fac-a1b3-d7f288bc55aa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "22644a84-8c8e-43cc-a5d6-e909d8f83cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c17fbb3-2488-4af0-a492-8a899bf69049",
        "cursor": {
          "ref": "8ae4eabd-39b1-4811-af3c-91efeff662a5",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41b66f4a-94f2-4580-8c5c-d29d1bdac8a1"
        },
        "item": {
          "id": "0c17fbb3-2488-4af0-a492-8a899bf69049",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ff17223a-112e-40fe-8b57-9ab6f2e0c75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0030b9ab-b9fa-4551-8ce7-1d37eda12f3c",
        "cursor": {
          "ref": "6ae903ed-e6a8-4e95-aaf7-6db8686579ef",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "741c0cf6-5d2d-42dc-b936-dec664f63157"
        },
        "item": {
          "id": "0030b9ab-b9fa-4551-8ce7-1d37eda12f3c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4790e17e-d224-4641-acb5-5acce92a0613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf1f280-1fe3-4dde-94fd-2885e4923e4a",
        "cursor": {
          "ref": "41b1986c-abce-498d-b408-a99bedbac1e1",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "74b76b8c-306c-457b-8767-a264f5670f3e"
        },
        "item": {
          "id": "2cf1f280-1fe3-4dde-94fd-2885e4923e4a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d558a969-b04b-4c05-8c81-14e007cd4dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f44679-1af5-423b-b111-29a1afb1b14c",
        "cursor": {
          "ref": "69706bee-b82b-4911-bea7-a0ef3c7b88ed",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "712bf0fb-1137-4802-adec-19bee4d1b999"
        },
        "item": {
          "id": "b6f44679-1af5-423b-b111-29a1afb1b14c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "17268176-59f3-4252-8540-63d1f3fbf6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a722b5-db1b-4c80-97e5-10e07203e1e0",
        "cursor": {
          "ref": "e14fd5dc-4cfe-4133-8fe4-c382e17caddf",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7f887e17-03e0-4f68-8473-f9e18b3cbee3"
        },
        "item": {
          "id": "a4a722b5-db1b-4c80-97e5-10e07203e1e0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "247f81f9-fa17-4c3f-bc7f-3d31ad6e5d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f628eb3-f43d-4db6-9150-64f8d81b4e97",
        "cursor": {
          "ref": "0e1dfe02-b443-4b19-926d-9bf239ac3e35",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "22a542a2-cb79-4707-8e55-080f6b57c052"
        },
        "item": {
          "id": "0f628eb3-f43d-4db6-9150-64f8d81b4e97",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fbb89db6-19b2-4685-bfaf-d890644e1364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772fc550-13f2-4c38-bdbd-93ad129c7765",
        "cursor": {
          "ref": "69f665d5-d743-4eff-9e1c-71f7f5b61856",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c0aed7a6-072f-413b-9a70-b3dfa776fa48"
        },
        "item": {
          "id": "772fc550-13f2-4c38-bdbd-93ad129c7765",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "23bbec3e-3745-44a8-a1fb-a1ef00dc7b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3418b95d-df6a-4371-8852-0d43c4121511",
        "cursor": {
          "ref": "51c457f4-88a5-4710-b67d-5a594b247f24",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7e21e8e5-6b8c-43b2-ab69-acb790c80c09"
        },
        "item": {
          "id": "3418b95d-df6a-4371-8852-0d43c4121511",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8d13cfea-28c9-47f9-9fdd-f920100fbdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbf784b-2ee4-4667-b2a4-299d20e09b9f",
        "cursor": {
          "ref": "9cbb3516-e7c8-40c0-8c77-0222b65c4bd1",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "64c5cedc-d5d1-4209-a460-90dfe03eea6f"
        },
        "item": {
          "id": "5fbf784b-2ee4-4667-b2a4-299d20e09b9f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "03b50426-3712-42ec-b34f-3a3635c8c0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f701489-461c-4844-b1b9-9bd23b8ea86e",
        "cursor": {
          "ref": "de15e248-fe16-4cf7-bfae-513ec290aef1",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "46f56b24-6f15-4540-b98a-6b525c0361e2"
        },
        "item": {
          "id": "9f701489-461c-4844-b1b9-9bd23b8ea86e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a01a54a0-b2ba-46c9-87b1-244effb0f57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff6e9e-4022-4d63-a674-01d15a291a37",
        "cursor": {
          "ref": "fb89b650-2e74-4d92-8c7f-1c24e73c058c",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1dd992eb-b39e-48bc-b290-3e36a8f93671"
        },
        "item": {
          "id": "3dff6e9e-4022-4d63-a674-01d15a291a37",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "472bcdaf-daed-4187-ad9f-2acace63b94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea043a8-7978-4802-a7c5-31ec8a0b00b3",
        "cursor": {
          "ref": "01609013-d4f1-422b-a1bf-950fb149154e",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9312dbef-11aa-47eb-bf0a-34e6290ae418"
        },
        "item": {
          "id": "4ea043a8-7978-4802-a7c5-31ec8a0b00b3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9ab73de6-9fcf-4a33-9c05-ded146faa59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1669909-ecae-46d4-bae2-efb2133bbb88",
        "cursor": {
          "ref": "06c5d844-f3e6-486e-aadc-608405ff8e51",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "215cf659-d066-45d6-9dc1-4d1e59c5ac52"
        },
        "item": {
          "id": "e1669909-ecae-46d4-bae2-efb2133bbb88",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6b8f73e0-33d8-4347-9343-34858341a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b392e218-2f0e-4781-a431-3bd3a14babfe",
        "cursor": {
          "ref": "59f890a4-e106-488a-bded-9601480f4161",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4816c186-5f33-468b-bad9-49e3d66d09b9"
        },
        "item": {
          "id": "b392e218-2f0e-4781-a431-3bd3a14babfe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "527c02a4-06ad-4380-ae40-eb3bcdbe5655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee53e16b-7016-4f99-906f-2e52ab11b25d",
        "cursor": {
          "ref": "901f861f-bb5d-42d8-a38f-f91869bef946",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a46cd4b1-422e-467a-ae36-068d9ad48a33"
        },
        "item": {
          "id": "ee53e16b-7016-4f99-906f-2e52ab11b25d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e80a80e8-a71f-4abe-92b0-18e3f4e0f560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7f431f-d345-48b4-b50e-e3e1d356563c",
        "cursor": {
          "ref": "b1695697-0e0f-403f-99d4-7242d0d6da45",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7db6ba06-9fcb-487a-9ae0-507ba2cde82a"
        },
        "item": {
          "id": "fd7f431f-d345-48b4-b50e-e3e1d356563c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8b731689-68b8-4366-beb8-fc57a001175d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c73e90-9ff5-4dd4-8d33-8c59919bb5e5",
        "cursor": {
          "ref": "219c2b06-7455-4506-b6ec-2c7654ed741a",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c5fb7fbd-15a5-4b2d-be16-1f4d7d63b33d"
        },
        "item": {
          "id": "71c73e90-9ff5-4dd4-8d33-8c59919bb5e5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a2606f76-11c5-442d-8f69-457af9266494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168e03db-7ff5-4d84-8f2e-75a32a144f20",
        "cursor": {
          "ref": "9a3f1b07-52eb-4957-ab63-65956f3cec67",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c32bc721-9f10-4209-b856-05d7e578593e"
        },
        "item": {
          "id": "168e03db-7ff5-4d84-8f2e-75a32a144f20",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bc0011cc-4d97-4dab-8b3c-2e227cb053ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb5f0e8-4ca4-4703-b4ce-d48d8b4bb524",
        "cursor": {
          "ref": "72d75019-2c87-4983-95bd-fc2505feddc8",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fb6a5ade-e3a1-4bdf-92e7-363b2492ab1b"
        },
        "item": {
          "id": "ffb5f0e8-4ca4-4703-b4ce-d48d8b4bb524",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1bb538d3-ed82-4882-b015-5425075e502f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b474b78e-4dc5-4bb8-8e86-5b9f554c09ce",
        "cursor": {
          "ref": "a2f1e881-7425-4a33-86bd-e578b2b11200",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e7044c82-d5d6-4c76-a570-5ea5817d0446"
        },
        "item": {
          "id": "b474b78e-4dc5-4bb8-8e86-5b9f554c09ce",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "92394682-c375-4497-8cd7-23c261014262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8db247-c0f8-4293-bcf8-8051ac2d2227",
        "cursor": {
          "ref": "8aedd09e-4c5a-4642-823d-37c9e5d873f8",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f119a8ac-b653-4387-a8af-d486b9d51d85"
        },
        "item": {
          "id": "6f8db247-c0f8-4293-bcf8-8051ac2d2227",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "be555a06-c103-4f46-ac16-5bcbc1079648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a752ac76-119f-4294-b5f7-5dd48dd324c7",
        "cursor": {
          "ref": "da3acbca-4ab2-44d5-8e76-de75c02a4176",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2dfcb609-403d-4db6-a1f1-7e90bc01b2f1"
        },
        "item": {
          "id": "a752ac76-119f-4294-b5f7-5dd48dd324c7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4dac05db-e27e-4622-977c-1f6b469bc503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defac15c-c63b-4342-a9b7-ebc879f703ee",
        "cursor": {
          "ref": "bbd0812a-5e9d-4dfb-8cd1-1a107f65b5b5",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f397da92-1ef6-444a-b836-9cadee66ebb9"
        },
        "item": {
          "id": "defac15c-c63b-4342-a9b7-ebc879f703ee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ea38f866-df23-4afc-bf34-d967e5882144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9df696-cc39-40d0-9236-b0d7e4fb93d7",
        "cursor": {
          "ref": "9c06fa09-3f9c-4d2f-9864-186d02b63137",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "01beeeb2-b958-4aa6-9ad8-8da6b279c066"
        },
        "item": {
          "id": "0d9df696-cc39-40d0-9236-b0d7e4fb93d7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "79d91b5a-7828-47c1-9a21-c81e3c97f2b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a55af-75a7-48e4-bb11-11dc0fc50983",
        "cursor": {
          "ref": "3166de45-ccfa-4a9f-9f7c-c40b549c08d1",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8ce31193-cb8c-4d3e-b3d8-d5d28f7e3761"
        },
        "item": {
          "id": "922a55af-75a7-48e4-bb11-11dc0fc50983",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1ff367ab-66a6-4a58-b456-d018a1ae75ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 495,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb960223-3199-4771-9579-21d97e936f4b",
        "cursor": {
          "ref": "35f885ed-004d-4ede-9186-582dab86f5ff",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a077576a-ec12-4eb9-9024-bdceeb8817c8"
        },
        "item": {
          "id": "bb960223-3199-4771-9579-21d97e936f4b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "180cf631-1208-4d8f-88d8-5d27a1ce716f",
          "status": "Created",
          "code": 201,
          "responseTime": 3804,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "9840b050-4159-4432-a62d-78c517e279d1",
        "cursor": {
          "ref": "98673fc5-5b0e-4bbe-9253-de0de0ea3c01",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "948690b8-1b3a-48b1-bc59-bd440699e775"
        },
        "item": {
          "id": "9840b050-4159-4432-a62d-78c517e279d1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9c60cf1a-4105-42bf-aed0-8eabba2d79b9",
          "status": "Created",
          "code": 201,
          "responseTime": 3750,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "40cc7f80-c739-4157-8ae5-a252f63a18d3",
        "cursor": {
          "ref": "bf7029fc-e84d-48dd-b772-b0909a3f463a",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9f02a7e5-c433-4fb8-a535-8203f8cd9d2e"
        },
        "item": {
          "id": "40cc7f80-c739-4157-8ae5-a252f63a18d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8e28f2b4-cd97-4ccb-a94b-bdd6f59de13e",
          "status": "Created",
          "code": 201,
          "responseTime": 3800,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "3bbd4b55-d4db-4b7d-b48f-4db041e76ca8",
        "cursor": {
          "ref": "7bda789b-e075-4326-8a98-f916822891db",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f8739e39-50b7-4755-b8ba-592d14ec7d38"
        },
        "item": {
          "id": "3bbd4b55-d4db-4b7d-b48f-4db041e76ca8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fd2eee31-0d22-4089-a88f-51e46aad9276",
          "status": "Created",
          "code": 201,
          "responseTime": 3812,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "0d334018-9aba-4041-b586-dd250e55e578",
        "cursor": {
          "ref": "072c91e3-4a50-462f-a2e5-e5d51d553f9b",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3159a37-0da1-44cf-a1ff-c5a7b02c4a3c"
        },
        "item": {
          "id": "0d334018-9aba-4041-b586-dd250e55e578",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "96a2bb2e-c2e2-46f7-b15c-d400c21e9942",
          "status": "Created",
          "code": 201,
          "responseTime": 5692,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "a984017f-6bf7-49a5-b05c-1de976d138b7",
        "cursor": {
          "ref": "25ecad33-3846-465a-a89a-01bb22b1d5b0",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea9a0847-6d0d-4ff0-b03b-9c023d38e530"
        },
        "item": {
          "id": "a984017f-6bf7-49a5-b05c-1de976d138b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bff6b312-90fa-491e-ba65-80266e5ac213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a984017f-6bf7-49a5-b05c-1de976d138b7",
        "cursor": {
          "ref": "25ecad33-3846-465a-a89a-01bb22b1d5b0",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea9a0847-6d0d-4ff0-b03b-9c023d38e530"
        },
        "item": {
          "id": "a984017f-6bf7-49a5-b05c-1de976d138b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bff6b312-90fa-491e-ba65-80266e5ac213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a556389-5c57-4569-9fe5-ef4cff63fd4e",
        "cursor": {
          "ref": "79581c82-0b25-4594-93ee-c26dcb2a6ac0",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "24df5d5c-07b1-4fce-8130-122cdc6c1016"
        },
        "item": {
          "id": "0a556389-5c57-4569-9fe5-ef4cff63fd4e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eef3e2bc-66f3-4db0-9eaf-100371d20d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41426094-e1ca-4121-b81d-260174be19f5",
        "cursor": {
          "ref": "28b82d1b-5229-42e5-9734-93193f953a31",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "780fb53d-c06b-42b6-bd07-b398bdce4267"
        },
        "item": {
          "id": "41426094-e1ca-4121-b81d-260174be19f5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1a766bdc-c780-4fa7-af87-ef146027dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f5488d-eb18-4372-a685-68375d2fe68b",
        "cursor": {
          "ref": "1bd19481-dddb-4088-84a6-b458897910af",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1cfa18ef-f038-49d2-9cee-f1d7b6ed7bef"
        },
        "item": {
          "id": "87f5488d-eb18-4372-a685-68375d2fe68b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70ade436-8839-42de-8729-474ab01a337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a1858-f0ef-4f92-a3b0-212c1a9b5b79",
        "cursor": {
          "ref": "1bbf2e99-7f1f-4f18-b4d6-dd97e6903fec",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "088b5319-c4f9-47b7-bf3e-9b5db50f2b8a"
        },
        "item": {
          "id": "324a1858-f0ef-4f92-a3b0-212c1a9b5b79",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78987d99-647e-48c0-b6e9-37917dc78247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2648069-7e8f-430e-939a-c06d4b3eb82e",
        "cursor": {
          "ref": "69d1c518-bb79-4e4e-acd7-384a2217f1cd",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "46b583cf-331e-4bc6-a01b-e44fbc135f04"
        },
        "item": {
          "id": "f2648069-7e8f-430e-939a-c06d4b3eb82e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c55133d4-6e72-4b86-8649-410bcd3efb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4218ff32-3176-478a-bb29-639357f9ca6f",
        "cursor": {
          "ref": "ea4ccc2a-8b2d-4473-9674-0787c58713aa",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8dcc664e-729a-41f9-9408-195c1ac01c13"
        },
        "item": {
          "id": "4218ff32-3176-478a-bb29-639357f9ca6f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "87c6e31a-1190-4a61-a90a-c1d6d2337e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57743dd-de05-417b-91a5-203ea150182f",
        "cursor": {
          "ref": "06ff72fd-e9a7-486c-b381-5c5afbf642b6",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8cf7dd85-08b2-4789-9c5d-23c8f1867888"
        },
        "item": {
          "id": "b57743dd-de05-417b-91a5-203ea150182f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1f4fdff8-214e-4a8a-9e07-e315127ebbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcc946f-59fb-4259-9ea5-11a9fbdf5d76",
        "cursor": {
          "ref": "ebf2804d-5dfe-4f69-befd-90c11ce0370d",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "71bf3cd1-1785-4f0c-99fb-659ca7ae1466"
        },
        "item": {
          "id": "3bcc946f-59fb-4259-9ea5-11a9fbdf5d76",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "74a9548a-c0dc-41ed-a7ca-5a010c551aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d24294c-b090-40f2-ae43-dd8ee23ab3a1",
        "cursor": {
          "ref": "ce727f4a-27cc-4499-b64a-7045725a62dc",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "36274e62-ac6b-4798-8b5c-f78a458070f0"
        },
        "item": {
          "id": "6d24294c-b090-40f2-ae43-dd8ee23ab3a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b813a970-c990-4f36-8068-f8c36ee5c00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9109e15-8d9b-4815-9fa1-4e2bef71ea26",
        "cursor": {
          "ref": "4d51b1b0-fa68-4ce9-a948-af4b4ebe950d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1cd10a4e-d904-4133-acc8-b2bda386df01"
        },
        "item": {
          "id": "d9109e15-8d9b-4815-9fa1-4e2bef71ea26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "86c09bf2-f4e8-4c65-ae8c-32e250923288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad836571-c682-4f06-bf5f-36ee09e96fd4",
        "cursor": {
          "ref": "fa0dcde5-1078-40f3-be21-e9184e37aa3b",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "df5971a2-8129-43e7-842f-220baa8fc288"
        },
        "item": {
          "id": "ad836571-c682-4f06-bf5f-36ee09e96fd4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74007bfe-e613-41cc-a622-f32068d862f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce01811-089e-4d76-bd9e-ab2f95c4a8a6",
        "cursor": {
          "ref": "7b3cb934-c951-4c73-af55-fdd5e38d58aa",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1c5c7161-2fae-4a19-ae30-8318f2653da2"
        },
        "item": {
          "id": "fce01811-089e-4d76-bd9e-ab2f95c4a8a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "018a27ce-f10d-44e8-946c-e0221b788c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e660233-f9ef-44d8-93a7-391f77f95b45",
        "cursor": {
          "ref": "2404c62c-4317-45e6-837f-fcbd1ddf396f",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7c3f0401-50b5-4ad8-b7a3-62c7f97253cf"
        },
        "item": {
          "id": "0e660233-f9ef-44d8-93a7-391f77f95b45",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4494406c-80c5-4636-9263-3582e3d55fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce553e8-cd09-4800-8b19-981f9a1b2743",
        "cursor": {
          "ref": "1d4174ed-4f40-4199-a69e-430f8c943b4e",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e3571d69-b8b0-466f-a17b-83fffc68d2bf"
        },
        "item": {
          "id": "6ce553e8-cd09-4800-8b19-981f9a1b2743",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2b362561-cf79-4591-a917-fcf6b88e718b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d295400-dc4c-4c3f-b00a-5731460fee02",
        "cursor": {
          "ref": "70c956ae-0b89-4573-9443-708a5981135d",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c4ad1f6e-f29a-4053-b188-4cd91a745278"
        },
        "item": {
          "id": "1d295400-dc4c-4c3f-b00a-5731460fee02",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3187f0b7-f838-43a6-9ec0-9e56f5a69931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac1b2a2-a531-48e1-a39d-bda2a378fff5",
        "cursor": {
          "ref": "c1c6c4c1-dd29-41fe-b594-9965d9ef9c48",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e831b237-f39c-4c63-b9e1-bb4926dc4aec"
        },
        "item": {
          "id": "2ac1b2a2-a531-48e1-a39d-bda2a378fff5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "91a1c255-211f-4911-8118-3c127dca12ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a78a44-7edb-4097-a166-9f9d59cd6f26",
        "cursor": {
          "ref": "33834b15-175f-409d-a19b-22d26b36b4d1",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "358d73cc-6b57-43a2-85a1-075f2374fbb9"
        },
        "item": {
          "id": "c1a78a44-7edb-4097-a166-9f9d59cd6f26",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "58175bff-21c0-442a-b6a9-3ba4fab19903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e932b07c-0eeb-4f16-a83f-9acc391ed3de",
        "cursor": {
          "ref": "dbb21675-432c-4276-8ca9-a6f7c968b506",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ccaade6-4c17-48e7-a9db-be7a20be94f7"
        },
        "item": {
          "id": "e932b07c-0eeb-4f16-a83f-9acc391ed3de",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f4b08e38-9735-4169-ad9a-43031ee0b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfc088c-d551-420f-9def-8772d90675b7",
        "cursor": {
          "ref": "f45f64e2-ef46-4f8c-8b0f-02127c786803",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eb35f67d-fa0f-442e-aaef-b6c129276fa6"
        },
        "item": {
          "id": "6cfc088c-d551-420f-9def-8772d90675b7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "455d1632-b240-4f78-8544-44c8473f24aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97df3d6-4697-4ab4-b6aa-725b089e1c0a",
        "cursor": {
          "ref": "d5890c0e-0dc4-4ee9-bb50-ba0c1de85e0c",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5e289bd9-8ff7-438f-8cdd-3c5901a43971"
        },
        "item": {
          "id": "c97df3d6-4697-4ab4-b6aa-725b089e1c0a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4503a0df-f700-49ca-bd6b-12a9265ca0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ecc404-88a7-4cea-8a02-8d0d5f2755ab",
        "cursor": {
          "ref": "341e4124-38d0-4880-a249-f35d680d5b38",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4f4c2d65-78dd-4f19-a2eb-b21a5499defc"
        },
        "item": {
          "id": "e7ecc404-88a7-4cea-8a02-8d0d5f2755ab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c5e9f5b5-9760-4025-93f9-de64b9df266c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241e4234-a045-4cbf-9992-806543493759",
        "cursor": {
          "ref": "e4d13eec-9473-465b-b0b4-38a6c86c64e7",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "53ad8246-7d06-4056-be56-926078296d20"
        },
        "item": {
          "id": "241e4234-a045-4cbf-9992-806543493759",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cb73e352-58b6-4fda-8a98-896c7c411857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f89993-9925-4369-93f9-e520108ce74c",
        "cursor": {
          "ref": "2f5edbb1-5cbb-4000-9a62-6fc30e17ed35",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "69cafebd-64e8-4f1b-9cf6-b5f4421aa332"
        },
        "item": {
          "id": "a8f89993-9925-4369-93f9-e520108ce74c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4bcdf6c7-dbca-4826-95c9-fb3e5e7982d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270aad9a-0e83-45fc-a3a3-4975ffb50d91",
        "cursor": {
          "ref": "57f5e49d-2521-4d56-8b2e-82e2f12d382c",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f0ee810b-30d0-424e-b30c-99d9c72376b6"
        },
        "item": {
          "id": "270aad9a-0e83-45fc-a3a3-4975ffb50d91",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f63cba71-813a-46a7-9c85-331aefc31d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6ad992-daca-4c31-b73e-b85eee628e0d",
        "cursor": {
          "ref": "a68f32c4-6c45-4230-9884-ad9fe939ec6f",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "581cc7f1-ffeb-4c99-a1f8-5823788b64ce"
        },
        "item": {
          "id": "5e6ad992-daca-4c31-b73e-b85eee628e0d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f9cd00a2-8291-4a47-be30-bb658e7bf250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4076131-0b54-406c-a4bd-a99ed3e7ea97",
        "cursor": {
          "ref": "d732b917-fa25-4827-92d2-f79c372de6dc",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "67edd743-c31f-4d2e-aa45-e434936912a8"
        },
        "item": {
          "id": "e4076131-0b54-406c-a4bd-a99ed3e7ea97",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05af7932-89dc-4d83-859e-5d29a349f051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed98620-2e29-45ac-9053-b041372c9844",
        "cursor": {
          "ref": "ae70e9fc-66b2-4183-afcd-07cffbb9d36c",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "08364abc-0976-43f6-a332-63d89bd64389"
        },
        "item": {
          "id": "5ed98620-2e29-45ac-9053-b041372c9844",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ce5bef84-9b51-460c-a7a1-82a1ae80c133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc4efbd-9ca7-4808-9afb-589ca148dae7",
        "cursor": {
          "ref": "fae8e904-6544-4784-8ccb-7eb8ad072248",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4cf47d45-a5da-44cc-ac80-95a9d0894892"
        },
        "item": {
          "id": "9fc4efbd-9ca7-4808-9afb-589ca148dae7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ad0e36af-ba9f-4589-bc88-6edc9474b100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806f9143-ccba-4e25-8d05-23e9b30a5fc7",
        "cursor": {
          "ref": "51ff6b8a-c391-4533-8b36-332c4fa63b5d",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b647b52d-a7c4-4af8-b1ce-1c1d295eb0fc"
        },
        "item": {
          "id": "806f9143-ccba-4e25-8d05-23e9b30a5fc7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11616c7f-8c6b-4040-8d3b-16cdb2b08648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1b59d7-6e5f-46c8-b36d-0420250d5b7d",
        "cursor": {
          "ref": "8178eb58-15d1-49a7-8722-b54edd4cb8cb",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2f993f2c-2504-4130-8d2c-d16321cc6b74"
        },
        "item": {
          "id": "3a1b59d7-6e5f-46c8-b36d-0420250d5b7d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31921b56-bf4a-4817-9499-8b740e292c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc85c3d-4494-470e-90c6-857ed6e31278",
        "cursor": {
          "ref": "be7efaed-454d-47bc-9417-3274b022db1d",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dde015a2-df39-4b03-8db6-d41f1eb7dae7"
        },
        "item": {
          "id": "5cc85c3d-4494-470e-90c6-857ed6e31278",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a740a778-6bd1-417f-a7df-97e17b0a170e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f44624c-609e-496c-b77c-446b226dd538",
        "cursor": {
          "ref": "f5ee8e85-740d-4a63-b4c1-8ae387c8ab90",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c60ee1a5-4a8e-4d67-9e1f-beabca756647"
        },
        "item": {
          "id": "3f44624c-609e-496c-b77c-446b226dd538",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a29fe07e-2fd6-4651-9b51-2c4b75f8caa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e739c8e7-1867-4276-a818-335bc69b2d79",
        "cursor": {
          "ref": "b9817eb7-0c5f-498c-a329-82115ecc40a5",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "36a9591c-cc48-418e-b83e-806c4c7e5e98"
        },
        "item": {
          "id": "e739c8e7-1867-4276-a818-335bc69b2d79",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9114530d-299e-4eb8-88f6-8a8f9402c35d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 499,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6179d140-abf0-4c19-92e8-e1a2cc35aa96",
        "cursor": {
          "ref": "74273dcf-d6e6-42fe-b2ff-8f98c7f83b84",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "24f7af1d-048d-4cce-bd33-fd42e9e74ea0"
        },
        "item": {
          "id": "6179d140-abf0-4c19-92e8-e1a2cc35aa96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b659db4-40bc-450e-a1ae-8b28fef9a3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6179d140-abf0-4c19-92e8-e1a2cc35aa96",
        "cursor": {
          "ref": "74273dcf-d6e6-42fe-b2ff-8f98c7f83b84",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "24f7af1d-048d-4cce-bd33-fd42e9e74ea0"
        },
        "item": {
          "id": "6179d140-abf0-4c19-92e8-e1a2cc35aa96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b659db4-40bc-450e-a1ae-8b28fef9a3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c2bb69-b59f-4fdf-a898-53b0279ca5dc",
        "cursor": {
          "ref": "280f8f46-5f3a-410d-8126-f127a1d1e15c",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f2759d18-bfd1-4c0f-bddf-bd0c29d7aaa3"
        },
        "item": {
          "id": "86c2bb69-b59f-4fdf-a898-53b0279ca5dc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "17b461a6-3ccc-45dd-9652-065ae2fd158e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425eb1ad-2b3b-4e11-87ba-e7dd9af54450",
        "cursor": {
          "ref": "432b76fb-e6df-4fb0-8027-aade5f046578",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "61f51058-f319-4c8d-848a-6416ecfadde1"
        },
        "item": {
          "id": "425eb1ad-2b3b-4e11-87ba-e7dd9af54450",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c47ebf4-dafd-4fa9-94ff-edd78208042a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37691551-c2bf-4bbc-a864-7c703fd96d90",
        "cursor": {
          "ref": "62a1a579-6e43-4ce0-9c84-60922bab8f9b",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0fd28d5b-4680-4ea9-b709-49e61e230b96"
        },
        "item": {
          "id": "37691551-c2bf-4bbc-a864-7c703fd96d90",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "73723b8d-9e3d-4adf-b69d-02c6ebf8472c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b7b27b-d0c0-407c-921f-25b5738cfec4",
        "cursor": {
          "ref": "5c6a97f5-6799-445d-bdda-2a8f45a190aa",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "024140e5-587a-42bd-840c-af0fe25f5c6c"
        },
        "item": {
          "id": "04b7b27b-d0c0-407c-921f-25b5738cfec4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e8a0c295-0744-45a4-ac89-0410b24e5d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf633019-37e3-4a4a-ae7e-9a37447dbd73",
        "cursor": {
          "ref": "610f7af8-5f68-4025-90f8-5461e6a66de4",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "08544a7c-7ca7-4b68-8fc6-c558b5b26f72"
        },
        "item": {
          "id": "bf633019-37e3-4a4a-ae7e-9a37447dbd73",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1a0ecca8-93e8-4fbf-a531-44a72a1d4c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6eeed4-aeca-48f2-a43c-be2f92cc7e17",
        "cursor": {
          "ref": "efbf3fc0-af76-48d0-9374-51b13bb993c9",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7d6f1e52-ddcd-4dc4-85ba-c667c9e9cc82"
        },
        "item": {
          "id": "ac6eeed4-aeca-48f2-a43c-be2f92cc7e17",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2fc49502-c6a8-4985-9714-6276f7c06c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71fa5f6-3a07-4cb8-9f34-5cfe2454f9e6",
        "cursor": {
          "ref": "1ec0d7d8-acb1-4599-b318-0f34c69a7efe",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d814df52-7491-4bca-8664-19d9315e7cb1"
        },
        "item": {
          "id": "c71fa5f6-3a07-4cb8-9f34-5cfe2454f9e6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "88e697fa-a9f8-458b-b386-214765bfee07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b24f3b4-5e7e-412c-910b-1721e66a0ae6",
        "cursor": {
          "ref": "f570ef53-3042-4b55-92b5-2e3f57be8c74",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da7f5058-f5eb-4e86-bfe4-6983e03f3f32"
        },
        "item": {
          "id": "3b24f3b4-5e7e-412c-910b-1721e66a0ae6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a7c26b71-bf74-4845-bcfa-439b56ad9c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ceb105-0237-4a59-aa0f-878c635910ed",
        "cursor": {
          "ref": "d9714c95-dbba-4d00-8bf1-8bdb6978d302",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f742f222-9119-40aa-a247-51aacfb44212"
        },
        "item": {
          "id": "75ceb105-0237-4a59-aa0f-878c635910ed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "35ce0ed1-55b9-4ea3-b154-67381427c2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a71a50a-bef9-42a9-8070-8addb1350a9b",
        "cursor": {
          "ref": "400f2919-a941-4971-a3ac-ad0015f1d5c9",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "05e1b924-bf07-4013-aa09-6c6341fd42a9"
        },
        "item": {
          "id": "7a71a50a-bef9-42a9-8070-8addb1350a9b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0120b637-bc9b-4c06-b918-6b77fb9c14cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5308dc46-49a5-4247-9ee6-85600a41a540",
        "cursor": {
          "ref": "666b2606-fa17-4325-bbbe-403acf6fb1f5",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4bc4075d-373b-4a58-8798-209d95193bba"
        },
        "item": {
          "id": "5308dc46-49a5-4247-9ee6-85600a41a540",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ac95abb-2118-4c09-9ff9-7e57d19f5bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8075fa47-90a6-47be-b9ed-09712a89bd69",
        "cursor": {
          "ref": "1aabc733-d5c9-4d60-8aa1-fd7af4e3a59f",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ad454341-b965-40ce-9825-de4864ab5d85"
        },
        "item": {
          "id": "8075fa47-90a6-47be-b9ed-09712a89bd69",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ec80450-2662-4e47-883f-624a686097d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbed2b3-8f34-4977-838d-fd70d43905a7",
        "cursor": {
          "ref": "b705d2ce-b01d-47cb-934b-8e36bfa763f4",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cab49644-f50b-4ec4-89bc-9335dfad2fa6"
        },
        "item": {
          "id": "cdbed2b3-8f34-4977-838d-fd70d43905a7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d62ba3bb-3cda-4e7a-a85c-c2d3aa346bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d4721-8f1a-4890-b2fb-a15532262cb1",
        "cursor": {
          "ref": "b1c5c995-bb7c-4f50-a5a9-54161efe21b6",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "54b4f181-1d9a-4d0d-a66a-9b3698fc3e44"
        },
        "item": {
          "id": "842d4721-8f1a-4890-b2fb-a15532262cb1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "24b972a0-e3b4-4b57-aa0c-2f90a6c21554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0165cd44-2d11-4a63-9ec0-0284be4e8535",
        "cursor": {
          "ref": "89d8a0a0-71b9-460d-8582-9b2d6607955d",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5037f2dd-20ca-48b8-97e4-8d6617f325ba"
        },
        "item": {
          "id": "0165cd44-2d11-4a63-9ec0-0284be4e8535",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "691306ea-1646-4f29-880a-6addd9dc47fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93376a46-4b0e-4e3c-b7cc-6a95ca20985d",
        "cursor": {
          "ref": "54287627-010d-4bec-9816-c38d97c3129a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "64880a96-35e1-4b11-b84a-53cb19bba802"
        },
        "item": {
          "id": "93376a46-4b0e-4e3c-b7cc-6a95ca20985d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "adeb15c7-e2a9-4ec9-b328-518598f31acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af12770-1ce2-42e4-a1b4-2897d10172aa",
        "cursor": {
          "ref": "6a154c96-a86a-4ff8-8627-af99b75204a8",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d08975fc-3930-4d0f-b39a-6232a18be44e"
        },
        "item": {
          "id": "4af12770-1ce2-42e4-a1b4-2897d10172aa",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "f8efefc1-607d-434b-aa3b-aa602f85ef3f",
          "status": "OK",
          "code": 200,
          "responseTime": 3542,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "0ff9e649-94e9-440d-9914-cfc7729b8df2",
        "cursor": {
          "ref": "d8c51da8-b073-464b-ba4c-baa3b2df3286",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0bee325b-5d15-4ff0-bbc0-5ba92ac6a3c0"
        },
        "item": {
          "id": "0ff9e649-94e9-440d-9914-cfc7729b8df2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dbfd32bf-79d3-4b92-878f-bba9b02e1dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee4e4ba-ea3b-4efa-8aae-8c1d9536a899",
        "cursor": {
          "ref": "32fd5d5a-5b62-4f67-9387-2721e749b1df",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ae31826e-0a43-4ef3-98ce-86e4e86a3c18"
        },
        "item": {
          "id": "8ee4e4ba-ea3b-4efa-8aae-8c1d9536a899",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4cef289-d5fa-42e8-9d40-c05dd6bd6877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5ca2f8-f5a4-49e0-b909-8c49c3fdf281",
        "cursor": {
          "ref": "44edb7b8-b277-4b11-8d08-be773059aa77",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f7cc575-3bf2-45c9-ad67-cb6e169b148e"
        },
        "item": {
          "id": "7d5ca2f8-f5a4-49e0-b909-8c49c3fdf281",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e5dc42a9-af68-47a5-b209-d17ab6a376b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28335e56-5753-4117-b3a7-56fcd8d59ed2",
        "cursor": {
          "ref": "22e3cf59-2b24-4701-be3e-300638ba5d8c",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "adbf9972-56ad-4b78-96d8-9ea49005258b"
        },
        "item": {
          "id": "28335e56-5753-4117-b3a7-56fcd8d59ed2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4bfbb5a4-da3d-431f-8c9a-7afa1e83905b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569152ce-b5f8-4ef0-926b-a305ae5152c8",
        "cursor": {
          "ref": "8833ca3f-db46-4883-8101-563a677b15af",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ebef23d2-64a3-4191-ba00-17bc4e00503a"
        },
        "item": {
          "id": "569152ce-b5f8-4ef0-926b-a305ae5152c8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8edcfd8e-a835-4cf2-b16e-aab73a307dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0731e7ed-b155-41dd-acab-056efb3a4365",
        "cursor": {
          "ref": "92f2bf1d-8c86-4015-b9ef-c613520ee83d",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e318fdcb-2703-4904-9928-2ee6c8d5a0bd"
        },
        "item": {
          "id": "0731e7ed-b155-41dd-acab-056efb3a4365",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f39f66ff-9cb4-4e21-9632-cc608082e1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd56f3cf-aca2-40cb-9579-47b1be4f4c7d",
        "cursor": {
          "ref": "7d7770cb-2066-47c4-92f8-b32f8a6aa470",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "abb5fa07-5c84-4508-a285-48f97d3bcf17"
        },
        "item": {
          "id": "dd56f3cf-aca2-40cb-9579-47b1be4f4c7d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "236acd97-a303-49ba-aa40-f868e203ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d74222-17b6-4d14-b723-817514184c07",
        "cursor": {
          "ref": "1ee85eb0-843e-4574-b3ab-b271d81b7522",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "13efb2be-9d60-4577-b623-baed6a728c1c"
        },
        "item": {
          "id": "59d74222-17b6-4d14-b723-817514184c07",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "010709a7-507c-49d6-b229-7ad6cb135863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e3db6a-16aa-4229-a789-44810ebca6c6",
        "cursor": {
          "ref": "48076c5f-dc6c-4249-b308-790c5977744b",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "66a710d5-8ccf-4641-95a2-6cfd4a8e3e3f"
        },
        "item": {
          "id": "c7e3db6a-16aa-4229-a789-44810ebca6c6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "712ac66e-e1ef-403c-8716-4dd835569f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7688661-9c7b-4ccc-b0d1-e078fc1e22a7",
        "cursor": {
          "ref": "19d9b485-7e28-4a8f-af9b-a25ea167638b",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "20e2b43c-e182-46a3-9241-ec6ec171263f"
        },
        "item": {
          "id": "d7688661-9c7b-4ccc-b0d1-e078fc1e22a7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "29587316-3452-4a30-afc4-b2df8c225610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076c1c9b-8485-4404-bb4b-c2f71ae8892b",
        "cursor": {
          "ref": "5db4de0a-163c-4fba-bf18-d817fb14c876",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bdca7eea-fd5f-4aaf-99b2-b2480cfb41e5"
        },
        "item": {
          "id": "076c1c9b-8485-4404-bb4b-c2f71ae8892b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "89bd77a1-8876-4eea-975d-927294a6298f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfcc531-b0ef-4fab-805b-a4e188b14286",
        "cursor": {
          "ref": "cf0fca9a-1c32-41b7-a96b-c89783f0a2f0",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "02f9c5b8-4904-47d5-9267-43f2d815bcb9"
        },
        "item": {
          "id": "adfcc531-b0ef-4fab-805b-a4e188b14286",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7c714fc7-f342-4775-8083-214db61adc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfed3d8-0b76-452c-bd4f-3c59c49590ca",
        "cursor": {
          "ref": "339fa3ba-d45f-4464-9a0d-9532686b9017",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "627ef52b-9396-4176-b5ab-29c5c9569c7d"
        },
        "item": {
          "id": "0bfed3d8-0b76-452c-bd4f-3c59c49590ca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "06426e50-4202-4150-94c6-6a87b9615d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db86c2a0-0ed9-400d-bf51-06b825ea1a6b",
        "cursor": {
          "ref": "69570901-d9ef-44cf-a8d1-6a64a620fa34",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "51887553-7042-497e-9cf0-250827d2ad09"
        },
        "item": {
          "id": "db86c2a0-0ed9-400d-bf51-06b825ea1a6b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "135f1d20-3a5a-4bc9-b9ee-413b633b2e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc1edcb-820c-407b-bf64-be997253c1fd",
        "cursor": {
          "ref": "695ef853-c1b7-4bfa-a29d-ca444edf957b",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5de10b30-4c7f-487b-a6e8-b34bbd09e2d7"
        },
        "item": {
          "id": "bbc1edcb-820c-407b-bf64-be997253c1fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5bb0cebd-5ea6-4a10-a52b-8368404299d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28efe08-e244-4e93-a470-cf654f794eb9",
        "cursor": {
          "ref": "baeb7275-5d46-46f1-a7a5-72241b2d5d5d",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b5aac251-6ccb-49ec-9f03-5a518a24f561"
        },
        "item": {
          "id": "b28efe08-e244-4e93-a470-cf654f794eb9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9455fa9f-15b5-4825-90b3-e7d7cc915cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70ad92-357a-404e-98ba-52010fd84193",
        "cursor": {
          "ref": "78da4a4c-fe52-4f44-a0d7-c707c774e466",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99a1bec5-34a8-457b-8d39-182b096dd1f1"
        },
        "item": {
          "id": "9f70ad92-357a-404e-98ba-52010fd84193",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "131b685d-0b09-4365-99ae-5c941f82430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39206ecb-278f-43e7-a494-b1e912e6101a",
        "cursor": {
          "ref": "dd9e1487-97b8-4a1a-b24b-d5732b6558e7",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9c95ce83-a5fb-448b-a043-933d24ffa3a3"
        },
        "item": {
          "id": "39206ecb-278f-43e7-a494-b1e912e6101a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9b087357-b0fa-4fdd-a735-20a458b68ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fca5e7-063e-4991-bb5a-456f5c805cfb",
        "cursor": {
          "ref": "f1e8755c-06b9-4ebb-8fe6-aa4efcd5071d",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8c41317e-d4ca-4296-8e82-7a2ad224bd7b"
        },
        "item": {
          "id": "f4fca5e7-063e-4991-bb5a-456f5c805cfb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ee0edc0e-a751-417e-bb5e-97b5b6d5b723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e10e98b-0014-46b7-ad0b-7d2ba5854cdf",
        "cursor": {
          "ref": "9855e683-cc4b-4d1d-9cf8-55a880487784",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dad1fcec-3e24-45c7-9592-83c3217e12be"
        },
        "item": {
          "id": "1e10e98b-0014-46b7-ad0b-7d2ba5854cdf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1ab9af4c-7ae7-4b77-8505-a5c7c7d7bb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e89c03-51e1-4555-970d-67a21e53e81e",
        "cursor": {
          "ref": "eb9900c5-a43f-477a-8671-418d99cd45fb",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "07e60839-2109-47f6-8e67-e8ef6d3d1a3e"
        },
        "item": {
          "id": "f3e89c03-51e1-4555-970d-67a21e53e81e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0323372d-c468-413e-9240-2015bb4b31dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87f3ac9-840c-427f-ab96-15f1b8871204",
        "cursor": {
          "ref": "a80740b0-4158-478f-a26e-b0eebc982b52",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1b92b69d-bf77-44f8-ad2e-e50882903b3c"
        },
        "item": {
          "id": "a87f3ac9-840c-427f-ab96-15f1b8871204",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "75ff14b8-d52d-4230-8adf-765148743ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc04d1b-bb2d-41b5-b33f-3e81fe532422",
        "cursor": {
          "ref": "3c43338f-b2b9-464b-a0e5-1b24d3847b53",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0ca0b8d2-5873-47ab-9561-311ef4f4eed0"
        },
        "item": {
          "id": "2cc04d1b-bb2d-41b5-b33f-3e81fe532422",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ce87546f-c6b8-464b-99db-7776a1781be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113842f-59c2-4cb2-9b07-a113f3bf6a0e",
        "cursor": {
          "ref": "e10716be-37ab-472c-9e79-4d6eb4aa1229",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8228df5a-b43b-4ad1-9db7-bbd685356e16"
        },
        "item": {
          "id": "8113842f-59c2-4cb2-9b07-a113f3bf6a0e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8da0a6e3-e934-4c37-9b3e-3d53bbd3df7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff542492-b114-44c3-8de0-1010d5eab5f3",
        "cursor": {
          "ref": "21b4aa25-5dbf-42e8-99c4-7aa4df6cc45d",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "08c56f85-08a0-4b5c-b22e-51a7e97230ec"
        },
        "item": {
          "id": "ff542492-b114-44c3-8de0-1010d5eab5f3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3a938e8e-524c-490a-8f7b-f1943dd3a5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4d5f88-b6ee-452a-a139-4da6d30d7368",
        "cursor": {
          "ref": "5d542b09-dee1-4d5b-b5b5-ad02a04f169c",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0522657f-0c64-4246-bc2b-42d563603878"
        },
        "item": {
          "id": "0a4d5f88-b6ee-452a-a139-4da6d30d7368",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0fc9fafd-50a4-4539-b5fa-ddd6963c7452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b8d846-733e-4c33-8602-41f33506d22d",
        "cursor": {
          "ref": "e911ac38-acfd-4c67-98c5-0406bcca6b2a",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "36b12094-45e0-4156-9515-4e96a66d79c8"
        },
        "item": {
          "id": "63b8d846-733e-4c33-8602-41f33506d22d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "385a4ae6-9038-4137-8cc6-f901484f7979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c31a35-5dd8-417d-bafa-8fe36255f22c",
        "cursor": {
          "ref": "b9683dfd-3c43-4677-89a6-678a92837dd9",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6660edc7-5e54-47b9-9e8f-0da5e4ae133a"
        },
        "item": {
          "id": "78c31a35-5dd8-417d-bafa-8fe36255f22c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "068c5241-ef0b-44b8-9cf3-04c1a4783e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be71686-b0b6-413a-b4d6-a3bf1c6b031a",
        "cursor": {
          "ref": "b150da93-276d-4ca4-a9ec-419696b8b842",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1b3071f1-981c-4f5c-88b0-d537acf98eb5"
        },
        "item": {
          "id": "8be71686-b0b6-413a-b4d6-a3bf1c6b031a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "48d98964-a0c6-462e-8909-75e5ac8b26ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c914a-21f1-48ab-a158-35bd4fb172af",
        "cursor": {
          "ref": "cad31a4f-7617-4c3d-bbc9-55cccd1f6423",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4a0d229a-edbd-4dee-bc56-41b648f998e2"
        },
        "item": {
          "id": "2d9c914a-21f1-48ab-a158-35bd4fb172af",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1d9e8374-a1ea-40a0-b16e-66ce065fb092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a541756-7220-4e47-9ffb-1f4e7a950264",
        "cursor": {
          "ref": "346787f6-10e7-481e-93cb-c600a320965e",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ad9e1f75-b6ef-43db-9a1e-575a61f7b632"
        },
        "item": {
          "id": "7a541756-7220-4e47-9ffb-1f4e7a950264",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "05a8f9b7-6716-4de2-b14c-e7e4f6b10990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a530e2a7-0444-42f3-a558-27f95b647c7b",
        "cursor": {
          "ref": "710c2fe3-bc10-4714-bb81-78ac20e21588",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "97087c70-51db-4aca-8e39-37b2e2893850"
        },
        "item": {
          "id": "a530e2a7-0444-42f3-a558-27f95b647c7b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a5c30e1d-ea05-4ce9-8794-64670fdff24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45341b62-ee00-4ebd-a804-97cb449a50c0",
        "cursor": {
          "ref": "a3f786fa-1b18-45f3-a2f9-7b1b29b02a5e",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ebe2a363-5c2f-4a4f-8f33-0bafc732552c"
        },
        "item": {
          "id": "45341b62-ee00-4ebd-a804-97cb449a50c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "01dfac51-ddbd-4192-bd2f-308e9ae6b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b231237d-7d33-4042-99f5-00d5b692ce74",
        "cursor": {
          "ref": "4b904c80-9d3f-493e-8eb0-7d06fffdf7d2",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "72782041-0d5f-49c9-b744-17009255977c"
        },
        "item": {
          "id": "b231237d-7d33-4042-99f5-00d5b692ce74",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "63eee919-2554-4c3f-a7f9-9fa7b256606c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54769b5c-3ed6-43a4-83ef-b4d8236fbb0a",
        "cursor": {
          "ref": "611a07ab-1c3b-4303-b89f-33b9d853303e",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8c2d9053-8fab-4499-b35b-d9575bbad631"
        },
        "item": {
          "id": "54769b5c-3ed6-43a4-83ef-b4d8236fbb0a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "410f32d6-8f47-4cd4-8d87-aacc66ed3063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5737f06c-5173-41e2-8968-3ed183dcc066",
        "cursor": {
          "ref": "832a297f-7105-417a-8ac4-fa584130962b",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c2a7a136-d4da-4e9c-88f2-3dd57d5c917f"
        },
        "item": {
          "id": "5737f06c-5173-41e2-8968-3ed183dcc066",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3e676c3f-73ed-4a41-8d47-2baf0c2ce19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338741b6-1dd7-4b9e-a0c7-0ff5c24ad315",
        "cursor": {
          "ref": "3a3667b7-d327-4240-8fdc-fcb037b07b79",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3f8e8d66-220a-46a6-bb2b-38c1b637bfbf"
        },
        "item": {
          "id": "338741b6-1dd7-4b9e-a0c7-0ff5c24ad315",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ca0979e9-ee5f-4886-b9fe-fb5425a25ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587be10-e1f9-4ffd-9226-1d0400ee1d64",
        "cursor": {
          "ref": "82750082-fb86-4bf3-863a-b0d17ceeebda",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8450c7d3-ccba-4a17-9a2f-0188d934a701"
        },
        "item": {
          "id": "4587be10-e1f9-4ffd-9226-1d0400ee1d64",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4a8b8dbc-4919-4d56-ac8d-b81c487f540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81af559-6c78-4ba2-8644-089f2154deb1",
        "cursor": {
          "ref": "ad022ac3-cde5-4ea3-93b7-e3c4e6998849",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b0edca6f-88cb-428b-8e2d-530e54862d21"
        },
        "item": {
          "id": "b81af559-6c78-4ba2-8644-089f2154deb1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74ba50d2-7dec-438e-bb68-632185f225f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9142552-6d81-4a38-9b0f-b805bf8bb47f",
        "cursor": {
          "ref": "259bf3b9-e7f9-401b-a803-d7fd71fcec0e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1708f9fb-ef46-4091-9efe-8ca4312b0625"
        },
        "item": {
          "id": "b9142552-6d81-4a38-9b0f-b805bf8bb47f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "caa696ca-923f-4d8a-9217-7109d75752f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ba50c9-fe0c-4b3d-a528-45c498d27a7b",
        "cursor": {
          "ref": "763815cd-f4cc-48d8-9ae3-ff78cf1fdaa1",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fe26f59b-69c0-47d1-bd95-a5eb6e649fb8"
        },
        "item": {
          "id": "08ba50c9-fe0c-4b3d-a528-45c498d27a7b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a5f6f48e-9556-43f6-a415-17f2369bfec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a57a40-2923-4d10-bc9f-08ee5d1b6d94",
        "cursor": {
          "ref": "24e4dbb6-4ae3-4564-9bdb-2817b7e70097",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18d873b8-9078-42fc-bca0-86f04b11dd6a"
        },
        "item": {
          "id": "b8a57a40-2923-4d10-bc9f-08ee5d1b6d94",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b221f370-7c23-4512-91a1-8b67db8d1b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46ce91b-1341-4602-942b-c02916ab598f",
        "cursor": {
          "ref": "7b4b646a-d8b8-4161-a3ec-caeb9d1d38d9",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f6c3aafa-449c-4f9d-bea5-ebd7ed3804fa"
        },
        "item": {
          "id": "c46ce91b-1341-4602-942b-c02916ab598f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b34da0a4-4e2c-4120-b0f3-d1c56dbcf11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8329044-99e4-429f-9859-fd94ae87277d",
        "cursor": {
          "ref": "a0475678-fd12-4c2e-8989-b6d0b456183f",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "25d87b9a-c533-4691-a687-a8201304c203"
        },
        "item": {
          "id": "d8329044-99e4-429f-9859-fd94ae87277d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aee4987c-43ab-4a9a-86f1-ba5ef85efabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96939a05-d799-43b3-bddb-fb7e82a9acdd",
        "cursor": {
          "ref": "cfcdd68f-eb08-4c7c-b57e-f0081a3adc9d",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d34d65ea-25d5-48b3-9146-eae2c742c818"
        },
        "item": {
          "id": "96939a05-d799-43b3-bddb-fb7e82a9acdd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5c3db365-b312-4807-826d-a6513c0261f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345622a1-d86a-4b0c-8e35-dee41ab401ae",
        "cursor": {
          "ref": "6e5453e6-091a-45f3-84da-7f36050e4b8c",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4c43b37f-5865-425f-85d6-46d49e28bb0a"
        },
        "item": {
          "id": "345622a1-d86a-4b0c-8e35-dee41ab401ae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ac4231ff-8599-4129-95e6-3015d2994794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9058f46-7ee6-4971-93df-bfd6ed692d68",
        "cursor": {
          "ref": "3dd1372d-9d4b-4c5f-ab4e-d17456f9ec4f",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "caf0ea79-b811-4138-b16c-dc1e4d181dea"
        },
        "item": {
          "id": "f9058f46-7ee6-4971-93df-bfd6ed692d68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eaa97ca3-429a-46a7-9ecf-bb69b0412290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967de62d-9487-4cf1-8337-f594f740aad7",
        "cursor": {
          "ref": "f49cd484-05b6-4732-971b-6758ace8854e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "321c861b-cbb3-44bc-afe4-c298c64e2a13"
        },
        "item": {
          "id": "967de62d-9487-4cf1-8337-f594f740aad7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d76cc55b-790f-4a82-a9f1-f695fc7dd4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad68f8f-346b-4159-848c-0691d1f2fdda",
        "cursor": {
          "ref": "7ba53483-4456-4e66-b9ab-6109b937d501",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0c1e26d6-e067-4851-b144-f9f70515de63"
        },
        "item": {
          "id": "aad68f8f-346b-4159-848c-0691d1f2fdda",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f20dd331-ecfb-419d-997a-36cd22d1101e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499cd903-6da0-4736-be45-8218c7026b3f",
        "cursor": {
          "ref": "79832302-d408-4bc8-bdcc-238cac185906",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6ac646a0-12c6-445a-9fdc-c4a439ae7b50"
        },
        "item": {
          "id": "499cd903-6da0-4736-be45-8218c7026b3f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "28097cbc-2451-44b7-b3c9-a93589364850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2bc8e4-c7b2-4ec6-ac43-e2ec23d83594",
        "cursor": {
          "ref": "b7a64ee2-761f-432f-97e5-8ebab1b287d5",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2e44338e-4cec-4ea8-a654-ae89a7813a43"
        },
        "item": {
          "id": "5d2bc8e4-c7b2-4ec6-ac43-e2ec23d83594",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "22ba1233-ed41-40c7-8362-70fdd0d6ffcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a318c-89e8-4587-a30c-ec0d48809af7",
        "cursor": {
          "ref": "7f8e749d-62bd-4a57-9f8a-9427cd2719c3",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6a7e241e-b5e1-45ca-bd2f-eda6838f59b4"
        },
        "item": {
          "id": "032a318c-89e8-4587-a30c-ec0d48809af7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0d4751db-f481-4bca-8da0-37c892155310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0dcad5-2d3d-43ec-9319-cebf5573b5f2",
        "cursor": {
          "ref": "7f4ab22d-952c-42c9-996a-1fc8968aae20",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "af97424e-bbe7-4c0f-8179-5025a04f21e9"
        },
        "item": {
          "id": "ce0dcad5-2d3d-43ec-9319-cebf5573b5f2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2bde895b-3069-44f9-9d49-f86bd74c0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825c8772-37cd-4a18-949c-cc83eeb7955c",
        "cursor": {
          "ref": "d1671e7f-f7de-4cc3-b1fc-3af8a1b5e146",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d8784c9c-0488-495b-b244-8dfc55dff882"
        },
        "item": {
          "id": "825c8772-37cd-4a18-949c-cc83eeb7955c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1a578c95-82fa-49f6-b734-ac16990c3b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2541c8e2-bfbf-4511-85c7-65d650ce52dc",
        "cursor": {
          "ref": "9b0e2c13-7df3-47c0-ac49-c586322def4c",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "237dc749-c61f-4c3c-be40-b5aa5d41036f"
        },
        "item": {
          "id": "2541c8e2-bfbf-4511-85c7-65d650ce52dc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4b47caac-d47c-47a6-8047-6f5e82971ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cde9f6-1b9a-4e3c-ad09-cb709526b931",
        "cursor": {
          "ref": "9ba1b493-e6e9-45f3-ac93-9bf415c5fd3d",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f8d2b158-c84b-4374-83c6-5a2983f101be"
        },
        "item": {
          "id": "55cde9f6-1b9a-4e3c-ad09-cb709526b931",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cff2c951-dca5-43b7-8c68-256d9963ddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ef5676-2122-4386-bf34-c38d79bf3f00",
        "cursor": {
          "ref": "5e3d7dc4-b2dc-4eb0-a305-e7eb0641a555",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "10ebbfe7-9376-4f39-ab13-8f013199225b"
        },
        "item": {
          "id": "b8ef5676-2122-4386-bf34-c38d79bf3f00",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "06783866-00ca-46a9-b04a-97436967e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe1a94e-563e-47a9-b9b5-f57911af3282",
        "cursor": {
          "ref": "80d6827e-fc27-42f9-82a1-8e1685bdc14f",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3a43030a-49cb-4fa6-b2b4-0148d8f39626"
        },
        "item": {
          "id": "ebe1a94e-563e-47a9-b9b5-f57911af3282",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ec875597-3312-4fa9-a654-5b9a96008363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e40262-058e-4874-afbb-4b9c8949d50e",
        "cursor": {
          "ref": "f94adb6d-251a-40e7-a438-89efd2755d33",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f7f1eb2e-6716-4d32-866f-fc488631f0f9"
        },
        "item": {
          "id": "f8e40262-058e-4874-afbb-4b9c8949d50e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ce2d62a8-cc91-401b-a10d-b4d5c55eba9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3897a928-3d60-4805-ad8f-e905d1d6c26b",
        "cursor": {
          "ref": "9718bd5e-7a54-485f-8770-0adad8e51612",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "da5df0fb-7d7f-45f6-b348-66a5f4b53cce"
        },
        "item": {
          "id": "3897a928-3d60-4805-ad8f-e905d1d6c26b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "610cdc61-99ea-4191-82a5-744db7b1c68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eddbd7-c99a-4f03-b27f-5ff8c0f07023",
        "cursor": {
          "ref": "993d4b74-5cad-4efe-b9f2-a2d589a94f45",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2f934674-85bf-4492-b948-e8faa800b208"
        },
        "item": {
          "id": "c6eddbd7-c99a-4f03-b27f-5ff8c0f07023",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2514e8d4-953e-462d-b701-4323ccb003ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5f3af8-eed3-4153-b3ce-0e0f4cc1c9be",
        "cursor": {
          "ref": "91f26ae4-615a-4253-93f4-52299986cd64",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0bf15530-1253-4999-959d-b8f60c5d1779"
        },
        "item": {
          "id": "ef5f3af8-eed3-4153-b3ce-0e0f4cc1c9be",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d3d9c3cd-4c91-4848-a5d6-aea85253ef98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93dfc7f-3fbe-4ea0-aad0-e2e2a66e31ba",
        "cursor": {
          "ref": "be903c23-5292-4fb1-a834-6ac047b4397a",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "693d9a1e-3c8c-427c-bbb6-9ee43a789041"
        },
        "item": {
          "id": "b93dfc7f-3fbe-4ea0-aad0-e2e2a66e31ba",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4d530df-54e9-4444-a209-041544fd8ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1913fb-d679-4483-93a0-2242f5044778",
        "cursor": {
          "ref": "d2cd64fb-5a54-4734-b6ba-ec117a8d1179",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "85eaa770-b258-4fed-90f9-426143ded702"
        },
        "item": {
          "id": "ec1913fb-d679-4483-93a0-2242f5044778",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9fe2a9cc-3824-4cb2-bc25-9cfd3d88fbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d797047c-7d07-4e9c-856b-7d8ecc5fb4e5",
        "cursor": {
          "ref": "4b198691-8ae9-4b5b-a240-32f39f154e26",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "24b6055d-a113-45b6-b973-4051fb56ce1b"
        },
        "item": {
          "id": "d797047c-7d07-4e9c-856b-7d8ecc5fb4e5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4565f85b-918b-46a6-a834-35f20207f8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a743559-642a-4cdb-91d1-ac4a81846f16",
        "cursor": {
          "ref": "00003ada-2751-46ad-a7f8-b0b33a140e77",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2b7c4bf2-4487-4d5a-b130-6c36eb15a504"
        },
        "item": {
          "id": "7a743559-642a-4cdb-91d1-ac4a81846f16",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a6208b7a-2e58-4b81-94f5-f043a1614f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4490bd5-1550-4367-874e-f163c19785e8",
        "cursor": {
          "ref": "ea40cf15-ff3b-4100-adad-547fbd34901f",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9c430b15-e3f1-4536-9706-796cdbdf69db"
        },
        "item": {
          "id": "c4490bd5-1550-4367-874e-f163c19785e8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f2b9218-1c11-4c33-99e4-4aabd27b9a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8026403-b84d-4ba5-8b0b-c44876fcbc41",
        "cursor": {
          "ref": "7dc84995-cf49-4498-9bc2-84a301f702e2",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3719cb13-c227-40b8-8756-be672008ca64"
        },
        "item": {
          "id": "c8026403-b84d-4ba5-8b0b-c44876fcbc41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5311b64a-bd62-4490-baee-af1cd5962349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494fdba7-4b47-423e-9f06-b3df5168491b",
        "cursor": {
          "ref": "3a6726c3-cf29-4460-ae9a-5255cf5b2c83",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6566c68e-104a-4058-bcfe-25ca19442ba1"
        },
        "item": {
          "id": "494fdba7-4b47-423e-9f06-b3df5168491b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d39e5951-963b-4ff2-a5a7-97cafa036594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cf57b5-d055-4f0c-8a08-a5482e558e18",
        "cursor": {
          "ref": "d8ba1e0f-472d-4328-b8bf-689eb701143a",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4cb28668-378f-4304-ab2d-74d3ee1b5c80"
        },
        "item": {
          "id": "b3cf57b5-d055-4f0c-8a08-a5482e558e18",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3a1c32e0-8ca7-42f9-8c61-c43fb808a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c574f875-c710-4194-b8f2-1b28a6936761",
        "cursor": {
          "ref": "59dcce0e-c320-4149-886b-d9583b32593c",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f804b0af-574b-4f3c-9567-e93c022b5777"
        },
        "item": {
          "id": "c574f875-c710-4194-b8f2-1b28a6936761",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4ce4cb21-66ee-489e-95ce-1724109a32ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f827ac-cf2b-445c-bc0a-cc996f4c2abf",
        "cursor": {
          "ref": "2ec3d277-2976-4d24-8fd5-6e9a98fb4fa4",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e1adaae4-ed53-48d9-abd4-eda73c7dd748"
        },
        "item": {
          "id": "b6f827ac-cf2b-445c-bc0a-cc996f4c2abf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ae82367-8eb0-4b10-93d2-586fee821269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141f691d-4446-420a-9217-5a68e8399527",
        "cursor": {
          "ref": "2103bb11-e40b-4318-a5c9-2ec729d1c777",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6e83c05b-680d-4b16-b9d2-b376b2d81d60"
        },
        "item": {
          "id": "141f691d-4446-420a-9217-5a68e8399527",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "148bcfda-2c55-43d6-aa1f-9a05234cace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d593ae8-ca07-4b6d-ab28-c19fc3ec0980",
        "cursor": {
          "ref": "bea70c03-95ce-4ec1-9dc6-88075bf7b723",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "87d7125d-034f-49c9-8525-4408c5e98938"
        },
        "item": {
          "id": "2d593ae8-ca07-4b6d-ab28-c19fc3ec0980",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8221c0c1-42dc-4214-b5b5-1deaa8b8824e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19572c02-e6dd-4f6b-ac91-cb90a104080f",
        "cursor": {
          "ref": "6eaa4b9b-0ae1-45a6-a6c4-96abbad313cf",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "276af515-1253-4ae3-860b-c774a29fc9a0"
        },
        "item": {
          "id": "19572c02-e6dd-4f6b-ac91-cb90a104080f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3495079e-ec62-4846-82ff-83dd73268676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652f1f75-b3a7-4172-9613-a664e4046a60",
        "cursor": {
          "ref": "cff4da8d-4f8b-401a-ab07-1b6e6d043704",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0d57cdb3-b845-4c20-b52b-a24df4cc23b1"
        },
        "item": {
          "id": "652f1f75-b3a7-4172-9613-a664e4046a60",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8064b26a-5da8-4551-9f1a-058a8b16ca08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667ea91-4241-462d-af2b-65322b3aea8c",
        "cursor": {
          "ref": "26dac912-6903-4bf5-a93b-4b6621f8392d",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3b5d926a-e603-496d-a21f-e76edbf91686"
        },
        "item": {
          "id": "3667ea91-4241-462d-af2b-65322b3aea8c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf88dcd8-554d-4325-8c14-445d31914408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bed3dde-0340-49f8-82f4-23fba0613c1f",
        "cursor": {
          "ref": "f1b1343e-8ec2-45e1-a551-d8fa13ddc465",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a27c18df-8f94-4e85-a65c-d2c389c60182"
        },
        "item": {
          "id": "3bed3dde-0340-49f8-82f4-23fba0613c1f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "609b527c-7d6e-4384-8e69-1917d5d0cb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a02f9-19b9-49aa-8e5c-4852661459d1",
        "cursor": {
          "ref": "be750319-7caf-430f-88b1-a2e61a95eb20",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c8df384d-e317-491e-b688-629cee16fb9f"
        },
        "item": {
          "id": "2c1a02f9-19b9-49aa-8e5c-4852661459d1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "43487957-29c5-43ca-831d-b502067b2bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7bcf44-b474-476b-8e98-f705fae92604",
        "cursor": {
          "ref": "f7f4b2fe-b861-4c81-a073-c063cbe6f9d7",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "84a958cd-8880-4a28-b871-3e04d5c2c3df"
        },
        "item": {
          "id": "3f7bcf44-b474-476b-8e98-f705fae92604",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c6ab8b16-8918-4bc2-8ecc-2c6c2ebcb3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410e6595-95fc-4f67-b85d-321f4b68e29b",
        "cursor": {
          "ref": "ef7a90bc-a535-4714-8114-e0ba323f2deb",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8e276725-5758-4b7f-9c7b-f8b3b5fb0f60"
        },
        "item": {
          "id": "410e6595-95fc-4f67-b85d-321f4b68e29b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d4985a52-2fdc-4421-b42a-a120bfa2bb0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ce9e7a-d2d2-4aff-af99-a70e4d97aae4",
        "cursor": {
          "ref": "f49e6b95-111c-4e35-b8ae-124ca9d569fc",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "983166ec-73d1-4c33-ba3e-311638598748"
        },
        "item": {
          "id": "a4ce9e7a-d2d2-4aff-af99-a70e4d97aae4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "27761e00-89e7-4e5e-86fa-84889e58bd1c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 338,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c599cd3f-a68d-4e50-bfba-d48e68d65eb5",
        "cursor": {
          "ref": "5edd88d7-2431-4fd9-a104-c65c5cc1406a",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3bbf796e-2404-41e9-a7b8-012c916478a7"
        },
        "item": {
          "id": "c599cd3f-a68d-4e50-bfba-d48e68d65eb5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c7990402-f064-4f70-b0de-b398afc63885",
          "status": "OK",
          "code": 200,
          "responseTime": 403,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e589c46-daa1-4155-ad05-46f35d3622ca",
        "cursor": {
          "ref": "95b84e94-780d-4367-9837-336fcdb97add",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5595d461-9afe-4fab-b6ea-3d271669ac00"
        },
        "item": {
          "id": "4e589c46-daa1-4155-ad05-46f35d3622ca",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6c438420-0216-45a6-9354-d3d8c0facc16",
          "status": "OK",
          "code": 200,
          "responseTime": 3414,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc9b918-2751-4b6d-8835-9d46cbc49973",
        "cursor": {
          "ref": "e2b2162d-3b14-4701-9863-553321000cee",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8ad7e527-8867-43b2-af15-9dd56e24ea53"
        },
        "item": {
          "id": "bcc9b918-2751-4b6d-8835-9d46cbc49973",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ca7e35a8-3cb0-4aa5-b624-185709456630",
          "status": "OK",
          "code": 200,
          "responseTime": 3393,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
        "cursor": {
          "ref": "08e8c472-3a4b-40d6-bd13-ca0a0adee5bb",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "943f9cf4-e0e4-41e8-9ec8-0665bb243e4b"
        },
        "item": {
          "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb47dd6e-8097-4da1-a426-b6f0e871ad50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
        "cursor": {
          "ref": "08e8c472-3a4b-40d6-bd13-ca0a0adee5bb",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "943f9cf4-e0e4-41e8-9ec8-0665bb243e4b"
        },
        "item": {
          "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb47dd6e-8097-4da1-a426-b6f0e871ad50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
        "cursor": {
          "ref": "08e8c472-3a4b-40d6-bd13-ca0a0adee5bb",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "943f9cf4-e0e4-41e8-9ec8-0665bb243e4b"
        },
        "item": {
          "id": "136d113c-9f00-47bb-849a-31b9a4d187e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb47dd6e-8097-4da1-a426-b6f0e871ad50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e295514-1487-4cf6-b7e0-e4efb5354037",
        "cursor": {
          "ref": "07890d99-dcbc-43c2-a7f0-2d0fd134fb85",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "711c51af-bf0c-4897-9ab9-3b841b1d5cfb"
        },
        "item": {
          "id": "3e295514-1487-4cf6-b7e0-e4efb5354037",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ff4fc6cd-9c3d-4412-8f53-080035c3fdb8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 320,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bca71c-f36a-44d4-b977-cff9b734df5d",
        "cursor": {
          "ref": "d87698cf-66d8-4d2f-8e29-0e3bb6e19f4f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6bacbd40-c292-4693-ae82-0e9b5ad59972"
        },
        "item": {
          "id": "95bca71c-f36a-44d4-b977-cff9b734df5d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83076d7e-073c-4158-85a4-8dc6836a2c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bca71c-f36a-44d4-b977-cff9b734df5d",
        "cursor": {
          "ref": "d87698cf-66d8-4d2f-8e29-0e3bb6e19f4f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6bacbd40-c292-4693-ae82-0e9b5ad59972"
        },
        "item": {
          "id": "95bca71c-f36a-44d4-b977-cff9b734df5d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83076d7e-073c-4158-85a4-8dc6836a2c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6171a77b-fede-404d-ad5b-b16e4da23d1f",
        "cursor": {
          "ref": "d96e67a0-7d40-4140-b99c-0ef6cbb0229f",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a2fc6e54-dfdb-473f-8a93-7998331945c0"
        },
        "item": {
          "id": "6171a77b-fede-404d-ad5b-b16e4da23d1f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1a7017b7-9d66-4f58-94e6-3ca07505e483",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f911e-b611-40d0-a138-c1dff16ef817",
        "cursor": {
          "ref": "a8dcd510-03bd-40cf-b050-8bc13083ff7c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "61c6d73e-84ce-49d8-aeb4-f4d6ea871a7c"
        },
        "item": {
          "id": "008f911e-b611-40d0-a138-c1dff16ef817",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4011a949-e263-405b-af73-bd96913e6ece",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f911e-b611-40d0-a138-c1dff16ef817",
        "cursor": {
          "ref": "a8dcd510-03bd-40cf-b050-8bc13083ff7c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "61c6d73e-84ce-49d8-aeb4-f4d6ea871a7c"
        },
        "item": {
          "id": "008f911e-b611-40d0-a138-c1dff16ef817",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4011a949-e263-405b-af73-bd96913e6ece",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c8b830-2464-4365-84f4-93f6f5747bd7",
        "cursor": {
          "ref": "60a8f6a0-a9d7-47de-bb2b-0ce42f46d762",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "94c344a8-1cb1-4997-ad32-7e33e1b3cf58"
        },
        "item": {
          "id": "f2c8b830-2464-4365-84f4-93f6f5747bd7",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "63da93f0-abea-423b-bf2d-3379d05e5db6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 553,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}