{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "69dd5130-2750-4b0e-a920-3f737aed4dff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8b26b1bc-5c2a-49d5-8213-292d0cd9b05e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "210faa82-7337-47be-99e4-3eadfd9c549e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bbf07022-81fc-42f7-b70d-9bfa49bffe8d"
                }
              }
            ]
          },
          {
            "id": "dc188ffd-7081-45ac-950e-749e3dc208f5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d96b1a5-99f9-4452-a9f9-ae433b301222",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47d52b8c-a774-468f-b8bc-d794b30f79a8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1f1515c-d344-4af8-ac86-1537a3195d6c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a61b003a-de06-4e6a-9ed9-0345fbaeef08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "151e2fab-a2f5-4fbe-8223-eea7b88642c9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "683e6767-cd3f-44dd-817e-2863b4149106",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb2d2a81-5840-48be-a5f3-50734c7bbac2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50ac846b-2def-430f-8729-ffbf1562abc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e963275-ce01-4387-928a-a18df77e6063"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd2831cb-756f-479d-91c0-38077f1ff47f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed6ca885-769a-4e5d-a113-10055120c65f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "339f838f-fd0a-4175-a984-747088ef824b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "61ea4aba-6fe0-483c-9632-943cc9cc8418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40a9a971-e50f-4ff0-831b-f3d383db3ddd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "052127fe-b4e5-4a38-b28b-776f49be396e"
            }
          }
        ]
      },
      {
        "id": "60615086-cde7-4419-a338-c87b596ba750",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "996ece86-2f19-4a9b-be93-6ad9d7f97e35",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25bd1836-cca8-4d95-961e-664ca2c970b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9cf2b54e-de95-495b-b1d2-7a0c5c53c16c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564c8ec0-ed33-4b93-a2ee-caac1e213e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e2d2e46-79a3-4756-9f50-92bf74bc2a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51e27ea-7e77-44f7-af8a-a62b54c55da2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cea7d4-f655-4db5-b628-68532a456eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "131df3fb-edd3-4f51-abeb-d5a994dada99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa03e948-d559-4218-b84a-87a284be7a01",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f71fd9b-da51-4389-bc9e-ba100665da32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e23c96e-c678-413d-8531-862676577236"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d82ef01-51f5-4a96-8a5c-0a7581ed5856",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3d69dea-588f-4a25-89b3-2bf2c104a3bb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f91c2e-f85f-4dfc-af5c-366915d1d30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d32419ba-57d1-4ab6-92e0-5131b2335483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2522f7c6-c282-44fb-a19a-fe4972cddbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521a9856-8740-4306-a5fa-e64f5bc91bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44d7a56-cf83-4690-8c93-8ff20468b7f0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0c5420-9cbb-4759-a38a-f6f48c85a03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "918b48ba-1d5e-480d-8bb7-298a67f077fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dd303e-b55e-4715-aea8-ee54a7410540",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "cf251ae3-6c59-4fcd-bbd9-42cbe553cca7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0bfc2432-39cb-40f3-930d-99468b002562",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ce2a327-55e5-44ad-996d-7f32453fb58c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1c6d657-99d7-4a8f-9054-ec5c56c587f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b278a6cc-7a3e-4ed8-8558-ce2d2f9308c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b304796-fc3f-41f3-bf22-04dee89115c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f70469be-da2f-4345-a8e8-f4c3eee73f0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a688c4e9-fd81-4191-ac85-5adb5185a993",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4a273e4-5fd5-41ac-906a-e494534e3342"
            }
          }
        ]
      },
      {
        "id": "694d3652-9e24-43fc-971b-c64e8522bb31",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "73ba6fe7-b604-4174-8cb9-beda6439bf4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2ec5f49-bd8d-4895-aef4-f17a83919ea3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9130c59-2def-49a5-92f6-e57068d39f54",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba77ed4-33e5-44b7-a31a-cfbb465bfecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41add013-64c3-4a7b-a932-55654ddf27e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe93f0fc-fa54-4de7-972c-b1c34dfc7048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf353c34-cfcc-49d3-8ca2-44e0e624e222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af19cbde-2f4a-4543-a908-e47fba03210c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44cd3c5-42a5-45b8-a406-474696990be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9462ea5-ca44-4503-a24f-c4714c1aff03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2d3bb5-bc1a-4e65-b8c2-37496cffc572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386f75b6-7b8f-40f6-ab04-d10e4da8e1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d530ebd-b735-4934-a488-c0c7ce519873",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e347440b-9a6f-4c43-afcc-0a68eb3b2f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb4e966-e437-4e50-bc50-e6ef5390b4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a983423-657a-409e-a043-cf31330c389f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bd5546d-6690-4c26-8834-0fc642a9993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f352d42-ab00-4c3c-a85d-c4bee1370da3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cfe9d1-03f7-4380-bcfd-2b0b74d60f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582a81c6-89df-443a-9d2b-957508b8013b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080adb8f-1e1f-475e-a169-2a02d3c1c2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47038921-40b7-4c28-8b97-eb3ef0c8b69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbe945e-3d11-477a-9ed7-3aa5a98f182a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d5b26b-a872-4d96-911b-6e771336ad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a17046-fb44-46f2-aad8-99dfe1d7c3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e917a09-ad79-480a-829d-771aa4e32d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aba4515c-82e8-4748-8928-3f0b942942f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c66b268-8081-49ff-beff-7fe9f4b2bb47",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b79204f-94a8-4539-a8f5-c5826e1ea9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71012c48-31eb-4014-a836-b603c63cdf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c1101-c20d-4578-b3bb-8e972f97e5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b74ad629-aa46-4767-99de-a0f00cbdcee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7540d1-e6fe-4437-81a6-0c0fe798736b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cdb1cb-edec-449f-b8db-44de4bbbc28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab36f02-0f20-4640-80f1-418ff536646f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10e204b-d02f-433c-b0e1-2435f87b2ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb53b6d-5d2b-4d83-ba21-26121a7fd470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a858c47-5881-4ae0-bf46-de1231288fd2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ad6385-f814-4094-b221-5e7b90f9bd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1563c8d-1b09-4966-aa40-efe7c10f3da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd41ca3-9044-44fa-bd11-783feade5a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b7047e7-ac3a-49f1-b745-7b94aa385e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdad002-d041-4484-a60b-e355dbc38123",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10112c08-c798-455c-9fbf-6e9a051a48f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97970e4d-1cb7-41dd-b1a2-e177b6082934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aac6a7b-5acf-4cf5-a8fb-e424b5373245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e908ae5d-5187-4993-8798-48cbabeee9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68d5083-1398-495f-bce6-f83a176ca8c7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17407ac4-2833-4fc6-a744-0c0b8401f33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051d6b51-44bb-4571-944f-8f410e967b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0766f0bf-86c7-478f-b1c2-2edf5b0d1f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aebb7e7-573c-4015-8249-07f9ea8bec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c1bd2-74dc-4b19-8ea3-429670497ab4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3556f0c7-309b-46f8-8fec-a92dc5d9fd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c78944-20b9-4ce6-b28e-c17399da6e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0836b014-5bed-4a94-b3de-6b33ef11e567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c739b357-ab9f-4eef-a1d4-574bbd5b690d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878c907d-62e7-42e4-b738-c1b91977b9c9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a5d8e5-bb39-4f8e-aebe-182d8fd4e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280bee72-8256-4dda-8eb6-493e2f566d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316edc1-ac7d-4069-b290-0a7f7d07e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48aff183-7ea4-4f0c-b29c-140e6380a424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef24218-ef4d-4031-83ed-4718fbcf8145",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98778f6-beff-4dc8-9a5d-afd058ba15ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3517f8e0-8d51-43b4-863a-a4be3513b87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ce601-0b3c-46db-a440-e812edb16345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5aa31be-a68f-44c7-834c-3ccbef9a6446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f703b4-d280-4472-af75-975bccb0e669",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957efeca-d096-4c8d-8d47-b7dcc85845b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b6c6cf-ce6b-474a-9630-267ff518f2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976ab0ea-0139-4185-8150-1db7d04df72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe9aad83-4247-4015-af14-6971fe7db030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcf295f-c06c-4bbd-8248-d9c6a6743c62",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338c45d2-93a5-4d32-868c-d38ada20422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb0fbf6-b1f4-4c33-979f-bba024281029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842ef518-2adc-446e-87f9-685d1877b4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b58f895-2105-4ed2-8a25-81179033865f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba01acdb-ed70-4f5b-8941-d458c453934a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba93eb89-589e-45cb-b8df-5240d1b1e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11017403-9521-4941-ac1d-7fcdababbc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f047b04-99aa-4652-b75e-e985248e28f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fe31f0f-95b9-4b66-be53-052236c3cdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0a10c5-db03-496e-adb3-564e24dd9c32",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db654317-096f-42b6-821a-906d98e2756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb65b842-741b-4fe1-8ec0-baf200de1149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0a2a01-dd4a-4427-8afd-ad44efe4f51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b1fb4e4-b04d-4371-b1ac-090312f65904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4284aa40-c013-4c19-9cc5-adf713edede3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d898b7-a522-45de-837c-3154b1724d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1024060-addb-4737-aab1-539a46af381c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e59974-cef1-49d8-8a12-f86b80a27f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a937aa-5b70-426b-bf99-51b6572fb583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf61b4ae-d56f-4fca-ad3a-5047fbf70ab9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501ac860-78c2-463f-8a63-85038c91fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2724e3e-cfd8-4b4f-8de9-d81a35cee4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa8ef2c-bd09-4c5f-b58a-eaa352f60a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bed88585-1943-4deb-b5dd-bf39b9e93419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ccae1-33b8-45d7-91d7-3565d376eb4e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38112571-3b2a-484f-8b79-671bae434872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747d659f-449d-4f0e-9b1c-1dae10eb97d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dd8148-6068-4817-ac36-adacc961ec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9fb60d-d4d9-4c69-a8ef-e2366f5f2849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e355db4-46b9-46f8-849f-7ce344a591ee",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd552a9-8a86-4b74-b2be-2dadfb8f9351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e750df-47f0-4c7f-b636-c03bbf64c543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf6182f-07c9-4f90-9e06-1ea3cf8c8094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7fc845-c4b5-4df1-b975-136581e6eb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3353365b-1b24-4f8c-8c0b-ac1b89fe1423",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3080a91-cc3e-4f26-8d21-82003c1b7716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0200b02d-1ff9-412b-8815-695e90801020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90e1a03-c075-40e6-b05c-fd0aad7d4a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf353d3b-1705-48f3-bf0b-b211cf1c26fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22366a10-c8ae-4eba-a845-92d0236a5e4d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e5f47b-910f-4a66-95b8-f6deec58433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e623879-1077-4f07-9eb4-69e5b7f92743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b72edf-643b-45c3-b22c-2521df39c2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c990fe41-97a9-4c0d-ac45-0f92865f8430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b0f308-4fc6-433c-9c62-a38ce15a49ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6f9914-5d35-4cfc-8a2e-3a8252d870aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffefc15e-7594-4efb-ac16-f22edd02f3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a32dd5-5620-402e-a081-d6bcff10ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "542aca90-6ae2-4804-8136-eea087575234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9514afea-de55-4ca5-97d8-88ca527ba76b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0db509-0bec-4aa9-96bf-28c4e4ccf7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7465e19-7f14-4890-9db8-a6ebfddb328d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b45225-ffb0-47c2-81a7-77def868bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c93d6b8-dcb7-422e-b43f-21a8b2bafa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7ff63c-bbbd-4789-a404-6d2ee529095d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f24581-a6dd-47f7-8557-a6abf680df26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4426ff-3313-40f6-ad33-6d5ac67ba57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b310f6be-8d2b-49b0-b6fb-401557912a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37a3a4e-ccc7-4792-aeca-f3f3493df4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb15b2-e5f7-4543-992b-b5f91b44ba4b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e88dfc7-19fe-4372-9136-4e439ce7ac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8210491-1519-45a0-baf9-4f47263827dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed87ddb1-eb9e-415c-810b-9d196f7c189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2986ce8e-dc49-41d3-a058-2ae63d5f5374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54519c6c-4b15-4d44-9140-6abde53f075f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824ed484-b370-40a1-9e24-69d894a75b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dd4304-5a84-4ef6-9f1c-04e25b825839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a969d3-d225-422d-b17d-8c5e40708936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33035bde-e6f6-4a49-bea7-0bc9d59aa992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811ec64c-cada-4d1f-871f-aa895f7820fe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6192d860-8d93-483c-8275-f9efb07da1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b028b2-8cfd-4f27-b93c-2f61e734d07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d01a4f-c0d4-43a6-9755-a75d9f456a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "462ef591-decd-42fe-ad1c-7164cfb670e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d69aec-568f-4d1c-9de2-6752595d86f1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0424979-797a-4741-9aed-9b08788ca23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494c2f47-4908-4762-b413-e2678761d7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d37f80e-b2e2-4e42-931d-3a79c87e734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "60738f39-c1c1-4d64-a0a3-be6fd8c5c8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea246c91-605e-4c09-9cce-76d5caf3201b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f7e8a4-27b8-4765-a495-b92d4873dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e251c8ee-15fb-4ecc-b416-a21998434786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4401ec19-e7be-4360-a2b3-db73432e1c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97876833-580f-4c52-948f-aed8a69b3e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171d2c92-de69-4a79-844a-de396adf18aa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcc700d-dcd7-4066-9e2e-d4b9ce6898d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e67299f-5231-4388-acc9-6a7245524585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0381e1df-fd2c-443c-9f90-27215e7fcd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3ed5be-7ab2-46c6-a127-74d59638ee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54b8ac-966f-4b04-a48a-732da9d5b5c1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33f9bfa-6ccf-4c5b-bc48-e475eed6aa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fa9382-dda2-4f5b-9c97-8b6f083c5ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634b8fab-8632-4a3a-8fb9-a132884e948d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a547bc2f-3d86-43c5-9117-48e0a1652ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eff8d0-e78a-41a0-b709-4535e2f44a64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bb7033-4c7b-4acd-8786-2485657d0f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8c4ea0-1679-4054-8b22-773fcc03a762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0e44d4-7a90-4b7d-ab2e-ae6fa3a2814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a22adc1-607c-4843-94d1-4bf25cb85f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb832cae-e0b6-49c1-b6cb-63627ad38f2c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f18e400-4592-4217-a24e-929a030e330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca129c-9e95-4bd5-bc8e-087add0de2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e9ecf9-8dab-4185-bd6a-9f4edc66df01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e595a8ff-6728-45ef-959d-8b722bdef8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022562f3-8f4c-4468-ab3e-2ddf7d2cad8d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa0778f-d8b1-4cec-bc8e-ea82e2a2c0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a869f4b1-892b-4900-88f7-af2773bae1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e363394-6d42-4b1f-aa3f-848f175ffe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69755691-2378-4974-b4a8-faafa259eff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b177fff6-9079-4e02-8c8c-0d8b67035a5e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59a5e6d-a933-465d-8b6f-cd1664607571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1773fc29-3de3-4e26-aa09-df6c83ed7e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c939d-9ea4-486c-b466-08fc4ed19b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a66dd3e-89d4-4a9c-b6e8-4e8738771525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea21460c-96d7-41fc-8a68-81f5d6c1a968",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b5b725-b290-4fd3-843c-61c446bffbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5655fc-74a8-41b4-8d3b-0c20a8838a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71825bd0-a268-411f-a59f-4db3831a6a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "353e4610-407e-4f33-a6ec-18d9ba8cafcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7e949e-d762-4f92-8f74-42373f1ab233",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487b34ec-e6b6-4217-a449-4c4686e34418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6fa55e-4b05-4265-8ee0-8f32f376a82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fa84a8-7475-46f7-95da-7a8fdb93461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab15a552-b29c-4e23-ad0b-dd8880bf1a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265d0bd1-1791-4d79-aaab-8a0f80dc69ae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668dc65c-1020-4058-a0a2-b698c475b65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251c39ef-26ca-4d7f-8f53-dcad3ce520ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30397142-48c2-4e39-9f67-a09d0b3c04e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cae84ad7-e03e-4fc1-b544-f0066a82cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc53fb2-1a5d-4181-b54c-bf2672610715",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1467507f-f7b1-4f82-abf9-5ee3b33839f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da0eeec-5dfa-4caa-aace-e9220c4443ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764d9333-2712-4f4b-ba5c-2d9e0394e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d065588-bcc9-4efb-b3b3-ff7cbe70d5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97617184-5d7a-4fd7-b789-59e01645b677",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f647c314-628c-49fa-89dc-e037204aaaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ea18b4-f3d3-42dc-8a6e-04dc1fc5781c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc6d7ee-5657-420a-baee-fe778419f34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1ea6b5-ea1c-4625-87f6-55996b657ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9362407e-3ff5-4d8b-9075-000169f44f37",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bf707f-bd17-447c-85fa-3e707cc22b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68681560-e699-4c2f-aa99-c87f845d067b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1030af47-855b-4ed2-9dfe-f39b810a0b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94afa701-364d-405a-9efb-fb0b0920c427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768f0775-88bf-4537-8333-a8574297dfed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89090b0e-3265-46e8-956f-278abf4e02c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1242bc-a679-4497-8bca-c80c3fde16a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d0b4d1-6b25-4f9d-b47d-bf9add9a6faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bda051-76ff-49ad-869c-bdba03e19b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f2b526-bb2d-47e6-a30c-ce9bbf17770b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bf99ed-e0e6-4ee3-93ae-c71966ce2120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb4a060-89d0-4a23-9b62-d4f6479d4d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21251af7-f6ae-4583-bd9d-8fc3c6da3cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b777d078-449e-42dc-b884-e0910672fd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee9930c-3e29-4be9-b407-a12936020776",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027cbc40-18c3-4a04-8035-66f01632f2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b75b4b-1e08-4b32-b92f-5717a81462de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71464478-cade-4356-a6e7-978d5ca89894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daefdfd2-617d-40ec-9625-859bf5d0ddbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3356b2f7-a8b8-4fe3-ab7b-1f4cafb90fed",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1ce7ae-c689-4f84-a68b-9a302bf04d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798858ad-36f7-4246-b5b1-993c2cc0ce05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4a6f9c-e091-4068-9361-da22af79fae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedb679b-9297-49e1-ba98-6e2eb77070b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f9d416-8d3a-435c-acf8-f5eee82bf41f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7cf6a0-6cc1-4350-bf4a-83ce8510fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f801453-07b5-47db-8d4a-acf28ce8be0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98737715-0989-4796-864e-34f751ad35df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04aa1c4e-754e-4012-a6b2-8888ba8e0c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5070ef5-28cd-49cb-8391-d2569a48141b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac907c9-5878-4848-905c-00aff839da02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378debbf-bf2b-40a0-9b18-ba2fa7e0bf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00540920-c92c-4ff6-951e-ace082b7f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c04855-1173-4cab-a227-2c85e15b3666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaafa7d-7c94-43ed-8a8f-e57a7f950f38",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0850db-fe60-411e-a0e9-43bb4422ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd8fd30-8a64-4a78-aedb-75200b1cc729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6902b3f-ba9d-41f4-8868-6814e3a2060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "877a79da-932e-4b1a-a5ad-38d10f432333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db65409-23e6-487d-8c46-4b425c530d1c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e386feef-2a77-4a7f-bfda-498f30845d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f32bce-c4dd-4f3f-a58c-c70360807603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cef0e7f-aa44-45c7-8b87-d53ba37d8235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "760b590c-5e7b-4b17-a82e-dcbc1b972a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe83052-abbe-47ec-84fe-e51fc4157bef",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad690670-ecfc-4e85-9509-7bf173046eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47beb440-c1cc-413e-92c8-d16becf752f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57623c1c-3a87-423d-9c9b-cb814d9b9510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0eac3d5-73d1-498d-8b8c-de0e01681110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055355e1-d7d6-4160-81f8-f1a673669222",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb6b66-0631-4a86-9cd8-77e0f023d53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056970a8-b47c-46ee-9483-719772e298c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de06e18-c7cc-4171-a9e6-dcde20164b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c44a1d27-5191-473a-9b9d-b4a04afe070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089c609c-6bf2-48a8-9b03-27bc0359c816",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b1b384-8bf5-4fd8-968d-4999db319d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1410f4e-caa9-4bbe-9081-ee83010f1673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f902906-fe05-432f-9638-942325bf17a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f62db5a-63f3-4610-b898-9eba87739cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0989c5c4-6629-463c-ad24-737750c43ec2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891b65db-bbb1-481b-9ffb-43a1fef9f26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52eae7da-f6b1-43cf-829f-9742642ff811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db047127-7854-4c1d-8d7e-b7a9526e318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cde6b70-2c51-4116-8751-9d94c9f40b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bde29e8-6826-48bd-bb67-099b6f533a2c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e62d2b-81c6-43ad-ac8c-f889cc0f0c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44173cf4-4b56-458b-a8b6-dcc39b72e8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc16f654-9077-4a51-9bbd-974dcfb99b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c971b8d4-730f-4b3e-a996-4f2e731ad0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a60b30e-1901-40ca-b40b-2b9de0927293",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8b9143-6366-4265-bd93-95ae5c5db0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede20fe7-c8ff-4d1e-a178-3580d90c06dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede539c2-6c6e-45e6-b50c-e9511140980c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3783a338-3815-4d2d-893f-f3f789f3ec26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815fa5c0-1a97-4f13-a6ba-d72a81431940",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4be114-fb8a-4702-9f1d-f1c732885dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0194664c-2d78-44a0-b964-7d05f306832f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1f2999-4fd5-486f-9b17-da6a169e7ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8270f9f7-1d8d-470a-9cb8-34aade6353ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56736c3a-4b01-402b-b250-c89109180e50",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9f9f08-fc12-4e71-a46b-68b14eb8e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a600d39-69c4-4403-8d08-6852a63620c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80e137c-129c-4b8b-94d9-400162c3efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7206fea-f884-4bdb-a6de-d404361e44f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e3a3c1-5119-4ab3-a5de-d1d596c5ae2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0016784b-5cc2-46cf-ad79-d7826d4449a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202bd169-ac26-4c9e-affe-87df4439db97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d767e64a-98d1-4ffe-9eac-d7c69e542228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c83ba18b-4479-4f16-a34a-087220186885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6b1c00-37b6-495c-a074-c67e8a2f484a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6a6090-b27b-4cd4-a811-e3b5a2c47f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f9ea33-90f0-4a3c-b755-0cd8acaed0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f91d82-3cb0-46ea-8fcc-c68cf96f3b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9accac36-e049-4198-a64c-bfa77524fcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225258f0-20f4-43ab-99c8-0ed32aaae121",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b72a34-0142-48ea-94c4-7ecdeb77f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cfeeb7-38e7-47a6-841f-517a65f97e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f66ba8c-6989-4431-9482-881e695bf43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb1d6de-e742-45e7-8cd0-8da0a2d33edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feeaba6-8891-4dd3-94a2-6471dc7f2242",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d615024-d0b8-4cc9-bfd1-6c6551211b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bbf538-65e0-42be-a769-624dab463d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8d52e0-e472-4797-8bd8-79d07e22e007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de1c647-00ca-46dd-98cd-dfec0db6a217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def3d467-1e9d-465f-a3b5-71ba47ca00c8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6d1462-9138-40a8-a8de-e1c24e5e9af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7f8164-722d-459a-9257-c4b1dee9ec51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea0796-bc32-4af1-aa18-ce954a064303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc88d82-9ec1-4ae6-9ee4-ea7bdef1ccbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1c539a-5211-4d4b-87f3-0aec75cebedf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e5f228-6ca0-41b9-9754-d60a60ffd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7a8206-5994-4da1-ba5a-175c404bbd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17925864-ba97-4d9e-a034-e5f28293addf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae3694b-5f9c-4a31-a016-e8b2cd292887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f699b7-db27-4215-9ab5-667206cf7a54",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9503f13-439a-4e4d-b6f7-b74c64c7e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17c7fbe-9cbe-4111-83ea-e2eb050179f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105f3eb5-c818-4c43-bf93-d7b8197beeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "214c4d4c-dab7-4992-b586-7421e77ed6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127cba37-8ebc-41e9-be73-d17b48d652fd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6820f71c-c904-4ebc-8da8-2bd02e9fc682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95e5744-370c-4be7-b74a-c54cacfcf1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6492d8c1-3669-4d42-9d97-5191dd632d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9df7589-9e6b-41f0-ba79-4353c195514e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917d66be-dff7-450c-b78e-902d84984d62",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbce0b9d-8bff-4a74-a526-cf10508b1e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8aa5d3-4351-4845-b86f-1ad753b9aa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d310b5b-fb49-479c-be99-7c222405b6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "18184a89-4f37-4213-a9be-d1056c7263b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37786672-4ac0-4679-b251-f9071eb4505b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cd743-9831-4fd6-8879-e000c7419fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a54640-c92d-4b98-9f8a-deefcaf87d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1202a114-82a7-4fea-b8d7-09026b667cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcacbb8-c716-41a8-a1b7-6c971481f120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbeb519d-6792-49cf-a259-3c174224da9b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b294ffbe-0efe-49f6-abaa-a7b3a3a19895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c019b1ee-768a-4ae2-8e02-a19561628a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c301aea8-1ddb-4910-81cd-27cf50b1e165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb2f5fe-575c-4d25-b006-5d8b975cabc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc78f41-e408-4c0e-b1a8-a2da65d6aa85",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7044b0c-9ae5-4745-9962-633ed71b8e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c41099b-a75e-4548-84fe-eff564eaaf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fbafac-bc7d-42ea-bb5b-5a8b70ac0cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5434b50-7d08-4882-aaee-16ecc9ed75b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71941cdc-40ff-45a7-ae27-231d9349aaec",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6a837d-a519-4cdb-b4d2-4c842ee3ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a56cf2a-8cb0-4934-8425-ab7b372a5215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62583d5d-2cb1-4961-a6a1-b966b69550eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6409ef1c-8ac1-43b2-be76-ffd71a22cb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c510ee-ce77-4c11-b221-a1c1010c4ee8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5470cf92-4a82-45c6-98c3-d38c7d557bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054ac6c8-10ee-4e5f-a852-445b902065f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a0c333-8117-4711-bf52-9c9ffd3b2a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "843c9d0c-a94d-4633-a4dd-3c4a65bb76fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7606eb40-b28e-4493-822e-58f8e66c1f4f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585bfff6-f164-486e-a512-0a4f671e2851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4f8ad5-c083-40eb-8b55-e49434520d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aef2b8-3804-4a25-aba9-fcb37c5a723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ceec54-dd0e-4fb6-a458-ad38a63b7a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793fca15-f78d-4728-8b09-fb3be3b244d8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3b57ec-6323-421a-b8c7-8a8076ff43e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3babc227-5d30-4031-ac24-3683c83ba48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5a4136-ddc8-4c98-a68e-4b062bb92511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6912dc2a-9357-4df0-a3cd-ef61dc5b8e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f33397-07e5-4635-86e1-ce1064f2f251",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db8a84f-497d-4179-a6ab-61f8fa8cafdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794eb41a-9271-4ad0-887d-5895cf42dee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9db295-0f06-4642-9c2d-51889d36f163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef2754a-e737-494b-bdfb-bd4eb0df479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eebde8-4a83-4fb4-b74b-333a9979e7ab",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765f921e-1fee-4a63-8291-26cb9d3ffdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c052ee-8bbf-4e2d-9a14-317f4d102365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968bb383-bab5-42b3-967e-80a8a20f3322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b89b8a-0c14-4502-b52a-d61877724ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd327b0-5a79-4185-91a1-bb7f4b766916",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416767b0-52e1-44d6-aeb1-4db9d997c270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcd390d-7933-4853-872b-8fd79ea8dd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0776c4fa-6bab-4e8b-87a8-0a063ce47cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21dc5c47-0b2b-4fd7-81e3-d29e1f5040f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b1b4f-a5f1-4870-9b5a-ed33d645dc19",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd532100-7f12-4e39-8c4c-90a4c74694d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcebafe-e967-4559-9cf7-81144ef5e982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa5ed4c-ba41-4ea2-991c-3a82da0d8993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c76f1a9-c8b8-4c2e-aea9-f3011df9b10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9599416b-6e8c-4561-be62-3699562ccba7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c1adf7-9b6a-46a1-addc-125f755649f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2437b8d7-a158-4bcc-85f1-68e41473ca9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26a839d-1990-48fc-933f-9e7bbfa946dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37806d29-cc7e-4bf2-87de-d66fa1ceda2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97225ed-e247-4a5b-b4f8-a385e005137d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a797924d-d7c8-411c-9445-3b05ba5f2c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a691b1b1-97fc-451b-8d7f-d1bf83e790b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511cc9ef-c39f-4771-844d-912938552ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f8743c-0ee1-4347-bce5-57d3720b89d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa03610-2a0f-4aa2-80b3-febe351a0e00",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5943f7fe-c577-4dc4-aad2-c134e0768241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1a3551-77bd-4420-bc37-2a6acf493a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a13720-5932-4dcb-96d3-9e370cf6b214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7488b62-3b3f-42ae-a870-0060c4bc767b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc965039-e461-4406-994d-1788558c81ee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902aa138-9ff4-4bd6-a47f-d40fd20a1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403dcc45-4931-49ce-92aa-a9ab22b53db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beee343f-820b-43eb-84f0-953eca4bfd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd8829f-57be-4e51-bd57-eed45e2a6daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f96fc6b-7f97-45da-a33e-76e608ca8281",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a24c9-299b-4955-9166-09b5048951c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497e7f7d-b163-4627-9012-6462a6136e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8441c51c-b299-4a6a-9a00-94d91384ce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62cdb87-9b3f-4f01-9c05-a6ff9774df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348a0836-3744-4c7c-9a58-db5783b0d334",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccda1a2-4bee-4bcc-bcd9-d84aea097455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2175c6-e70c-4645-a8b0-461ccb68f4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7127e35c-8937-4e13-8c8b-e1c30acda29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b293a7d2-a1a2-4b0a-a083-489721d5a401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c25ecb-d9a4-430c-832d-9279a7addfd9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f35b8-35b3-4256-b73f-e44cd9e6e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf8ae20-8a56-40e0-bf18-d02a2d4c8be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f864d1d-a53a-4982-b1b1-d318aca563f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff67c94-9b06-4853-9eea-2ca04a81c181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262d99b1-3644-4d00-8fab-34a8cb05bbcb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d174bd8-3288-4b9c-9b10-6baa5838122a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711164bc-d79c-45de-96bf-81aac0cfed67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cf6fa1-b29c-445a-b2aa-70f8710abb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2621db8-2e7a-4018-98db-42e1107abe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4751653-e0b9-4b9c-98f7-db2441135ec7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb55d74-7af4-4c54-8dc7-0a6ba1443706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6eaf580-fd47-491b-9847-274762eacff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f171158-3466-425c-b799-6bcc68be3204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee9bf69-85fc-45ea-bb7b-2339d51eb0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f558b1-9c63-4863-97e2-5acab67e6cc6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5a3feb-13b3-4c3f-a965-1b3adc76db31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202a1188-27db-47ea-8b32-e44ec83505c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f538cd-8307-4632-8f7f-1be071ab9158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f11380e3-0ce7-404d-a0d4-bbe8d664ef64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83dad41-907f-478f-9adb-302a6a749b40",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be105975-98c7-482b-8641-4ef425f18231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e9e0d7-47ad-47de-8f7a-6ccbf1945a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1c7035-f6de-4102-a2b7-d488410dc831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "601784b4-6dab-4b65-96c4-81ef21737e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c934eff-2985-4180-bbf2-aeb466e8fdfa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6556fb5-80c0-4e36-9358-856c36ca551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc49f356-c2ca-459e-b091-6500844a6fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383e4dc5-8814-4790-a857-a5ee3b4d7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8bb0da-40fe-4575-8353-8d7cae9cb319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea01d0d-4fb6-440a-8d0f-7d3566007d2e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70190cf0-aeab-4595-9437-f18e883b108b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f3ab9981-6869-4580-9b29-2b2b445721e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b0d6ee-eec5-4e4b-90e3-1e1111c7d9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87e70c2c-4291-4c90-b43c-66040afcc240"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb4c73c1-4ecb-4d41-b9ea-b0f59febf213",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d31f1770-8fdc-4aa6-879d-53681b43aa63",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4f40ef-f9d2-407e-95d4-5e29c9ab9c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c69278c1-7078-4fa1-96de-3fdb9ba79fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed197c-a535-40b5-a542-62434fb10c87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b3752448-d555-4dac-816f-b71192cd9bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ab4e1a-ce7a-45c5-8744-849fbd0f10d8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec72282-6ff1-4f8e-aef2-180797dda63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ed8bcf1-a286-4fc9-b7aa-0e0fc7c06bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b188640-28ef-4d15-a862-032d70db93ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a4bae335-0aba-44b2-886f-b94ba521be92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c9b3ecc-5d06-4b9f-9601-3a1afaee56ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "238b47ca-109a-4e65-bd87-654ad4ea461b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d59fc623-e4b5-447f-b7e9-1bf381c313ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a484a1c1-4e08-4e31-8274-3eb0d9f986f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8f83dbd-de3b-45bb-86e0-94e3cc41b510",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc90e367-78a4-4261-9d96-40abf36a98fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0edc2a44-3f24-4382-b75e-bd6b15be248d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b12cdaea-a6e7-42cc-b18c-eddca5f4fea6"
                }
              }
            ]
          },
          {
            "id": "67cb973c-6962-4d8f-b9da-c4da6ecec03d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33b4276b-a577-4516-8ecf-7ce15d9c58b6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "754f8002-2847-47c0-8e49-76ea04634472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f20204de-56c7-46a6-920f-cb235159b648"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8059ab8-728c-419a-90c6-55a345113d15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "647a0932-d403-437d-bbde-84d6b2ac21b4"
                    }
                  }
                ]
              },
              {
                "id": "612f0f0d-3bb7-4dcf-a716-5269aea17b0f",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cf2ef93-d7be-4d07-9a44-59546d40f03e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a383905e-e1a1-4c22-a9aa-57081f4ad008"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c71b3c1e-1272-4d5c-91f0-e2f9bd3ab796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcba4a6e-6503-4cfd-9886-5b7e45610488"
                    }
                  }
                ]
              },
              {
                "id": "fa94842b-79f7-4804-a690-30ab540d5afb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "243aaeeb-cd4f-4513-af87-8708dd837ca4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9449108e-2a69-45fc-b6a4-1498ec7abd15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cab88853-ab51-4956-907f-2af22c197439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f6a56d1-bc07-4c47-a7ec-929a4907f983"
                    }
                  }
                ]
              },
              {
                "id": "f2b34c6c-eb48-48c0-a67a-8e408015851c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6760a0d9-80a3-44ec-926b-ed174639f7cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1f983ba-834f-4094-abf2-6bdc0760f56b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d01cd5db-9a98-4931-95d6-76b8f68aab94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "55714001-5956-4ff4-9653-54236a170e6c"
                    }
                  }
                ]
              },
              {
                "id": "71f36d32-8755-4cee-8d63-b8ac826552fe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3304e065-40d2-4757-a96f-00ee470b89f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8aa6c2d-e2de-4451-ac5a-dc46a0df77b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55c35ccc-534c-48f3-ba13-4c127ab04dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "011b7702-482b-47b3-b647-c6dc94335256"
                    }
                  }
                ]
              },
              {
                "id": "3f3d302f-9bef-4515-9e82-bce59c129c23",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d3ae171-ec3e-42ce-ab78-8154f3e13f21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "818c80ca-d400-40d7-b435-cb4051097d4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "893e233e-fdad-4472-b849-84973fcb1851",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5fae4df-c0ee-432e-bf07-eb4c1eca0c53"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c61a941-a211-4fc9-a457-503cb2fc91a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b59e75a-9004-451a-a735-c9c358cf9bd4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1afc0f2e-a67e-4dd2-9f60-6862ac0f7f72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "754a356c-3e1b-4524-9c29-cec44dd0f8a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3ece75f-4956-4f50-b602-575681640e42",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6bb75e53-cbc9-4942-88a1-e9c2e7991291"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "235ebb76-bb3e-4d35-95cc-482eec44beea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98502aa6-894d-4a57-a3d3-53730f0bf99d"
            }
          }
        ]
      },
      {
        "id": "044ffa94-a433-4b4b-aa92-293a91adeb52",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7afb31e1-0adf-4c6b-b8fa-f85b81fee750",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a8a3ef2-1064-43da-92a9-3b52aebec271",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4835c240-99e0-4b1c-8ee3-511679fa2f8b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e86885-0f31-4a49-aa69-b1144fbd9437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15b254f-94c1-4487-9636-ac0ca3f7ffb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f50e5f0-7569-49cc-a0b2-dcae65e724cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b803ecaa-d86a-4515-9223-5bd30650e7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136b4f65-0f14-4269-ac44-780d05f80027",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9da8eb9-4826-41f9-8f44-f7ba7b204b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf89978-bb63-4424-b146-9186d15a9df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c7c35-c7ad-4a4d-8312-306793bdf56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ad325d-082a-4c26-9fb1-3be43c68116d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1192468-9f3a-4f3e-ad09-32743e0dad06",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8313ab9-44a1-4e78-b261-3d26db64c46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8da083-9fde-42c8-9122-1c378602350e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cb08ac-3671-4902-962a-0e193665605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "471c7af5-4fa5-4c85-b9b5-19078c67108c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff551219-a4d6-4ecb-a307-c284a81b2faf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b30b0b-4791-443d-b866-e3c870709e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610d879c-2d81-413c-a192-acf2fc8f491b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e0479d-465e-406e-b59a-4af7039ec797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c13493-7f7b-4ddb-bb5d-51dd298827d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11418c9-cad0-4c99-878a-af6ef319e928",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda0061b-1e7f-4298-ac96-8935724ff495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3df04c-d3b5-4007-a2d4-41e25b1a5a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feae8e6-257d-4721-b746-5479b584ee92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22cd61f-1a5f-400f-a5f2-95ffc3fb1197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ccfd5-ca81-476d-b000-286400ccdfbb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bf8465-e0e3-4c7d-a2a7-88fb46cab4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c922b48-2fbb-41f1-88ae-fb5f94176f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f310da8-6ea3-4fe9-8c3f-7a7fb06fccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb9084d-a56e-4c0f-9680-40521aa2a330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b58595-24c3-4703-88d2-6ce2b4cadff8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7758b5bd-133e-418e-9bd0-0642a1aa87bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ea6f58-de93-4522-ad83-666f43b5a337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa1734f-b332-4717-ad31-38f6c299376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f83436-15fe-4a33-adca-2848a2f81afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec89434b-6e70-4049-b4a8-b0e91d600573",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a757cc-4638-4389-959a-e5832bf5be90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772c8cb5-82e5-4a20-b37b-b6278beb401d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622f460d-caea-4063-b72d-7de1c13c7641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4abecef-36d0-499f-850d-f26b04015ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560ddf0f-b585-4bac-b2bf-8d9ef519fb23",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359effd5-6c2d-4058-beb2-cb84b1817896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c6da75-d9b3-4e98-be3f-8c7b7f88f700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1445a9-89af-4ee0-8ade-be7a0b49fd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52305815-ea95-4864-b8db-ba5f0e9ec947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37483b68-664c-4639-8996-f0d4e480912d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7956c7b3-9e94-455e-b793-10afc787f8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44752a34-ff87-45b9-85f3-d612fc434247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edf14b3-efca-4b8a-a0f0-6bf34cc0c4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52836e93-0634-4a1b-b172-933f6661980d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755030bd-2b8d-4b9a-9feb-c54430e0d9cb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252e33d3-df5a-4873-95bb-b59aa8dffa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fa244d-1cf5-42d8-af9a-55158167c8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8077c73-d031-4939-8536-9bbfed703866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3ad11f-be68-476b-988e-6252863c1dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8db06f0-1cf8-4e31-ba60-1cc80baae455",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02650ce9-a678-43d7-a876-622a1c746e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73cdd94-05d9-433a-a754-bcf89b931e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee07e4-fcf6-491f-b5f9-9f845ead6088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2458f211-48fe-4184-bdbb-436449504860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1de808f-16ea-4295-9d82-161b61b4740f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0377e8bb-4601-4c48-94be-c32b37ae56a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217837a3-5cc1-4b21-9290-57ddd4e27a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07057a68-6350-4f2f-bef8-ca2caabd5c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15152618-bc7f-4848-8c18-c610e49385db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b7f0cb-e3ce-4f07-8fcb-8bc74ed44152",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e1497b-e240-4a74-979f-ed7fcb1d5763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4023ff16-28bd-463b-a5bd-106f9d530c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35279ef5-8339-41ca-9072-2b804b89a50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a433f690-a3ea-4ce2-b548-0ead368c8738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e551804-23ba-49c4-951b-eb85746f2e1d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da12a905-8703-4cea-b972-19d44711d589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6191fdf-5467-4037-97c1-2ef3fba1c7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b93244-a8be-4e4d-9802-aaf5f0f54246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "691938fb-393c-4e26-91bd-dad7cbc13372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95692a8c-b180-4342-baf2-54f37634ea40",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273fb339-1155-46cd-8448-26cd043fe518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2f189f-8ecc-4a0d-86f0-fb8c00637a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da9b60c-f0a1-41da-9e35-de4001d566bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e3d7b9-7d6e-4208-bde2-500a9927ccb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaead46-801b-44dd-8357-ea5daebeebe4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fec305-9c36-4085-b076-bc14177db1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e307cae-cb7b-4963-8816-eadffa1d7d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a25c97-3179-4c4d-ab30-52297d08f637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01f97de-019b-4cfb-ac05-3339f6d55450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839ca41b-d3fc-45ca-ae5e-5694ab6e4dfb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cff80d-7152-4ae7-abcd-9d4e0727668c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddafc16-a2fa-45ff-9a46-80ffd6f7c99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2151bb98-6a09-4ea1-90ae-adc1ed72405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7de1a7-6d17-445c-9948-b8d5afa88c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f955b06-9cf1-40c5-8528-3ed1a4d3fad0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be2939a-c442-49fe-ac0f-63154c08fda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50fd63a-0809-40f3-9a90-c7c8e9a5d3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be5e7f6-a7d9-44e1-bab5-3dbb400002b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3446121-ee7b-40c5-9e46-f6bd6783b1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2596de-24ad-4ffa-98a5-a07d897f7671",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21731370-800b-4701-89bd-294f101c3a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe0bc22-bfcd-419a-9a7f-bc9f1deeab6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a6388-d0a8-4ac8-9723-369623c4c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29aa02f1-f6f8-4358-b476-3e6d7a0b41d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e21490d-691b-4eaf-874e-3957133557b9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65fc169-b128-4f58-a328-a3b2b206ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3bb0b9-566d-4066-bf96-f1f923dedce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdde068-1f88-4e5f-813d-55e8855972f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312e51ef-32a9-428f-8c1d-578c28f2c361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1c0444-4ade-43f6-ae02-baa3de3834a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0668a82f-52f5-4504-bc37-1a18e76a6039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48535215-33d3-47b4-a92f-bf214dfc465a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131f926d-94ac-4bc4-977f-0db0e16e2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c2af4b-d515-4ba2-933e-f47d65d45567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1582673-21b1-43c0-8fda-1efade5e9623",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63569eac-80ea-41ea-998e-99d1b588407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bb3c73-63e9-4d52-918a-18c7a05d1fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b26c7d-5a7e-46a0-989b-532795a5d32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62c0dd5-3ea2-4cf6-acee-0ec070c22a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c29b05-33c1-4bc6-affa-d0fa5283cd06",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01849cc0-dfc2-4f54-87d9-d03cafa2050d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b013d42d-c420-4b28-84f4-382d4210d356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee79c57-cf85-4ec7-b80b-3c4a28a42734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "586e9826-5b69-429d-947c-3aa220eb8e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d1f4f-f560-49c6-92d5-abec7d4cbcfc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc197660-e8fc-4782-84ed-a97bb289bbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fd04d3-b9d2-4869-9ddd-affad3b2b6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2959f3-302c-475a-bd4e-750939186d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c26a216e-540e-4854-9862-b6061e0ef7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b667d3e9-cf42-4bbb-9745-d3601b9d046a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1748d76-7062-456a-9433-f2677d1208a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1f79d3-37ea-4194-a014-06e70e7cd954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632a4ca2-99ce-49b0-be09-b2afe8f8102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaabf78-947f-450f-81e9-317584a10792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8de85d5-734d-4cd1-9dfb-c23c18b7569b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f02c1f5-2629-43e9-afdc-d1e2d696e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a4ff03-e7c6-4562-a2fe-eeab4267e7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddc5d6e-049a-46ee-bbb4-89c7b80eeae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d59753-c9f6-47df-bbab-d8741504c344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b14daf-84e8-43fc-8df1-a00d92bb75e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef00e9c-f708-4b13-9a66-27e6ec7805d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5633ae7b-e4e3-42b4-a85c-453738862749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790c86d6-3949-4917-99e5-1278644672bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2d6926-3753-4376-a1a2-d46d7ba097fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a550db17-833b-49f9-adfd-d345e8775fa4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7518ff6-356d-4855-acbc-813f394aac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2128f0bf-be05-4a66-9a76-e5ca21efb6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d334153c-eeb5-4457-9bc9-864223c402ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21bd2fc3-bf5c-46c5-90f3-5b6a0c814182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e4f980-bc8f-4a54-8f71-ee1bb35413b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d537f762-a20e-4583-beab-352323492370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1c4d1a-e8c4-4704-8f60-296d626056ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a297042c-878e-4618-aa22-04860eaa96ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da9640d-dc40-4a5d-87ba-c2fe51881198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e623fc7-185c-41aa-9837-abfc128a880a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30618e0d-3b2e-4e66-92c8-70e7ecf9dc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bac7a5-e077-4d6c-8a44-245973502660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9059fad-a3a8-4065-8079-bc69019cb1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae9b645-f901-4e56-a862-5d6026ac74e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec68a5a-45ce-4503-bb44-d840c3ce1309",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f5bbe2-ecff-4535-b21d-b314a77e689c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3ee67c-ff87-4427-a960-53ff9b8ce4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2667f21-3e84-4f2a-bf7f-fb5eb3505b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f7d5fd-f44b-4d9a-ab6c-182243d3c18b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d590822-8623-4fb1-8281-d060b0750f6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7d4eb27-d42a-4b93-a81e-4a89916e947a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161ac1e3-7f42-41c1-9093-438a8388f394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650f14ce-92f0-49b5-a4ec-c5ff89fcb013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53da15d-36d8-4d46-95ad-7458fddf6124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94bbefe6-aeb7-4176-a376-a77deaef2627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d4ae18-c217-4e46-bb5a-d3a0a8fdf2a9",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2dbed3-ac1d-4fc0-8af5-95d5327d30bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "30d71958-b2d6-41df-93be-72e035c8068b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75dc55a-cec3-4d22-8663-3a527ab1513d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "216f920e-4983-4c95-ab40-10cbaa9f1bdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4280977-efa0-4b86-b702-37fdd9465430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e54f63b-e502-4e66-98da-6d4836cc6dbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a2fed55-0ebc-4427-8d3f-23fad3b114be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c51d5a8-d9dd-4db4-bdba-494cf2fab4ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "297c7eff-96b6-4002-9749-f3b29b717751",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9e87f0a-24fe-4b9c-b640-21083683687d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a63f22-9d9b-43fb-9c1f-2f721deba1ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef3cf688-a8bc-4fb7-9ee8-2b1d04fe1480"
            }
          }
        ]
      },
      {
        "id": "71e8400f-5d28-4fc3-8971-747dff840abb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7182101f-ce99-497b-9a98-c7aad4430888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8913bda6-837d-4993-91d8-942c427d2ab8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1413d74e-2ebe-4161-9324-45a07058d127",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce37200a-157f-40b5-82bc-7118361b8008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3a6d13-6192-45c6-a5cc-7928bfb0384e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78de9266-817c-4ec2-93e0-28c4274b145d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422de0e8-bfb4-4b62-973a-9792d8d6b17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e13e8e9-adb5-4c88-bee2-eb54cc71a544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c15ab2-4d3e-4693-93f5-b25f421aca71",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1817ff0-6859-43d0-8e9a-227bd45b5299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8216252d-db92-479e-8c28-ee1b7541d469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b42aa0-b0a0-4355-b4c3-ceb4c496ea89",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6931d-4804-492d-8e09-6386fa2fc037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5c4f56-75b2-4279-8c87-036646f00672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a908b-4b0c-4cf1-90cd-8f3efff6c72a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8247e215-b806-4a58-8a71-27010b7aa95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d66355-22da-44d5-817a-1017cb40a81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f588c5-8e5b-4b85-bb6a-84147b5843ae",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9599d9ac-57c4-48ae-88ef-565f6386295d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec5e6cb-9792-4594-9771-970d69fd1658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2550e030-5a3a-41dd-8c7f-fec657bc4fa5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15971cc-b9bf-4509-b89e-41b27973c033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93046ff5-95db-4c17-afa9-8886af520838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30abed1b-e5ea-4cd3-bad3-4492588e575b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8357bab1-50b7-4152-8991-647e465ecde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab13f43-827e-4715-9fd6-8c17c9d8a4bc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed75a21-f126-4f2a-852c-c7a6e3dc2e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013aa4ca-3eda-4146-a769-5d8a3f359152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a35b27-353a-4832-b4ab-e4e385efbbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80279763-4191-43a1-b4e7-c134878b0750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15349654-d4e5-49c0-bb22-57a5eb297ed1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d551006-09f3-40e4-86f8-7b189c5f0cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d953c7e-5216-428e-8a64-c98bb6862374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a3c940-03e5-4ef6-a7ef-e7589a9bc6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5e8763-832d-4ec4-b450-0094ee181b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054303f2-4237-4c95-9d83-41789efed510",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b8d584-0549-49b2-a650-e4715ba5ec17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f9332e-3972-4cdf-9e8c-e0398c031984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3a85b-cadb-4a66-aaf6-ac399854aeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a84e436-6f9b-44d5-bfa7-2e92ab7e40c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d10f80-e578-411e-8abf-441412aa6a0a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c78a33-9b00-478e-a621-f04ebb852e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e8b677-f163-4626-9494-c7ec374556f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560db625-128c-4dbd-a126-527a2ae4c164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f65e92a-65a3-4ea5-afd3-31c0d2308b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846289dd-08f5-4255-a7a9-0284a05ba8dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2ed649-2f9d-4f31-afec-b13d6745a6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33024732-0824-4b8a-85f3-415d3e5000e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fade8a7-d5fd-45fd-a0eb-a6578c711ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1603be24-0eb6-4ba9-bad3-f13a49909139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4e424b-c430-4800-9951-1a272c814e4f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c685f28-8629-4c95-a726-67fd89d046af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85df5437-beef-4827-8224-1b8ffa3b8c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97dc7d4-22d0-4e3d-ae51-f6dac92abb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d2be78-637f-4b5b-8d2b-23bf86341166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a244b7ef-6c77-414a-a5d5-7d4cb03763fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8644ea89-9429-44ea-a21d-97993e1a18af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a27d06-f876-478b-8b58-66c40263ab5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d2e57d-e485-41bf-9b27-fe60208f2a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e799372-488c-46b1-b7a3-8e0d9600b519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016483ad-e6fb-4093-8159-78da4f48b215",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7566c9e7-94fb-474a-8647-27ef204f992f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5065e874-7c75-462f-b615-9a31fe40effc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b4b29c-5390-4879-8a64-860b59f2d244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707f6dda-4248-4989-a856-aebacdf436b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6690cf-4164-4b8b-97a9-24c8dae244ad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7d5e69-fae4-4bff-ba15-484bb2bbade6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b1f79b-6ce7-4968-89a1-7db26a1e50a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a44f27-d3b2-477e-b4e7-c122884828a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50eb9f0-f6cc-495c-af22-edca21fd811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7235476d-c76b-4595-98b1-0343d0ecbe84",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9669ca0b-f701-49f3-a42c-04941a897c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b900a88-5c7b-4cf2-be42-b71acfa5e467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3567ad-c802-4073-9a2a-006d95fcd90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016321eb-a3fc-44d7-a05f-d33fd8f235c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db122c-d8e5-425f-8fbb-6aa8cbbf72a4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32781555-1049-40fb-9b5e-2f70cd4ebdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994a35e3-c3eb-4f98-b85a-f3dbc0a020bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95090da-0c44-4382-8e5c-28473c08482b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0296600b-68b0-43ba-bd7d-ef41fbb3e2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9777a36a-3949-4219-855e-0f6e12db4ff1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef21f693-64f2-4d1c-84fa-e3cff3d19efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404d91ef-5c15-4169-96db-dec4f41bb019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695c032b-d760-425f-90e5-e57f965a7d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7dcc3e-ce22-4b28-8363-440bfe9e8731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b3260-fa31-4197-8e86-45e1721bd888",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ba5b80-691d-4a78-9afa-ed633f5f02f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f0e6a1-cda7-4860-8a39-e66b005204d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9cde49-cc89-4f79-9c51-cec1231f6629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02933a3b-6d26-40b0-974d-7023cb800c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc96de8-c8cc-4328-8679-0a8e03f3100b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55dfa34-4fde-4969-8dd8-f8abf70832c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acea584-1c8b-4b8c-9660-251cda7273be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cfcf67-0886-4b13-92fc-fa6ec252691e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13111d7a-94a4-40eb-87dd-e32bf2b8cb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b9b7e3-2491-4c7f-b879-4c9c58d712d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad865296-c2f7-4779-809c-335f396b1c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4504bf62-23c5-4e94-8d95-30596b075b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e459b8b-4a20-4fc3-8565-1a7ba4b6db21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc8804f-ea95-459f-b1d1-02c2591d8a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc524d99-04e5-4412-8149-b34cbe4921f3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5145bc8f-ea2d-47a7-8e46-bc62b2ece742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b0b31c-0fc0-491e-9c79-9f5d39f57eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2841ce-fa86-49fc-b253-13669ddf676f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5350ee-4a40-44c7-82f1-e9d65a996470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5bf577-2c7b-49c7-84cf-82a98081825f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc0db87-285f-4564-ac5c-deec16e724e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3587f78-567a-449f-88cf-6999a1c55bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54e782e-16a7-4769-9f2d-a29c0dc98a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6930d575-2b65-48c9-a3d3-fbd79cc785dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1736a9b3-a262-44de-9469-70287376b138",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e35e66d-162c-4e0b-a5b0-ab81b906f548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ceac061-3f60-4329-861c-eebabe7b3865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecf3a05-f36c-4c64-906a-b38bba389500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56eae1a-3eee-44f9-969c-91a88e9c05a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6089027-2dde-4570-a670-27e322b6b557",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cfa22e-75db-4563-8413-8f54d15b7d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8135fe-c2e1-45df-9449-b77afff2ee0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a070fc08-55c4-42c1-a7fe-1f77c876615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f399161e-4bb8-4aff-8966-f321b245dec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1683735-8a34-41d5-b6c6-1f99712b0d80",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a631f509-fcbf-45a2-8ea9-8d67a6861baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e4b5f0-c9a2-4306-93ef-95d0fb107b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18109321-1462-4a18-befe-07cdb02c2ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f06b2-b1c4-4ab3-bc45-3f8176382e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de82c17-f4e8-4564-9506-1dee0304c88f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec0b896-2c37-4630-a8cc-9ee5d7068284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5418038d-581e-46cc-85f5-c57019a5748d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f7cbc-3071-4d9c-aaa3-55482138e284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d53244-972a-44a1-b70c-27e81ebacb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61851de-a43b-4e4b-bdcf-7193aee20ab3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60083d6a-97cf-4665-a326-416da65059cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba00c98-8bbe-47b0-b2c8-94e1cdc306a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668abbd-d408-447f-834c-f995d1610853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f7e856-3f73-41d7-98d3-c06a664bb82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebbe4b3-1063-4727-9101-f72af8b27549",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c6316f-69a1-466f-b1ba-f4adbf3c04e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac8db48-8d6a-40c8-b4a2-6bb0a4859113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a86d7-8a13-4ab9-8006-61052c652430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c876c9a-6827-4d37-bdda-9c9c56ab28d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dc71a9-2590-4c7b-b4ef-ba11f352c170",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea6677-86a2-4c76-bd84-cf6da82d018d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49243f86-3b0c-4092-8cc7-05f4ac90a1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d196fce2-597e-4f2e-af8b-eccf70ce9c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e78141-548a-4612-bc0f-4eb766c816b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32f34d9-042b-454f-932b-baf12b49674e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c66c52-6082-46df-b386-36fda6dddd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad11a17-31e1-45db-b31c-6b1bc876c1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ec1fd-376a-4cc1-8c77-7a8914fdaacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7122084-847e-4936-ab65-ae4c7d87d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1542c-7533-48f9-b9a9-e69aca81480a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd53fe10-46ba-4720-8008-a331aa04379a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "634faafc-619b-4caa-b4b0-a576ada81eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7403b3bc-0d37-4d6d-b926-de0639a279da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebde8806-5dd6-43ab-9064-b3a9d9ffb64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304348a2-46f1-44ff-9fd9-e4d3ab6878d0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b5ced2-9a0a-44cb-b350-500e66fef538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee22e17c-d732-4aa1-8d40-e00495cc0057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37fc6aa-85b9-4265-979b-ae6a0f6868df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337ceb62-d00a-479e-894c-b945282afcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364c3b2b-8936-4eee-b3ff-0fd6a2c1fe3a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3f125-7a10-4ef6-a4e6-3334b502a787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5747f8fe-5983-4bb4-9dba-02d84163c8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70562b47-8277-40a8-9441-33be084be04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f4c1e9-2ca2-493a-8b3d-f7581d3196da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724213c1-c990-413f-a9c0-0bcf0a50e8a3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa8d163-b7f6-469f-92fd-6b35e4851abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5bfb0b-df5c-4df5-b230-d194cb3c2b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08130d62-88b8-4ea7-9420-1f6e6036b3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dd5106-88bb-454b-b391-55515cb8e690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844dd4bb-7c52-40d4-8c53-b44aaa03246a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c2dbc4-768f-42c5-87be-913c49d3c220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbb42d8-0871-4025-b7dd-07c14024ab72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160d814f-cc2f-44ac-96e0-49f1046263e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea62bb8-27a8-406b-ae20-8ae0cba1c4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0262e0c9-eda4-4739-a057-e33429bef698",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5314c15-caae-43ea-8126-32508441f3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc9774f-fb94-4832-9bbe-5a35a34fb323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182139bb-98ab-42eb-b6d1-12cc0ac13e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedcdd8d-d368-43c0-b7ca-92cd396d4801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b83c983-1922-4bf3-8d2a-014d831e976f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413a655f-8086-4644-bebf-9d83c6805cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2390c454-d31e-4759-a000-91523e17808a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42512bb6-5a77-4172-9e70-9784beb39e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5631aab-6b93-4359-a355-c94d6e94c2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4be249f-5780-48a2-a589-85c619d5db0d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf0f031-8a76-4d01-8491-e7ab18d0842e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f56ad9-a5eb-4cb2-8375-92a1915a3476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632d26f8-0ab7-4f82-b3f8-d42924ffb999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24352b6-8d31-4c79-bbac-a4d509b5c767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88237bc2-b637-4af3-9b15-26402b32caa7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97799e93-75bb-473c-b137-78e825fc06a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0734cc-1398-4306-9c24-453ca1a23793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581cd2cf-f215-4cd1-810e-96bf138ae1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa1668c-7325-4529-95a7-1ffe25d6fa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef279c61-7bcf-4e9b-a577-82b2329bf90e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ce41c0-c1e8-41ea-8f28-6e32de9a5ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856b48fe-63e7-4356-8981-7154ae798d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994017c4-545a-4d27-b679-fc1771b38336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e79dba4-f92b-4643-b847-a4b591f525e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c3f8e3-9ff4-470d-8808-2732d1c583fd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ab6df6-35c3-497d-9e5a-6b31a52ccf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cecaf7-0841-41c6-a3cc-9088104a563b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bb6346-27a7-47ff-8fe3-f409097bd43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1f7b8e-ec5b-4ed5-b8c7-c2e0c12c7058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0677f045-45cb-4789-a19c-10f505e1b8c3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e6e1c-6996-456a-8e51-1b8b655a7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532372f8-3088-463b-a3bb-980ee7b2bdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6cf521-b4f5-43fe-b9f6-47b97f415adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b79475-2a6d-4c48-8ad0-c8a43b45186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092d3506-6b87-48d7-b034-d453d3358182",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c6902-4aaf-47ea-89c0-8ef814ac6687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd13fd6-cd31-4b60-9049-be0fcb2d975e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af7977a-6c04-4d29-a2e1-47fb5d3999d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64911ee9-29a9-40dd-964e-a2a75921d2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde92a7c-f425-47f5-92c9-c69c45977eb2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1c5f7b-58c5-4754-921a-9e6e2aa44b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99471ad5-e088-4122-87aa-824bf66ebfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba166f6e-bd5a-4b84-a549-17c58f1907cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a13e6d-2984-4d35-89e5-9f68eb394b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301a13f2-a751-40f2-87b0-b36d561239bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9413dc3e-f041-4ac9-81d0-bd6a2a116cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39e9b2f-01f1-45d8-8c76-ae081e0f6304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5c209f-9e53-4ea8-902d-5b3f9d33faaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcac3a8-6f91-4fc5-b82e-0655d08543ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ad9dc4-2934-4b1f-9554-43ed172f4ebb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d005b7f5-f6b2-4e0f-97e0-445551c9b9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e52661-788e-4396-b6a7-4138ca4341d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e30a3e0-0467-4a4f-a2a6-88634000eb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa4831e-c396-4e18-a855-01d56dd04517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710ad664-9d00-4ab5-afd5-9ea12605568f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287cfe66-fa73-47c3-bb19-0829965b73fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc3c54b-3b37-447e-a39a-87bf5668befd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13663d28-32ea-4554-b07d-d048f0690948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54afb72-6476-4f95-93f8-583cf2c42d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9bf38d-ab4c-44f0-8cac-a009f7750a76",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af547aae-6b43-4fc8-ace9-5884ea2b86cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8fe789-6841-486f-88dd-c6b4da2bde76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd3032-518a-4e57-bb6f-ba5b30abf932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cc7adf-a700-4c65-a2aa-966280e0d8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c876907e-f904-43aa-a87f-69ceccb38de8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbb1c91-2db7-47a3-a597-68ae64cf7607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f46aed-66fb-4bde-8df4-600db1516234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ec4658-7f04-4db8-9958-f3e61a730bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acecec0a-a272-4b8b-b6dc-b85e9b1aad2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c0736d-f30d-4e21-a694-e528899baef2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ecebec-62de-48e4-8640-9ed4e3603f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4597d50-26da-454b-8c35-f444711bf9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f599440c-da29-4839-81fc-1b29eb79e473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6540410-6c4e-471e-a7d1-74b49a6752c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2edebc-ae85-4b2e-aa0c-76362c1a6b67",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06abef02-f84e-433a-9b7c-495db32deb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb850c1a-156d-4394-94ed-bab8fa2be1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c74760-bf56-4790-9410-f795b967d075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48476644-5d21-44b4-a2e2-1264fcc9cede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37da6f-9787-4b1f-9701-45d9c8f2213e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0460705-01ad-4c04-8aa9-bac801a3bc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b1488d-b8e2-4a9d-af28-234966a7d06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429d23fe-0415-43ff-83e1-92de4368ad5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d68042-31e5-4c6f-ad75-dda99c0bbab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a345391-3e84-4b8b-8463-48d210a8a500",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262abb5f-3c24-4234-b6a9-dff8ecbfc64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d167aa5d-b4fa-46c4-b49a-769214314408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaef9da3-65cf-4e7e-a470-05f68c3001a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91157390-5774-4cc5-abdf-4e7971bd0212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff92b82e-b51b-415a-a665-c055088d7556",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcba3dc5-9d17-4945-b1f4-dedec3cdc839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059d72ac-b49c-4d42-913c-bfd0e8ff6f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad7d7e4-edd0-4c1c-b53d-a7b701dd5e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bc1848-d122-4365-9166-5593045de126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd383e80-0ed0-467c-82ba-d75d8658f5b5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79973d33-6192-41df-aded-ac63a47710b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8c73e0-6d15-4e1f-a5f2-14bcc3e63dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb9c6c3-6473-49bd-bf9b-112e6ba04674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4ba8d8-878a-4215-9abc-d486d6092230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a737d8b4-6c90-41d4-9f9c-dc639ee81668",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd1915a-61e2-48d6-aee8-9814bc02d46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da889798-e2c8-4846-958e-c972206d48f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc85327-dcba-4c9a-8a6e-924a8f7de796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb44e1f-aad7-4604-a996-424d223b32fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a9aa3-366d-4b6b-99b1-0d2a010819fc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59aff73-91dd-4330-a63d-a43fa97e7bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7321e735-9dcd-4d7c-8229-084a5df87120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299117ed-61db-4105-ab63-a1c3ab8517f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe2bb5e-d64e-4cdb-a0ec-e491c1678936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f6139-a276-4ee7-8ff5-babacf87c5a4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05d43dc-bde7-40a4-9bac-26252412b4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2bdc59-8684-4839-b3ad-4d04ddfcff5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebae703-216e-4b4a-a1c6-f5ab1c6cf350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9bdfc2-6071-4714-93bb-36029fc627bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a023e2-9c68-4ef5-a1ae-a12dde3afed6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b957615e-7d06-4ed5-bf55-9f8e3bf9adb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa003a74-2095-4062-85a9-6cfa93a38f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a3e2c3-7e78-4f08-b1c4-7fa887b9b945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad656d8-5d69-44eb-b944-97b249fca399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd84d8-167c-45d6-b5d0-09d9320da09e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad02b9d-c470-4716-a7cd-b5bfe327282d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4321ba0-3d37-4a3c-b2c8-0b45b3f9b692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605317ee-cab8-425f-991a-65e4f857d7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ced15d-4bbd-4edd-8408-cb859d1dda3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2668c1ba-9d32-4f88-9a54-57c6e72edf6e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc53bf5-084d-4d84-b0dd-84f2e51ca9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cd30c0-6db4-4a61-bf87-b4acd87db025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ac5159-31d2-49cf-859f-aa7d87205a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c67a5ec-0254-4626-aa33-1a8e10b09c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eb284a-339b-4800-b501-682e7a5a9cbd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3c28ac-7e17-42ca-a884-bea940482997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cc157e-79c8-4079-88bf-9f76059fcab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ac6cb-08f3-4eb2-82f4-300191aa6aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b74d67-d5b2-4e41-9217-8bc69b21f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc20b6-4cbd-4a1c-82a0-89f61fa17b49",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdbaa97-352b-4a7f-bd61-082576920bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78663f46-6e17-4aa0-9bb2-7e756528de7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fdca8a-960a-4fc8-a44c-c4a49f18abcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0205c7d-23d3-4806-8dff-aca3d620d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831d64a5-adc2-407d-b2fc-6a1dba0f0530",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841fdec7-5c0f-45c6-8dd0-8cf52648561a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b1e92b-f691-4071-aa98-4b6ebdd9cfa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d23d92-8ef9-4d03-8f7e-6c90db5ad06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01150004-2d95-49c8-93ce-1cccc735c5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fca47df-c95b-4f23-a60a-7a3516104a9c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929fde39-f245-468d-8504-d38b3357ee23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca816e9b-248e-4b52-8330-42911d6bb045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be81a74-5370-43f6-9a08-b025533b74af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5123dd3a-295c-4915-8e1b-f782ae7c7b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf171cd-f7fc-4888-a12a-34fd00afa565",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39930733-3d4e-4e3f-b8ad-d37da76b1eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0492c37f-fe8d-42eb-9e87-3f5d68041231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a36f8b-f96f-4366-ae61-7580f879c456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2e5186-5604-437b-ad1a-63f44d3ea68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1062bbb-fd8d-4088-ade8-e89635969feb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883f7212-59e3-4f0d-bae4-065883b69c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f18e914-db96-41d6-8653-8cde1e36251b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e9eded-fdb2-4c7b-9e50-12e05b3e4f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed66b4be-93ea-4c13-b525-be985a673c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1760ac3e-731d-44c6-a663-cdd1eb4f5367",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97577f7a-232f-46fd-9767-7a85211e9dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32ee501-0815-4eb9-af2b-85518c82547a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98615d84-8570-4385-9a43-5a8c5a63e77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d727d309-bf63-4054-b72f-442e2fd702d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e99dc9-ded0-41f2-97a5-ac59868c29fb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5bb8b7-a636-488e-bf9f-f5a2910d63d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd74e85-48a7-4b9d-8678-9b02a85a10bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac353871-315d-40fd-b176-ecf7ce3a4bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927030f0-54a0-4642-9fd0-eed01541a18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad42272-ae08-4b0b-9083-89bf586ff73d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fdbdfe-6262-42c5-82a1-48aadec3c789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40b3f44-bea7-424e-9f05-9130409ae65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2968480-d41b-407a-be8c-efe247df278c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fcfd45-68d9-445d-9f2d-153af6f6c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a87372c-e474-45a6-b1f0-fd30478cb279",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec814a94-c143-4bab-b083-2eb9d99a146c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440e8842-2fa8-4574-b41e-ba7021c6608e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25a81d4-2487-4d3e-af3f-d8ce3a731e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbab39e6-cc67-44dd-a134-21e83ba4b54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec3a058-eb1f-43c7-84b0-97134bb363c1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df83257-262e-450d-9384-644a2867af2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f1e304-6f68-4426-bec0-c5445d01dd31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf0e457-348c-462e-8704-c44a62a999ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3786fec3-b53f-4e41-950f-dab0efd1d432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241c6f8b-3d5d-440b-ac4c-eb54cdb4d7bb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1cc112-33c8-4c0d-9b94-2ffd0b40ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54e8f45-9d85-49ce-84d4-2828ec41c658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ed924b-4928-4d1a-b52a-79d7ec3eed00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d5c893-7251-4fa4-a8c4-ee8db98e0183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3070170c-39e6-4a8f-94da-549d7bcde3a7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861342eb-fd78-417b-b396-2d1918ff0979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59683605-9d13-4ec4-a6ce-fc1eb8a55c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d97559-3c56-42ba-a0f7-d62ce9fb07d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837cd783-cf28-4857-8560-0590080617ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4be4e8-9556-44e0-ba12-9e20d4478755",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0505e1d-cf00-4be8-a179-67bb809dac58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8136eb40-54f7-4658-8632-0c8dce06750b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24283ba-f35d-4a33-a9dc-57d61023043c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33a3f08-96c6-438d-83ad-ea32cdf1a195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5c5572-087b-4fbe-a4bd-09e98016fefc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a8ade3-5a4c-48ba-8598-df8537624c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ae1535-b96a-413f-bf39-2b6184e6ad08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76765c96-4319-4d0b-8bee-206a3f35822a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26bc6cd-7dae-435f-a7b4-a2a6f9739547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9fda76-5951-4e2f-8c12-fc4bed2937d7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a614f-b299-4a9a-b141-8d469c51f2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61474ebd-6491-4d8e-9a19-e94dc20c068e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01e53d8-07a3-4fa1-b69a-d488e429b51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0caa5a-8a62-4304-ac67-ec38b3e853a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7a27b0-3c39-4145-89f5-d23ffbe63c53",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c87d7b7-e59a-4583-addb-886c1a6342fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368a9bd1-697e-4afc-9af3-3aebac7396f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bfae1d-2c09-43e4-bcaa-ef5dddb21099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a6f4c5-ecbb-4ea5-ba3f-a202ec7dbda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209485d9-f2ce-4e0a-a809-7925c2a6b9b6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bf2b0e-7088-45b5-bb04-a7ea40bc6fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32f23c9-e0a0-4ef3-bd8f-c4a20fcaae8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b7a677-1f62-4a1d-97e5-751fa0b4ea59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e10a506-7c5e-4c9a-bfa9-77d6cb6de683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fb369-70e4-4f92-b01c-0295a2f21f5d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f307cef-ff64-4ea7-adfe-21dc60bfb48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915c2a67-3b93-4ba6-9226-197ddeed3b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b79a7d-c3db-477c-9870-c1306d5fdb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1659768-371a-4297-9385-bbe60306a502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec60cde1-ea74-4826-b027-6ecdacbd8818",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32975ad5-cc37-4310-835e-1088013d1bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ec3dd4-0158-4eeb-8f88-c1a1347e7e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd72189-8112-4dd5-b22f-d5a68cea727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e219d75-2533-4a58-a348-329bc6c9dfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d4b1f0-8923-4306-a439-2ecc5e5ac774",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305a7481-95a1-4fe4-91ad-4683497763ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce311f10-ca43-4ebf-9db4-006da926e241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0694dc-33ff-4dab-9883-41331bcc0bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ce2723-f6d8-4f7a-ad9f-0872d576fe5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c55df57-fd48-4c81-94a7-ac04c98907e0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc43fc4-81bb-4b44-8a11-06dad8517494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f244ec-4c8c-4acb-8ec8-aff587cb8c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8ca2dd-3d90-4abe-984d-1861e5c2db8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca26d1b-ae35-4f82-b6dd-5ddc4729da97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e3363c-2045-4d8b-9a77-394dd67370b5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146a054c-0125-48fa-9a20-7a8f2b7e3343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c923efaa-cb6b-484a-9b64-1a41b9a823c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a3308c-0a0d-430b-984f-336a24d17fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32d6575-570a-45ab-9088-1c5db2c06ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9429dd-ada4-4777-ae1c-b4a7106a0654",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a1d97d-e4d6-46d1-bdad-c39e7732fab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888c77ff-abfd-47fe-8b0d-4f90fba6d2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7981e45e-8a23-4c5f-af85-30ac9aa753c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f18533-28a9-4d9f-879d-23e37bdaebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2931c2f-84af-4ee8-82ec-dffea7ad5716",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c3bc30-f949-4e39-88ef-ce129a58142f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f90ece3-2a3e-47b2-a634-25a707e6b4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f2d1c-bffc-4358-be68-3caea6417ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ea12a7-4d5a-4c6f-8bdc-9ef0b19bdfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c1efec-6226-4bed-b5b6-4f3829f975e1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24096d70-b7f6-493e-93c8-dc49610836ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e754afb-cfb6-4bd7-b417-0b894d09314b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88bf347-68ca-4cbd-a099-ecce3d86c4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb65bc06-55ed-494d-905f-ffae279cd7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92c3188-7a8a-40e6-84fe-62141c7a3f81",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a0addb-9d9b-4d15-ba54-87485d676ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de84fb6-c583-41ff-904e-4a21b8ac134f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c482b70f-c235-46b1-ba35-16bdf6e9952b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928da7c4-efce-4220-952d-f7e4d8ccfaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174272d9-dd42-4d91-b2cb-db028c9ed0f6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57213966-d8b5-4ff3-8126-07823c9e8a37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae02c76a-b207-4b60-951a-87129722c3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe23aad-2186-4dcc-87bc-43c184e14beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac80c97-42f6-49a4-a044-676627f6ed8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f2efd1-3a08-45f8-9b04-9fd254a4b522",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82aec70-ffc7-4a05-8d2f-e0457c8fb4f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0c8016-610d-4b8d-a928-61b2a23ea7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efae0962-4288-4a7d-950f-9c8055733c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3863715d-13db-4155-95ff-f72a4e510eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a18abf-9e62-455e-8ac8-227da8821efd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27411785-aa4f-4791-8a4a-bbf86af014d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d9351a3-510f-4d3a-b679-cca8eb61ab39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f89629-de5b-4550-8a43-99610d887997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f920d80-ab2b-46df-bf4d-bed23cfb0486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c57b6d-855c-4154-8852-94308e158f18",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dac28f-88fb-4d27-908c-7b0909891d8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dfb8ceb-f742-48da-9cf2-fbc7f6090f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed248ef-6163-47e4-872e-4f3310043c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4aebc6-58dc-4808-a14a-573b7fadcc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3e9983-b753-45e8-978d-c802c2e82414",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2063d0-afbc-4da8-9d44-e169660809fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eea112b-fd00-42a8-9fe7-5346a555e88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc625f73-23ca-40b4-947a-20745d1338e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ac673a-f3b2-48bf-881b-f976efc1668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111a11c6-dcaf-4b57-89c7-00e712288de4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e1323c-eb30-4fff-92ff-99395bf83298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f6ea28-386f-49fb-a818-8b75aa390a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695fec8b-0a30-4ea1-9bb6-91ebc0942edd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70bbf38-6b82-47ea-8edf-8280cf52c795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238ef9a5-8ab3-4b75-85de-b2be4f4722d4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e5f75b-bdfa-4b6d-83b6-dadabf53c4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951c078b-878f-43b4-82c2-30212f3648a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731c99ec-5ebc-432f-9e99-45ad037bb979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895d7154-490a-4d99-8538-8ed24a0b2194"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "078d1282-b4df-4a90-962f-a723873c60c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "974ee290-aad0-443f-b1b0-0e9f6700620d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15e8af9b-2966-42f4-8e8a-3947302ed17f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "289cbded-8af0-4bf9-b52f-014edb8bd5c3"
                    }
                  }
                ]
              },
              {
                "id": "9bf17b25-77f9-4b73-b018-55d984767bcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b40be0f-115f-4562-915b-7fa76170af49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2d2a6b-038f-4592-b99a-3784f85b4f87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "58b199bd-2630-41d5-897b-a4034711b77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db134345-58db-4eaa-8837-d1392287f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bfb0ad6-5ff2-4401-aa15-901567f98397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ff73ac-53fa-4342-8005-65fc541dd89a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960b8563-dada-417d-b01a-be28e307232d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b932a021-7719-42f1-9fbe-e70d42e1a23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a1f45f-4531-4717-8286-344499813448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e398c2fa-2724-4b5e-92bb-1081a255d7b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c21eb74a-2aed-46db-bf84-17823d175922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00f364f1-cf02-4585-85c7-b7602e5b7f2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b63ce5de-09da-40de-863d-c1304efbdf3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abfad248-d808-41b6-bf98-95edc26400c9"
                    }
                  }
                ]
              },
              {
                "id": "3d644857-a3b9-4021-a95c-4373bfa0ce5f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4ed57c03-f0f1-458e-a04b-115912fb3606",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36510d1b-dfe2-4b11-9e6e-a95274e4df00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "01c993d1-4cef-49fc-a43a-3ca78116020b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc625e1e-2fcd-452a-8c2c-7a33adf03132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb7b8d4-447e-4d29-b99c-0d9644d7fda8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "883ae7f8-8f3c-44ab-891d-d3e366e897cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f20cc28-5293-4c2a-8cc4-9c4040a6aa0a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf31fedb-6b1a-47f7-9349-38e868a888e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8de93de8-4aa3-47d1-ba78-8554cc336912"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc8d2663-db86-4d67-97b0-d2035f82193d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4529fa9d-5e4b-4326-b473-4ba3ed00ea58"
                    }
                  }
                ]
              },
              {
                "id": "90bc7ee6-cbae-44a2-bcf8-64450fa56c43",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce440434-bfca-4f21-8cb7-66b2d8e64122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f7113191-c045-4ec5-bdc9-d5323c3de68b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40ad41e0-6e60-4c25-a835-b73a0678fe8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab584dd0-37a0-422f-820c-091cce618699"
                    }
                  }
                ]
              },
              {
                "id": "a206a590-92ae-4f85-9a26-8e65ea31101d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e825741d-c7a6-490f-8f2b-e56c583c17be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e58a91f-2e9e-4fa1-8516-fcc5c8d3dea4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eabaddcc-095b-41aa-9673-9774858e7db6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5f1b6cd-26b9-40ac-86d3-666bf84d5549"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c796820-7605-48f2-a248-80970bd6ad1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c8ec0d32-4ebe-40ea-b39f-9059bc264316"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca21d70d-aa92-4302-95ae-b2189b9fa6d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d63f1ffa-4a64-4653-986e-5a49f733d8e8"
            }
          }
        ]
      },
      {
        "id": "eef2617f-a5b0-4cda-b9c3-402a6f1abc3e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "72db06e7-21c7-4225-9266-7d04a1196cee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "444bbaf4-dccd-42d4-b1d3-207ca48e1da0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a77af6-a476-4ab5-861d-f75f9b181c32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf186722-e106-4f2e-885b-d7abff9fe7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd02e40-2286-45bd-8183-729eecd6a83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adfb8aed-d01b-4f25-95bd-ee100b65bf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1debec-c698-43fb-9bc1-5325301ac983",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a9703-3c57-4be1-aba4-6caf4195ad1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "91c4eff9-e62a-4941-a8b3-a9f237b59a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d46e9e-b5d6-4f42-986a-1841a08cda9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1a68aa6-45ca-4a96-ae7d-7d8b897d8f52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15268bd7-c3d8-45aa-b0ad-52f682329ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5b015a7-64e1-4912-a149-e5919d8396f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a17424b-2921-4cae-bb8e-3a1e69dc9ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9cba266-77ed-4706-aad7-e13a0262e6ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af7cb0a9-0219-4ca2-ab4c-6d209eb0f2ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a53b19a2-318a-4ec7-9967-ea68ac1923ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6994d21b-3419-4c69-aaab-877e5a812d45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c191628-d360-4199-92c8-87f91a894a1d"
            }
          }
        ]
      },
      {
        "id": "f825dcb4-9f4e-4660-8cd1-8bb5679e6d2c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8a15641e-c196-49e2-ac50-38669e80aa87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23da5e25-da72-4a0f-a927-91d333ee35a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2853eb50-f055-40c6-9a45-09f277095e35",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda484aa-8764-4a45-8985-dc8d6f8d6d3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe0b0ec5-9f62-4f84-aecf-b4d25e9c9ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c0a953-bc99-4bd8-8769-ae4c4a2643bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eae854f7-7a12-4f0f-8302-6aa75c1ed668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aef474-1881-47f3-b9c4-b3ec6964fbcf",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd475384-9a86-41a7-beda-1c7cdfec295e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58153c60-0e99-459c-9206-a8d034a0bc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9452fd7-ea9b-4154-ace0-29e41edbbeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e2daf44-5f84-4f4b-bd12-7cc1544509ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83610c31-23c3-4a1a-a655-2238c3c861ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb20264f-1906-48d6-81ae-90c85653ba28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b220211c-e545-42cc-9b23-59accd01f612",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddc7fb64-18c7-4814-b0bc-7895306d8fd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98759542-da6b-4d7f-90ca-b4006ef50008",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0ba441f1-34cd-4c42-b213-ca99e5bbfea5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f089b81c-551e-4038-bd5e-35f5543d9b0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aaf99df1-f1c7-4a82-bf71-40aba02bc4fe"
            }
          }
        ]
      },
      {
        "id": "809d1268-0918-4db9-89f1-12e52c2d9c8e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "99ecadf2-6235-4c54-b52f-b09b02d9c405",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69f96e26-2922-4b20-9cbf-7a8dd677ee95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbdefd12-6794-4bd9-8810-afe23add0ac9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5ab2b2-c65a-4ff2-8d4c-6555f9ac22d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adad72f0-aec9-4048-85a8-c7bea1fe13d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017b5f28-0771-40ab-9d9f-a891b5715043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d24eba87-9ae0-44ba-b26d-7d05fb062efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c77864-2ec3-4ff8-afb8-7c214d6bd280",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0954e8e0-810b-408e-8309-9b0ccb680e79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8ae9e651-4094-4f6f-b252-220867e944a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b28258e-f7a7-4d91-8902-f5989c96f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b310d261-400e-4ca9-95ce-579967692e33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c61d28-bb73-4dce-a66f-1bfcbcd6a2fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb5cbf7f-7b74-4e3d-b2bf-b143e8d9d25f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1c40bd2-dc7b-41d4-9093-4541345372fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5986e0b-617c-41ef-81f1-e3c231d22a9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cdac452-2819-4353-9da5-f2bfcca5ab59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1fa043c6-f2da-4cd5-82f9-693555444db7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9886e005-fc86-46e7-a091-ce6f5da01302",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90374410-47b2-4dd4-9e0e-0d460aa727cd"
            }
          }
        ]
      },
      {
        "id": "b5482ac3-eb76-4cf0-841d-5241dad1908b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53e7a2ea-e235-4112-ad77-8f5ebc13154a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b6bc732-a44b-4f94-83bd-d26347667983",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "27bea9c6-d745-498c-bbe2-08767bbb683a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e5113fe-c441-48aa-963a-a500bcb5306d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24b460de-b6ab-4f2d-a638-0bcda4fbe345",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 471.8314176245213,
      "responseMin": 7,
      "responseMax": 7410,
      "responseSd": 638.2193937577335,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668559496198,
      "completed": 1668559630057
    },
    "executions": [
      {
        "id": "8b26b1bc-5c2a-49d5-8213-292d0cd9b05e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2375bba-7687-4c27-b15d-c9983e6ff1de",
          "httpRequestId": "0779bc18-2c27-455a-a4db-3f05d23a48dd"
        },
        "item": {
          "id": "8b26b1bc-5c2a-49d5-8213-292d0cd9b05e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fb7937dd-7834-414f-bd38-6ade66f5c3c2",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "dc188ffd-7081-45ac-950e-749e3dc208f5",
        "cursor": {
          "ref": "678c2c9c-cc71-4dfd-b768-553c90b1ebe4",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "01f3e7b7-b038-4708-9064-55efe75683ef"
        },
        "item": {
          "id": "dc188ffd-7081-45ac-950e-749e3dc208f5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7485442e-0f7a-494c-a615-3d9c44990148",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "151e2fab-a2f5-4fbe-8223-eea7b88642c9",
        "cursor": {
          "ref": "b54077b2-f2a2-421c-b795-d938e42f51c9",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5f63dc2f-b8c1-4e84-8446-5ba3b356c5bb"
        },
        "item": {
          "id": "151e2fab-a2f5-4fbe-8223-eea7b88642c9",
          "name": "did_json"
        },
        "response": {
          "id": "3b8d1eae-d939-4323-b609-9ece8d77db6e",
          "status": "OK",
          "code": 200,
          "responseTime": 523,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2b54e-de95-495b-b1d2-7a0c5c53c16c",
        "cursor": {
          "ref": "c09a26a4-e273-449c-9642-d204a4e8f5b5",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "17863c67-10be-4be4-9451-418c076f0729"
        },
        "item": {
          "id": "9cf2b54e-de95-495b-b1d2-7a0c5c53c16c",
          "name": "did:invalid"
        },
        "response": {
          "id": "f45614ac-a4dc-465d-8131-f4eb80cfee7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2b54e-de95-495b-b1d2-7a0c5c53c16c",
        "cursor": {
          "ref": "c09a26a4-e273-449c-9642-d204a4e8f5b5",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "17863c67-10be-4be4-9451-418c076f0729"
        },
        "item": {
          "id": "9cf2b54e-de95-495b-b1d2-7a0c5c53c16c",
          "name": "did:invalid"
        },
        "response": {
          "id": "f45614ac-a4dc-465d-8131-f4eb80cfee7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51e27ea-7e77-44f7-af8a-a62b54c55da2",
        "cursor": {
          "ref": "57c2e0d3-34be-4b44-9691-7f4a55fc10ce",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9099c991-086d-4734-9c86-3085c87df341"
        },
        "item": {
          "id": "b51e27ea-7e77-44f7-af8a-a62b54c55da2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5a425a0f-c9fb-4bdd-9ad1-abe284ce025f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 562,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa03e948-d559-4218-b84a-87a284be7a01",
        "cursor": {
          "ref": "4abc6176-23fe-4cf7-96a6-477fce01dbb7",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f3ab4279-5977-402f-8676-779bc64081a5"
        },
        "item": {
          "id": "aa03e948-d559-4218-b84a-87a284be7a01",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "01f91e8c-d4f0-4ce4-b16b-e4f7d458d0b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 472,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d69dea-588f-4a25-89b3-2bf2c104a3bb",
        "cursor": {
          "ref": "6c5bc183-2344-4b2b-8ecc-98e41439fef0",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "904c54fe-3d00-4e86-9b7f-8a0a908d9251"
        },
        "item": {
          "id": "a3d69dea-588f-4a25-89b3-2bf2c104a3bb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9faa8e18-8cbe-4578-8df0-5799e01f545b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44d7a56-cf83-4690-8c93-8ff20468b7f0",
        "cursor": {
          "ref": "8c57fa60-82f3-4baa-943d-358e49fcd154",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dc32f40d-4e84-47e9-b892-18fb66ec59b9"
        },
        "item": {
          "id": "b44d7a56-cf83-4690-8c93-8ff20468b7f0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "893bdb39-71cf-44be-aa32-8a0b5d9a4611",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 422,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44d7a56-cf83-4690-8c93-8ff20468b7f0",
        "cursor": {
          "ref": "8c57fa60-82f3-4baa-943d-358e49fcd154",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dc32f40d-4e84-47e9-b892-18fb66ec59b9"
        },
        "item": {
          "id": "b44d7a56-cf83-4690-8c93-8ff20468b7f0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "893bdb39-71cf-44be-aa32-8a0b5d9a4611",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 422,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce2a327-55e5-44ad-996d-7f32453fb58c",
        "cursor": {
          "ref": "69ceba03-43ef-4b01-b82a-c01bac31de61",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f26a0ac-fdc7-425d-b295-243a389649f4"
        },
        "item": {
          "id": "2ce2a327-55e5-44ad-996d-7f32453fb58c",
          "name": "identifiers"
        },
        "response": {
          "id": "eb9b5f43-622c-453b-83bd-96eea94151f4",
          "status": "OK",
          "code": 200,
          "responseTime": 738,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9130c59-2def-49a5-92f6-e57068d39f54",
        "cursor": {
          "ref": "a4fd8069-81b9-4c21-bbf8-24beca83dfb2",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1e78f15-e628-4a6d-bf4b-40aa84beed1d"
        },
        "item": {
          "id": "a9130c59-2def-49a5-92f6-e57068d39f54",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "43051ee1-fe1f-4a77-87a0-ffc95f55c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9130c59-2def-49a5-92f6-e57068d39f54",
        "cursor": {
          "ref": "a4fd8069-81b9-4c21-bbf8-24beca83dfb2",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1e78f15-e628-4a6d-bf4b-40aa84beed1d"
        },
        "item": {
          "id": "a9130c59-2def-49a5-92f6-e57068d39f54",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "43051ee1-fe1f-4a77-87a0-ffc95f55c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af19cbde-2f4a-4543-a908-e47fba03210c",
        "cursor": {
          "ref": "0b56b599-dfa9-4ef9-af09-b70baff42672",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "89c0b087-964a-4e68-9c83-c687112ef879"
        },
        "item": {
          "id": "af19cbde-2f4a-4543-a908-e47fba03210c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "70f33199-1ac9-471a-82ea-aa59302e5504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d530ebd-b735-4934-a488-c0c7ce519873",
        "cursor": {
          "ref": "eabbc857-d09a-4d30-bc1e-f2ce450a3233",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d130627b-e51a-44de-a4dc-4131b5ec1a57"
        },
        "item": {
          "id": "5d530ebd-b735-4934-a488-c0c7ce519873",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "32ee7914-94d9-4526-b8fa-97ce2abdeaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f352d42-ab00-4c3c-a85d-c4bee1370da3",
        "cursor": {
          "ref": "888d0df9-2e6b-49d9-b409-227562792c00",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d368173d-ab8f-4f48-b51d-595370aa9431"
        },
        "item": {
          "id": "2f352d42-ab00-4c3c-a85d-c4bee1370da3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1e0c2564-b33c-484a-91a5-e12a11184181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbe945e-3d11-477a-9ed7-3aa5a98f182a",
        "cursor": {
          "ref": "e8d2f3e3-b794-4f38-ae88-ac9d91633c43",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a299b754-a208-4ddf-add6-f3dcacaee995"
        },
        "item": {
          "id": "bfbe945e-3d11-477a-9ed7-3aa5a98f182a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f95c3a8f-0173-4447-bf9e-32f226402910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c66b268-8081-49ff-beff-7fe9f4b2bb47",
        "cursor": {
          "ref": "f19a4667-3605-4ccc-9593-94b4ad9b1244",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "080b1637-7bf0-462a-8c33-dc650a27c6c5"
        },
        "item": {
          "id": "0c66b268-8081-49ff-beff-7fe9f4b2bb47",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "43ef3f5e-565b-490d-ad65-9c78c2ccfc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7540d1-e6fe-4437-81a6-0c0fe798736b",
        "cursor": {
          "ref": "a500790c-aed5-4e83-9ec7-87b3b6bb495c",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "95f1b6d9-7124-45ea-9583-adab91f7f79c"
        },
        "item": {
          "id": "0a7540d1-e6fe-4437-81a6-0c0fe798736b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1c8a19dd-b4d2-437f-8929-415332ca4f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a858c47-5881-4ae0-bf46-de1231288fd2",
        "cursor": {
          "ref": "0abe2df6-acb7-49dd-bd90-2a1e8750974e",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "240b29e0-427e-4dda-a56e-01e399112f50"
        },
        "item": {
          "id": "4a858c47-5881-4ae0-bf46-de1231288fd2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ec9ba3ea-92a3-4cc5-882a-50930b2465ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdad002-d041-4484-a60b-e355dbc38123",
        "cursor": {
          "ref": "41681b1b-9f27-4c2c-a8e2-e004fe35f04f",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d394ab90-5cfd-46d2-adaf-9b14dfa4687a"
        },
        "item": {
          "id": "8bdad002-d041-4484-a60b-e355dbc38123",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8b2ef9e2-ef10-4489-b3ea-d2354d4a6899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68d5083-1398-495f-bce6-f83a176ca8c7",
        "cursor": {
          "ref": "ed01c225-9f6e-492b-aa0e-0cf6d35fb95f",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "60ec5409-2079-42c8-8f78-b10deda1dd01"
        },
        "item": {
          "id": "e68d5083-1398-495f-bce6-f83a176ca8c7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9c7866e3-9818-42a0-bd7c-f0dbcb8270de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c1bd2-74dc-4b19-8ea3-429670497ab4",
        "cursor": {
          "ref": "8a427e5d-2da7-4a57-8fa0-79a7987c9584",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d18905a0-f388-438f-a184-030cbe629a92"
        },
        "item": {
          "id": "2e1c1bd2-74dc-4b19-8ea3-429670497ab4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e54c01cd-c85f-4f5e-b0a0-2c72169b2377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878c907d-62e7-42e4-b738-c1b91977b9c9",
        "cursor": {
          "ref": "a8931e91-ea77-4df8-855b-af2cbf30358a",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3174cdc4-ac59-4aff-b5f3-dbb284ee6061"
        },
        "item": {
          "id": "878c907d-62e7-42e4-b738-c1b91977b9c9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a967118e-7891-43a8-8939-37b0b3227d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef24218-ef4d-4031-83ed-4718fbcf8145",
        "cursor": {
          "ref": "fb92ecf3-7cb8-45fe-976a-02bc76c4339a",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8cac2624-cd62-49d4-998a-c2bbb7340a93"
        },
        "item": {
          "id": "8ef24218-ef4d-4031-83ed-4718fbcf8145",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd89afe0-61d2-4e24-ab23-df8a6387dc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1136,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f703b4-d280-4472-af75-975bccb0e669",
        "cursor": {
          "ref": "1dfcea42-550b-4662-bbf2-558e4b672b54",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42686bb2-3e6f-46cf-84f3-7a7ac62be25a"
        },
        "item": {
          "id": "19f703b4-d280-4472-af75-975bccb0e669",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7df707ae-524d-4e61-889c-d62928282dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcf295f-c06c-4bbd-8248-d9c6a6743c62",
        "cursor": {
          "ref": "59a66a21-f9e3-4919-9e0b-5576c890e5ad",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b6706cbf-9f6f-4b04-a6f5-f2afcf4d26e3"
        },
        "item": {
          "id": "afcf295f-c06c-4bbd-8248-d9c6a6743c62",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1584d7bc-a046-46fb-8e0e-230bd4c675ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba01acdb-ed70-4f5b-8941-d458c453934a",
        "cursor": {
          "ref": "55238a5a-1946-4d8b-84c2-37a540adccb2",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "51c50178-b5ab-4516-9fe9-a20aaae88733"
        },
        "item": {
          "id": "ba01acdb-ed70-4f5b-8941-d458c453934a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bc9c349c-b9be-4fa1-a134-0e73afaef8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0a10c5-db03-496e-adb3-564e24dd9c32",
        "cursor": {
          "ref": "7d75dc5a-e713-406e-bbcd-a333097668a0",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "39241f62-3b6d-4468-8e3e-fca8735597f2"
        },
        "item": {
          "id": "3c0a10c5-db03-496e-adb3-564e24dd9c32",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ddcf0f5c-0341-4c2a-9c7c-f3f11bda9971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4284aa40-c013-4c19-9cc5-adf713edede3",
        "cursor": {
          "ref": "0090d64c-a076-460a-9249-2b45b2793638",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "013e309e-38c8-42d4-b34f-22d0852f1b21"
        },
        "item": {
          "id": "4284aa40-c013-4c19-9cc5-adf713edede3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9d96253f-0813-450b-b428-794d38f0911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf61b4ae-d56f-4fca-ad3a-5047fbf70ab9",
        "cursor": {
          "ref": "0dedd166-e9d0-4ff6-abc0-ed1f03726947",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d2f88c7-8c1c-497b-8e10-024ab6d3dc46"
        },
        "item": {
          "id": "cf61b4ae-d56f-4fca-ad3a-5047fbf70ab9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5646f70f-c271-4bca-807a-0811c0e515d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629ccae1-33b8-45d7-91d7-3565d376eb4e",
        "cursor": {
          "ref": "d62c45ae-4e95-4340-8ef6-a0a78c247028",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "86c710e4-6fda-4bd3-8643-2089a0c07c73"
        },
        "item": {
          "id": "629ccae1-33b8-45d7-91d7-3565d376eb4e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3238571b-aed7-4968-8194-4720dea7e0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e355db4-46b9-46f8-849f-7ce344a591ee",
        "cursor": {
          "ref": "04cfa6b0-b37e-4269-a4e3-a7752806d2d3",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2b546894-f86a-4700-bf88-cc88f7f67108"
        },
        "item": {
          "id": "4e355db4-46b9-46f8-849f-7ce344a591ee",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d8f89581-8765-482d-8988-108be60fd2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3353365b-1b24-4f8c-8c0b-ac1b89fe1423",
        "cursor": {
          "ref": "02ba19a8-ba93-426f-b599-59027333f2cf",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1a04c6ea-5783-4257-a8cd-2e47763975a0"
        },
        "item": {
          "id": "3353365b-1b24-4f8c-8c0b-ac1b89fe1423",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a0e496b2-addc-4165-9f8a-00aa54916d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22366a10-c8ae-4eba-a845-92d0236a5e4d",
        "cursor": {
          "ref": "61890eaa-6dfb-4e9f-ba26-f95fb00057b4",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "828a3e38-88b2-4ef4-88ab-ed18193573dc"
        },
        "item": {
          "id": "22366a10-c8ae-4eba-a845-92d0236a5e4d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "29f991e2-69ea-47be-93de-5bbc266fd7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b0f308-4fc6-433c-9c62-a38ce15a49ca",
        "cursor": {
          "ref": "6ea288c5-005d-4edf-8711-c6efcf70e6a6",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8bd35410-c5b6-4e2d-8de4-5fc1d722971a"
        },
        "item": {
          "id": "01b0f308-4fc6-433c-9c62-a38ce15a49ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0346a566-7369-43ef-8822-c73e5f025f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9514afea-de55-4ca5-97d8-88ca527ba76b",
        "cursor": {
          "ref": "1e09b5ef-c7ee-4008-a7f8-553278c2419a",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4dd29a1d-b17d-4d71-8f90-4ca81491fc79"
        },
        "item": {
          "id": "9514afea-de55-4ca5-97d8-88ca527ba76b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8c5fcca2-0c6f-4067-89bf-c412f050c802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7ff63c-bbbd-4789-a404-6d2ee529095d",
        "cursor": {
          "ref": "d6c0dde2-0c34-4034-b054-3eb400cd9254",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "75c202e9-685d-4be5-ad9f-77e9605fe7ae"
        },
        "item": {
          "id": "7f7ff63c-bbbd-4789-a404-6d2ee529095d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "52f1ccac-1714-4336-bf35-202a1d2841e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb15b2-e5f7-4543-992b-b5f91b44ba4b",
        "cursor": {
          "ref": "fdd251d3-e3ee-41a1-aec6-f217dfefcc91",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1f5623ad-ef26-42ba-944f-5b7881199096"
        },
        "item": {
          "id": "57bb15b2-e5f7-4543-992b-b5f91b44ba4b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f09395da-6873-4ba5-bf12-7f64523c1156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54519c6c-4b15-4d44-9140-6abde53f075f",
        "cursor": {
          "ref": "9fd0baa7-ce6a-450a-9243-17b872b6343a",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "732fae59-622b-455d-9d7a-320d1c7b04a1"
        },
        "item": {
          "id": "54519c6c-4b15-4d44-9140-6abde53f075f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "56cc1572-e65c-42ac-8fd6-48fe725c5afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811ec64c-cada-4d1f-871f-aa895f7820fe",
        "cursor": {
          "ref": "e2ce7b87-734f-42c5-9544-475c1ac46be9",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5aa93850-74a5-4e79-9423-20599dd6dcc5"
        },
        "item": {
          "id": "811ec64c-cada-4d1f-871f-aa895f7820fe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "74d7b1c8-8809-4a8c-96db-411f17ca19fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d69aec-568f-4d1c-9de2-6752595d86f1",
        "cursor": {
          "ref": "7e35a455-c9bf-47ee-9520-013ce8681085",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ff039f1c-1337-4c33-9bf4-5b0d5d996c34"
        },
        "item": {
          "id": "f5d69aec-568f-4d1c-9de2-6752595d86f1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ed349c27-358e-45e9-88d4-9db6dbcc574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea246c91-605e-4c09-9cce-76d5caf3201b",
        "cursor": {
          "ref": "665a19c1-3a16-46a7-bad0-8f0256d0607a",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a56ea30d-fc65-424e-8b7a-6f8c9299a183"
        },
        "item": {
          "id": "ea246c91-605e-4c09-9cce-76d5caf3201b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3983f6ee-fa2a-4ad1-9c18-059e39333c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171d2c92-de69-4a79-844a-de396adf18aa",
        "cursor": {
          "ref": "dbc1c211-2cec-4d6a-bdba-06c7ee141408",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b9f1287b-6794-475c-be63-b71ad9d42d08"
        },
        "item": {
          "id": "171d2c92-de69-4a79-844a-de396adf18aa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "63c2dc2b-fb0e-4899-8aac-e2451cb00dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54b8ac-966f-4b04-a48a-732da9d5b5c1",
        "cursor": {
          "ref": "f33bf3e7-d4a4-48be-9fca-39e2b59823c7",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3e2b2011-b943-484d-b2d1-5ecc4e6eaf79"
        },
        "item": {
          "id": "ad54b8ac-966f-4b04-a48a-732da9d5b5c1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "694fc57c-5f62-4dd9-b830-d9479d1367ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eff8d0-e78a-41a0-b709-4535e2f44a64",
        "cursor": {
          "ref": "d7b1d781-9d2c-4359-b68a-3b2569e69636",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4834acde-dd88-4889-83bf-80d1e9d59553"
        },
        "item": {
          "id": "40eff8d0-e78a-41a0-b709-4535e2f44a64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ea27e905-3375-4598-98a1-e6e09a0fc967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb832cae-e0b6-49c1-b6cb-63627ad38f2c",
        "cursor": {
          "ref": "00adea94-9b6f-4c44-8249-6c8491080ae4",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "caadea23-b374-4bd5-b908-653f9be65e57"
        },
        "item": {
          "id": "eb832cae-e0b6-49c1-b6cb-63627ad38f2c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a32d8dfa-c5d7-4773-a4a5-f5fcd940dd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022562f3-8f4c-4468-ab3e-2ddf7d2cad8d",
        "cursor": {
          "ref": "a03e9f45-9c9e-4472-8e52-d87070ddd124",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "807006f1-db4c-4059-bc3d-d3e2fc2e9f63"
        },
        "item": {
          "id": "022562f3-8f4c-4468-ab3e-2ddf7d2cad8d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "32df4757-a39d-4655-8d16-8cd1c73f4874",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 485,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b177fff6-9079-4e02-8c8c-0d8b67035a5e",
        "cursor": {
          "ref": "5e0fa524-d3b0-4015-8693-f4a3a5e23205",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0f314c7-6db5-4a52-94a8-c3fcea1f50af"
        },
        "item": {
          "id": "b177fff6-9079-4e02-8c8c-0d8b67035a5e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1edef202-850d-46db-9b4d-f4d5dac64e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea21460c-96d7-41fc-8a68-81f5d6c1a968",
        "cursor": {
          "ref": "f5058ab8-e965-4194-bd8d-5b70ec8cbd2e",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b3ebe5bd-dc78-46a6-b7c9-50ae09cb612b"
        },
        "item": {
          "id": "ea21460c-96d7-41fc-8a68-81f5d6c1a968",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "601d2590-90cf-46f1-9681-9f0eb793fab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7e949e-d762-4f92-8f74-42373f1ab233",
        "cursor": {
          "ref": "feb3aa7f-b0d6-4879-aab6-4053283757ed",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "578e2d3e-f1ff-4a80-83a4-6f2be718a178"
        },
        "item": {
          "id": "1c7e949e-d762-4f92-8f74-42373f1ab233",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "432bdbf4-2263-4aff-b1c1-590cae1e8d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265d0bd1-1791-4d79-aaab-8a0f80dc69ae",
        "cursor": {
          "ref": "34d64f47-d0fb-4053-86de-9a28011f5b8f",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a8294c3c-b913-49c5-ab87-f3e5aae4c53d"
        },
        "item": {
          "id": "265d0bd1-1791-4d79-aaab-8a0f80dc69ae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d01de28f-9e8c-4cb0-9368-43fcd813aa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc53fb2-1a5d-4181-b54c-bf2672610715",
        "cursor": {
          "ref": "6000ed33-8da7-4174-8445-04aed6739c94",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef98dcba-1fcb-4c04-8b7f-5df5b5b7fae8"
        },
        "item": {
          "id": "7cc53fb2-1a5d-4181-b54c-bf2672610715",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e66739cd-1029-4d8d-af63-510fd3e73aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97617184-5d7a-4fd7-b789-59e01645b677",
        "cursor": {
          "ref": "4e5bc8ed-cef8-4114-bb4b-c16224f3e911",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "250f4dc4-7ddb-4e6e-94e1-c15623696dd6"
        },
        "item": {
          "id": "97617184-5d7a-4fd7-b789-59e01645b677",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3fa9bb25-5868-4e44-a17d-4e6f0b301fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9362407e-3ff5-4d8b-9075-000169f44f37",
        "cursor": {
          "ref": "78c52ec9-c56b-4ec2-b484-ba51b7eaf772",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "be9876fb-efde-436d-aba0-ad5145d9ef08"
        },
        "item": {
          "id": "9362407e-3ff5-4d8b-9075-000169f44f37",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fede3b01-0e57-45bf-8c75-4d73bff5e156",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 534,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768f0775-88bf-4537-8333-a8574297dfed",
        "cursor": {
          "ref": "03acc548-ac5c-47f5-9e62-5a09a3c79e80",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "13efe956-a0e1-41c2-adde-8a57f522140b"
        },
        "item": {
          "id": "768f0775-88bf-4537-8333-a8574297dfed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fbb82c67-d21f-4f49-9238-2e794e1ed3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f2b526-bb2d-47e6-a30c-ce9bbf17770b",
        "cursor": {
          "ref": "e1ff9eee-53e8-4771-b0f9-fc7ca56c26dd",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "351ec120-d8c5-4c6b-a711-293d3027d38c"
        },
        "item": {
          "id": "a0f2b526-bb2d-47e6-a30c-ce9bbf17770b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b3945500-5b18-4cec-9ae5-27da89c1147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9930c-3e29-4be9-b407-a12936020776",
        "cursor": {
          "ref": "8e24ae4e-f7b1-47ba-9efa-e0a0d70aaede",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "54cbd773-5faa-4f9e-a1be-50040c77d9b8"
        },
        "item": {
          "id": "cee9930c-3e29-4be9-b407-a12936020776",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "31b25e4d-5f52-4c35-b5ee-71a173d3f9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3356b2f7-a8b8-4fe3-ab7b-1f4cafb90fed",
        "cursor": {
          "ref": "73def3a1-32f3-4773-9bfe-ae70007200fd",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c54ec19b-dbe3-441d-a0e4-1151628116e6"
        },
        "item": {
          "id": "3356b2f7-a8b8-4fe3-ab7b-1f4cafb90fed",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7d32b387-a18f-4d8e-a12d-20adbe45ae03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f9d416-8d3a-435c-acf8-f5eee82bf41f",
        "cursor": {
          "ref": "8ffe1f65-204c-4682-af85-a0bf25eb026e",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "44cbb9f4-3f5d-436d-9be1-cb74ffd43460"
        },
        "item": {
          "id": "e7f9d416-8d3a-435c-acf8-f5eee82bf41f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "91182f9c-a9cb-49a6-b6bb-0c739b720be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5070ef5-28cd-49cb-8391-d2569a48141b",
        "cursor": {
          "ref": "18973068-e891-40f4-b92d-ef94dadcbda3",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "69c2b17c-cafe-47e5-9a56-ceb8989b99e0"
        },
        "item": {
          "id": "d5070ef5-28cd-49cb-8391-d2569a48141b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "76a2a339-4765-4864-8501-864dc5404512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaafa7d-7c94-43ed-8a8f-e57a7f950f38",
        "cursor": {
          "ref": "af5a4a94-7824-46ad-91c1-65141a45d04e",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "88983296-8e49-41c1-8be7-10a1299a628b"
        },
        "item": {
          "id": "7eaafa7d-7c94-43ed-8a8f-e57a7f950f38",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a76a42b9-4b77-480d-988a-3719a21f80e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db65409-23e6-487d-8c46-4b425c530d1c",
        "cursor": {
          "ref": "cabe1205-337d-4b8b-b418-17a929af64a1",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ee69d914-e690-4fcb-af32-dab4516b2509"
        },
        "item": {
          "id": "5db65409-23e6-487d-8c46-4b425c530d1c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d6449960-a9e7-4f27-bed2-d753d9c307fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe83052-abbe-47ec-84fe-e51fc4157bef",
        "cursor": {
          "ref": "19581b8c-7e45-4fd5-bfbb-35e451bed841",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3ce47414-cf19-42fc-a906-3a17026ba422"
        },
        "item": {
          "id": "9fe83052-abbe-47ec-84fe-e51fc4157bef",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c59f29a2-ddd6-4411-9d3d-f87457f324c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055355e1-d7d6-4160-81f8-f1a673669222",
        "cursor": {
          "ref": "640d1395-1eec-4727-b75b-6d8facc614fc",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "81e5a064-8ff0-4c38-be28-08c6d1944e2f"
        },
        "item": {
          "id": "055355e1-d7d6-4160-81f8-f1a673669222",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "53d145e5-3103-418d-8010-7eb5e748e833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089c609c-6bf2-48a8-9b03-27bc0359c816",
        "cursor": {
          "ref": "4a7e942d-6b3f-4713-abff-b22088f06a62",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af7a70f2-4392-4592-9260-fbece02938cd"
        },
        "item": {
          "id": "089c609c-6bf2-48a8-9b03-27bc0359c816",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2c7a756-3f75-47f0-9fb9-5b692cfd6692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0989c5c4-6629-463c-ad24-737750c43ec2",
        "cursor": {
          "ref": "b6eb7f13-9e30-4009-8778-833c1558100a",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bb440649-8b49-4ab7-9b3f-4ee16f12c880"
        },
        "item": {
          "id": "0989c5c4-6629-463c-ad24-737750c43ec2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29847dd1-fa17-447b-9afe-ee3c8b899a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bde29e8-6826-48bd-bb67-099b6f533a2c",
        "cursor": {
          "ref": "602afeab-f131-4aa8-8ea4-de23c576203a",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5e1d460c-b556-4f8f-8f35-7096b18e1e1c"
        },
        "item": {
          "id": "6bde29e8-6826-48bd-bb67-099b6f533a2c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6378f552-d9af-40c1-8f27-cea8df29da4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a60b30e-1901-40ca-b40b-2b9de0927293",
        "cursor": {
          "ref": "402e50bf-d8b8-42d1-8343-3d4137ca72f8",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57a03027-dc2f-4291-ac6a-c67346dc432c"
        },
        "item": {
          "id": "5a60b30e-1901-40ca-b40b-2b9de0927293",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "09fc7f3c-b065-4bf0-9b47-0cb0ebfea3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815fa5c0-1a97-4f13-a6ba-d72a81431940",
        "cursor": {
          "ref": "1f15541b-fff4-471e-bf09-c00a6fa9c691",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bcf4d9b6-d35b-4df7-bb54-be4dca9378b8"
        },
        "item": {
          "id": "815fa5c0-1a97-4f13-a6ba-d72a81431940",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5cc4b401-5afb-4f54-ab0c-d26ccd246bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56736c3a-4b01-402b-b250-c89109180e50",
        "cursor": {
          "ref": "5703b74b-e8bf-4a6d-87a2-0541286e1751",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e6893859-197c-42ae-8fcb-00004cfc082b"
        },
        "item": {
          "id": "56736c3a-4b01-402b-b250-c89109180e50",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "308037f8-d9c1-47aa-84ae-5dbc6bcf02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e3a3c1-5119-4ab3-a5de-d1d596c5ae2a",
        "cursor": {
          "ref": "81e75cd7-f032-478a-928c-ad8397213379",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d27b77e3-317c-4100-97b9-a565d571147f"
        },
        "item": {
          "id": "b0e3a3c1-5119-4ab3-a5de-d1d596c5ae2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1a096673-7306-47ed-9a0e-8147e576252d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6b1c00-37b6-495c-a074-c67e8a2f484a",
        "cursor": {
          "ref": "ef98cd01-9733-4995-8941-2c981356d7b2",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7bc39aac-8e80-4713-9892-69f4e1bdeef4"
        },
        "item": {
          "id": "ac6b1c00-37b6-495c-a074-c67e8a2f484a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eb232413-5597-492d-b9e9-f34bbabea173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225258f0-20f4-43ab-99c8-0ed32aaae121",
        "cursor": {
          "ref": "02b43f91-56e9-4370-813c-c1626b9cb9ec",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d8626656-9d48-498b-b253-b276376bb58e"
        },
        "item": {
          "id": "225258f0-20f4-43ab-99c8-0ed32aaae121",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c02c6de3-becd-49ad-b697-dff00604173c",
          "status": "Created",
          "code": 201,
          "responseTime": 2048,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "1feeaba6-8891-4dd3-94a2-6471dc7f2242",
        "cursor": {
          "ref": "c97e9cba-6b05-49c1-a64f-bde9aef56e55",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b70d9c9-5810-47fb-ad7f-9ad5a3acfbbd"
        },
        "item": {
          "id": "1feeaba6-8891-4dd3-94a2-6471dc7f2242",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "159741eb-320c-48cd-912b-4a131c4eb4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def3d467-1e9d-465f-a3b5-71ba47ca00c8",
        "cursor": {
          "ref": "d1826686-21c8-4020-bb4b-f3d69048e657",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e38eacf7-a634-4127-8a65-19c2bae9dfda"
        },
        "item": {
          "id": "def3d467-1e9d-465f-a3b5-71ba47ca00c8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e9a7f98a-9f9b-4c93-a06f-fb5c5bb1c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1c539a-5211-4d4b-87f3-0aec75cebedf",
        "cursor": {
          "ref": "a0cbf967-8a28-43af-b5a6-71aaec48f6c8",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5aa852c6-183f-4403-8dfe-b5f32529bcd2"
        },
        "item": {
          "id": "7d1c539a-5211-4d4b-87f3-0aec75cebedf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ee3a7011-66ec-4dc8-ba92-749bb9677dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f699b7-db27-4215-9ab5-667206cf7a54",
        "cursor": {
          "ref": "5ff93de0-bdba-4d12-8a8c-8eafa7877956",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6cca763-346b-4027-9398-25b77503f9cb"
        },
        "item": {
          "id": "69f699b7-db27-4215-9ab5-667206cf7a54",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a976a2d8-867d-4a85-811d-2684dccdd70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127cba37-8ebc-41e9-be73-d17b48d652fd",
        "cursor": {
          "ref": "d31cf05b-890b-4beb-af02-3114daa339a5",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f98917a8-9f71-469b-9e1d-82f5cbe43277"
        },
        "item": {
          "id": "127cba37-8ebc-41e9-be73-d17b48d652fd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1349d8bb-6dc4-415b-8d98-eb85c7aa4165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917d66be-dff7-450c-b78e-902d84984d62",
        "cursor": {
          "ref": "cd987306-7f11-4f89-9ae6-ccdcd334bccd",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1f7063f9-da81-40df-9553-dabe9f53d2ce"
        },
        "item": {
          "id": "917d66be-dff7-450c-b78e-902d84984d62",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1f656292-5d8d-479a-bd25-463dcccbfd3b",
          "status": "Created",
          "code": 201,
          "responseTime": 1937,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "37786672-4ac0-4679-b251-f9071eb4505b",
        "cursor": {
          "ref": "20a5eef4-cbd5-4d05-bead-597860bbdf73",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a8033c25-ef1f-48f0-b78c-7f060e9e6c3a"
        },
        "item": {
          "id": "37786672-4ac0-4679-b251-f9071eb4505b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "67354cdd-932f-4d1f-a88e-8467f215185f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbeb519d-6792-49cf-a259-3c174224da9b",
        "cursor": {
          "ref": "e297b099-2d3d-4c4d-8c2c-16473927a231",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1de5b9bc-6a1a-4a2f-ad73-846572d8086d"
        },
        "item": {
          "id": "fbeb519d-6792-49cf-a259-3c174224da9b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d47d46ca-9e79-4ddd-beec-6100ab1473fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc78f41-e408-4c0e-b1a8-a2da65d6aa85",
        "cursor": {
          "ref": "4b616c24-47cc-476f-98f9-8be3e81c19f1",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "db4ffb19-5277-4508-b620-ba1c27b1bc36"
        },
        "item": {
          "id": "2bc78f41-e408-4c0e-b1a8-a2da65d6aa85",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "592f7501-de1f-4fc3-94de-261980f357ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71941cdc-40ff-45a7-ae27-231d9349aaec",
        "cursor": {
          "ref": "1bb45d3e-3e77-48dc-84f1-435be5982b4f",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ef92e01-e272-4f98-b67d-0e5f2e554d72"
        },
        "item": {
          "id": "71941cdc-40ff-45a7-ae27-231d9349aaec",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "06043edf-95ab-44c5-af42-181089b0f02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c510ee-ce77-4c11-b221-a1c1010c4ee8",
        "cursor": {
          "ref": "00f2bb8d-c622-425c-abc6-a1351bd5553e",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8be73df5-1249-4898-b3d6-d76029be3738"
        },
        "item": {
          "id": "25c510ee-ce77-4c11-b221-a1c1010c4ee8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f0113d89-f6ff-4770-b328-bf03a0503428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7606eb40-b28e-4493-822e-58f8e66c1f4f",
        "cursor": {
          "ref": "05a866c6-322e-4deb-8cf7-5bd9cad94184",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "15bb6355-bdfb-457c-97df-a22585162fcb"
        },
        "item": {
          "id": "7606eb40-b28e-4493-822e-58f8e66c1f4f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fd16d332-d8bd-405e-a652-8d4e5b5afa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793fca15-f78d-4728-8b09-fb3be3b244d8",
        "cursor": {
          "ref": "8f561e2c-db18-43ce-9223-47c6bb983a69",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0f3c24c0-abd4-4d88-8db0-1a8533ab852f"
        },
        "item": {
          "id": "793fca15-f78d-4728-8b09-fb3be3b244d8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2ee10bbc-78d4-40df-add9-8a21658a6b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f33397-07e5-4635-86e1-ce1064f2f251",
        "cursor": {
          "ref": "38e0daca-3d07-4508-bce1-d35b7574af09",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a12f6153-13f7-46ff-a4a0-d3295f109782"
        },
        "item": {
          "id": "28f33397-07e5-4635-86e1-ce1064f2f251",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7b83add0-cc61-4189-a24f-21033f5c7d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eebde8-4a83-4fb4-b74b-333a9979e7ab",
        "cursor": {
          "ref": "b3eb5af3-f186-41b2-b418-e931d600b04f",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "56922d39-21b1-422a-8518-f42dee201ed6"
        },
        "item": {
          "id": "61eebde8-4a83-4fb4-b74b-333a9979e7ab",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4ddee394-e951-48b3-bfe2-368e812cea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd327b0-5a79-4185-91a1-bb7f4b766916",
        "cursor": {
          "ref": "7bc7bf35-3931-402d-8e80-c911fbf5c776",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "209122d5-aa55-4f0f-a963-037b5546c8fe"
        },
        "item": {
          "id": "cdd327b0-5a79-4185-91a1-bb7f4b766916",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d4a5a376-d92e-4fd4-84e3-83f8eb314096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b1b4f-a5f1-4870-9b5a-ed33d645dc19",
        "cursor": {
          "ref": "1e5a5528-be41-4101-ad79-92de3f15d065",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "171d0be9-40c8-4551-ad75-a882d3f9dc47"
        },
        "item": {
          "id": "808b1b4f-a5f1-4870-9b5a-ed33d645dc19",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7aa60b3a-907f-4762-9b91-598c88b0092f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9599416b-6e8c-4561-be62-3699562ccba7",
        "cursor": {
          "ref": "1bc776ad-384a-4d4d-a6f2-4c80ac7942af",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1a60d109-76de-43c8-9df4-90d491929717"
        },
        "item": {
          "id": "9599416b-6e8c-4561-be62-3699562ccba7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fef912b5-6597-409c-88f4-8324f41d7806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97225ed-e247-4a5b-b4f8-a385e005137d",
        "cursor": {
          "ref": "7349a7f4-8801-416b-a9a3-5f3d0a368d70",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2e53b516-9a13-4d72-b63d-612c35909a74"
        },
        "item": {
          "id": "f97225ed-e247-4a5b-b4f8-a385e005137d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "44a08577-fbfe-45f7-8bf6-63034cd5454e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa03610-2a0f-4aa2-80b3-febe351a0e00",
        "cursor": {
          "ref": "b766acfc-6d13-4f15-a2fe-835268eb18d6",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "78494274-3a8c-4a16-8811-0955a2af900b"
        },
        "item": {
          "id": "5aa03610-2a0f-4aa2-80b3-febe351a0e00",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a959c7c-1092-495e-98c8-1f116f0122a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc965039-e461-4406-994d-1788558c81ee",
        "cursor": {
          "ref": "4a75aaf8-1ed7-4946-94fa-f183425f9d51",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5830567f-2c9c-4ee2-b8c1-f07508fa5999"
        },
        "item": {
          "id": "fc965039-e461-4406-994d-1788558c81ee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a2186dc0-5d4a-4104-ae9e-f0974b70da22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f96fc6b-7f97-45da-a33e-76e608ca8281",
        "cursor": {
          "ref": "5c7f5501-bb15-49d8-85c7-8a2587f051f2",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04cce0b6-6f1b-465c-8009-98e709207c14"
        },
        "item": {
          "id": "3f96fc6b-7f97-45da-a33e-76e608ca8281",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1b6d555a-d4ee-49f9-a86f-ed2647e9299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348a0836-3744-4c7c-9a58-db5783b0d334",
        "cursor": {
          "ref": "b17b814c-b033-4604-ac36-e55ea2f46d73",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "632642d8-9fb3-4319-bda0-4f5d076ef53a"
        },
        "item": {
          "id": "348a0836-3744-4c7c-9a58-db5783b0d334",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "783346d4-08e5-40cb-a8b3-f2016f8d5e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c25ecb-d9a4-430c-832d-9279a7addfd9",
        "cursor": {
          "ref": "8e395287-0bad-4f9c-8f69-b63324118b14",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c95ddc9a-99d3-4018-a92e-f819d815b674"
        },
        "item": {
          "id": "b1c25ecb-d9a4-430c-832d-9279a7addfd9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bd1ef76c-e7bd-419c-af35-dc30d9e50781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262d99b1-3644-4d00-8fab-34a8cb05bbcb",
        "cursor": {
          "ref": "862ca81c-9f85-4701-8558-976611c37cd7",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "39e13549-ae7c-4165-abbd-ee051f0de2df"
        },
        "item": {
          "id": "262d99b1-3644-4d00-8fab-34a8cb05bbcb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "40624f61-3596-491b-86cb-bb009b210510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4751653-e0b9-4b9c-98f7-db2441135ec7",
        "cursor": {
          "ref": "19c5212e-2579-48a6-9ac3-d625c241bf9d",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b606bae5-85eb-417c-8761-3c58e86e977a"
        },
        "item": {
          "id": "a4751653-e0b9-4b9c-98f7-db2441135ec7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1c99b893-89c5-44d7-a6c0-0ce128c7638c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f558b1-9c63-4863-97e2-5acab67e6cc6",
        "cursor": {
          "ref": "0d6b8085-c78a-4ab2-903f-d3d1c3118cd7",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d5a3d3de-de92-47af-9659-703e91d18de3"
        },
        "item": {
          "id": "b8f558b1-9c63-4863-97e2-5acab67e6cc6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d70efa3-d1ed-43bb-b7df-dd15ae343e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83dad41-907f-478f-9adb-302a6a749b40",
        "cursor": {
          "ref": "6cb20a21-19c8-4153-8910-6ecc7bb8dc13",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ece32a68-5431-47f3-8609-9a63a5736d44"
        },
        "item": {
          "id": "f83dad41-907f-478f-9adb-302a6a749b40",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e48cc4cb-803e-4f8d-b3dd-927b5b502b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c934eff-2985-4180-bbf2-aeb466e8fdfa",
        "cursor": {
          "ref": "9112b423-9463-46ae-8b93-bdc97b4dbee6",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d680268a-517f-48fd-bd4a-d0ab71f34d77"
        },
        "item": {
          "id": "8c934eff-2985-4180-bbf2-aeb466e8fdfa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1b0e81a3-c887-45e5-b8d0-17a47f85f765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea01d0d-4fb6-440a-8d0f-7d3566007d2e",
        "cursor": {
          "ref": "a3c86f74-f62a-4a7a-8d43-fcf6bd00eaf9",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7c9de430-39aa-40d7-9167-669139fdb942"
        },
        "item": {
          "id": "fea01d0d-4fb6-440a-8d0f-7d3566007d2e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8e029729-4f9b-421a-beed-198126deb127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f1770-8fdc-4aa6-879d-53681b43aa63",
        "cursor": {
          "ref": "f23d68e0-556a-43e1-b9b7-a1e6e87ef78f",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2964b937-cacb-4fac-a929-1e77da0092d1"
        },
        "item": {
          "id": "d31f1770-8fdc-4aa6-879d-53681b43aa63",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7a1ef72f-212d-4349-a5a4-2020748a753c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ab4e1a-ce7a-45c5-8744-849fbd0f10d8",
        "cursor": {
          "ref": "29f71ce0-9aa7-4de0-ae49-041605dd62f8",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "68c5a910-2f30-463c-a0bf-bfcf75562ad9"
        },
        "item": {
          "id": "e3ab4e1a-ce7a-45c5-8744-849fbd0f10d8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "10a7890d-8b1e-4499-ade1-6f2692a61d40",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 448,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b4276b-a577-4516-8ecf-7ce15d9c58b6",
        "cursor": {
          "ref": "912561c8-af39-4cf6-8249-5339b6abe45f",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92739dad-faae-41c3-afba-94b62d0d535d"
        },
        "item": {
          "id": "33b4276b-a577-4516-8ecf-7ce15d9c58b6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3ecc8b1e-ce8b-4d47-b384-10480436d448",
          "status": "Created",
          "code": 201,
          "responseTime": 5033,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "612f0f0d-3bb7-4dcf-a716-5269aea17b0f",
        "cursor": {
          "ref": "4866edfa-68a9-4cbf-805f-68c448fffef1",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bcb83023-e5c0-4c84-8bfc-54f652af8848"
        },
        "item": {
          "id": "612f0f0d-3bb7-4dcf-a716-5269aea17b0f",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "9d06da6a-101e-4de7-85db-f5ee7ac73a9e",
          "status": "Created",
          "code": 201,
          "responseTime": 3331,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "fa94842b-79f7-4804-a690-30ab540d5afb",
        "cursor": {
          "ref": "d250c32d-52d7-4cf7-b929-13550e4f045e",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54eb1ce7-b47e-4df3-8656-748e2505ae4c"
        },
        "item": {
          "id": "fa94842b-79f7-4804-a690-30ab540d5afb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bbe17610-d756-4286-9ebb-5d502d58d3f4",
          "status": "Created",
          "code": 201,
          "responseTime": 7410,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f2b34c6c-eb48-48c0-a67a-8e408015851c",
        "cursor": {
          "ref": "86b065e1-02fa-4ee8-908e-b14f46a844c0",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9e2dce66-03b1-4203-a79f-bf2eed2603e9"
        },
        "item": {
          "id": "f2b34c6c-eb48-48c0-a67a-8e408015851c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "72ece9d4-955c-40db-8d06-7885df0a54d6",
          "status": "Created",
          "code": 201,
          "responseTime": 3302,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "71f36d32-8755-4cee-8d63-b8ac826552fe",
        "cursor": {
          "ref": "439ea06b-71d8-4fd1-90be-29ec633bbbab",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a1199b41-422e-4f66-9205-ccc7bc3caa8e"
        },
        "item": {
          "id": "71f36d32-8755-4cee-8d63-b8ac826552fe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "554734ec-6bd1-4e9e-b7bd-901becdcf791",
          "status": "Created",
          "code": 201,
          "responseTime": 1996,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "3f3d302f-9bef-4515-9e82-bce59c129c23",
        "cursor": {
          "ref": "25892d58-2711-4933-8a78-65fa90c13403",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ad5bd01-5c7c-417d-a817-881ac90f73e3"
        },
        "item": {
          "id": "3f3d302f-9bef-4515-9e82-bce59c129c23",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "59e2a908-1788-4006-90d1-067d5870fc95",
          "status": "Created",
          "code": 201,
          "responseTime": 2520,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "4835c240-99e0-4b1c-8ee3-511679fa2f8b",
        "cursor": {
          "ref": "dfd8314b-a879-494d-8433-648cb2389555",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d52c406-aab4-43c6-874f-5df84d2047c5"
        },
        "item": {
          "id": "4835c240-99e0-4b1c-8ee3-511679fa2f8b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bb7d0497-09f3-4764-93f6-f46085be3416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4835c240-99e0-4b1c-8ee3-511679fa2f8b",
        "cursor": {
          "ref": "dfd8314b-a879-494d-8433-648cb2389555",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d52c406-aab4-43c6-874f-5df84d2047c5"
        },
        "item": {
          "id": "4835c240-99e0-4b1c-8ee3-511679fa2f8b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bb7d0497-09f3-4764-93f6-f46085be3416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b4f65-0f14-4269-ac44-780d05f80027",
        "cursor": {
          "ref": "c81c0142-e5e4-40b4-85ef-37e8c9dddd59",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "52a2c8fc-5cfe-4453-9c4a-b13cfbff4993"
        },
        "item": {
          "id": "136b4f65-0f14-4269-ac44-780d05f80027",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "10e18ba8-0d87-406a-9e5e-12aaed4cf64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1192468-9f3a-4f3e-ad09-32743e0dad06",
        "cursor": {
          "ref": "b5667197-e4d2-4cdf-9b0b-4827311ed5db",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7fa631d1-0912-46dc-b320-6385d1f0f0d6"
        },
        "item": {
          "id": "e1192468-9f3a-4f3e-ad09-32743e0dad06",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7d6a4f5d-c4a4-41c1-af4d-2f3766311571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff551219-a4d6-4ecb-a307-c284a81b2faf",
        "cursor": {
          "ref": "9c80b0fb-3a99-42c6-bc49-5eeee6d8e41c",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a741a53e-8b01-428e-b632-f55f14b4b735"
        },
        "item": {
          "id": "ff551219-a4d6-4ecb-a307-c284a81b2faf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "86e1ed6f-0fed-4a02-8703-1d5b5b346aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11418c9-cad0-4c99-878a-af6ef319e928",
        "cursor": {
          "ref": "8e32c2dd-6851-4da7-8c76-00ef02109b62",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b38e7274-886d-4161-a205-42d8ce4f0400"
        },
        "item": {
          "id": "b11418c9-cad0-4c99-878a-af6ef319e928",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d0910b26-48b3-4d24-8bb5-1ac3e9dc2446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ccfd5-ca81-476d-b000-286400ccdfbb",
        "cursor": {
          "ref": "c066da4d-4adf-4412-beae-c4fbc5f8deae",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f7ddc8b5-6705-44f8-b3a2-a8c89bf44ccf"
        },
        "item": {
          "id": "365ccfd5-ca81-476d-b000-286400ccdfbb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "07aedfe6-91cb-4bef-9e79-4a1f5a88c85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b58595-24c3-4703-88d2-6ce2b4cadff8",
        "cursor": {
          "ref": "8c1cd37d-6cf1-4e33-9a5c-8b5ff5e012e1",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "39801f84-8ebd-484c-990e-61d16f1a304e"
        },
        "item": {
          "id": "c1b58595-24c3-4703-88d2-6ce2b4cadff8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c24e026f-d318-4cbf-9a02-13415727ea61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec89434b-6e70-4049-b4a8-b0e91d600573",
        "cursor": {
          "ref": "6575328b-5dd2-4eb7-bd74-fc9339916285",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "37e03a52-43c9-495d-b425-cdd41d5ecc69"
        },
        "item": {
          "id": "ec89434b-6e70-4049-b4a8-b0e91d600573",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "530cc1a8-ef07-41a7-bccc-e00476ffd851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560ddf0f-b585-4bac-b2bf-8d9ef519fb23",
        "cursor": {
          "ref": "e96b82d0-e1d0-4995-8794-e55a6c77d09c",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e56326fc-1816-469f-95bd-5bf24f8367d3"
        },
        "item": {
          "id": "560ddf0f-b585-4bac-b2bf-8d9ef519fb23",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "02de248e-70eb-4753-8a4b-6f0924425e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37483b68-664c-4639-8996-f0d4e480912d",
        "cursor": {
          "ref": "28b429c9-20ae-4914-b186-c6dceea9a6b9",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9cd2f89-776a-40db-91ee-7c88009ac69f"
        },
        "item": {
          "id": "37483b68-664c-4639-8996-f0d4e480912d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "efdf4aaf-0a24-4c06-b9ff-f1dfd8516296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755030bd-2b8d-4b9a-9feb-c54430e0d9cb",
        "cursor": {
          "ref": "fa4ee803-dc98-418f-9fad-9fe001a9f687",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f237bcec-baa8-4b47-a41d-9def5c0ae9f9"
        },
        "item": {
          "id": "755030bd-2b8d-4b9a-9feb-c54430e0d9cb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8eb04a45-d8ab-4ce0-bb35-7e79d2e5279f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8db06f0-1cf8-4e31-ba60-1cc80baae455",
        "cursor": {
          "ref": "27e3c609-670f-40e1-a151-884579063bce",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "33481d14-7d1e-4aef-b020-d3c37b1ee0da"
        },
        "item": {
          "id": "a8db06f0-1cf8-4e31-ba60-1cc80baae455",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e28027fc-042a-4089-a770-f25f98e529cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1de808f-16ea-4295-9d82-161b61b4740f",
        "cursor": {
          "ref": "5ecb96b5-f63f-459d-9fbe-fc8cb8cf5b3b",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9c0b00e7-7da0-423e-8309-dee5f977e643"
        },
        "item": {
          "id": "e1de808f-16ea-4295-9d82-161b61b4740f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8e425105-e535-4831-939b-bf5a0e480e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b7f0cb-e3ce-4f07-8fcb-8bc74ed44152",
        "cursor": {
          "ref": "3bdad0ca-5a7e-44c3-91e1-c999da44842d",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "be7369e6-3f06-41fa-8c4b-63dba5adf4d5"
        },
        "item": {
          "id": "25b7f0cb-e3ce-4f07-8fcb-8bc74ed44152",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b4e2f151-2b06-4330-a15c-230be82d64f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e551804-23ba-49c4-951b-eb85746f2e1d",
        "cursor": {
          "ref": "00b2cfcc-adc9-4467-89d4-0c0434476e4a",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "67af3cac-131c-4d77-b8e1-778da2b4b3b0"
        },
        "item": {
          "id": "0e551804-23ba-49c4-951b-eb85746f2e1d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f5677fc6-5534-44cf-b942-e5a7ea4c8e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95692a8c-b180-4342-baf2-54f37634ea40",
        "cursor": {
          "ref": "f13c9e37-2187-4c8e-9251-924b08b494f2",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "06ec4590-f66f-4b6b-994a-b550295ac4d7"
        },
        "item": {
          "id": "95692a8c-b180-4342-baf2-54f37634ea40",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14098ef2-1a57-481d-aaaf-27331536a363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaead46-801b-44dd-8357-ea5daebeebe4",
        "cursor": {
          "ref": "5382683c-78b5-4a93-ab00-0b4561db5167",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62801526-e30b-4e2c-a92a-b21ad55934c9"
        },
        "item": {
          "id": "cbaead46-801b-44dd-8357-ea5daebeebe4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8a45fa2-3784-40ac-8a9d-0d10e984e968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839ca41b-d3fc-45ca-ae5e-5694ab6e4dfb",
        "cursor": {
          "ref": "b021223d-b309-4a29-828a-bcfc41858ca9",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2eb3203d-2fb9-41bf-a0e3-2fbe04ba40c1"
        },
        "item": {
          "id": "839ca41b-d3fc-45ca-ae5e-5694ab6e4dfb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "48891623-f63a-4213-bdb1-6efe5cf18fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f955b06-9cf1-40c5-8528-3ed1a4d3fad0",
        "cursor": {
          "ref": "30d51fed-824c-4c9c-8fab-8663f7a533b4",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1899fb08-e65f-421b-90ea-d4d69b43b15e"
        },
        "item": {
          "id": "1f955b06-9cf1-40c5-8528-3ed1a4d3fad0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e47012a-fad9-48f4-9f27-2fd3a28790a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2596de-24ad-4ffa-98a5-a07d897f7671",
        "cursor": {
          "ref": "090a6bc0-2e35-418a-866f-576ff98b53f8",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "58109f7b-2d72-47ee-a689-6423508c95d5"
        },
        "item": {
          "id": "eb2596de-24ad-4ffa-98a5-a07d897f7671",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6778cf01-eab8-4a70-8dd5-787ec1f51c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e21490d-691b-4eaf-874e-3957133557b9",
        "cursor": {
          "ref": "419aec1b-debc-4381-b6b4-a71df6efc1ee",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "779d32e7-6fa7-48d7-804a-4eb01e003ad8"
        },
        "item": {
          "id": "1e21490d-691b-4eaf-874e-3957133557b9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8b22c5fc-3221-4d09-9275-3f1683999283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1c0444-4ade-43f6-ae02-baa3de3834a7",
        "cursor": {
          "ref": "cc2c9334-7e92-4031-a892-f7a76deea226",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "57288d30-fd12-46d3-912f-79ec814f931b"
        },
        "item": {
          "id": "0d1c0444-4ade-43f6-ae02-baa3de3834a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d24d6fb6-d58e-4a04-ab6f-a2dd42713381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1582673-21b1-43c0-8fda-1efade5e9623",
        "cursor": {
          "ref": "77b9fe0a-b30a-4d19-911d-a024ac642e48",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "17073013-5047-44a7-9367-56241efa1bda"
        },
        "item": {
          "id": "d1582673-21b1-43c0-8fda-1efade5e9623",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a04ee5af-8c5a-4389-9158-426f14663101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c29b05-33c1-4bc6-affa-d0fa5283cd06",
        "cursor": {
          "ref": "83c62498-f7fd-4b43-b1f1-7e7ab116744b",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "008a1fa7-3e14-43ed-91f6-976f589d908c"
        },
        "item": {
          "id": "b7c29b05-33c1-4bc6-affa-d0fa5283cd06",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e32e61b-a3f4-44a4-937f-5d882913f077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d1f4f-f560-49c6-92d5-abec7d4cbcfc",
        "cursor": {
          "ref": "7541a47c-748c-4810-a3d9-7be571ecff8d",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dbd12ce1-3383-4244-ae03-8e08847bbdce"
        },
        "item": {
          "id": "611d1f4f-f560-49c6-92d5-abec7d4cbcfc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f19dc7fc-7c54-4aae-8eba-aa6354c5962c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b667d3e9-cf42-4bbb-9745-d3601b9d046a",
        "cursor": {
          "ref": "c647ad39-d757-4c41-b7a2-f17b96501b5e",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a45d04a6-b8e6-4a4c-a4a0-c7e4ad50df3b"
        },
        "item": {
          "id": "b667d3e9-cf42-4bbb-9745-d3601b9d046a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "519a8570-3d2a-455e-bf34-d8127562c684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8de85d5-734d-4cd1-9dfb-c23c18b7569b",
        "cursor": {
          "ref": "ee7de882-f3c4-430e-b43e-638ee2c0f739",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7fcc1b4b-928f-4e12-920f-4aa74c87f815"
        },
        "item": {
          "id": "f8de85d5-734d-4cd1-9dfb-c23c18b7569b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "624e2f41-9321-4629-be5b-915e514bcff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b14daf-84e8-43fc-8df1-a00d92bb75e5",
        "cursor": {
          "ref": "714cb833-3a7b-499e-aa50-34f1310716ae",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5acf389f-0409-4018-bfc5-c45eb23a9c8f"
        },
        "item": {
          "id": "38b14daf-84e8-43fc-8df1-a00d92bb75e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "62347f33-0041-43a4-a72d-00776860cbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a550db17-833b-49f9-adfd-d345e8775fa4",
        "cursor": {
          "ref": "59934a45-007b-4ac9-b19c-78f0a941b993",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4a9104a0-79a2-43a4-9475-acc618a24588"
        },
        "item": {
          "id": "a550db17-833b-49f9-adfd-d345e8775fa4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b43cbbd3-f162-4ce1-9747-42d86b6fc135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e4f980-bc8f-4a54-8f71-ee1bb35413b6",
        "cursor": {
          "ref": "46bd3fa4-e4ff-4292-afe7-7811b8a7eec6",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bca66645-2a62-4421-b659-04b6669a8a4d"
        },
        "item": {
          "id": "c4e4f980-bc8f-4a54-8f71-ee1bb35413b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5acdff4e-486e-4267-95e6-788b96a0d189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e623fc7-185c-41aa-9837-abfc128a880a",
        "cursor": {
          "ref": "6022a947-0dc6-4efe-8dd7-26f84b0074a3",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5ede8357-8799-4281-83e8-5719ae87486b"
        },
        "item": {
          "id": "3e623fc7-185c-41aa-9837-abfc128a880a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "137f99c3-5cec-4b82-8270-e5c298495173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec68a5a-45ce-4503-bb44-d840c3ce1309",
        "cursor": {
          "ref": "11858fda-bcf2-477a-97ac-f2aa237f3962",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "328eaf4c-3736-45a2-b673-e77139b430f9"
        },
        "item": {
          "id": "9ec68a5a-45ce-4503-bb44-d840c3ce1309",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "959744e3-320a-433a-a427-68c68224234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d4eb27-d42a-4b93-a81e-4a89916e947a",
        "cursor": {
          "ref": "24b9c16e-7d79-4a5c-8729-37e51d9ea777",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "160e5544-5b18-45e1-ae48-d72098830742"
        },
        "item": {
          "id": "b7d4eb27-d42a-4b93-a81e-4a89916e947a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "45bce23a-f3b4-4430-9248-c1f3de1b2a76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d4ae18-c217-4e46-bb5a-d3a0a8fdf2a9",
        "cursor": {
          "ref": "4e1529f8-effb-4f69-8084-350d6295bd29",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8ac131ba-1446-474e-84c9-530d0f736d8f"
        },
        "item": {
          "id": "e3d4ae18-c217-4e46-bb5a-d3a0a8fdf2a9",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "810c17ab-cd1e-43a4-90b0-81da92df136f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 449,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1413d74e-2ebe-4161-9324-45a07058d127",
        "cursor": {
          "ref": "e3b37d37-d216-48d0-b40b-e5bbcf028bc9",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cfdf6eb9-f228-4fa6-b548-aac3206dee18"
        },
        "item": {
          "id": "1413d74e-2ebe-4161-9324-45a07058d127",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ceb65510-e339-4ea5-9750-dff30e884482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1413d74e-2ebe-4161-9324-45a07058d127",
        "cursor": {
          "ref": "e3b37d37-d216-48d0-b40b-e5bbcf028bc9",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cfdf6eb9-f228-4fa6-b548-aac3206dee18"
        },
        "item": {
          "id": "1413d74e-2ebe-4161-9324-45a07058d127",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ceb65510-e339-4ea5-9750-dff30e884482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78de9266-817c-4ec2-93e0-28c4274b145d",
        "cursor": {
          "ref": "ac28c52f-ef4c-435f-b296-bc06456355dc",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "977523ef-2446-4aa6-8df4-4eec7a98d33c"
        },
        "item": {
          "id": "78de9266-817c-4ec2-93e0-28c4274b145d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ee6ebc5f-b8d5-4425-9c14-0f809769e4c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 224,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "01c15ab2-4d3e-4693-93f5-b25f421aca71",
        "cursor": {
          "ref": "7575ffb3-0605-4132-a670-253c9b8955e0",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "081065e3-f4dd-4290-84c8-8ca9bc5d9ebd"
        },
        "item": {
          "id": "01c15ab2-4d3e-4693-93f5-b25f421aca71",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b2c152e-1900-469d-9331-6f5e2158c317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b42aa0-b0a0-4355-b4c3-ceb4c496ea89",
        "cursor": {
          "ref": "fd819a1d-da40-4450-8a75-9c5812826787",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a4c38a22-7747-4326-80ac-0d6715dd975e"
        },
        "item": {
          "id": "44b42aa0-b0a0-4355-b4c3-ceb4c496ea89",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a1efc54d-ee77-4848-b4e7-83be2a6980dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a908b-4b0c-4cf1-90cd-8f3efff6c72a",
        "cursor": {
          "ref": "214cba06-614c-44f9-8bcc-eb725cd23ac4",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c7c7ef04-335c-47e1-a5af-ec9cd68208ec"
        },
        "item": {
          "id": "355a908b-4b0c-4cf1-90cd-8f3efff6c72a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fa66c62c-13cf-4bca-8d8d-bf7593032620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f588c5-8e5b-4b85-bb6a-84147b5843ae",
        "cursor": {
          "ref": "6baf74c6-e930-4d69-a91b-2720be04f356",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c166469c-1e20-4db6-be84-7cb1c098799d"
        },
        "item": {
          "id": "e2f588c5-8e5b-4b85-bb6a-84147b5843ae",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "abce9b09-1a57-400c-96f2-b54c97fb9080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2550e030-5a3a-41dd-8c7f-fec657bc4fa5",
        "cursor": {
          "ref": "604ee9db-1ae2-478e-8c26-d2b390a10419",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c901cd79-fb51-41ef-94eb-4f7771e9099e"
        },
        "item": {
          "id": "2550e030-5a3a-41dd-8c7f-fec657bc4fa5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "568fa5f4-44c1-4549-8a64-f5e6fca9458d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab13f43-827e-4715-9fd6-8c17c9d8a4bc",
        "cursor": {
          "ref": "e59980bc-ebce-4945-9858-d2d4a3922411",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2faa2d41-f03d-44ff-8d8b-14405710aec3"
        },
        "item": {
          "id": "9ab13f43-827e-4715-9fd6-8c17c9d8a4bc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "55ddf116-977d-489a-a7e7-c584c53ba871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15349654-d4e5-49c0-bb22-57a5eb297ed1",
        "cursor": {
          "ref": "6f671bf6-6af6-4e22-8d18-f05d659b5259",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7bb01c75-ca5a-4e81-b833-fad00039112c"
        },
        "item": {
          "id": "15349654-d4e5-49c0-bb22-57a5eb297ed1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "74995372-2005-490a-a6e3-8849f517d2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054303f2-4237-4c95-9d83-41789efed510",
        "cursor": {
          "ref": "e1cc26e8-3ad2-4304-9267-591960d1962e",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "864f1ed0-7ecb-4aae-b85c-c7c241da38cb"
        },
        "item": {
          "id": "054303f2-4237-4c95-9d83-41789efed510",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8fab8848-3f0b-4c4d-9b39-312d6a9b2397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d10f80-e578-411e-8abf-441412aa6a0a",
        "cursor": {
          "ref": "0457048a-2a1c-4d23-82b5-acc5bdd6dea9",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cbed333c-3d6d-4d1c-8cca-704e93671695"
        },
        "item": {
          "id": "a4d10f80-e578-411e-8abf-441412aa6a0a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "626ef786-ee83-49cc-b7b4-e10ea84ead4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846289dd-08f5-4255-a7a9-0284a05ba8dc",
        "cursor": {
          "ref": "78e16e4a-e9eb-4db0-a09b-1302a16e0977",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d4481b60-0c45-492a-9cdd-747e9f86a9f5"
        },
        "item": {
          "id": "846289dd-08f5-4255-a7a9-0284a05ba8dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5de16a02-dd57-4eed-b7e9-91ce46e77af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4e424b-c430-4800-9951-1a272c814e4f",
        "cursor": {
          "ref": "f7d846d7-83cd-42a7-9546-8bd0e38dc938",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28610ebf-157d-485c-94b7-3c25f0eb0b27"
        },
        "item": {
          "id": "ff4e424b-c430-4800-9951-1a272c814e4f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b8f97a8f-89e3-4951-8f5e-4c2bb82a194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a244b7ef-6c77-414a-a5d5-7d4cb03763fa",
        "cursor": {
          "ref": "329c2188-ab89-4dba-8faa-1ef74e92e00f",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dbc2334b-bc8b-4763-8670-491e33e09658"
        },
        "item": {
          "id": "a244b7ef-6c77-414a-a5d5-7d4cb03763fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8ee52dab-36f5-4949-8eb9-cbed46b12ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016483ad-e6fb-4093-8159-78da4f48b215",
        "cursor": {
          "ref": "0fb0b013-6f78-4d0d-aea6-ba8775e23c52",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bbad4a38-f457-44d2-a033-7fafc1498ed8"
        },
        "item": {
          "id": "016483ad-e6fb-4093-8159-78da4f48b215",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6771d897-0009-45e1-958f-401924358e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6690cf-4164-4b8b-97a9-24c8dae244ad",
        "cursor": {
          "ref": "47f97dc4-46bd-45f0-9bac-ff11809e62c1",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "213721b0-cd09-4463-873f-437bac9767ac"
        },
        "item": {
          "id": "6d6690cf-4164-4b8b-97a9-24c8dae244ad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9acaa175-d9c4-4353-b9ca-87fb7ef0c536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7235476d-c76b-4595-98b1-0343d0ecbe84",
        "cursor": {
          "ref": "a4538fc6-6624-46a6-b3dd-766f04c12f88",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7e372d54-3d5f-4521-a0b2-32ea2d954ef7"
        },
        "item": {
          "id": "7235476d-c76b-4595-98b1-0343d0ecbe84",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9cb592b8-7baf-4de9-9ee4-4088890921a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db122c-d8e5-425f-8fbb-6aa8cbbf72a4",
        "cursor": {
          "ref": "628f3331-17e9-4a2c-ac6c-b5928e2f7752",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8f82172c-fd3b-4a3c-a419-bfa9f88b914c"
        },
        "item": {
          "id": "52db122c-d8e5-425f-8fbb-6aa8cbbf72a4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "70a45317-013d-4468-a768-dce5d529ef93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9777a36a-3949-4219-855e-0f6e12db4ff1",
        "cursor": {
          "ref": "86beb2de-6f59-4397-a65a-f0c33a33a80c",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a501f54f-3d8e-48ed-a81b-2dcb467f557d"
        },
        "item": {
          "id": "9777a36a-3949-4219-855e-0f6e12db4ff1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "32525cce-3f77-447a-a8d8-b2501cf218a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b3260-fa31-4197-8e86-45e1721bd888",
        "cursor": {
          "ref": "71311054-4b63-45a1-9abd-06a704bf93c2",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "45790ddb-88f6-49c4-ae99-21b5878bb511"
        },
        "item": {
          "id": "9b4b3260-fa31-4197-8e86-45e1721bd888",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1b8eeee9-8dcf-409a-aa67-0408d6be8e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc96de8-c8cc-4328-8679-0a8e03f3100b",
        "cursor": {
          "ref": "e2b83412-3013-4f68-a4d4-ac9456b471e7",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2c8562b9-5b41-486e-b417-f67769036971"
        },
        "item": {
          "id": "0cc96de8-c8cc-4328-8679-0a8e03f3100b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cb8944bd-da9a-4fc3-8aa7-fcf4fc407505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b9b7e3-2491-4c7f-b879-4c9c58d712d3",
        "cursor": {
          "ref": "02f9d45b-d7c1-46b4-8394-4c7a3586dce1",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e999f186-7f8a-43b4-9f29-643c52834a01"
        },
        "item": {
          "id": "42b9b7e3-2491-4c7f-b879-4c9c58d712d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a3b3d6ef-e457-4bc0-9352-6f471952926e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc524d99-04e5-4412-8149-b34cbe4921f3",
        "cursor": {
          "ref": "b2e174a6-c2b5-485d-ad4a-7df4f355bd8b",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "be58b8c9-c60e-4c12-9708-a6bbb03c9a17"
        },
        "item": {
          "id": "dc524d99-04e5-4412-8149-b34cbe4921f3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fbcf1cd7-9f8e-4ae6-a0a7-974bbd8a25aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5bf577-2c7b-49c7-84cf-82a98081825f",
        "cursor": {
          "ref": "ea519b99-a084-409d-85a7-9556d02db4d8",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "117e26ff-400f-4d59-b91e-e15e89115e33"
        },
        "item": {
          "id": "1c5bf577-2c7b-49c7-84cf-82a98081825f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6cacf2e4-9e0a-4b1f-950d-a24f727da98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1736a9b3-a262-44de-9469-70287376b138",
        "cursor": {
          "ref": "ca333da8-e1ef-4e23-b721-3c6ef7d326ee",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a1f2c4eb-e83c-4804-a8d1-02e10eed688e"
        },
        "item": {
          "id": "1736a9b3-a262-44de-9469-70287376b138",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7c07e96f-9513-47ab-917f-d69835f62e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6089027-2dde-4570-a670-27e322b6b557",
        "cursor": {
          "ref": "b99a5974-1947-4f5a-9e14-e1960db64fca",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3eeb7052-ceaa-4abc-8922-2b2c33c45ea2"
        },
        "item": {
          "id": "a6089027-2dde-4570-a670-27e322b6b557",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d5fc7cd-653b-45e2-a13d-1bcb0fbce28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1683735-8a34-41d5-b6c6-1f99712b0d80",
        "cursor": {
          "ref": "60cb840e-8fc6-48ab-a1ec-1ffddeb5ec0d",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b62194e-76e2-422b-88a5-23f3b98c9aad"
        },
        "item": {
          "id": "c1683735-8a34-41d5-b6c6-1f99712b0d80",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "32243d1d-3d2c-4c21-9d80-805d6ea35b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de82c17-f4e8-4564-9506-1dee0304c88f",
        "cursor": {
          "ref": "8c4a373f-3d40-45fa-bc2d-2916024e34ae",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "65993f16-6b06-44f6-97ab-93d1bf7bcf45"
        },
        "item": {
          "id": "9de82c17-f4e8-4564-9506-1dee0304c88f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f63a312a-06c4-465c-a9ff-28d636e70539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61851de-a43b-4e4b-bdcf-7193aee20ab3",
        "cursor": {
          "ref": "f32e3edd-59e2-401e-a29b-8789f70e02cf",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "60724c1e-3f77-4068-809f-b02769c8d382"
        },
        "item": {
          "id": "b61851de-a43b-4e4b-bdcf-7193aee20ab3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "94aad4bf-702d-4117-991b-3e7f4946a3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebbe4b3-1063-4727-9101-f72af8b27549",
        "cursor": {
          "ref": "602c5253-35c7-4e3e-9f92-0a762628265b",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6217fea1-3d7f-49b6-9851-1a650a2ec4a1"
        },
        "item": {
          "id": "9ebbe4b3-1063-4727-9101-f72af8b27549",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e3da128-7898-4ff7-9b87-1519c0cf00c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dc71a9-2590-4c7b-b4ef-ba11f352c170",
        "cursor": {
          "ref": "f12a0e90-8ab5-4e13-8281-9b3b33d94d5d",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "13ff7581-4718-4ac0-b54d-0bbafeb70974"
        },
        "item": {
          "id": "f1dc71a9-2590-4c7b-b4ef-ba11f352c170",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "137cbc12-110c-4115-a714-adfbb8e37bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32f34d9-042b-454f-932b-baf12b49674e",
        "cursor": {
          "ref": "79b0dc09-b8e9-40d6-94f3-19a08a34f905",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "916ade01-13ae-4476-8398-7b291b4d3413"
        },
        "item": {
          "id": "e32f34d9-042b-454f-932b-baf12b49674e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03f65e1d-118f-4c73-919c-c84fc3c6490c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1542c-7533-48f9-b9a9-e69aca81480a",
        "cursor": {
          "ref": "d45fab8d-5023-4f9d-9c4c-2038e5a04d8c",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3d2ff66f-67b5-46ba-9dbc-ca1f95992c46"
        },
        "item": {
          "id": "9fc1542c-7533-48f9-b9a9-e69aca81480a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb8f9cc6-c5c5-4851-8098-119340bcc85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304348a2-46f1-44ff-9fd9-e4d3ab6878d0",
        "cursor": {
          "ref": "0046a95e-f830-45ce-9450-b83e4bb8da9e",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "074663b2-bc90-4fac-aec1-9a9e9b7de1b0"
        },
        "item": {
          "id": "304348a2-46f1-44ff-9fd9-e4d3ab6878d0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8bd046f3-99a9-4e84-9bcd-9926b71ee875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364c3b2b-8936-4eee-b3ff-0fd6a2c1fe3a",
        "cursor": {
          "ref": "80529f4b-91b4-4963-a2b6-235a98348b8f",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "29e2e62d-7bf7-4c70-82e8-02c74cffbaeb"
        },
        "item": {
          "id": "364c3b2b-8936-4eee-b3ff-0fd6a2c1fe3a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "77461ccf-a33e-49d6-a815-095e758d71ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724213c1-c990-413f-a9c0-0bcf0a50e8a3",
        "cursor": {
          "ref": "f1a6cc70-5a09-4d7f-bb58-cf5e9a109c83",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "530ba66d-78bb-4790-9c08-844c4eacab78"
        },
        "item": {
          "id": "724213c1-c990-413f-a9c0-0bcf0a50e8a3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "54577bc7-d040-4b85-9541-8465163d9622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844dd4bb-7c52-40d4-8c53-b44aaa03246a",
        "cursor": {
          "ref": "b9a7e55d-65de-475c-a7c0-149b6c2d478d",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bcc86d58-e61e-4f1a-bb85-4b816e2ce8c5"
        },
        "item": {
          "id": "844dd4bb-7c52-40d4-8c53-b44aaa03246a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f3163e14-8a00-45bc-becd-0f7544f60ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0262e0c9-eda4-4739-a057-e33429bef698",
        "cursor": {
          "ref": "51aa4afd-0ce5-40fe-8f8e-ce0594822027",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "02a6a312-bbe7-40b8-8a17-c9e0d7b26021"
        },
        "item": {
          "id": "0262e0c9-eda4-4739-a057-e33429bef698",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "39e79b35-efbe-4230-b05c-ed4c8c956b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b83c983-1922-4bf3-8d2a-014d831e976f",
        "cursor": {
          "ref": "1edd5da4-6e75-45d1-90bc-77c2e8afd8d9",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a4c67ea2-4f10-4c04-99ee-cc4014982b9e"
        },
        "item": {
          "id": "1b83c983-1922-4bf3-8d2a-014d831e976f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "06e55e19-0990-4cdb-ac81-1155fdf1b229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4be249f-5780-48a2-a589-85c619d5db0d",
        "cursor": {
          "ref": "f10009c6-26e4-45fa-a4de-ff8073b59e61",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1f823f61-edb8-44b5-8b1e-5e214f7050d3"
        },
        "item": {
          "id": "b4be249f-5780-48a2-a589-85c619d5db0d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a44c35fc-d679-4c11-afb0-e8ea70336bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88237bc2-b637-4af3-9b15-26402b32caa7",
        "cursor": {
          "ref": "a79280ca-0a00-4092-8f3c-9ceacea9402f",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7564c75-559e-4a50-8ec3-9314ec9b4e33"
        },
        "item": {
          "id": "88237bc2-b637-4af3-9b15-26402b32caa7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "27b25b52-aec8-4361-917d-5391f2ec24fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef279c61-7bcf-4e9b-a577-82b2329bf90e",
        "cursor": {
          "ref": "5f198528-1aff-46fe-b770-68c1fc8d6daa",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7823fb34-c3e0-4cff-a86f-e257a165975e"
        },
        "item": {
          "id": "ef279c61-7bcf-4e9b-a577-82b2329bf90e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "28f78a44-ac61-489e-8899-13bbf639c23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c3f8e3-9ff4-470d-8808-2732d1c583fd",
        "cursor": {
          "ref": "5dc6648c-56e5-49d6-a522-b6b3b5cf0abe",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "10019205-8ddc-4840-9bb6-9c1edad2579c"
        },
        "item": {
          "id": "c5c3f8e3-9ff4-470d-8808-2732d1c583fd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fcd1926d-d1a3-4227-85b1-609e60b81b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0677f045-45cb-4789-a19c-10f505e1b8c3",
        "cursor": {
          "ref": "2d64c3b9-9976-4a37-a5dd-ae3656a60877",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f6df52c9-cc40-4934-b990-6cb7029017e5"
        },
        "item": {
          "id": "0677f045-45cb-4789-a19c-10f505e1b8c3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "21762730-dadb-432a-9e53-1b5f5a8130bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092d3506-6b87-48d7-b034-d453d3358182",
        "cursor": {
          "ref": "b917770a-0337-40ca-975f-9dce432ed492",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cf442c25-a202-4bf5-8b54-641db4a50585"
        },
        "item": {
          "id": "092d3506-6b87-48d7-b034-d453d3358182",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c38ec25f-eb81-4874-87fe-199e4d3807db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde92a7c-f425-47f5-92c9-c69c45977eb2",
        "cursor": {
          "ref": "5d623b1b-6057-4a29-b762-9ac656cff2dd",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e69c6d2a-23c6-42e6-9662-14b0ccba315f"
        },
        "item": {
          "id": "dde92a7c-f425-47f5-92c9-c69c45977eb2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "df5762be-58db-432c-90c3-6f0a7f9116eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301a13f2-a751-40f2-87b0-b36d561239bd",
        "cursor": {
          "ref": "24738699-d219-4442-8a1a-1aa415a21b7c",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e3c5c353-e2a8-4bd7-b150-cb2dab490acf"
        },
        "item": {
          "id": "301a13f2-a751-40f2-87b0-b36d561239bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "997bc3d6-0f9f-42cf-80dd-c0307b7ba55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ad9dc4-2934-4b1f-9554-43ed172f4ebb",
        "cursor": {
          "ref": "84c4e18f-d276-4887-baab-97d964af7a93",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0925f19a-c596-44b9-9f98-da9e0a293037"
        },
        "item": {
          "id": "06ad9dc4-2934-4b1f-9554-43ed172f4ebb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b6edd82d-5e8b-4779-9526-cc27267496c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710ad664-9d00-4ab5-afd5-9ea12605568f",
        "cursor": {
          "ref": "ce8421b8-2590-4e9d-9648-ee973f7000f2",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "077a9e8f-cae5-49fd-aebb-2077233ba359"
        },
        "item": {
          "id": "710ad664-9d00-4ab5-afd5-9ea12605568f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9525993-3d31-46a4-8e78-36a365ede43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9bf38d-ab4c-44f0-8cac-a009f7750a76",
        "cursor": {
          "ref": "c1333cfd-cb08-47e9-9f2c-de458b05339c",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ed2ed4e0-84c2-4967-ad52-423ebab9b537"
        },
        "item": {
          "id": "8d9bf38d-ab4c-44f0-8cac-a009f7750a76",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9a90eb41-335c-47ad-8300-5a29770e83a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c876907e-f904-43aa-a87f-69ceccb38de8",
        "cursor": {
          "ref": "3c4cd6b1-9eb5-4241-82ae-5150b05375d2",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02c4f136-f4fc-4b67-b808-6729821d79ff"
        },
        "item": {
          "id": "c876907e-f904-43aa-a87f-69ceccb38de8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a8d51de2-fa09-4c5f-8547-a9a57ca12490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c0736d-f30d-4e21-a694-e528899baef2",
        "cursor": {
          "ref": "dd732c97-a7c4-4e72-9f2e-c434571441a0",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f1b322c-1198-43f3-b8fc-e39d55713e13"
        },
        "item": {
          "id": "d1c0736d-f30d-4e21-a694-e528899baef2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0a185110-9487-4ded-a264-8df7848858e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2edebc-ae85-4b2e-aa0c-76362c1a6b67",
        "cursor": {
          "ref": "eda7458b-9167-45a6-8a36-93ca1d6c8f19",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ab2a8b7b-83d4-4031-a49f-0a6340f63342"
        },
        "item": {
          "id": "ea2edebc-ae85-4b2e-aa0c-76362c1a6b67",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ca9a06cb-2c26-40af-b35d-2243d46ecdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37da6f-9787-4b1f-9701-45d9c8f2213e",
        "cursor": {
          "ref": "a1598210-9c89-4a13-b744-17cd32189227",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "06f22c87-9e87-4008-8f54-850822da4a09"
        },
        "item": {
          "id": "ef37da6f-9787-4b1f-9701-45d9c8f2213e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f2dae42e-17a8-4db1-bc6f-250a6fded73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a345391-3e84-4b8b-8463-48d210a8a500",
        "cursor": {
          "ref": "032d1ed3-587f-4172-a707-47d12db52818",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "40727854-a5ba-4303-b0ee-8057598a2c7f"
        },
        "item": {
          "id": "0a345391-3e84-4b8b-8463-48d210a8a500",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7a19604b-3ee7-43e7-99da-2f63bb8a9dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff92b82e-b51b-415a-a665-c055088d7556",
        "cursor": {
          "ref": "6d6309f5-2cae-4952-9855-77f944ad0f74",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "03572591-e51a-45f2-a16d-1a2193650f43"
        },
        "item": {
          "id": "ff92b82e-b51b-415a-a665-c055088d7556",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "29df6db6-a099-4933-af24-82eb41828024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd383e80-0ed0-467c-82ba-d75d8658f5b5",
        "cursor": {
          "ref": "a73eabc8-fa82-425e-b09c-af979073342f",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8e62737-f319-479e-887f-a587ed466a3f"
        },
        "item": {
          "id": "dd383e80-0ed0-467c-82ba-d75d8658f5b5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3b098f2f-698d-4d5e-ae2d-072d363014da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a737d8b4-6c90-41d4-9f9c-dc639ee81668",
        "cursor": {
          "ref": "0fcb0d28-7c4c-4b67-82c2-94c8ba59147c",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f3566c59-6003-4fc3-ab70-b3e12fb06c98"
        },
        "item": {
          "id": "a737d8b4-6c90-41d4-9f9c-dc639ee81668",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c294f187-434b-47b5-8261-78a41786073f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a9aa3-366d-4b6b-99b1-0d2a010819fc",
        "cursor": {
          "ref": "a65146fd-e591-4e4f-b3b7-135a242f8875",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9f5b1690-9550-482f-a084-6de172d48d71"
        },
        "item": {
          "id": "409a9aa3-366d-4b6b-99b1-0d2a010819fc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fd83bd7d-c86b-4384-b8b8-ea65ebef1a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f6139-a276-4ee7-8ff5-babacf87c5a4",
        "cursor": {
          "ref": "394d1f62-089d-4ff8-b8f8-62ef35b5030f",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7383ecab-d1fa-4c34-8115-b2c3b8968fb3"
        },
        "item": {
          "id": "1a4f6139-a276-4ee7-8ff5-babacf87c5a4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4aee5d5b-7a8d-46e8-bd31-8cf8d604755c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a023e2-9c68-4ef5-a1ae-a12dde3afed6",
        "cursor": {
          "ref": "5fdbaeb2-8659-4622-aeac-f08f60c30a08",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5030a3ee-4b8f-44de-98a1-88ee56942c81"
        },
        "item": {
          "id": "84a023e2-9c68-4ef5-a1ae-a12dde3afed6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b75d246e-9c52-4361-a9ea-08d1723f5f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd84d8-167c-45d6-b5d0-09d9320da09e",
        "cursor": {
          "ref": "19319761-f6a3-44ad-a40a-f9f06df303ca",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f559dcfa-e78a-4203-934b-ba7f62bcf988"
        },
        "item": {
          "id": "dddd84d8-167c-45d6-b5d0-09d9320da09e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bde6937f-c7f3-4a9b-acf4-4f6ff91ef3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2668c1ba-9d32-4f88-9a54-57c6e72edf6e",
        "cursor": {
          "ref": "662dfc16-beb9-4aa2-ab1d-751168b3e99b",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ecae991b-1cca-42a0-87bc-af950587ec27"
        },
        "item": {
          "id": "2668c1ba-9d32-4f88-9a54-57c6e72edf6e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b9228eed-9b78-44bf-9ba9-37560b8ffd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eb284a-339b-4800-b501-682e7a5a9cbd",
        "cursor": {
          "ref": "d4e7fa18-6918-46f2-b1a5-bbb5fbf546b9",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f2940e20-a6f3-4285-a237-ef3b57c03ac2"
        },
        "item": {
          "id": "13eb284a-339b-4800-b501-682e7a5a9cbd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "13e5c7d1-7b69-4403-b4ca-c8d0d0be8964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc20b6-4cbd-4a1c-82a0-89f61fa17b49",
        "cursor": {
          "ref": "3d4ea7b3-d2a3-414c-89e7-fce12280bd03",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bdfe738e-9fd6-4f2c-baf1-cac7e95dd463"
        },
        "item": {
          "id": "f9bc20b6-4cbd-4a1c-82a0-89f61fa17b49",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "637733e4-0ed9-4da9-8617-6ed61a45b7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831d64a5-adc2-407d-b2fc-6a1dba0f0530",
        "cursor": {
          "ref": "3abc86d9-201a-4384-a3bd-ab6ef9f37334",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f625c8bd-6fc1-410b-a29b-5d066fe7df87"
        },
        "item": {
          "id": "831d64a5-adc2-407d-b2fc-6a1dba0f0530",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1418d05-ebc6-4910-b84b-d98fc5604d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fca47df-c95b-4f23-a60a-7a3516104a9c",
        "cursor": {
          "ref": "2fe46f78-1244-4503-9ebd-cabd0adfb2d5",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2f2c4940-fd4c-455b-b4f2-1bfe5b721d2f"
        },
        "item": {
          "id": "0fca47df-c95b-4f23-a60a-7a3516104a9c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da070dd1-0e51-4050-a537-66fc42936937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf171cd-f7fc-4888-a12a-34fd00afa565",
        "cursor": {
          "ref": "20f720c3-1e34-4e71-8b82-c2b2045abca7",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3e849ed2-a4fb-480b-a793-43f61398e790"
        },
        "item": {
          "id": "ccf171cd-f7fc-4888-a12a-34fd00afa565",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a1910d9c-ea55-4ab3-b8a0-7050534d2814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1062bbb-fd8d-4088-ade8-e89635969feb",
        "cursor": {
          "ref": "7f953b1c-d399-4d83-87b0-13172a4f904c",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "813f3972-0980-463d-af5b-0dcc30c61ec4"
        },
        "item": {
          "id": "c1062bbb-fd8d-4088-ade8-e89635969feb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5c76e0fc-d145-4b7b-b69c-39dc748f5117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1760ac3e-731d-44c6-a663-cdd1eb4f5367",
        "cursor": {
          "ref": "bac075d1-dd87-4260-b5a2-d5873ca1015d",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "82f8d95e-f97a-4770-9657-cefec9c2568d"
        },
        "item": {
          "id": "1760ac3e-731d-44c6-a663-cdd1eb4f5367",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "91b0df19-1d7c-430c-8915-da742a54d5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e99dc9-ded0-41f2-97a5-ac59868c29fb",
        "cursor": {
          "ref": "a876880d-0092-4cc9-95db-c9917b7a6a24",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bc278174-7c71-4ff4-87ac-ead346b783e5"
        },
        "item": {
          "id": "98e99dc9-ded0-41f2-97a5-ac59868c29fb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9a83c2fc-5ad3-441a-9387-5b4a24cb6662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad42272-ae08-4b0b-9083-89bf586ff73d",
        "cursor": {
          "ref": "e98e5662-af27-4bed-ae86-7b1e99fc4368",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1eacd156-e324-420b-a00b-3061607a828a"
        },
        "item": {
          "id": "9ad42272-ae08-4b0b-9083-89bf586ff73d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "baf86855-3685-406d-87e0-1f2176b6527b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a87372c-e474-45a6-b1f0-fd30478cb279",
        "cursor": {
          "ref": "783f8596-1765-4281-9b53-2e543f7a1666",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f712a202-3fad-49b5-9ef6-23dc2f52e2b8"
        },
        "item": {
          "id": "9a87372c-e474-45a6-b1f0-fd30478cb279",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3788cc1e-3bcc-41a0-a735-15ad26ffc27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec3a058-eb1f-43c7-84b0-97134bb363c1",
        "cursor": {
          "ref": "1e7a88e2-2d21-46a6-80e3-67cd61adaab8",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f62bf19-f126-43dd-a654-b41a6bb5e2e5"
        },
        "item": {
          "id": "3ec3a058-eb1f-43c7-84b0-97134bb363c1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "22fb22bf-9256-4d15-920d-1b3f6ca50813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241c6f8b-3d5d-440b-ac4c-eb54cdb4d7bb",
        "cursor": {
          "ref": "ff8aecd1-2a00-4e53-9fcc-cc0d9a538acc",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2da00ba0-9919-4c82-9c4a-be437a1031b1"
        },
        "item": {
          "id": "241c6f8b-3d5d-440b-ac4c-eb54cdb4d7bb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7033e67-d38e-4e3f-8739-a55fef0a3974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3070170c-39e6-4a8f-94da-549d7bcde3a7",
        "cursor": {
          "ref": "f93db65a-9683-4ea8-a8c5-d433850cf73a",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ea798910-b7de-4963-b2b2-cd3b0d451aa1"
        },
        "item": {
          "id": "3070170c-39e6-4a8f-94da-549d7bcde3a7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7c6e8242-95e4-41b5-b5f5-a85696a88fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4be4e8-9556-44e0-ba12-9e20d4478755",
        "cursor": {
          "ref": "e8e9933e-b412-4105-95a9-093a2cb0e812",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3bdcd5db-f483-454c-9433-2feaef8dce98"
        },
        "item": {
          "id": "6f4be4e8-9556-44e0-ba12-9e20d4478755",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "39b3e5f7-3c2a-4afd-b9dc-d2e5c49d5a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c5572-087b-4fbe-a4bd-09e98016fefc",
        "cursor": {
          "ref": "e36c86ea-1300-4241-81a8-3771dd6a1061",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2c8eb3aa-b9ca-4db0-8913-e61585c512cb"
        },
        "item": {
          "id": "4a5c5572-087b-4fbe-a4bd-09e98016fefc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f4510cbd-30f6-4c30-8be1-2aacdf481ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9fda76-5951-4e2f-8c12-fc4bed2937d7",
        "cursor": {
          "ref": "cb90b2cd-0cb1-40e8-8488-26f4af91d506",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "07c5dfc3-bce1-486e-b976-448945e0c635"
        },
        "item": {
          "id": "8c9fda76-5951-4e2f-8c12-fc4bed2937d7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "efbdb39d-6b10-42e0-a0b6-480dc4a060db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7a27b0-3c39-4145-89f5-d23ffbe63c53",
        "cursor": {
          "ref": "d222c185-f0f8-4885-9504-34f32e4eb6bf",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "15be83ee-e3a6-4a20-a8cd-4dc0d78112ac"
        },
        "item": {
          "id": "2c7a27b0-3c39-4145-89f5-d23ffbe63c53",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "08aced08-e024-4243-b89c-e8279ab57263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209485d9-f2ce-4e0a-a809-7925c2a6b9b6",
        "cursor": {
          "ref": "3222e3ea-2389-4073-9384-992c67b639e5",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e8b17043-5480-41ff-a300-eb336df24e42"
        },
        "item": {
          "id": "209485d9-f2ce-4e0a-a809-7925c2a6b9b6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "72319968-dc99-4fd9-bb7a-9a7e5f444c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fb369-70e4-4f92-b01c-0295a2f21f5d",
        "cursor": {
          "ref": "93fa3373-470a-4682-b058-56d7324b96b4",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f9bc83c6-21a0-4ad9-90b0-779ea4f08d69"
        },
        "item": {
          "id": "653fb369-70e4-4f92-b01c-0295a2f21f5d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93a95b2d-0d99-4562-b0b8-0a2042d38c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec60cde1-ea74-4826-b027-6ecdacbd8818",
        "cursor": {
          "ref": "0ed8ceb1-6f0d-49df-8d12-4423e5614027",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1aa76561-9374-4c96-951d-7c091d0f19e8"
        },
        "item": {
          "id": "ec60cde1-ea74-4826-b027-6ecdacbd8818",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30974a09-280c-4b86-a93c-c1443e907194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d4b1f0-8923-4306-a439-2ecc5e5ac774",
        "cursor": {
          "ref": "59b56019-7451-4f5e-aef3-0c8568a8f79e",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b02585ad-416e-494f-997b-4d49c35fe2f1"
        },
        "item": {
          "id": "a4d4b1f0-8923-4306-a439-2ecc5e5ac774",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a501cab7-a2cc-4bb4-8182-3fb45338112c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c55df57-fd48-4c81-94a7-ac04c98907e0",
        "cursor": {
          "ref": "40394be9-1839-4879-b690-feeee6500244",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a3055d6-0126-4ecc-90c0-c80cc2dba5bc"
        },
        "item": {
          "id": "2c55df57-fd48-4c81-94a7-ac04c98907e0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "61e90061-712b-42db-bc8f-aeb759eefc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e3363c-2045-4d8b-9a77-394dd67370b5",
        "cursor": {
          "ref": "83fd02c0-3170-4126-855d-8ad1ea9499f9",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f77953ad-de40-491b-9dfc-59be7054b76c"
        },
        "item": {
          "id": "b2e3363c-2045-4d8b-9a77-394dd67370b5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "40dbd669-691d-4748-8ddd-99a50c80c6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9429dd-ada4-4777-ae1c-b4a7106a0654",
        "cursor": {
          "ref": "73e6173e-c408-4c71-8aa5-1b8f78b769fe",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0f282239-6580-4c4d-8c20-9887be1b2745"
        },
        "item": {
          "id": "fb9429dd-ada4-4777-ae1c-b4a7106a0654",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52e10f47-5f69-4805-97f6-2618fd4bf0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2931c2f-84af-4ee8-82ec-dffea7ad5716",
        "cursor": {
          "ref": "17040b7d-7240-4ef7-84f6-dfd1113f4f6f",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "76c17473-eba4-4b68-9125-52f811275f5b"
        },
        "item": {
          "id": "d2931c2f-84af-4ee8-82ec-dffea7ad5716",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "33432db3-4456-460a-8e6a-43eeeb24f3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c1efec-6226-4bed-b5b6-4f3829f975e1",
        "cursor": {
          "ref": "21af5225-0900-4d77-84e0-0860304202b2",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "44ac86d1-dc3e-4adf-9d2e-49d4851130fe"
        },
        "item": {
          "id": "a2c1efec-6226-4bed-b5b6-4f3829f975e1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d8b9dd04-1bd7-458f-98ff-f4596dcafc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92c3188-7a8a-40e6-84fe-62141c7a3f81",
        "cursor": {
          "ref": "5b64eef8-7b85-49b1-b398-389a31c616a6",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0ac2e43f-bd2f-4c25-82e0-ad440074bb58"
        },
        "item": {
          "id": "d92c3188-7a8a-40e6-84fe-62141c7a3f81",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "69a0308f-8320-4de6-8c74-3ffd2e7a4b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174272d9-dd42-4d91-b2cb-db028c9ed0f6",
        "cursor": {
          "ref": "679b746c-1016-4437-805f-c0374fbcc742",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3e323f84-5264-45d6-a631-b9eac2e5e3fd"
        },
        "item": {
          "id": "174272d9-dd42-4d91-b2cb-db028c9ed0f6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9f4f1f49-6b7d-4908-ab58-2e63fcea1f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f2efd1-3a08-45f8-9b04-9fd254a4b522",
        "cursor": {
          "ref": "39073e73-85aa-436b-84ce-0915dbb51014",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8e9cb9a3-0623-4e3e-9e76-9df00ba17df6"
        },
        "item": {
          "id": "32f2efd1-3a08-45f8-9b04-9fd254a4b522",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "46cabec2-5966-4400-af0a-ae0b4ae66516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a18abf-9e62-455e-8ac8-227da8821efd",
        "cursor": {
          "ref": "8c011ab1-e29c-4407-b723-2002e4505bee",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "66ce1f81-b340-44bc-b0cf-3da86c11d581"
        },
        "item": {
          "id": "a0a18abf-9e62-455e-8ac8-227da8821efd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1f3a8862-7417-4706-a084-7f620f72e771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c57b6d-855c-4154-8852-94308e158f18",
        "cursor": {
          "ref": "6f19036a-4c2f-414d-b9e8-a9e18989a1c5",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "100845e8-692d-4017-9697-1efe98cf4c6e"
        },
        "item": {
          "id": "25c57b6d-855c-4154-8852-94308e158f18",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "823d40e1-705a-4ff5-89fc-ff702816a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3e9983-b753-45e8-978d-c802c2e82414",
        "cursor": {
          "ref": "4feea3b1-57d4-4ec4-a1c3-6f5a3a5c5ee3",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9dd22ff1-f081-4553-96cf-ecb6cab752c3"
        },
        "item": {
          "id": "2c3e9983-b753-45e8-978d-c802c2e82414",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fd9e7a3d-02db-4727-8883-2ac377e8bc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111a11c6-dcaf-4b57-89c7-00e712288de4",
        "cursor": {
          "ref": "0058735c-eda5-48fb-b067-8278e0140b83",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a812186a-218c-42b1-85f6-800b8f146791"
        },
        "item": {
          "id": "111a11c6-dcaf-4b57-89c7-00e712288de4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8cdb397a-bc20-4733-9347-a47cb43641fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238ef9a5-8ab3-4b75-85de-b2be4f4722d4",
        "cursor": {
          "ref": "55897af1-a66b-40ec-aa74-a131099e8800",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ae078fdf-9611-47c0-84b6-41eafadb49c3"
        },
        "item": {
          "id": "238ef9a5-8ab3-4b75-85de-b2be4f4722d4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6e5ec6f0-2413-4d86-accb-b2945e9826f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b40be0f-115f-4562-915b-7fa76170af49",
        "cursor": {
          "ref": "5e639328-b8be-435c-aef3-f6a2d23df658",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "733013e9-aa33-475c-a3bc-9a0150893588"
        },
        "item": {
          "id": "4b40be0f-115f-4562-915b-7fa76170af49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3f10205-8544-49a1-b340-c70cf0983102",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 92,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ff73ac-53fa-4342-8005-65fc541dd89a",
        "cursor": {
          "ref": "4ca9832d-5f90-4f3f-923b-ad9529be8d23",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d08c63f9-e39b-41bd-98dd-f9ddebb61966"
        },
        "item": {
          "id": "e1ff73ac-53fa-4342-8005-65fc541dd89a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "80f0e3bb-3533-4596-b52e-407dad42d083",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 287,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed57c03-f0f1-458e-a04b-115912fb3606",
        "cursor": {
          "ref": "95a4d7e7-7b1e-4b90-8b74-ba815e26b74d",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "104ce686-e0e0-4bd0-88ea-10288128dbf4"
        },
        "item": {
          "id": "4ed57c03-f0f1-458e-a04b-115912fb3606",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aa0237f2-2d6a-4063-a6d8-0901a73484b3",
          "status": "OK",
          "code": 200,
          "responseTime": 367,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f20cc28-5293-4c2a-8cc4-9c4040a6aa0a",
        "cursor": {
          "ref": "c1ca9d3d-0cf3-4556-8b47-5eb26e4f91cd",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "75e3383b-6a89-4f82-94b1-2051e8627fae"
        },
        "item": {
          "id": "5f20cc28-5293-4c2a-8cc4-9c4040a6aa0a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7595956a-dd4d-4943-a08c-9fbb8ebcb8d2",
          "status": "OK",
          "code": 200,
          "responseTime": 375,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bc7ee6-cbae-44a2-bcf8-64450fa56c43",
        "cursor": {
          "ref": "26c8d577-8bfb-4ff3-a387-f4a349db395f",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0a913489-d06e-4e82-98e9-21020e2d7c0b"
        },
        "item": {
          "id": "90bc7ee6-cbae-44a2-bcf8-64450fa56c43",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "23aa14d6-88ba-4347-adef-cd8280c514e4",
          "status": "OK",
          "code": 200,
          "responseTime": 382,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a206a590-92ae-4f85-9a26-8e65ea31101d",
        "cursor": {
          "ref": "e0474271-a6b3-4735-bde9-503bb5cf0301",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e19f39b1-e09b-4a0c-83d5-df233dc3ef9d"
        },
        "item": {
          "id": "a206a590-92ae-4f85-9a26-8e65ea31101d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82b41ea5-4dd6-4435-8321-6a440479db84",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
        "cursor": {
          "ref": "69677870-9afb-4e3e-9d3d-8d49dd635667",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cfcebe45-d37f-4474-a0f7-1b4cfc60da66"
        },
        "item": {
          "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67f20a09-0435-41e3-87b3-4672728e0f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
        "cursor": {
          "ref": "69677870-9afb-4e3e-9d3d-8d49dd635667",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cfcebe45-d37f-4474-a0f7-1b4cfc60da66"
        },
        "item": {
          "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67f20a09-0435-41e3-87b3-4672728e0f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
        "cursor": {
          "ref": "69677870-9afb-4e3e-9d3d-8d49dd635667",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cfcebe45-d37f-4474-a0f7-1b4cfc60da66"
        },
        "item": {
          "id": "d7b24d12-d4b0-41b3-896c-211a2c65a306",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67f20a09-0435-41e3-87b3-4672728e0f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1debec-c698-43fb-9bc1-5325301ac983",
        "cursor": {
          "ref": "10dad265-738c-40b9-8169-289fa3fc3b1d",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61330fb6-d1de-4c40-885d-3b9c61146e8c"
        },
        "item": {
          "id": "bd1debec-c698-43fb-9bc1-5325301ac983",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "50cf4faa-0b96-4244-afda-1a8d1fee47a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 324,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853eb50-f055-40c6-9a45-09f277095e35",
        "cursor": {
          "ref": "30948296-08fb-4cf5-b56c-5017daab0fea",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ab412fef-b800-45ac-b58a-9474bbd51038"
        },
        "item": {
          "id": "2853eb50-f055-40c6-9a45-09f277095e35",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9638564b-977e-4349-ac80-d785161acdfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853eb50-f055-40c6-9a45-09f277095e35",
        "cursor": {
          "ref": "30948296-08fb-4cf5-b56c-5017daab0fea",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ab412fef-b800-45ac-b58a-9474bbd51038"
        },
        "item": {
          "id": "2853eb50-f055-40c6-9a45-09f277095e35",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9638564b-977e-4349-ac80-d785161acdfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aef474-1881-47f3-b9c4-b3ec6964fbcf",
        "cursor": {
          "ref": "6caa13c4-bce9-4775-a1b2-9085c47e8daf",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3b780c62-04ff-4e9c-aa20-73cd61dc0b7c"
        },
        "item": {
          "id": "29aef474-1881-47f3-b9c4-b3ec6964fbcf",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fc3567e0-b3c6-4e60-af5d-35c3227cc4a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1633,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdefd12-6794-4bd9-8810-afe23add0ac9",
        "cursor": {
          "ref": "637a2c54-140f-4505-8e9f-dc24bf8eb6ff",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "05e584b8-fdc3-48ba-b65f-2431f1381270"
        },
        "item": {
          "id": "dbdefd12-6794-4bd9-8810-afe23add0ac9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b5f10192-6efc-4d07-8541-8c9d0ffd7718",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdefd12-6794-4bd9-8810-afe23add0ac9",
        "cursor": {
          "ref": "637a2c54-140f-4505-8e9f-dc24bf8eb6ff",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "05e584b8-fdc3-48ba-b65f-2431f1381270"
        },
        "item": {
          "id": "dbdefd12-6794-4bd9-8810-afe23add0ac9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b5f10192-6efc-4d07-8541-8c9d0ffd7718",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c77864-2ec3-4ff8-afb8-7c214d6bd280",
        "cursor": {
          "ref": "46654a68-df09-42d2-9998-56fcb0be88f9",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "264ea81f-6e3d-443d-9597-7054c0efd8b2"
        },
        "item": {
          "id": "11c77864-2ec3-4ff8-afb8-7c214d6bd280",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "33439ab2-51a6-4c27-a7c1-46972560b090",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 963,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}