{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1eee8488-cec6-443a-a544-235536e1572f",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "63217305-f45e-42b2-90c9-1ed356a3a9b0",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'alsoKnownAs'\", function () {",
                "    pm.expect(jsonResponse.didDocument.alsoKnownAs).to.be.an(\"array\");",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "0c422164-e8ab-4238-ade2-9571dd7db24e"
            }
          }
        ]
      },
      {
        "id": "ff8051ef-bead-4658-8553-ae6e55c197df",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"2010-01-01T19:23:24Z\",\n    \"credentialSubject\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f42b6a3-a6ec-47bb-ac58-f4c1f9bb1d0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e26ece8d-947d-4f6f-a756-ea870e321014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83cef3cd-cc23-4fc0-ac20-13ef36414c44",
              "type": "text/javascript",
              "exec": [
                "const verifiableCredential = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "4ba58350-68ed-47de-93f5-9e599c3bd855"
            }
          }
        ]
      },
      {
        "id": "b792802a-e113-4cf4-b485-4a196a48c291",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c99c4de2-ae0e-4687-8833-459cd07d4e5e",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "5c812394-8d4a-48b9-894f-714ad0c6e89f"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 2
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 2
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 4,
        "pending": 0,
        "failed": 1
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 2
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 3338,
      "responseMin": 3338,
      "responseMax": 3338,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1650982035494,
      "completed": 1650982038948
    },
    "executions": [
      {
        "id": "1eee8488-cec6-443a-a544-235536e1572f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "244c9252-63bd-4eb3-ab5e-b3088765dd6e",
          "httpRequestId": "8edb0260-028b-40aa-b2c4-5735f6f6da7b"
        },
        "item": {
          "id": "1eee8488-cec6-443a-a544-235536e1572f",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "8c80fad7-29f3-46ed-9f3c-696b85f0b368",
          "status": "OK",
          "code": 200,
          "responseTime": 3338,
          "responseSize": 779
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'alsoKnownAs'",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 3,
              "test": "The DID Document MUST contain 'service'",
              "message": "expected undefined to be an array",
              "stack": "AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:4:1)"
            }
          }
        ]
      },
      {
        "id": "ff8051ef-bead-4658-8553-ae6e55c197df",
        "cursor": {
          "ref": "0f396f72-0334-4d26-a700-71c5a365890c",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0c17b1f-e7dc-4586-aaf7-9cef7a354ea4"
        },
        "item": {
          "id": "ff8051ef-bead-4658-8553-ae6e55c197df",
          "name": "Issue Credential"
        },
        "response": {}
      },
      {
        "id": "b792802a-e113-4cf4-b485-4a196a48c291",
        "cursor": {
          "ref": "542b59f5-a64d-40f8-8c6f-91c5cd80d660",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f4d7a00-efba-4076-bb85-692e7c98f79b"
        },
        "item": {
          "id": "b792802a-e113-4cf4-b485-4a196a48c291",
          "name": "Verify Credential"
        },
        "response": {}
      }
    ]
  }
}