{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4e3ce742-863f-444c-a768-0dd6ebd61ea5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d2b54c13-1b13-4642-8b3b-1ea1820e2795",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "575dd33a-5a13-4f0b-8d85-f885443eefce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d0e2949-0cda-4671-a2bf-00ee37787cc5"
                }
              }
            ]
          },
          {
            "id": "7291d3ef-fae8-4153-aaa9-b12757549d2c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdd30171-bc9a-4b78-a045-310b0de9cae9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6478b6a2-7e78-4da6-ad57-84f438c56e1b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "58880c06-9781-4e32-80c8-261c80cf25ab",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c64c2538-16da-4921-adec-d989690ff3d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c6bd6b1-b663-4bff-8c59-2923218878b6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb4be37d-3f58-4ac3-9f33-9bedc70801d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3443241e-8800-4410-b42b-88137d9cb7f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d6e756a-f636-46af-b169-a9b86f0f8145",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dab4c410-0847-4259-922c-f220d8536f7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9351be3-3ee4-42d7-8f6b-a476f9f70743",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5b32e14-a3e5-430f-9826-19e0b4faf1f0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0080aa47-61a0-4b39-afb5-d00b40e3a9ae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "169c2e43-6b5e-4b57-b07e-59c1b47034d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af2d6e4d-50b0-4833-bdcd-ee9d4481cecb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87e22df8-f47e-48e7-a80d-0a20de2f2267"
            }
          }
        ]
      },
      {
        "id": "0a31f017-c23a-4367-8c80-b6c35d3b55f8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "03572521-97ed-4b18-a009-851f16dc64b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e958d6f-982b-47c8-a926-1ce6c56abc70",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a99e9c8-dc7d-4392-aa6b-6bb01a78f6f3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bad6b2-cf3a-44a4-b9ae-906681ffade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "076ab8fd-6893-44b5-868c-19035445c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46a1e8e-43a2-4e07-9b7d-f4226eb8f4c3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1200536d-cb97-4e9d-944b-21238c03f0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7672e33c-cf3d-4609-9f80-8b282e78e553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a23e82-d46d-43ec-bc9b-a92c755002b5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0faeee-146a-4ab8-afbf-e7b3306de2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d6c322d-9bae-4f36-a8f6-c19016a2acf5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9317c3ce-870d-4a79-94ae-4a63f1b2a0dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f18970df-e6e3-47db-8666-70bafc4a129e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b41056-8d58-4a02-bdc8-6f22a1260b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1749a367-c1af-4540-b0cb-af44e2b27f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a226861-bdb0-41cb-a359-e8a78d8caca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd480ea0-150a-4a8f-822c-40d889a596ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2fcabd-dfff-4f65-adce-723fb86f1852",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea061eb-66ef-43f2-b48a-459183688cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5bdf28d-9544-42f8-b413-9236349d587c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac095da8-11dd-4d44-a2c6-3303ba3bb376",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f4d80569-4dc7-4a4e-b989-2c5552d5f22d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c726dcb3-d434-43a6-be5e-8bb6d1892382",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d366ec4-700e-4606-9eab-7f46197432d8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53fdcf4e-cdd1-47c2-b76c-e9d8da082f1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "abcd4adb-cc3d-4b57-8129-425f498fbe6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b301bf8e-b91c-426f-9554-445667352597",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "28fb72f1-6508-42fa-b17f-49d9110e6690"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e6b6543-0f80-4931-a365-7c750626f9ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee7a4631-ebc7-409f-908f-7b17c5a0c1c9"
            }
          }
        ]
      },
      {
        "id": "bb92a8ee-cef9-4129-bc16-6377fcf16fcc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ce69cec2-9aa4-4f74-b29c-d330c9d40dde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17e2539b-691b-475f-827b-ce3a0d570661",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "af55f7c6-02b6-40b0-9970-eb848be0183c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3129234-0736-4cf7-92bf-50bef7fd9272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f93e9e-1d0b-4a86-bc2d-12918b2f88ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074e56f-99d8-4388-8305-428aa3b273a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "009e29f6-b950-4c2e-a692-26f378e34b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a31c60a-520b-4965-a1cb-393071e62ffe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae8ad1c-9817-4ee4-8e1f-d853faa2e1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ee0a7-e53e-485f-b8cf-ccd3a1165597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e616e9f5-377d-4ecc-99e1-3780f9065f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1bd415b-a26a-418a-8f60-bd612342271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88815cc6-5ba6-4acc-bc65-3bdb1d0247d7",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27e4c91-6b4e-476c-ac34-92ba4b26bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fdc9e5-67a6-4378-8061-76035e82115b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be9c2a0-976f-4a9c-9501-f13dcdc42c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b525a77-a7da-4a7d-9592-c2490f3405b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9c6a31-1ea7-42cf-9f32-f6e00aa3c183",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1684011-151a-4c33-ac4a-64d99e19624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832fa2d9-fa3b-4707-947e-137f4b53935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61544fd3-57fe-4b9e-9748-2969949ce207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24f91103-82b3-4ac2-9592-ef042767e556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4f6ede-df1f-42c3-9103-9472f6f2d510",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2e46fc-a5f1-4e2f-84b2-877c57c69d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955be310-3200-434d-9de4-95b92059f45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae71a64c-559d-4e5e-8671-dafe8b8e26ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7139c6ec-a718-4eeb-96df-cc5271f16b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7070aa93-95d4-46c3-b79c-6d543fc083ff",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6630fb28-e6fb-47d0-b649-c86734f46487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b17796-007b-4a17-8035-3358ca3bb094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9327783b-6b7b-435f-afbf-4fe4363d5ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837c487b-a19b-4ac7-9174-0aedfb8c3133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3328eec0-b70b-4e75-ab44-a93f21e4b242",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21212525-8087-4fab-9b5b-279fdd34a616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60462a8f-bfc0-40cc-b5cc-c83db045f75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5672c5a1-caa6-43ce-a902-05c65dd177fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a982c04-a67d-44c4-a460-faea46d0240a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9768e016-d295-4529-89f7-c3da36bfb3dd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d7d766-908b-4793-9d09-267e5b0ab8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fede1c7-9422-4d8d-b815-e3926c738db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67539894-c5a3-45d4-8c27-bb980a0cca18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc69e1b-b7c3-48a8-85a4-f98244e81005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647580c7-f682-4057-b75f-963a917d8c17",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112f3146-a798-4955-b9e8-97452830c887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249559b8-99dc-43ad-9a19-24df6c226e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cf285f-312e-4ea4-9a1f-a87b9ba3fc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27b3766d-b5e7-4a74-97b6-6f4cc468b8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51228698-f4ac-425b-ab2b-00c8e8d98778",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58961b68-e71a-4fba-9434-236690dbdd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9faa5a31-9c9a-4809-8779-fe4122c085c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01029e9-effd-4e50-89d5-e3f34d2721da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0eb28fdc-476f-4283-82fc-03715be0f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45bf98c-a1dc-4b5f-a5a4-d44d1c019d35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75a0f92-7ebb-4b31-87c6-c7d93fa4c152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc34d8f-a716-4393-b3d8-dbebe002d977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed35826-fe41-42dd-b001-68df7f2f9de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec9bfbf4-0c43-434b-91a9-ba7fe938a016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2943a9b-d279-4f5b-9270-c3b11ea3ba53",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba250656-661c-4761-90e8-55c0eda44350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4c8b9a-5246-420b-9e17-5a2f6e182048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c0e99-728c-40f8-8953-1b1e52f1c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e0a7bc6-5a33-48b7-810d-775d667eb1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d36ce06-1d74-4a7c-b1be-26de7198b3e4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb293aca-cf3a-4133-b962-677e40876343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8858c1d5-78dc-4a73-bc8a-18aa5b02f80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b426939-7f4f-49b5-b160-17e6171da83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2623c0fc-d206-4bc2-b0d3-726b85f3e656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82f143-3cdc-47b1-9e21-62e461564dae",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae709310-c118-4b76-bc46-ee1c7c06d2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39ec418-9507-4c00-af69-2281f0e0048f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc0d8b-1df3-4cc8-ba70-322ed8977002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbb29f4-c541-4e53-9313-692f81fed14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645ca4b0-16d6-4d5a-ac30-a8671e265e59",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d1431-17c2-4beb-92e5-edbeab427261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce81657-4912-4d1b-a915-7d955e79368c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173a9108-ee36-441b-a4a9-4e2185d43434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07b971c-b626-43ad-b08f-90c31d29f803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f40a88-2f6c-4e09-a701-32ad650465df",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fab43eb-bb99-47e7-8dd3-fd7f4a467c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b3be77-9376-4b08-9a64-d798f15a44dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30f7e34-9f2f-461c-94ff-c4c5800a34ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd4e3ddb-216d-4b61-9aad-2649891ed979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433b9af7-e03d-47de-ba4e-cab82567e0bb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2d4df4-3a00-42c8-a8f9-3b45b0ff058c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62a2a0b-c6ee-4747-beb2-7e03dce80339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7213b7fe-d52d-4176-a562-b9488a773207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59354d4b-0930-4a5f-9551-cecd37e810b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9bbedd-c984-416a-ad92-586ccee8a8ac",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aea49e-3ed4-4505-89aa-1d6dea43cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c215b7-4d33-4a32-85b5-0c14c9faae20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f3e891-d611-489e-99b3-d6d191b78cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f40370-9abd-4e9c-b900-952684e8610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05dbb38-6e16-481f-b2c6-7a7c3bd0bac8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93905af4-e8d5-4309-8eb0-35f30ca92ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88851d13-d3f9-4db9-9c19-32cd4de6232f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1af5a6-91e2-4d3f-9e1b-7231d05972ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da1c23f1-ff15-4f07-ab6a-5bf258ba7061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6130ef-ca71-4bc6-8345-7de588934a74",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d832b6-1b49-4aa5-b8ef-09ee46adc3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de02f3b-c173-423d-9578-4346c95221fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d72d5-0d7f-48c0-93be-358d519e736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "884eff90-adb3-4981-8bf9-fc1c2fc71a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145bb052-a9bf-4a87-aa0f-b31d5e6df2d2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50ec397-4664-43c6-b228-3d2a89923e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4708b76f-0c7c-41de-a624-00a07039d24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa2c058-fac6-44c6-af63-e357fba9fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef4da57-f8a8-4f3d-8146-cb7ae1ca5937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eeff57-50db-4cbf-9b07-fbebdce20f25",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c50134-7237-4413-9933-2502ef5c204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ef112f-d917-41fc-a154-eacf7d5afa6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ec31bf-25e5-4a1b-8c53-e50e3435bb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82341bd8-5aba-41e2-9086-7d3fb9bc1fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08fb7ae-4c56-49f9-9e08-bcd0421da11a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353311ac-4542-4fd6-9b9a-e252e91866f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8540754-d59e-46f2-922c-0ce060346add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7d594f-639d-4a04-b8b2-c41cebf44b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6408d4e4-5092-49e9-8634-b5d17b1ffd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb9c208-4a38-4aa1-a05d-0b0b1a8f352e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6cb2ac-2227-428e-9bb7-088430ddcbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa504ab2-bf2c-4c84-937b-15f86d96495b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de546ef0-b673-4651-bdba-843f7163acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2951fe3-e2b6-4c24-8fe4-4eec01febd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580285cf-5887-4164-9569-163195f83822",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa7b20-8d7f-4564-b293-af7360e86b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0cdbba-182e-4ad6-ba88-137fe17adfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12611f0c-e233-4884-9659-c64fda33591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dd8812-7b18-4791-9d0d-d55e3f71f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6080734d-3eed-4767-9f1e-0d69f36774c8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bda84cd-6c5f-42e4-9d1e-d9da63e1521f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67fa5ad-ef2c-48c0-9588-4256a07af75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23c3c8d-4b45-4d07-84e3-96bc4f5c7535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a99d695-2b62-4473-a794-8278d3545b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef57d313-d337-4cc5-93bf-f36cbca38f5a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5730bf0e-7129-4782-a345-b8d62a9dbfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aaa830a-cb67-43ea-a669-e734616dcc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3812c89-1b17-43fd-bb5f-31f05dcbef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50b4366-ce4b-41ed-8490-1721ebcbece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dafe60-4334-4404-ba3a-f523226aa14d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701999af-463f-4484-b2c1-9408fdd90d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567c4025-9da2-43e2-b95f-7677eda989f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71947308-b118-4316-873c-53a4e02bcc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3053c52-4829-4ab3-b656-2e737bf24ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bba6343-b193-426c-9fa0-e59897c3cb25",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f73c72a-e118-4012-b153-1c9a4670a1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d3b68f-5d3f-490c-b662-9317d7c1f794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2774f6a-f4ff-4845-8a32-f87ead7ea570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8e2721-1560-4f43-a503-0e10048c7965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10de66ca-7eeb-42f0-869f-50f93b771d56",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2d8cb6-16f1-460e-baea-d0f6e78460e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77abcab-5c30-4880-9f7d-aa5636bcdd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1846233-e5bc-4fe8-aeff-06586258d69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1850a97e-0d7d-4a02-976a-0f4b19872a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d2360a-8ebd-4fc9-a1fd-ace8bc397d5f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b9cf10-ac3f-4b4f-89e3-93062196c7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d29801-e797-4ca7-9388-939e2f925294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fcbe46-b080-4101-a91c-92b33b27bea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db78932a-ed92-4d4c-91c8-c9f46e245b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6066de-6165-4a55-ae6a-602fee988029",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66c930e-2e7c-423b-b4d9-d1777fe19485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e879c8-4710-4c6e-a5e7-e4d275d10060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb185c02-8c92-4c63-90af-49662d6d289d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ddfd9b-978a-4d98-a207-f1b4413c0dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a0b24-6606-4f56-8504-8012702a8793",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2613497d-8da2-4664-992e-ae6783bc8357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66efc3ba-5142-42d7-8ae9-9538fb80e91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f83026-8bdd-4dc1-b680-b8424822b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58b07aa-d478-4e84-8038-ee732a1235ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671c863d-cf72-44bc-ab73-241e33deded7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5ae9c-f37c-4bef-8c74-ad6c479e9acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c01f19d-91fc-4e3f-a84c-b56c0e1c2acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92900d9-9f38-483d-ab3a-912f7f429a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5603c3-2bc8-4232-b822-eac40f6614aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f15a8c-36da-408b-8dd4-e4dc157486aa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64facfa8-3ec9-4be3-a478-44123609ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7699501c-656f-49fd-a85b-efd3d65f9ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260d75ae-cddf-4765-aae8-0c6d7a665a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1713694-7fb9-4849-ae9b-389320129a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3787e4-6f34-465d-914f-8feef09b0552",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed4dfb-f8f3-47c8-bad7-e52241a8fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e4b50d-e3c5-4651-8d8b-fb4ab6b8659a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15022cae-efd5-4bac-aac9-b217830faae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74df6421-5577-4ed6-8756-f2b999756ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b88a6fc-87ff-4ee5-b37a-6b28f7a6dea6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050a7b4a-f1c2-4ed3-acd4-9ec55c46ba45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e1b448-a95f-454d-bad5-2153d5e9a705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1192c5-42c7-47d8-b5de-621493384847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eaeea5a5-709b-4213-807b-552d9bd6158f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50388a87-bf3f-4532-a9b1-2d3a73710d8b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63476015-65a8-466c-b6a7-13f14e210d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff024900-76ee-4bcd-869c-e213fc8f19d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aa6249-9b08-4281-a855-65b555b9c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95cbf27a-7c02-44a4-84c0-e66a3383cd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744f2fc6-043a-4669-b03c-3f4cba302990",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf435ba1-abb6-44bd-bccf-a9de3690fe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cf894c-9b10-48a4-b7ef-55fa167028fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f994ef6e-fc5b-40c8-afe6-d47a09740bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd554718-a8e4-4dc3-aae2-ff72ed188676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867ff48f-e4c6-4d9a-9b05-b1bce8ec1781",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cfdcae-21ad-455f-92ce-34970b4175ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ca679e-c790-49c2-9a3b-12f96c308f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239b647b-eb1f-4419-9e69-0c6c916bcd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "128a04f7-25b9-47ab-bf2f-e2cc6fbd57ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be64f4c-0e91-4534-864c-d71f8ff8b49a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97504dcc-63c5-4e55-ac3b-e90d7408d0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8082d4e-49d2-4062-9b3b-2c1fa3bebf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cccc780-49d5-4a13-ba78-e2b9b865a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c2800f-d900-423f-aeac-f00ba28b161e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1cdc83-93c7-4c60-a451-fbed5b87ea1f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af8fef7-a970-4d04-bc30-d1a351e226ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218a5208-cac6-4367-a784-dda40478d82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ba61f9-f7a2-4898-bbda-7b3758926091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69add0e-3d2e-466f-a9f9-d1bc91d9a58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af6bc67-20c5-4904-a123-227b50177cca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58703383-1dd0-4527-9a1d-77b28ffa2677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b28c4c-8097-400f-ab16-d84de34613ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14fecb9-63fa-4e09-a66a-99044b358c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c35b1fd-7f11-49cb-84ab-6378e212c633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b8725e-1ad8-409b-b289-b7a1b518d8dd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d954664-10e1-4117-bc71-48eac1de841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a87955-f107-4f69-a460-11528bf35a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f12766-db55-4d05-a8b1-12d76000f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "76564ba5-e897-4443-b3f6-5d70d3471fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b751a5d-0d7c-4d02-969f-fdba5f413f26",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e2eae8-a3f2-4275-9220-7e89178fcfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2719cfd7-85e4-4c97-a318-83c5ca00fef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8002d4-7646-4b96-94a7-058092984791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8232ecb2-0659-4277-a330-5f644dded344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ec0d8a-ac18-46ec-a749-ef2f832740ff",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f3e8c8-d463-42c3-a685-a6ed8893632c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dd0a68-2191-4220-bf96-b6ace0c8462e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7d3b3c-8b87-45fe-a2f8-fb0a4006bb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c83470f8-c8f7-4771-9565-b3e35062c928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f113e5-62b8-4c47-a6b2-bc415fa0cec9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718df44c-071b-4d5e-a524-39264ce2573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b7b31f-2a32-405c-9e8d-58afef800cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a132ce92-6560-4664-b2e1-8ecfcbb46613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1fbcb2-a626-4e76-8e36-f64dbe2bb5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a005c1-9853-43c9-988a-a163ab4ad078",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9602a3a3-96f2-4ddd-8943-bf1d591bda9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1481df20-49bf-4777-b3ab-c7b161f9d11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86166826-fed6-459c-af68-5eec2613b995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "996e0520-643e-47db-b593-7274ff3fb8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9cda2a-f5e1-4c01-824d-7104744a8dbb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a5a736-4f86-400b-bf18-d3531e94e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f4933f-3976-4f08-b175-1d590976ed1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333c6e06-efbc-4359-93ef-56d65f76eab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c6598d-406a-40f6-a99a-912d029bfc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b78e1ed-24bb-4c3d-ae46-186f52b2518e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397986ca-91dc-4edb-a66b-44da405ff357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5c3adc-be86-495d-a66c-65873b9bf3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d82f24-fb5c-4cdd-953d-88341be1d049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77faf3a0-3da5-4614-820d-6343bc52bd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a0215-47db-4257-a830-e449bd20f79a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381a5505-fabd-4618-ac36-cfbd66dd4b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf0b729-e8fa-4c33-a09b-bad2af3c5e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c7fb70-8827-4f6d-9e79-2fec60a9ee15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00500a26-eb0d-484f-814d-208ea438152c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657d7d7e-9e76-4a91-b106-3b976f06e50d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db31ab6-ca6d-438a-bc16-3f5af6215234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f8bfaa-2bc7-455d-afc3-6b685332abb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ae2216-c759-44a7-be76-699b22f9ed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f805f395-815a-4244-bf20-459fcef49205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca34c7dd-7209-4328-8171-6b8d823c52e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a619cf39-5c34-4241-b403-954141ce9a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b268783a-3cc2-46ba-a74d-4daeef95e838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d570a6b9-51a5-479d-855c-8cb7c52d323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5b064f-b20b-47cb-b3a4-88bc262bd866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9f6786-fabd-426f-aa17-5e6b6adc82c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de90d024-8e77-47b3-801e-6f281cb53070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff4b41c-e331-43ed-a2db-25e92412de12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ad115c-0bb5-4321-a842-95b8c61c687f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f77fc4-b062-48ae-9814-39ff9df92822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e920b9e0-7ec4-453f-8b01-887dc1350cd8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde96a2b-b1e9-461f-be3f-f6b0b5a6d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274abde2-187c-4f89-b6ca-fd4bae4fb1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c0f93f-c444-4595-a5e0-b55715c207da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e3083f-9a49-4ac6-b814-bbe1b1242c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e08cf61-1d6d-48a2-99ee-2e65886f02e5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a60041-d5e5-41bd-b1b4-bea341c2a043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af914bc-fa03-4752-85fe-35894de7f61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0179bb73-0354-490f-8ea8-61c97b4f495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2ed3d0-7f2b-4441-8b21-43d664a9b1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f4ff5e-608a-4a7f-9ce3-666033a82027",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190986f7-eb8b-406e-ba4d-5e18346cd954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5947de-5e47-42db-a8e6-65bda39f1f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f913ae3-c71f-4b0d-90a4-2e5f74dc1820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85cbbdd7-1cb1-4c83-8e4f-418a87bcc0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664ee98e-51f7-4ccf-b4f3-1f83402a258b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f9c999-9562-48a4-a1d7-e6e54aafd8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10305a8e-c09d-43c0-946d-355d9d48d272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f1db9d-2429-4b0b-a7b0-685ba747ac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5115eaa8-16ac-4568-9406-de353eab3631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59efd861-599a-440c-ba6f-cd32c2be15c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f317fd6-6e05-497f-9fea-ccb33c07198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7d67bc-92aa-4f30-af56-b1b5194e985f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758af385-01a9-4b93-8d52-ffb59e191970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4fbe86-5cef-4875-9dcd-17358366b900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a17ad20-237d-4252-b39e-e3aed41ba0aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9624a59e-85d0-4238-8176-f4935c2b05b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fb7a92-0bd6-4b68-b86a-b15b5b700882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03087bf-3d7b-4b66-b87b-cb6b6f53da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "49deb8b8-ec21-4cc7-966d-ecc3ea7e3e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff21446-49ed-4762-9bc2-f83087f7fd39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf76566-4867-482a-bcd1-8f10fca46792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b282f20-7db7-4c22-91d6-b2070c1b5490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cea8676-0079-4ff1-bf03-1c1fc39db530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3e8c81-71dd-42c2-a25a-627b2e19a4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b6fd0-64a6-46de-8bfb-67059bb390b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab1173d-08cc-4351-b36b-f76c0261e626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3353ff56-30ee-4384-b215-9c35d39cf3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b4df93-058b-4a67-a929-c7e848d5a2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a58f76-a245-4a11-a4fb-3b20e5016c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3680aeff-702f-46ff-95f7-68b7af9c4d3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de36a367-0ac3-4cf5-b8e7-7488e4184672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced516bb-2267-4457-803e-1b02a883acac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0382a0b5-96e2-4d9f-81bf-c4d81333cc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7b1165-ee92-4cc6-96f0-4780962949a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3786368e-80bf-4d9f-9d54-b172043bdfef",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcc3bd1-dca2-4013-940c-73f5ed5ca273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b6282e-18d9-4f09-8027-e5e5f2cf0060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a639472-c007-4362-9f04-e8cc99ac0bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72306b1-8417-4cac-ad20-bea1b6c0ebaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015ba8db-f9fe-49d8-bba1-6039c55cc1d7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37834596-5320-4c8c-8fe1-96a2c1d0a354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f3eb9c-7c47-45f2-a504-56e1fcf4521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0b29a0-276c-42c5-8756-1a28c03679c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef1becc-2818-447b-8d2b-2dd0674be43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc62ace-ab01-44bd-81b7-d61b42931cbe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da47d38-712d-41bf-9915-ee481950d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed37b2a4-0810-4444-8c1d-b016a3572009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0d4f92-374b-4200-8c22-f470100423d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd11f483-8004-4aa1-a9a1-ad7aa66e13bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66b6123-7e23-40e1-911b-fba78747242b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eae2871-910e-4d70-9beb-b9181a674f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a7f0d7-0a09-4198-9385-0ad376125840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de5c16f-b947-49bb-8c5d-4512a30ef3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35237ba6-e2f0-4968-ab95-05c8fabe2b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084875ef-e642-4d17-8a88-e83bc14590a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfd5f6c-1de4-4f83-88bf-33596153573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4755ba-dd8e-4764-9e7d-d4379fb6e896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d66cafb-3a5a-45c6-b42f-d9a345385e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06b8e31-20f9-4292-b054-db0dda26872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253d6017-125d-4b72-b33d-2dd88d25e0ba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852ffe8f-28b2-4f5f-95f5-36ce208b7b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8a234c-6267-46fb-bef4-09f81ca1e165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16852e47-da75-40a2-9a6a-442a2ef0fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09f1ec8e-68c4-4f70-97e0-56ef0902334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3be9989-d5ff-4c6a-b096-ff41a970ce8c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cbbd73-08ce-4158-875b-e8e966867c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a87fa35-39ba-4a3f-b746-4deb17a59bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74b90ac-ab52-4510-8e9d-99e2b3f76f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c585d9c9-bb68-4745-a158-894e8b95d997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdd8ed-732d-43e9-b547-016fe4f58000",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b310b67-d84d-4853-9e2a-e19428c18684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0a7308-1ba8-46dc-bd05-3182312a6aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0f2985-a9a4-4cf2-ae91-09b89ea63f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "800e7136-b497-47ff-a736-443515b43e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5909a63c-e9b5-4541-9914-c9790adff8dc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef2e82f-3f99-4f6b-9e85-044a6682ba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1352fa3f-5f86-4201-a3e5-3fb447dc1ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701d8448-ed0e-406e-a69d-d02d7cf22f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93483f9-8872-4e06-aeaf-839d86b95a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254e0d7e-ea67-4457-b642-0961f5140c83",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93804460-f0c7-40dd-bd22-444f0a183c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e55ca4f-3786-4b61-9742-123267acbdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3bd583-f3ba-4456-82cf-9a3325dc3cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38bd790f-7b1a-4613-8a79-799bd1a04f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4a4164-adc5-4aa4-bd8c-7846f1e17672",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a84a19b-19a3-484a-9081-28564d7684c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9d886a-03af-409f-8e3d-a433e7ce9705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171798d1-4df2-41ad-a3dc-700bc580ceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faeb49f0-d1a8-4fc4-95d4-b7b4b6b33be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee49adef-5ec2-472e-a279-14c75a8c8a29",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63186144-fd9c-4e47-95d8-af0fffde99f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d86c551-452e-412a-abd6-3075f47d3532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fa501d-c7b8-4ba9-8f6d-9052e4b54e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f31fe9-a7c2-4c12-ba01-074f889ad58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa36b4c1-2912-4bf0-b7f6-cedef8bc856c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591935c7-414e-4f6a-a42f-6e998d5de06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b04127-4ffc-457e-8ab3-d9d574e1fcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e88161-4abd-45bd-86e2-b6912c794d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28615cda-9558-425f-86a2-9de2ad6ed3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0d1fc2-22a4-4cad-ac9d-f49a3c7b71d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07302871-6900-42b5-8a4b-80ff9ef5b95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b70da2-fbe2-4041-a41a-cfae1af229b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233bbcb-4e40-4206-8464-bf2587e22204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d6d200-e2ee-461a-adf5-120d720d56a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8408d20-1c25-488e-bed5-e6369ad55b86",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1b78e9-6617-4c15-afeb-4e40e69e77ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e9a3b2-7d66-4b43-a939-ae79f1f96b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c39cd08-0978-4004-a3b6-8ac5e818beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb6a730-b713-4039-9284-1bcf110cc909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3cdadf-8779-45d9-983c-9e11a2842914",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40870222-1e58-48da-82c5-b82412e76113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78c64dc-e178-40c3-9779-a87493be3dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581818b7-2499-45e8-b038-0d098be46341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca24bc2-fb51-45a5-9579-16bcfd831db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490af14b-3b62-47f6-a6ea-a321386e3162",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cc71de-74fe-4aa7-8ac3-3da6a6805414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c7df68-d7b4-4904-a169-92fb671b78ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54bb08b-30fc-43b2-9d96-2298e053a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2217d7d2-41d5-40bc-a5d0-8697b87bfd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d126f25a-d669-444a-af0a-99377b6ba036",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a44c1d-38aa-4077-8aae-0143460446b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc65d6d-c4fc-4a05-ac20-459d2a8f6a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958e5d60-7d54-452e-b81e-060a2527fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9e78da-a35f-4ba5-a5f3-f5842d816b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68508a88-2282-4599-931a-3f1d50d8d01f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5251608e-7dff-4ce2-8434-7bb96d66c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3998956e-7fb3-46a6-a006-88367858e8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaadd26a-71a2-423f-8324-ee0b63e4dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2abfef96-5cd5-43e8-8f48-52129b12aa73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1eae42-e1c0-4d34-ad98-23d34805d648",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09daeaa1-b900-47a6-9e7e-2bbf645a1251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25b2a7c-be68-4f99-8487-1fe11315d03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a4fe28-00d8-46ba-8dd3-da3a8b9c132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0774ae-f045-45f8-956a-a420748044fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254f376c-f155-408c-9950-bb1735df6175",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5a0939-d003-4a63-b823-25be119efeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febf6658-9aef-4540-9e14-626986bfcacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f01302-9d0c-41cb-8afa-49a8fa8dab2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee02fd9-a667-4bad-84f9-7c5e4a631133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf200097-f141-42a6-8454-e4561b7fccfb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddfc578-6a6a-4b06-a1c3-3f7117b4e912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8199f7d3-bc48-4339-9663-10d218a11799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7983630-c36e-436f-acbb-ef61f9015fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ae7907-56cf-4e8f-8596-4978ce9aa4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ace4f6-6d40-49dd-9718-2036734c2c96",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30b5127-d804-44dd-8801-575ef1869c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152e5102-b07c-476f-b088-aa44b6087fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21258b8-afa1-4681-a660-a6e56419f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d34b56-ff6a-41f7-b09b-7b5df4a7221f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9040ee99-7764-4276-bce9-efae34cdd9e3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a85054-4b83-49a9-b07f-337a21cd5407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687289f2-4122-4878-bddb-c9faf5d2bbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a899ef-564e-4b40-a899-54faf5b2f24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0940bda1-2382-420a-9705-e8418795ff58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20547b6-fed8-40c3-bd9e-466b8dae1d78",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d778392-48b8-42f4-a001-025044cea42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6916cf9d-a9e5-41e0-9719-e199c654d7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807d406e-e95a-4847-a0a7-4ddf389c6506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45327eee-3442-4755-b33f-cda7eeac542f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87024a67-57a7-4115-b9c0-1906dfd0cc89",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bea60a7-98ca-4280-a2b0-db19dbf1399a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1eca214-5517-4877-9f1e-b37b80028cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fe7d83-999e-492a-bc39-1c1dfb535372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a201ee-fd4c-44a6-a6f7-9c94a27d1dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6dfc24-c00c-4ba8-9cfc-45d5eb5efb5a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93a8d66-c27f-4603-a9da-42b6d4f7f74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9caa0d57-ed1e-472b-b8fb-c879871c013d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452cddbc-5c5b-4656-9611-a5a86e8c8bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d83f981c-5627-4c7b-b32c-14335bd06b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6452da6e-470b-48c2-a9ac-731ce06bdc03",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4317d5ee-4922-4697-84ee-5dd7e45fe0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fccf9b-c72e-4f13-bbae-d341db706887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d44a6c3-0887-4379-8703-066a684b7089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1206bb4f-c5d4-4b77-bec1-f171eeaf0f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9088084e-54ec-44ac-bc8c-eeea76f423f1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198b753b-8bfb-44ad-9254-ea9effd09240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170f4cb7-bc48-4320-9505-2b108a1a5377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c15c8d-0219-4a55-bc28-536c64b49997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a84e2fe-79e3-476a-abdb-f0c036a7382b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae0241c-5562-4cbb-90d6-1c5214afd221",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6240e3-5bd6-460f-a7a2-be277c2ce3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc42e0eb-544c-4d84-ba1e-218f8a4304d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2e84eb-011e-404a-bf14-d3631e79c0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f0ea84-524d-4367-b81e-a24e4a64226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271a4992-1c9b-41b6-aa4a-47e377c2822c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bde155-5de0-42ba-8f1f-60c73aab8441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0fead61f-29d4-4835-9890-33f946f8bf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2585e1f-e175-436c-8d41-b782a135b407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd95b969-0d16-4798-acee-6176cb9a5dd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba21b54e-b24e-4533-834e-cce7056f1d23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4732ce33-fb95-47a7-ae17-a72598126d0b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4462bc5-2f9b-47e1-97c1-c8ae57534842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "943737f6-56dd-4d97-ae83-fe59fe6bb4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcc6462-8ce9-4a8b-95ff-d4bdc9b6e5d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0154e674-1c08-462f-bb78-d7262c0ca619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c594145-deff-4fdb-a7c6-7a3e7f760ee1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c2b3b4-868a-4541-8538-98f7c3cdbd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4423c3dc-53cd-40fe-88f7-c88ddb7a78e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fce4d43-7615-4429-978f-ba2c611381db",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bbe7baf4-02e3-4e55-a89b-d66d9fea5285"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5ea5640-d5c3-4d35-9a51-28f296b787fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a280e02d-b7ac-4ab8-98a1-dfa687dbe65a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "962b0691-ff5a-4382-91e1-e7697126d170",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "886fad98-fa61-434e-99ac-46fea64ab911"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a8b0db0-7912-483d-9a52-aa789ff47cf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73e41f8b-ee97-4508-8b6d-ed80f1b29b45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65b7e0e8-350b-46aa-a3cb-21aa1cad3a31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67e8509b-ef55-4694-bd2c-115dab7530fb"
                }
              }
            ]
          },
          {
            "id": "95b533cc-6f39-4043-9442-572f51caacfe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc2289c5-1bdc-4f4e-a48d-5986cbce7ef0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fd6d7b1-59b0-4c9a-b85c-5ee4b94b184c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "787ba21a-ac78-4ba8-a83d-5fefbd16e89f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "725589fa-1fa6-42a6-b074-5ea9eaf9fdbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5be4c3c1-6dcd-4a2b-9138-d8b0717ab9c5"
                    }
                  }
                ]
              },
              {
                "id": "186fe14c-87d4-474e-8f2c-7b4d5cf55479",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b90073d-4bb1-4def-b2f1-eac7136ea1f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f92090d7-a075-4415-bfdc-d2a815fa8515"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77190645-f036-46be-b1db-416228f7dd2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aa01b1e-f1ff-4969-8131-66bbea521b72"
                    }
                  }
                ]
              },
              {
                "id": "64d2159e-c163-4aec-8d67-3f1d2e5689be",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a626be95-0c41-4b4c-8845-723a3fd3a7f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8454f321-ec50-47ce-a0c1-9c63e8d26eef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cf99290-160a-44e9-8c08-480793ec25f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "87063420-a2fe-426e-89a6-0e0a511e2abc"
                    }
                  }
                ]
              },
              {
                "id": "0e126399-d837-43a6-aabb-2acda488befd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50091f0b-ab4d-4e6b-8d10-d5f1816bb56b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "703e832d-b742-4356-927e-a2922cc40aa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54f22088-a895-44cf-a087-54e38ee86746",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ce196e60-d982-4a95-8cbe-8fef60169600"
                    }
                  }
                ]
              },
              {
                "id": "39747443-141c-468c-8e8c-c5f129b9f6d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "360a9701-c8e1-4994-92cf-c49295184668",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d201006-f42d-493b-b317-278336b10a2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d91230c-bcb0-4e24-8a87-b173d8822568",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1831c804-b410-4da7-acc0-0da3ba9961f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba204fc6-0a4b-4ffb-b704-c6e1063dabee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f6fdc6b-6760-4717-8dcd-f405b21f3ed9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fa3ebec-e182-417b-b756-cddae7b3d290",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56d8d64f-968a-4f55-82e7-9c52e3482bbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddc8de25-5af6-4483-8c42-5e99bc29847a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0beae781-42a7-43ad-b3fd-d443f7d8d893"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47a2de2f-4aa6-47f2-bf54-4f97e5f14de9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a8666d3-057d-484f-9dae-9e7687e17100"
            }
          }
        ]
      },
      {
        "id": "3dd74b2a-3b23-4056-a827-bb2662833d55",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "70f921ae-a457-4d3d-8bc8-f45028b76101",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26507790-f203-4590-bfc2-7e399f7069dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8760e010-1aef-4d92-a838-a671208d9658",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb54af0d-cd19-43a7-8f6a-bac492405f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7960338-7883-4f60-84f4-bbe81f433f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70439d45-513e-4175-90f7-457034b7f20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "84081a13-0501-4502-a6ce-3c2b95ab8333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a61acb1-3c23-4a82-8a71-a2da63eb0635",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c287567-3a6c-4ed6-ae61-127afbfded31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071f9fdc-6cab-4f64-98de-01610c9e8eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b63cd-4559-4067-bdbb-0598a0113b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43234e3c-e80b-4e7d-b04c-a8ab96d191f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c59544-f725-46be-9c00-df09166815ec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef472fd5-dbd6-4a82-b8d3-115a746a2622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2103900-5630-4ffb-965f-3bdedfc2b08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a90db51-541e-4270-9d96-6219d8118c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd9c830-77dd-431c-bc3d-de1d70d67e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe7a696-7f56-4bf6-88c6-aae4acc7f840",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97690090-6ac3-443c-acfb-732674e1bb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43952905-fcc6-443a-9ee1-7e64918eb984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258ca0e7-01ee-4290-992e-ac2362f203fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcb68cb-05fd-40a7-b7da-c3b71b7d7c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc8c5b-d477-4a40-b5c1-b476c433b114",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9003fa-be5e-454c-a504-5825ca142612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ab5748-5b2a-4026-b63f-56a0abcebcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e61c67e-d73f-43ef-a3d0-b663c7a2f1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b93594-841c-41c0-9045-6e75217d21b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539ef780-42e1-4c47-8c64-e3c83161532c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ff5a97-0361-4cb4-b157-9b538145fd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376e5013-f89f-4176-98de-ba8bf541ba85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98417607-fe84-486f-bb35-9946a18544fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "055a22d1-0298-45bb-b8d5-865385a0c4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b2e908-31fe-43f0-aeb5-74506413cdcc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b053821-0373-41f9-94d0-b3a8a78c3dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb07eca9-c4b9-4c62-90ac-599fba36875e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170f28be-5cfc-4843-87fd-e4bcd2e38dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be69ad2-9800-4107-bb2c-3fcd15435568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66daca7b-2dc2-47f9-bfd6-70002f6b8de4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e99a707-a8c4-4e80-8c73-273a403b65e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98dfaf6-7298-4e4a-951e-0b274929a106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b771a864-f46a-47ec-afd6-080bd8a3caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32589e76-45de-467f-85b5-1eed1a340679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2b0b2b-ec5b-4546-863b-ed106ccc7ed9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85c0a0b-17c8-4c96-8bfd-94795eaf80b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db8f53d-90c1-4cfb-a6e2-d30959ba3cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef3f685-477f-4bbd-a0a6-3ffe7f02ece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98b3287-f53f-40a2-bfc2-21dd4d59ebed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e3c932-eb7e-467b-ae98-cface1216c3d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fb8787-f719-47db-ba54-b449a4a759e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03c0504-4e2f-4960-abd6-d3b03b2efbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8acfca-b8a4-4e45-8fb6-07a6bbbe7d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec9c5f1-bfb1-46fa-a358-26d166fe12b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8785811c-cec8-41e0-985f-ae5cc0ed65cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b129846-97f1-41eb-8efa-c8cadd059a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376ed747-3fc8-41e6-957f-ce8ca2557c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a5509d-1b74-4bb9-8dec-de0a4aad6dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "195b6bf8-26f6-47f8-96be-c937bb9cfc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5c024b-c15c-4904-b1e3-cde327aa8bee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66e83d0-fea8-428a-b35c-d0dc4ffbdff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d7d955-0523-4383-8796-b0af777bc226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45d417-870d-4db9-8ccc-c388f16d4c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3153c9a5-7f33-473c-8ce5-47423b3a7919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41f9b2c-fefa-45d6-9648-21696b111345",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54355866-85f8-4243-8ffa-d9d569643ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9249d812-14d7-4ca0-92a5-e7bc1b32b769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15659e0c-8ed5-41b4-b4b3-7d439b8f5237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f34c655-da79-42e0-8a3e-e2a628d55399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8fc9bc-a0c2-4770-9257-8fb165279c3a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460b850-4f45-4af6-ab0a-df5a2bdeb38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d571aafc-92dd-483e-9997-1724df793065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6885f25c-5eed-4ee6-89cc-6a118d34e535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff2b609-059a-43f0-be6f-60d6440d513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab185770-679a-455e-8370-1b2967ed6c45",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3cc1ff-dcd8-4012-9a18-702a1bb304a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d27d9b-cb36-437a-877e-a964321e0c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fa62fc-f9d5-414a-900c-5c84912dda65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dad8776-06ee-4fd0-953f-18717f833603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c335bd-62d8-4f64-8e0b-e98c7d06cc6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd45609a-76c1-436c-bb74-90a0d1cce1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2311735-4857-4581-9fa7-e33805f980c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ced07-36be-4caa-87e8-ace9ccf7be45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5788de3-f173-440b-9d0c-a96cb2228879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6082a16-89bb-4415-b939-78ea9fc987f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1a4a75-dc88-4caa-b215-3c20c3c96da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f34090-93c1-4f4f-8cdf-8d653d313987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4441622a-f343-40f4-adb9-5e0e0626c951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6143d7-cb45-4187-9c78-a84b9ebab12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115a0ee6-991f-4201-a114-0f2e355f2751",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4a60e6-ad43-4f29-a651-a75ae5ed48f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67c8457-54e1-4fb4-9fc1-bccd7e2f981b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c0898-2938-4d43-aeed-ba96bac8452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d5cb1b-c004-4926-95cb-3769b260d957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a996ab78-43ac-4b3f-a075-00ec30772189",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a339e1-f7d3-4a19-a3f9-49d13ae2acde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925f61cc-a93d-434d-9b30-3b1208d94935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcf6d50-1ff4-4da6-8a59-0bec8ff4dd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf29666-fc37-4e8c-bd60-2b3e16b20ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36cd8f7-7f1e-4f18-9a91-b44f5b6599c7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6691e08-07e9-4261-afdd-5aed8d2a95cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fdc50e-884f-477e-bd8e-b3bc6c35cf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83693315-bad2-4bed-ae91-58ce1d4104a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ab7978-e3d9-495b-b1ba-2e1c556c1f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9f2348-db3a-4177-bb65-66178fd2293d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136de8f8-9272-4459-813b-f605e201e9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0001cdb1-f9ca-4b93-8601-aa29eb380c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50a5362-34d6-492f-81f3-430f1193fb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be68a39-4d0b-4aab-a56e-e2022558c1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0ae27a-e4bb-496e-b48f-8bddaacef261",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e6081e-a245-4c5e-86fd-5b7c58b76fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efa8aac-b62c-4c4a-b6d3-324e0595fc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771846b3-af18-4289-990d-7900d2d012bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ca2d16-e03d-4566-83b4-089f846ee0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93fd910-e8a4-4fb4-9fb0-614b141288f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b2abca-7a49-455b-8de2-3b4326dd890f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b85a68-43cb-40f9-967f-4236cd95eb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc2c72a-ee5e-4766-a384-77e5c9116d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f5de72-37b7-4084-b73e-3b5789a6b157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808473f7-80c6-4bc4-afdb-d031cda8cdf7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54904e65-f1ae-44ad-a9d4-96c6cdbd535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9933814-e874-4add-918c-3bd080a2c29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8586c0db-ecfe-4c5c-9e4f-dbd1bb8622f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e737b543-760c-47a7-94a2-f554d732a1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240b7154-56d2-404a-86b4-791f4c060b69",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d36c5e-f8e8-4c60-812d-7c3645433ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36161e8d-ace6-43e5-85aa-a7eb4f016f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ec146d-c3dc-4ea9-8ab6-1f15a18552a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d250ee-ce8a-4ef9-98b1-9f5a625346c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdf2419-d72f-4c07-913a-fd3260fc9563",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869ff4ad-41fe-4be1-ad69-88a6017603d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e75917-8e98-41e1-9248-4b16967c9a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1a6ac5-bd9c-4722-87de-414d69e40a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33cd3289-0ff5-4f16-b891-28ce85d8fe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7693f412-f9c5-4570-a1e5-24b51131bbad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce9a42d-5264-4fed-8ed3-80825eedc74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e098fef-55e7-460c-babd-e7a7d90edaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a577c83a-8cf5-4cde-9f4b-be7670861a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25cea895-7d9a-45d9-982f-78f350e823c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc6b348-1c24-46cf-8e37-b9c6fa6419a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2f1a28-1f54-4637-ad5a-d320e1ce2cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f64a8a-c456-41ce-a079-38dceb2f9973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc3ad01-bc43-43d7-ac2a-0a366fad5e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914313ae-3ee7-4e68-8a7a-7eaddfbdb8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c828d57-09ad-4144-8822-b22dc269acec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8861d-9396-4310-818b-fad6236d90ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b2643e-ad06-4cc7-acb1-52043855f874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33cdae2-a5bf-45a2-998b-02726ab4a70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d45c826-519e-4b9a-8537-7cff86f816da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbad551-8214-43fb-9bff-94699759e853",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c8c03-7ba6-4b9b-a733-b4d9c92e2410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50f3296-e073-40c7-adb1-96bf48034b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfa7211-fb8e-4ba0-9a09-34bedc8d20be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e60db04-845f-4d70-8d5d-25a8309bb0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da272d69-50c2-4c2a-98f0-6f5c0a66dd2c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c695b893-f892-40e4-b3d3-a8adf7d83374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8671b0c2-9822-4bf4-9290-341223b651a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd23e0f-906e-41d3-81f6-e498c06b3fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a047a690-791e-4b21-8005-8ed6bdcf2478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7951862d-8a5c-445f-8c04-53b0c3858b5d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdbc480-2ae9-4bfb-beaf-c1dcc50b20dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b164dd-14e7-4a52-bfb5-35b5cb70d762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad09dba-6406-4c08-ac09-0419fd50ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d862d3-1157-4874-851b-a579b7b62fa7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b8f9919-9baa-44a8-aa4e-890a5fc1c920",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffece5d9-70e6-480a-b608-087007af8fc9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb9dcf7-46b0-4f70-b39a-2b518c379566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099444a5-f664-4abb-858d-514ffa12e579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eff1ee-aa42-4ece-93f5-1b3663eefb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "191f02a9-96e0-425f-8fb2-0462c0ef8bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab71ef89-94a8-4bc4-97e9-b9f6f44fb92a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81182948-419a-4539-aa68-49d323e61984",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "70bbddaa-b656-467b-952f-bf3db22b9335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8463260-7429-42de-b030-7cfa954ee4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0531aaa1-bb57-4307-babb-584cdbefe7fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c6978e7-1c9d-4924-a115-57dd65abb17f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "658726c7-cbfe-4fc9-8fba-9305d5ec9c38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e6c3622-ae7b-433f-8755-8bd5f231418e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e3238b-de57-41ad-b856-893075c04630"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24d3f0ef-9a3c-4984-9221-c155aca47939",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f936259-b4c6-4cd9-8aba-ae9c9217bdf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89d86b95-a7bf-4a53-ba4d-4b9437681ad2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d4948fe-d27d-4966-80da-67607a2f23bb"
            }
          }
        ]
      },
      {
        "id": "e5b509d0-46aa-49ee-b315-a36ec180a6ca",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3d48e456-90f2-4d78-91f2-85df450d884f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cd76e96-a40d-4692-8337-80135e1be6b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "573b4d52-1fac-4fd1-8274-a613721413d0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3a310f-af07-470a-8396-31f024da9558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b6872a-ecb9-4858-b3a3-5fce655c1df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9919d5-abce-4f5f-8b5f-8618065e78df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2446e75-75fb-4708-90b9-c0f98b8e1c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12484048-f07a-487d-a0e8-2900166d4576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36059a5-8019-4702-8ca0-9a9668861585",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39dd4ba-d7db-49ee-b8a6-169019eb6807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c42b69b-7292-460d-bf69-e347a44cef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff44b16-9246-4034-b619-5c3e251f0d5d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daf17f3-d5a7-4b1c-aa7c-c62ba8ade9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47f1ede-1030-46ff-99c3-a0e966178c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc59d94-49ca-48ad-bac4-37ab3e40bf64",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a422e88f-fe97-4516-a31b-aefdf40f239e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f5818b-6f61-41a1-b0a0-4b11e18aaf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d237dcf-2a83-4c98-805f-ab4cf2579ae3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783325b6-df14-458d-9694-f61933fac412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d14e1a-1acc-4912-9175-21539527c042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7be5767-d854-41ea-9525-d0f369e0d23e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e148ccfe-59d4-4a2d-ab2b-1b060cb80c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca36281b-330e-4d86-9083-2d6d5866d97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322b3322-6136-4a78-9725-caed1749549a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0703898-ef14-4fdd-8a0c-4e9ee80efd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2eb9b3-17ed-4f5e-8c9b-1f1fdcc157ff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece730e3-3748-4625-8952-b526c6dfeaa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1db3a18-97cc-413e-bf1b-ba0354996cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f54f06f-86ba-46cf-bbac-f11e2adb72a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4ff89e-94d2-44ae-879f-dc01f6e1d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea56f5-0ffb-405c-8a48-488006344c7c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885d5af2-8164-47e0-bada-34aebe3b20f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b4b00bf-e898-46ad-a97c-ff2d80d1d3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bce73b-03ae-4880-aa71-a378b9b5e300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5f4dab-6e1d-454b-9151-e0ec0f1a974d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f74226-aa2f-4e8c-b267-dd1cc6076864",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048ec604-a0e5-4acb-98e5-3657ba6ad1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af86a35-7f8e-426e-9533-93b96efb4ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f2fe14-2273-4edd-a022-9e40968a650a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1510f04b-60cf-4a6e-8ccb-da18d42cf165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843218fc-013c-454b-9111-f7576531fb55",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a665516b-c7b6-42d6-9159-c0b8fbe69382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f0130e-628f-4450-bd0c-7e1c4e7307e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f42c19-bc64-4056-8a80-df9b4c2cfcb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e425ee0-9147-446c-bc2b-36bd88721eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6091afd2-7f47-4b57-9ee2-3ea2a70be8b6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3bccf1-5a22-40b3-96d7-006cc0c99722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f42073f-4384-4733-8589-4bfdc083dcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dcb9db-f9fe-4356-8fe3-2e0fc8988e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a435de3e-e669-4ba6-ac53-dbd6b3d502c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295914be-fcee-4ded-b271-1914941a2195",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e933e5b9-4fc2-4c00-ae94-b82aa59b81a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdf8a52-7cc2-486c-a5ec-292545173c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f9ab7-a3b3-4a03-91bf-323529d1a0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf928f1-98ca-4bf9-88ad-196ad7896f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5ebaef-11b1-4487-a15d-e85c314f742e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb61ce7d-3b81-466f-8ea5-cdeb8d022e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b73d2d-f5f3-4baf-8649-281aa994f8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87d77e4-055d-43be-94e2-d4e253b6dd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c719f6-55f2-4788-b264-cf0fa52f9b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3378d232-6558-4226-aefb-9dba3a5dc34f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bbaa8c-20b4-4873-b3e4-a7c86b8a6a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc79d59-1bb1-4965-8c9c-f0a02c951dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bbcf2b-acc8-4fa8-aa25-5b66b1ff4afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5891d62-8ae9-441d-9940-66246a6f16a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaebbee7-d2e8-4322-a76a-3440efe840e9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72581dd-dcbf-43e5-bcf7-ef55f69ed3ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9197f3f1-6bea-4194-a079-a5cc53cb9b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39334f28-4c6d-48a7-93fe-cd32b13b214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f29d5a-ca01-43d2-83c2-2a1c5cf8e6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fedd72-764e-497c-b32b-a711a0e1ba34",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648e18c2-0cc9-4d6a-8c13-d7bb326faeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1a0e21-ba02-4778-9457-95aca494fabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced3b174-5bcb-44f0-b709-bc33510ee41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9dd894-4ca1-4dca-9ffb-743dd557c670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bb2765-e5c0-479e-bd16-76302d592215",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147b7539-ada9-45c8-b5ae-adcf4fbf5f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61ad7ec-2478-434f-8c69-e06d0d1862a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c36cf5-96d1-4908-ae29-31ea9c8c0552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1491dda2-4b76-4afa-a02b-fd0ff53868c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6a3c22-9687-4e33-89f2-06ad843b1ee0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6194bf-80ac-4a68-aa92-d21be5a39e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210cd23a-5882-4a99-b6b8-252177b82496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a94020-f9dd-4a08-b0f3-331c9accafa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610e09ce-1614-4657-b87f-685ef847dfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5769e6-4b8e-488e-9b12-f9ccf42797fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d69aca-361c-4e3a-84c4-7c106d65d4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80265f50-b5ee-41e9-af32-d5db8f93e0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3a1695-7952-4fbd-bcc4-8833486cb42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040a4d3b-6e74-49fa-a1b7-30011fde27ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0242f5-78f1-47e2-957e-d5ab1a6022a0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb0ff7-b555-45ff-97aa-b4df89cac686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1d75b5-dda7-4025-b122-f1ac1c0cda2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c2c9b7-32ce-4026-9628-0c9e00a14905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1e6b25-9680-4676-ae1f-4b41cf4975c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91143f69-fe87-4941-8079-2002d0e2ff18",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5d026-2b97-45cb-bd2a-50d5722bddb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7f37a8-766b-41a8-96b7-63d9c18054b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d437f387-9edd-4548-ac5a-4d570fc1266e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24301fb7-9d69-4874-b5a9-84636aa843ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831faa3f-e793-4658-aaf1-22652e95d56b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1629d5-c8bb-4e62-a86a-fc82c605bef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64c36a9-4470-4386-9421-7449c133c98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900d66fd-ad5c-4a5b-b6da-06ed2c8b3ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55540f3c-d939-4188-9bb5-0fe1d770872c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d2a5cb-1551-4c05-945c-4815ed3c884f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c750d0c-b4cf-4c8d-8114-2ea52a8d6500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0893ff1-1bdf-49bd-ae18-af79ab4b8700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0e43ca-160d-41ab-95e2-8b7fb473bd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cf4525-72fb-4f97-a37a-959f2bfc2ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f04b43-0493-43c9-8233-1655deb45e95",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a0b9ce-5cde-4bc2-92d4-fb30329bf454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a737941-6924-4dd1-a1ab-3d7aa28e9929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f183ff-be23-4f4b-9314-bee213b39e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcab399-c2ba-4bd5-a914-7da5c5c2c0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c8277c-5f2a-44a0-9ebc-afb638a31b8e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737e3283-fe1e-4002-8eb9-a8ec25e2360f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad710b5e-e358-4f3b-ae3f-98709236e6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff71c5f2-bffe-4414-86cc-bf2087f1bb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c53937-e241-4e0b-ae48-3080e17e4651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e48bdbb-ad01-4787-a050-cacff23e8890",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047bd9a8-744f-4f2b-9674-6877c01653bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ddb98a-74bb-4655-8f39-911803ed5fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f40986-bbd5-46e4-bece-a1907f5e3f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9572efad-e527-4141-9d37-9d6d9e37bf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b1ada6-c946-42de-983a-f36029ac96de",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932cb6a8-23aa-4b03-867a-346115f2bb4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb26287-75cf-492e-a479-c69dae90b502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f37b28-e6eb-4485-a0bc-752b924a3df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132d1bd9-2e91-431c-9c84-ea6c6bbc619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17328ca-3da0-4111-94f1-e5650a561648",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff40c8d4-4883-4a45-aee6-f37c69798458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e4b18c-0c77-4fda-a44a-20a8a6778641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23cb37-63ef-4112-b3c9-5d0338445d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c597b1d-3999-4f0b-aeab-628b1b2da78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5679084-3049-411c-b562-6ba56c9c4315",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc9bbc8-8ba4-4119-9b13-d2514faeefeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e9705e-a559-494f-85dc-d72fca633208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68852c5-3757-455d-8579-5c5e75505bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1739bdbc-c2c8-4239-93da-62098f9d7995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a78643-f776-4911-8275-3447826cfe94",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f999ff-5380-4a28-91bb-db5b139fa89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5804ca-8b3c-414a-abb0-d7eb8f9902f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2155d2-681f-4257-b28f-90fb67abf6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af43b53-41e8-4d25-9edb-d0e76f301e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab852e0e-e026-4f90-83f2-ebbff85735c6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03995ed1-42cd-4c03-9155-d1a2935c7fdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aff8c7e-dcde-41ca-8c6b-42b23d892ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b83943-3b91-408e-a323-4b35ea82caf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b2e87a-f7d2-46ba-a658-4110d5313963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0e8a12-1820-43d9-9c96-fd087f2cc304",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee76a3c5-8a02-4db8-a72a-e02c68a084e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68c15bf-8f63-4959-be00-b22eec0e6d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3480222-2ccb-401c-944b-700a034e0828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df55b0e-d1f2-494a-a599-40d2a4716393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddbc995-2eed-46b1-bdf0-c8d242703eba",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab896f0-ee3a-4412-bb21-8a07adaad71e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6119e86d-57db-4746-9103-15e219c5e31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022d1c6e-0304-4f94-9dd9-879ac15dcfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e283384-7cfd-4443-b6d3-9cc0df34e940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7290efc4-d6bf-4ac5-9816-5db7186b4bbb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7179222-a46c-4c8c-978e-822741a44c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a7d3a6-6877-4d04-9161-87c3bbc7cd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b552f907-d8de-4d2a-ad73-d96059109175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985b7e1c-0f59-4569-8b55-ff8bdd036794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d5e7ea-e38f-4965-9eee-fdc929fc8cf5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bf6d2a-0b65-4151-a85c-a8ea264be232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d72f1f-ecb6-40e4-89f9-e9c9004bd17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232d85ab-b370-4d47-8dda-c7002baccd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1810f6-2115-4365-a909-def7473d1357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0c3553-5d1d-4077-8999-301030b4bf36",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05483482-478d-4883-b45f-2cde7e72e6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406e4363-8405-47e9-ae5c-8d5fd403a6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33760725-862d-4f22-b94e-9da0a4ae0cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885d84bf-d6ab-464e-ada6-5e5d5ee8d6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcba405f-d4f4-476e-9ba0-c8592eb354dc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b13efbe-e5c1-4e52-909d-3fa8f9f08db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eba83ba-0f26-45f3-8ebc-f4694bcf8840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60098ffd-0cfe-4932-9bce-1ecd505d9839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3b959a-76a6-455d-b56b-ff312c380b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80344f24-2bcf-42f6-a6e9-0f05eb4e2e5c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77998a2-e3a7-4816-a62b-423a232d16c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b48753-89f3-4390-94bd-ef54f49b89f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8172ab-7f79-42c1-b5b8-dbab536facdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f715667f-2c6d-4fbd-b2c5-059e4a12b95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66546622-1359-41c7-9cc9-4ec621bd89bd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d7ec9-5849-4953-8fdd-2cef7e097e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d966ee0-fff8-45b6-9fc8-c30e1debf954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7ff491-e94c-4f9f-95e7-ad263bc3da34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8420d913-efe2-41f9-9f1e-013288b94b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82521f4-dbba-4e11-b910-e74bfaadf23e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2a7f07-6c43-4a63-b851-fa0f1faaa58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08c1fcc-c265-4415-822b-e6b4d2d1b841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c90b89-57ad-4198-a766-55507df690ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592d6688-0ca6-425a-b94c-1d9e799bf401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f816fba9-b616-4591-bfcf-b5f144d8c33f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3e4178-86a4-4a15-a3f6-e33035ebbc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbe6de0-950b-4348-be0b-55afa2ae6008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4072a193-53a3-4978-8cfe-b723939b8b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86323bc-8b59-4584-a976-f126aa797470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d14d43-af52-4c03-8bf4-e3d505a1d2ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a5336e-4f00-4f7e-89df-f67d30a29b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5276c7-1561-4095-b3aa-5d4d55fd707c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901dcec7-d849-41cd-ab93-ac59077e3e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbbbcb5-a66a-463d-8c3b-c07dd06ef574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dc66ed-28e9-4f5f-b466-a3a98a31a530",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f89684-ac31-49f4-8aed-5b59351ef4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c5dfa5-fb56-4aa3-8b6b-27788231b72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0538b05-8608-450a-bcbd-85d8de28a2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ffd88c-b26a-47e6-baab-7f93713720b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e629c936-e540-4e01-a6b9-6bf67210d1b5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f084f3f3-e551-4ef4-8975-e5e5f99507f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf56bd1-5290-4cc6-9dac-86b5bce2b009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ba7a94-afc0-4615-a3f3-db516c1b201a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f0d526-1904-4e76-b799-57e279581764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0fb4be-1efc-4481-ac84-033874bf9541",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fca36b-bd19-4171-9d1d-7cfc06f6d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989306ca-9ee8-41e7-9899-efdc7d10718c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da2081b-146d-4d73-821c-8af4ac552d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce8dd04-193e-4b82-969c-948c3d96ce57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eb3e83-c974-44f7-a90f-9df9a01c7487",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2696d6b-e701-442e-a725-2450e0dd50af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c0a2c6-4544-4b19-8892-33f500a684dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f58665-849e-4539-9ad5-9a9f4aa7fc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52809167-58ca-4197-94ee-7e7cb180fb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0de98ed-6100-4f4f-8339-be517ce8b979",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410abf1a-d7f9-46c6-8768-f033f8081cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febe07be-73f7-4d95-9b42-52f94e32d6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9077b6d-4686-4187-a3e7-4287ad6acef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3255ca0-191d-4fc8-ad69-b98a45743890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66db2c94-b5f7-4eb4-9e14-5ebfc1835cbe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3818bb-9c71-45b9-aba0-aa0fac5c58e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5991cea1-6958-45ea-8630-00a75eeca066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8472203d-144e-4891-a750-50d82f948a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed48d27-4b28-45ec-a8c7-35a81d65aff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a2311b-7db3-40d5-b7d2-a96925c26b10",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109092c2-4455-468b-9e98-a6e423849f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936a00c5-44a3-465d-ad4e-344de4f2e0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9faa154-8adb-40f2-b2ea-1009e4d2888d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112a965b-e2c2-4b84-94b0-e9f2fd1d68f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0b3e4a-51ec-48e3-8ae1-cf72eac0b2ad",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6d5656-1642-47bf-aa03-8b3ac6239fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6bd894-fb91-4ac3-b9d1-4b46b8af7f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd742b9-bec2-4cc1-990e-4b3fe39668ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c3e2b7-4be0-4780-ac79-977cc520a075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73590f85-43b8-4cc4-a211-1ec9d82f5b77",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f563b5de-aebd-4b28-b929-9ab075395891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83069a81-3885-4157-a1f8-10242e4fb01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfe26a9-5a47-4e52-8e9d-4b7c8224e7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b684fc93-236f-4b64-868f-ccbbb8298435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f744539-bea2-442c-b8da-67abca414631",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f2bbbf-4690-4a72-bed9-9e6f5fff9db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88204b3-7a9d-4516-9edb-730a43a9ce49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461e5fcc-ea50-45c7-bd14-f8dfea69c527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6ce420-ae99-4afc-9030-33a8312f5a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81de0d98-a3e7-4e19-9235-02acc436de56",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63291812-0f11-4853-bad2-61c6ce7b692b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff729ce-a5a2-4f18-bdfd-59a7a0003775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b57ea4-b926-4a8a-b5b4-3e5c4d7a69dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b786fc-f00f-45a1-a7b5-1e3b672ff315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a2e8b1-9394-4946-82d9-2fb5041bd29f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa65e928-e655-4bda-b44c-c2abbdb7cd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c1234b-aaef-4da2-8917-319f3061b10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df9c3f-b119-4ae9-b816-a2743672bd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd099941-2146-45fd-962f-c43c45c1adf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38474366-f523-487d-b451-ebb3c71603ce",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f68fcd-fd36-4bb2-9965-20bf75deccb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fdf893-b827-4ec5-baef-a34a5101535b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedb50b5-c863-47de-b154-ace41e8f7b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56147b14-2ffb-4914-a086-06cc030cb9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8354cc84-ca55-4392-9211-9b3ecc22d772",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5880d9b-f6d3-4817-8f04-bf769967d766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51a58a6-9362-4800-922d-4530415621c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee633b9-8db0-4e35-a821-69d53eaac4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5ccd50-dbe4-4dc2-a4df-1b8670552217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cb739b-304e-40eb-bda1-f8f4efcaaa1b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a9d26b-9557-4b9a-a462-f9440fcbbfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec979e76-afd5-47e1-99e0-5c1a69e5922e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9b2e1b-6458-4c95-aa0f-db23c445bc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a511919-2063-4572-8e43-cb085ea7281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3bd289-bc2b-4583-93d2-69e454adaea9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5070b446-995a-4101-98cd-a09a9c4e0850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305d24c7-00a9-4c17-b533-f418cc2864f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656b5442-6c2d-4324-bb67-9619194c1beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc51c288-da5b-4ab7-80cb-b42799a4d93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0be2b9-c923-44fc-bf7e-49f890db243b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb4facc-d713-4a8d-bc2b-af4844aba73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5b41f3-b6a5-4a76-baea-739d8c78587e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8917f7f0-e4af-4180-bb9e-626712456281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0ed5d5-baef-4ffc-8fa2-e76538345452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b04c240-5355-4f8d-a237-ec7751998469",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d78b8e9-c8ab-4279-9e4b-f51460b1d7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe72829-f914-41e2-8b15-cdf0a7cc2436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942a2fc-2533-474d-bf5b-d4539eaaf6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f63c4e-ab3c-443e-a4dc-8f7891f2b492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60324bb8-2da0-44ba-815a-6d2ee6d6e7c9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ec638-d1d7-4e1c-bfe7-a86145854b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5369a60b-8e09-4093-9876-b34684f94604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f68f1bd-1d99-4729-81b6-bae312a1ea86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4512465e-b1c0-473b-b5b6-72eaf164e3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c15fb16-aefd-4772-8fb3-3aa7c14540ff",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ceced2-d127-478d-81a7-21d9b237b039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65364cd7-150a-4392-93f6-96650198b975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1201ef60-5d8b-4473-9e53-8a2541983637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24a23a3-5d19-4248-b024-8174695f27d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a8f66-f61d-405c-8157-afd5e38b475f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e70f9e7-90fc-42dc-a4c6-62edcebf29ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53206823-ac17-42aa-aeb7-597af0023a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200be17f-c4f2-49e1-befb-10a5cd9f988e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b964dbb-e095-439d-90ac-6fe8f6edfd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf5ca1d-a41c-4a9c-b9be-18e4bcf1907f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17d6a6f-f57a-45bf-9193-4f59084cc69f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91263b97-6eb3-44e0-a827-5539f936c040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb8a6d9-b335-42f4-a01f-f07ef9c7d057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a10c84a-f047-4912-8057-efceb7b3a85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561840d3-cb2e-4ffc-b674-303474d14f86",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ecb969-a8a7-4ddd-96c6-0c7a7d21f653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203c851b-ec56-42a4-be91-a184fae5cb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa71db9-0919-41f5-972b-be5253cdd07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f5f99f-939d-40e2-8297-52f7c03a0baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ad5330-4fb5-49d0-94b6-d1c6a416d6ec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3a6c05-bb0e-4e73-8f47-dd2db2327e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62ebfff-1d71-4173-802b-48d770cf724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db457162-517b-4275-87b5-e91bc5ffd943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cb05f6-58ee-4939-a993-0c738210e18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4b223e-2f1b-4116-922a-4448978a0d63",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5f9388-32f1-42e8-97f0-59b71c62dd22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ec1e2d-982e-4b3d-9506-54e6fb5da300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db2870c-6877-45f0-9c80-ddbce53c8aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f53365-9fb9-440b-9fbd-c445b3729655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12beffd2-e430-497c-a7c9-33675a980e71",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127fc0e8-abbb-4619-9376-8d9b96ac3f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0913f5-ecb0-410e-b3f2-6c4faf73b69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e97374-4396-4c1e-80c1-385a1bb5b658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d636595f-cdb6-4d00-b5ef-17ee9d3c3f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b18528-bb18-4bd9-9243-80d400feb8fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d285df-6ddf-42ea-9da1-a0405a33c02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c83293f-23f8-4cbd-9387-f14cc4f3e739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71658b01-42db-4199-98db-38d946c8587e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80454d3-7250-4c5a-84c4-7ad15dc5522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a6cbd0-3afb-487a-814d-0a968a2d0d77",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9756e9d-199a-49d6-b0a3-e6bd99eae9e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "231b0c18-a0de-458e-984e-4560cca23855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdb34d6-5c3b-44a4-ae7c-872a66c91c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f7aea4-0ae4-4b05-bd3d-66d3603c3953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71daea93-500b-4d55-9b3f-021ea00f67ec",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9323b660-15a9-4675-b626-65d3e8686ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e298c32c-c6b5-4a40-96f6-1b6f4bdac56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5771e6-00f8-49c8-9858-0f976d94ef2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c7b462-2d4b-4adc-95d0-cf331d1c3a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb849a9d-2677-4d0d-8828-b91ba9e68bee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439202b5-acee-428f-b536-020faa4a61c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c6e8aa-c6ce-48b6-820a-28dd7f672a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4bcaba-a312-4423-8905-e74bda5442dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eaecc1-81db-43d7-834b-a12697864d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17ddf49-6411-4137-befa-d653da042402",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb4ee5d-57ca-410c-901c-56263a92165f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d1bd93-cbac-41af-8f87-334621a33383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e58f98-c023-46f5-9895-72077c8a2e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9317406d-83d4-4bbe-b8bf-2f3af5e2310c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01128911-b624-4aa3-87cf-b336243320fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79b0a1a-99af-45d2-b797-dc36ee548c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48d229e-5101-4149-80ae-62707414b0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da738c9-c783-4644-b1f7-d8683cd83b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e790d4d-0b74-4d28-b9e1-acbda0ee8ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3ff2fc-01a5-44af-a719-c2b75c5c1c57",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40126b-37dd-492d-9f80-df1bab07127f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad08489f-2066-4168-9806-bd8d9cf33372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8763511-19c3-42cd-9876-0ea4f7899616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9167dbbe-6ee4-4adc-956e-8dc58d820840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3554f841-97b6-420e-a643-d62ef27c3b12",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6091e4c-3e23-4e8d-b0d4-c4e4ddf359d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5da655-e499-401c-b1c1-a89783f46345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc11c9d-0ce2-428d-bb07-6e0418a1c06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8b95f8-f9f9-4fc6-9654-5aa3096b805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fd3ea2-d07a-42a5-9476-7f700b8af6e9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2799a30-fcb1-4aa5-8b8f-6d9bb44b9f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1253032d-a1ac-408d-88fc-371514a66981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aa4eab-de37-41db-87b1-d6939dabcd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22187c36-adad-4da2-beea-8f28e92f04db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84761d4a-4d91-4795-b9c3-9afb81020c04",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3235c1-2dc6-4964-86ce-f5cfd417edfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df95c50-f287-46ac-8ce9-fb70f5c2dd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06789f43-6c50-4997-a356-51d9be176f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5191bd90-cb81-4dcf-984f-2dfb66b51ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a20b02-b5cf-48a0-8a9f-1bbf4bcf6c52",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec6cbc-bd50-4a17-8416-c8262ebadcb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6565e35d-2955-4a5d-a5df-c24c5b5842af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a733c735-03ad-4d12-8914-efd2c771a225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad376927-b31e-4439-9f83-e216b9a090da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30cf89a-08b5-4634-afc6-a594a1ceacd7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd00461-abb1-4b9b-809f-d796712b6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f499cf-5976-459f-811e-3ea8d44ee864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2685398-004d-4e4f-b8bd-b35a63c95b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92864121-d957-43d4-9580-575ea8bd31c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11f9ddd-13fb-47ed-80e4-9162c54b9a26",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db822711-3e58-49b3-a5ac-c02cf362a10b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bad8995-f186-4b96-88c6-5c0ca5d30a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27893a50-2fa4-42d6-ab03-05f9c8e8d4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d4125e-268b-4af2-ad9c-6ea5e7f704c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9b5786-4972-4c5e-89a9-8240d4346371",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ff8838-e849-4974-8236-d3438f210073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3057999e-c8c8-4ca0-b2dd-7a197a6fe8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42e1130-c8a4-4033-82b2-4a16e4249087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5e9e87-f2e2-415f-a28f-d5039eccd1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8fbb21-deda-4175-ab78-3b4fa3e386d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa37326-bf67-40a5-99dc-1d9bb4793943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a1751f-5327-4936-9145-cf94abb99047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3bf9bb-beb6-4fd4-bb94-de21eeba68de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21137e8d-ade6-452c-b667-10353e6e548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7e692f-417c-4245-ac72-9efcb7ecfb85",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3082e2d2-39ba-44a6-acff-348273b61ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00a8ddc-38d7-4bb4-81c8-05eb4294055e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380de62e-b2b6-4bde-9cb6-7176785dfe89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9639dc3c-6819-439d-ab63-b17817ba597e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b93e77-d839-4fc5-a162-b011e2eaa77e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90353d18-e968-4449-8380-a6e4f3016a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a338c1-6c7e-4e22-9de5-d43ffd2de6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0121a6-2ee1-4686-bfdd-2efc6eef3ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3dddc0-3717-4e0d-b0c1-168944236801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef43586-d11c-49f6-a8c3-49d14540c482",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab84d15-a164-4134-af8d-d23eba5da619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c154bb9-1c04-498d-a4af-fbc754bad06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d90e0e6-f8d8-4485-a0ba-91b5a58a378a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e109013-00cc-4d9c-9862-0ed18cf20653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd877f28-4898-4e11-958f-f59981220d60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa712798-da16-4115-a565-025002bce43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45acb058-e2b8-47f8-8fef-0ff2c50a3f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0f4014-c752-430c-99a4-4195545d88e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86bb511-9959-41ee-8441-998295128e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfc7490-59a3-4aa7-a517-4732cf8c859d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b9a614-7d22-4a4d-89e6-4558f6a6f908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019fc16b-78c8-4a90-a063-f60e01364dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457a2503-995c-4f54-a28f-f41c4bcd9dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97ae98e-62b9-436c-9266-e70f4542b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7fba2e-0ede-489b-8177-909b5398fd20",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1207c23-691d-4011-afa7-78d2489535e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8998daf0-bdd4-4df9-8de6-8d238abca1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adc5c53-ef96-4257-a4e2-98284681ce54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a78a79c-4573-46fe-a1ca-8193f4a184d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07f877b-2e14-43f3-98dd-3bf25b0edbe4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5717a7d-644c-48f5-a26d-eb0f1b5a84d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a57622-8704-4e88-be0a-fed8710b639b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b88283-7075-4365-bb4f-92f27fef1d03",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac47914-f5fb-438b-8429-6b3db80b48f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b49b3f1-573f-4f96-ba0d-38c61005ab57",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a837453d-2340-4ebe-8817-626bb493a6ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4f07ea-d4c6-425b-8a98-36485b47a481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6029811b-017a-4d5b-8e56-1435f5dfe3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587c654c-b1aa-490a-9552-5fca35c4eed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f42d6cc-1e84-469d-9aee-a7b866ee92b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1290b64-7b9e-4703-b7d8-be3c8175220a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2774ded0-9762-479b-b6e5-dbae2600d52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e85b1f4-d43f-4267-92aa-3ae3d87e2ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1741daa0-10f9-4a67-821c-5dc79c45ec1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0e5c2e-8313-43a7-992f-da34f21f62b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0703bf-65c9-4469-8a99-ddc5109eec3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e69055-21c4-4262-833b-273a39998155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481fbc28-52f7-432a-bcc0-4debb96ac963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8337db-6f74-4010-b1ee-2cbfb207f155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adc9d24-b789-463b-80e2-ea977decf6fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b96adfa-6064-410c-8f73-cadc3c316119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e0f2c2-d37c-4f50-adad-b800def16c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08224243-e64b-420e-b6af-9d381251982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85693172-30bb-40a4-b86c-3bc1f7c28547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1b200d-b355-47b6-9109-952463a2af23",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae74da30-fa3e-47e6-8b0d-46f930878f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9fe20f-0cb6-48ee-ac20-fe73a2353f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eab5c3-16d7-40c0-8baa-1319d82e4e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d93aeb-c9cf-49af-8802-41ed72d121fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6481aca6-b995-40ef-a48c-394cd6359d81",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd36b52-6f0a-4b86-8a3c-8a9db31fc9f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101d2b18-b04d-454c-9930-0a869683e212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19dadf0-430b-4aa4-80ce-fdb3ca8d657f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92491ba1-5e7c-42be-aff0-c5be75bcbac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb9ae1e-d01f-4975-8bb2-f87da1858817",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37a1b3a-07c7-43a7-8b44-90146cdff93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60e95ce-0870-4e6a-a8cf-e5ea009e5d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6f2ef-3594-4c0c-8b8a-3f92ecaf4cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db52c0b3-430e-4534-8a9b-7951452ab335"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f012c8af-d318-4199-94b3-b5bb8622f599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617f9dcc-f11f-4359-acea-36defb857255"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "723d3b53-3ab1-46b0-8ec5-693a1f1e05a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0896eb5-c4a5-4174-ae9f-a41e28508121"
                    }
                  }
                ]
              },
              {
                "id": "a7e2fe6c-9ce8-4c4a-959b-cf0443457747",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5172d768-f856-415a-b3c1-7efdb2bc8ea2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae17a311-e134-4477-ad6d-7fc6139b77a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "225da929-a5a5-4db1-ab60-ba2351e2c7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92169728-25d2-4d78-8798-dfc6c471fe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14fddf56-0fa3-4513-aa3a-f5959ed0146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51aed7fa-8509-4e83-8da6-edf9701f96cc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d449c82-e8ca-4557-af4b-8d17550c5952",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ff46ace7-1e61-42d9-836f-5609baa02ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b549905c-b2a9-467f-9214-fa22832a998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "451cf97c-e41a-4cf1-9b5c-f924071c649e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32781d10-22f4-408b-8fdb-f12f3a8fc1f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ced6b5-a333-420f-adcf-29a717d291ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca9c905-07d4-455f-a33c-71e690aa8630",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc99bf3a-c851-491b-8058-4f188a91e272"
                    }
                  }
                ]
              },
              {
                "id": "a9ff2320-c10a-4cc0-9ba5-c4b9bea751b4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bd4d2cf8-dd06-442a-b6ea-f5c371e4a495",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c13bc9-b2f1-42f6-98a6-55f5141d9a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "70dff06e-4345-4412-9b97-496404e7624f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2cac28-69b5-4586-8fb8-f45a07825694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c946b1-dcb3-4038-a98d-d1d15da1e479"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82456fac-927f-4f7f-9f34-8ef6fffaf5cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffd8a924-38e8-4687-a197-8a7e2a0c7905",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f435b620-becf-4230-a436-e1898a9e42b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "71f90353-0230-4c88-9d1d-f912f92cedc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d8172be-13fe-4de3-bf80-53307a3de758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31e8a1bf-40b8-4cc5-9026-ec8369474e4e"
                    }
                  }
                ]
              },
              {
                "id": "eece3c76-b90b-48e4-a94b-88cf8f8a0012",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c1248a-1c9e-4327-ae25-59c29f470249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db0141dd-a81b-4fff-803d-1497473a61a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a438b7f-6b90-4254-a315-2fe90b0f5992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f228a9b5-7d25-4e80-a84a-734f5084ac57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23384423-4da0-41bd-8a03-10c4802bf85e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7cff6990-d25f-4afa-b6a2-f417e29936b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7577ecb6-a947-475c-a955-4dabcaca1630",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f720b6ff-a022-4476-bac1-09f17f1700c5"
            }
          }
        ]
      },
      {
        "id": "4c9d5ebd-e459-428b-8943-99dacac03e37",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "688f3d2c-b540-4942-b28c-a6c694defcb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9177308e-5f96-465c-a787-0313b3c542e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc074b8d-3be2-4306-a93d-d5950c72e659",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "573962c2-4842-483b-aad7-88ad7b18dcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2ca1b6-0eea-471f-84b2-e2f6e42c4bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff466a4-94c4-419c-acf0-8094e87450b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b170b456-ca0a-4573-9903-d992ff30e6af",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d58b206-61a6-4f5d-840b-147eea799241",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1660840e-8016-4680-bdfc-4a8738609be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fea5e18-e8a3-4126-91bb-0f2d096644a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7904a6a-84f2-45da-a5c0-19a1d5800b9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2525f630-42fa-4974-9dde-e343e4a55ae5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3514ea4f-c883-4d5d-a93e-66863bb64e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aeb1fb6-1333-483b-99f7-7b88b3222717",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1574cfb-9475-4398-bd36-b736626f1147"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "effcc528-200e-4e95-a8fa-ec7e9161abec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b991570a-9cab-4ab7-9903-21beaf2e67b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "680caca0-16be-4784-8a78-45fb71cb72ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06f0442e-4acc-4b10-9596-c7d9f6c148c8"
            }
          }
        ]
      },
      {
        "id": "6bec7d8b-2f32-4701-a287-9b70163b6dec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "61888148-f256-4991-b638-84beba38de7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f01c8380-ef27-429c-9cbe-53a6346e81a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2d91255-b7de-498d-bfc8-4d528acd11af",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082c7d0e-7f55-4148-9355-afe0f5d97352",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "29db8930-6331-4ae9-a4f4-9c2005e47954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb912659-0b2b-457a-aac9-a21ec2fa275e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5448f590-2d09-42cc-bd6c-5d2878697d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad793725-1edf-41aa-b1ed-b4f407d90b98",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d34c9a-1a63-427b-99b8-5015b42d8c96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe4abc4b-5db9-4ab9-b531-33700bc0e729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51b51c2-82c4-4d57-b025-ccb85b1e9099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9abbb5e7-b02f-43ae-8e11-e2d34106e568"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a469c75-8d2a-4bc1-a1a3-b841e882b015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfeb5185-df3d-4adb-9221-e73936cedb47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8758b7f5-93a4-48fb-bc6f-1983c66945bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4502168f-af16-4434-8f89-2e5a90852187"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29507b04-c495-4db8-8464-d4158ffd5a69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "72a73ed2-f1b7-4e01-85d5-b7bcc926c4c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e552d4da-88e8-4bfb-81bb-be6a229278e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c6cbee1-99e5-430a-9296-c7427b0ddea9"
            }
          }
        ]
      },
      {
        "id": "49f5a9ae-d750-4592-9195-1dd365346524",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3499030a-b6cb-45d7-b4e2-38f93af2c2db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53816e80-865d-4873-afaf-c2471424e653",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21e0aa26-5f35-4f77-a366-96f7ce8cabc5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd76506c-3b14-422f-9506-40c527d9cc90",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aad001e4-40ce-4ae5-9519-248e6f8c7587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0783553-3651-4e2f-9f76-d511d39113c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c6321dc-136e-4cc5-bf6c-ceec4677328c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388b1794-5011-4099-8bf5-4e4bb93a879c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7fd75-add8-4aed-a115-c13752d1f7c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ff1364b6-9036-40a6-800e-2ad3efef73d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd310419-750d-4464-b1b1-21de8fcfe6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88a71562-54ad-46ab-adc1-da78ba681902"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2315749d-29b4-4326-acb1-a8b3e5fc8ce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbc24f2d-947b-472d-b1b4-9c18e5ee83ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "896beffd-acf3-46c4-83ee-fc7f318437ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31fc8f5e-4d14-4bae-8a5b-fd7221bc4622"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e98fdf38-7944-4c58-a135-9b0ade5bf1e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b02d2780-70c4-45fe-9ba2-a7f9886e252d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c474fcb9-b067-4be8-b776-2766067cec09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16bcc4a9-ba76-4200-979a-4a3cd20aa979"
            }
          }
        ]
      },
      {
        "id": "31858478-b26d-4a61-a416-02f89d4b499d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebc3e643-316c-4768-954b-4866d6e9376f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "668adc03-7689-4aca-aa83-b27d5929dc4b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3d2597b3-d3ba-47c2-9c7e-47d8ea864e8e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5433390f-3d47-4b62-955e-2ad88b970388",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9d70a77-b9b4-4a46-9306-7085ff69c671",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 596.3244274809156,
      "responseMin": 14,
      "responseMax": 4978,
      "responseSd": 686.2851916021923,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672706263415,
      "completed": 1672706430340
    },
    "executions": [
      {
        "id": "d2b54c13-1b13-4642-8b3b-1ea1820e2795",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f513b5d7-54c5-4173-bd0a-2592d26f8f8f",
          "httpRequestId": "b2de182a-8f33-4f9d-af77-79aba4856c69"
        },
        "item": {
          "id": "d2b54c13-1b13-4642-8b3b-1ea1820e2795",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "75622d50-b2f9-46aa-be65-736ce974e533",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 0
        }
      },
      {
        "id": "7291d3ef-fae8-4153-aaa9-b12757549d2c",
        "cursor": {
          "ref": "a3cda8df-2af2-4dec-888b-9b7b364cb6ca",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7ca54043-d7bc-41cd-b149-04eaf15bd10f"
        },
        "item": {
          "id": "7291d3ef-fae8-4153-aaa9-b12757549d2c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "042c0cef-e423-4ec3-9063-7f98bfa17710",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "9c6bd6b1-b663-4bff-8c59-2923218878b6",
        "cursor": {
          "ref": "9701a22b-e352-4a6d-b8a4-e2af157208d0",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ccea845e-bacd-444e-991d-08ca7998dc31"
        },
        "item": {
          "id": "9c6bd6b1-b663-4bff-8c59-2923218878b6",
          "name": "did_json"
        },
        "response": {
          "id": "f93187d6-493c-406c-bd47-cee5264764c8",
          "status": "OK",
          "code": 200,
          "responseTime": 656,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a99e9c8-dc7d-4392-aa6b-6bb01a78f6f3",
        "cursor": {
          "ref": "69dbd622-9500-4b51-8472-e4673619ea66",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5b66778-3cef-4cc3-9222-9ea2008beef3"
        },
        "item": {
          "id": "2a99e9c8-dc7d-4392-aa6b-6bb01a78f6f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae673b12-0810-46d1-b3b5-d5c8f9ff02fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a99e9c8-dc7d-4392-aa6b-6bb01a78f6f3",
        "cursor": {
          "ref": "69dbd622-9500-4b51-8472-e4673619ea66",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5b66778-3cef-4cc3-9222-9ea2008beef3"
        },
        "item": {
          "id": "2a99e9c8-dc7d-4392-aa6b-6bb01a78f6f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae673b12-0810-46d1-b3b5-d5c8f9ff02fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46a1e8e-43a2-4e07-9b7d-f4226eb8f4c3",
        "cursor": {
          "ref": "00fb6701-0e42-4b31-816f-90020f13d242",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1f9a7d6d-2dc1-4ec0-bf2d-cc6614ad4842"
        },
        "item": {
          "id": "d46a1e8e-43a2-4e07-9b7d-f4226eb8f4c3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "af465671-bb0e-4bb2-910a-780a085f481a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 637,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a23e82-d46d-43ec-bc9b-a92c755002b5",
        "cursor": {
          "ref": "f86204a9-5694-44a4-b668-939acda6e0a4",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec1f5c28-d79f-4bf0-bc11-47259196127c"
        },
        "item": {
          "id": "e8a23e82-d46d-43ec-bc9b-a92c755002b5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "516cc4d3-57dd-40a0-a358-af7ad076dd33",
          "status": "Not Found",
          "code": 404,
          "responseTime": 510,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18970df-e6e3-47db-8666-70bafc4a129e",
        "cursor": {
          "ref": "b1bbeaa5-2271-4522-b5cb-db771d604e4d",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9ec4fcf9-1027-4517-88ca-93eb48eb43aa"
        },
        "item": {
          "id": "f18970df-e6e3-47db-8666-70bafc4a129e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "85bbaf1f-79c2-49c2-8104-5e1b9d118798",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2fcabd-dfff-4f65-adce-723fb86f1852",
        "cursor": {
          "ref": "ba7d6007-8678-47ba-95b2-03610656bf42",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6f6aad33-2385-4348-b531-d881f6d04482"
        },
        "item": {
          "id": "fd2fcabd-dfff-4f65-adce-723fb86f1852",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9e59cee3-5c54-426d-ab02-0e7d9bb47650",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2fcabd-dfff-4f65-adce-723fb86f1852",
        "cursor": {
          "ref": "ba7d6007-8678-47ba-95b2-03610656bf42",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6f6aad33-2385-4348-b531-d881f6d04482"
        },
        "item": {
          "id": "fd2fcabd-dfff-4f65-adce-723fb86f1852",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9e59cee3-5c54-426d-ab02-0e7d9bb47650",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d366ec4-700e-4606-9eab-7f46197432d8",
        "cursor": {
          "ref": "5ca8bdca-c9a4-4bb1-b823-082c11f3ef6f",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3ee2b579-0707-420c-b7d5-c00a9940dbc9"
        },
        "item": {
          "id": "9d366ec4-700e-4606-9eab-7f46197432d8",
          "name": "identifiers"
        },
        "response": {
          "id": "3ecfd830-074d-4fc5-aa4b-09d914f3113e",
          "status": "OK",
          "code": 200,
          "responseTime": 851,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af55f7c6-02b6-40b0-9970-eb848be0183c",
        "cursor": {
          "ref": "6f388cf3-0fc5-4f9a-a4d0-21783ebdc380",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dc995e56-57df-4770-ac05-09ed06b63708"
        },
        "item": {
          "id": "af55f7c6-02b6-40b0-9970-eb848be0183c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7f1da8dd-0f62-46f9-b6f4-ff21db443f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af55f7c6-02b6-40b0-9970-eb848be0183c",
        "cursor": {
          "ref": "6f388cf3-0fc5-4f9a-a4d0-21783ebdc380",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dc995e56-57df-4770-ac05-09ed06b63708"
        },
        "item": {
          "id": "af55f7c6-02b6-40b0-9970-eb848be0183c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7f1da8dd-0f62-46f9-b6f4-ff21db443f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a31c60a-520b-4965-a1cb-393071e62ffe",
        "cursor": {
          "ref": "dbf4bfb2-833c-439a-be44-49e513c93797",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b6f81827-6aef-409f-b2f1-11eba3a64d48"
        },
        "item": {
          "id": "8a31c60a-520b-4965-a1cb-393071e62ffe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5a9b915a-62ab-437a-87b3-5d44a337bc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88815cc6-5ba6-4acc-bc65-3bdb1d0247d7",
        "cursor": {
          "ref": "44306b24-200e-445f-8b9b-9e0adbc6fe18",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "36a927e8-364c-4a10-ba6c-b57974f6bbe8"
        },
        "item": {
          "id": "88815cc6-5ba6-4acc-bc65-3bdb1d0247d7",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "bf8ab4a9-7849-4bb0-b5ae-04586bbb1d4d",
          "status": "Created",
          "code": 201,
          "responseTime": 2436,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "3b9c6a31-1ea7-42cf-9f32-f6e00aa3c183",
        "cursor": {
          "ref": "9fb7545a-c3f3-4b12-9de6-e87a44bf871e",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dd69d0a5-15e7-4f35-912d-59aeae1cdfa7"
        },
        "item": {
          "id": "3b9c6a31-1ea7-42cf-9f32-f6e00aa3c183",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "76350105-53b0-498b-9b2e-89ce4e3d8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4f6ede-df1f-42c3-9103-9472f6f2d510",
        "cursor": {
          "ref": "3bf0f3c1-d7aa-4dd1-8f23-bb323c3fe432",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1fee8b79-3ffc-4db2-b008-800869b6f3d9"
        },
        "item": {
          "id": "3a4f6ede-df1f-42c3-9103-9472f6f2d510",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "87afaed7-0394-49ab-99e5-ad6d9bfb1ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7070aa93-95d4-46c3-b79c-6d543fc083ff",
        "cursor": {
          "ref": "90f818ca-2f94-47f3-b6be-f2e8777e1912",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3f27726c-fd31-4926-93b3-93cdb01bab51"
        },
        "item": {
          "id": "7070aa93-95d4-46c3-b79c-6d543fc083ff",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "169f150c-d69e-411a-8763-aacf3e3fd40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328eec0-b70b-4e75-ab44-a93f21e4b242",
        "cursor": {
          "ref": "e42bff3b-c9a2-49a8-ae3a-7408fc7d3b7b",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bde58209-078c-4e7e-8862-651b396dd02f"
        },
        "item": {
          "id": "3328eec0-b70b-4e75-ab44-a93f21e4b242",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2b7afc7e-c3f6-47e0-af27-7e7170249ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9768e016-d295-4529-89f7-c3da36bfb3dd",
        "cursor": {
          "ref": "82e564fc-c17c-4111-b184-0088969605d6",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1644efb2-ed26-4610-b09d-e337a1ee8477"
        },
        "item": {
          "id": "9768e016-d295-4529-89f7-c3da36bfb3dd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c89834d3-4c78-43e4-80a9-65437dd613b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647580c7-f682-4057-b75f-963a917d8c17",
        "cursor": {
          "ref": "33092dec-9b3a-440e-a72b-c606dc2caff6",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ae18edb8-241a-462c-b736-2e4f76ca307e"
        },
        "item": {
          "id": "647580c7-f682-4057-b75f-963a917d8c17",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1517f834-a6fb-4c6e-ba28-cf78f9f999a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51228698-f4ac-425b-ab2b-00c8e8d98778",
        "cursor": {
          "ref": "a0dc791e-1b95-4eef-a868-bdd207b91a46",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "011e0771-36e8-460a-9c33-ec074dc51ac1"
        },
        "item": {
          "id": "51228698-f4ac-425b-ab2b-00c8e8d98778",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "82abd6fa-977c-4a42-b14f-0e0ecbc3b3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bf98c-a1dc-4b5f-a5a4-d44d1c019d35",
        "cursor": {
          "ref": "17e4ec88-9996-4046-8ac2-4132c5a13687",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7e2593ec-b871-4af0-b449-ee1ff9b0a7d1"
        },
        "item": {
          "id": "f45bf98c-a1dc-4b5f-a5a4-d44d1c019d35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a66dd618-119d-446d-a992-8c57c6e8cf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2943a9b-d279-4f5b-9270-c3b11ea3ba53",
        "cursor": {
          "ref": "e126f78b-fbc4-4bd5-8583-eaadd7df0c41",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d736c9b0-4151-4308-a05d-4141104802e1"
        },
        "item": {
          "id": "b2943a9b-d279-4f5b-9270-c3b11ea3ba53",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ef95560e-0004-464a-8dfa-2c4b52d5c9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d36ce06-1d74-4a7c-b1be-26de7198b3e4",
        "cursor": {
          "ref": "7f4cf6ed-7a98-4d30-9213-fb87d7952a2c",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "87cb2dce-66b7-4f8c-af97-100ec0020ee2"
        },
        "item": {
          "id": "3d36ce06-1d74-4a7c-b1be-26de7198b3e4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d5a89f4a-1377-4c42-a18b-3ad4a9bff848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82f143-3cdc-47b1-9e21-62e461564dae",
        "cursor": {
          "ref": "f6ba8dcb-8e08-4864-aed6-030ae10b25ec",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4beb1adc-e12f-41a3-a39a-c1b3232c3b05"
        },
        "item": {
          "id": "8f82f143-3cdc-47b1-9e21-62e461564dae",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "3549198c-c7fd-48c0-ac28-691508337860",
          "status": "Created",
          "code": 201,
          "responseTime": 4324,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "645ca4b0-16d6-4d5a-ac30-a8671e265e59",
        "cursor": {
          "ref": "91d2fa55-9286-47ab-8e1d-5be92c7db47b",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "987d512c-4523-4871-b275-35dee3c3d037"
        },
        "item": {
          "id": "645ca4b0-16d6-4d5a-ac30-a8671e265e59",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d0c2481-da52-466d-8ac7-c42c51fc5d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f40a88-2f6c-4e09-a701-32ad650465df",
        "cursor": {
          "ref": "2ede7b8f-7cb3-47f1-bd26-c9e52348fb1c",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "66a03a6d-7d43-48bd-a23d-a4e3961ef721"
        },
        "item": {
          "id": "b2f40a88-2f6c-4e09-a701-32ad650465df",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9f782eaf-f8cc-491e-b90d-aac610b13209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433b9af7-e03d-47de-ba4e-cab82567e0bb",
        "cursor": {
          "ref": "96a7328f-2a3e-47b7-8970-3b9c4e4b5b33",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6e95736a-ebce-4497-9d04-f81cf02844e2"
        },
        "item": {
          "id": "433b9af7-e03d-47de-ba4e-cab82567e0bb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f6770fc9-46c0-4bc8-bb6c-7b58dc743d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9bbedd-c984-416a-ad92-586ccee8a8ac",
        "cursor": {
          "ref": "c4fc331a-d111-4346-a7c7-040b0e03f0e3",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae3c7223-4ade-4d64-a4d0-28a6c6d4d87e"
        },
        "item": {
          "id": "9e9bbedd-c984-416a-ad92-586ccee8a8ac",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2e716fea-2aed-4097-8dec-32982411c45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05dbb38-6e16-481f-b2c6-7a7c3bd0bac8",
        "cursor": {
          "ref": "20219103-3bde-48f0-86bc-874e5986485f",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3dcbb34e-32be-4c0b-8807-9ee93f98a40e"
        },
        "item": {
          "id": "e05dbb38-6e16-481f-b2c6-7a7c3bd0bac8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "69a3eb47-05fd-451e-81d3-1f5895b416f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6130ef-ca71-4bc6-8345-7de588934a74",
        "cursor": {
          "ref": "f7029d87-7e94-49b1-8387-2d43b833f51b",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "596b1a59-3b7d-4cad-9504-480adfdad3c4"
        },
        "item": {
          "id": "6d6130ef-ca71-4bc6-8345-7de588934a74",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "23473f3f-a250-4ffd-a092-13db69ceea25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145bb052-a9bf-4a87-aa0f-b31d5e6df2d2",
        "cursor": {
          "ref": "9f233b2d-1d59-4fe6-8758-acd29b505799",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2781eab9-2dac-426c-83e6-3826178f5c6a"
        },
        "item": {
          "id": "145bb052-a9bf-4a87-aa0f-b31d5e6df2d2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e83cb691-2733-4fb4-bb38-46fb791f317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eeff57-50db-4cbf-9b07-fbebdce20f25",
        "cursor": {
          "ref": "be84445b-85ab-41f6-96b5-7daa9602a66f",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "875a7e99-dc06-4cab-b417-3bc062d05bb6"
        },
        "item": {
          "id": "b4eeff57-50db-4cbf-9b07-fbebdce20f25",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3b3e60fd-de9b-4950-a994-497974f98c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08fb7ae-4c56-49f9-9e08-bcd0421da11a",
        "cursor": {
          "ref": "27fdfd90-a6e1-4119-842b-ff0144cdfc82",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2b1aeb49-67e5-46a0-a0f8-ad4a3ce72a4d"
        },
        "item": {
          "id": "e08fb7ae-4c56-49f9-9e08-bcd0421da11a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6c5162ec-a006-40b0-a656-12e20733a318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb9c208-4a38-4aa1-a05d-0b0b1a8f352e",
        "cursor": {
          "ref": "bfb57e0b-edc5-44d6-9ef9-4e912eba42b6",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a8a275a2-fa91-4f53-8faf-6b52a6ac26d3"
        },
        "item": {
          "id": "ecb9c208-4a38-4aa1-a05d-0b0b1a8f352e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dcac65f2-ba7f-48d3-9ab3-2c8feaf7d94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580285cf-5887-4164-9569-163195f83822",
        "cursor": {
          "ref": "cef22666-f906-400a-9f1f-0a2e3fde7447",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "49b118f4-5fef-4345-8fff-c5c8cfba9121"
        },
        "item": {
          "id": "580285cf-5887-4164-9569-163195f83822",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a43d4881-2555-49cc-b8ba-04345d935302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6080734d-3eed-4767-9f1e-0d69f36774c8",
        "cursor": {
          "ref": "11112386-0270-439b-b1ea-0192cc3fe3c8",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7134b52f-c437-4e06-986b-7343e34c0a42"
        },
        "item": {
          "id": "6080734d-3eed-4767-9f1e-0d69f36774c8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c536c423-e144-4953-97a4-c59e2cd8348c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef57d313-d337-4cc5-93bf-f36cbca38f5a",
        "cursor": {
          "ref": "133e8e51-9ddb-427e-abfc-5f21126607df",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ac4a901a-4c14-4ae7-8640-c318a47ca820"
        },
        "item": {
          "id": "ef57d313-d337-4cc5-93bf-f36cbca38f5a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "803dfbf1-87a3-4bcd-a92c-f59c43e6b973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dafe60-4334-4404-ba3a-f523226aa14d",
        "cursor": {
          "ref": "942f4ae2-0b5c-4417-b8b3-88e2af82bcd1",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d2ae78e8-cf73-4c14-a28a-dac02bbe9e66"
        },
        "item": {
          "id": "10dafe60-4334-4404-ba3a-f523226aa14d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6793f25d-26b3-4370-9813-b323f48658a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bba6343-b193-426c-9fa0-e59897c3cb25",
        "cursor": {
          "ref": "f3fbd6a8-d4b2-4dd8-ab5e-ed1ac39e05c2",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7c8e1df3-b789-44af-889c-8fc299c6de86"
        },
        "item": {
          "id": "7bba6343-b193-426c-9fa0-e59897c3cb25",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e8204e05-8635-4ffd-923c-6c586d84443a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10de66ca-7eeb-42f0-869f-50f93b771d56",
        "cursor": {
          "ref": "f73004d9-3463-4953-a099-0d25fb79b6d8",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2e9ab84-fc24-45cb-8f8f-4432991a72d1"
        },
        "item": {
          "id": "10de66ca-7eeb-42f0-869f-50f93b771d56",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "373834b3-c937-43ae-b8e9-132c3ad42cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d2360a-8ebd-4fc9-a1fd-ace8bc397d5f",
        "cursor": {
          "ref": "65a3620a-bdf1-4979-91b8-21953d1d21d0",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "86f67196-a08a-4e5e-97fd-6909c45654a9"
        },
        "item": {
          "id": "23d2360a-8ebd-4fc9-a1fd-ace8bc397d5f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "835297a5-f55f-45f9-bc02-4bf854a54357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6066de-6165-4a55-ae6a-602fee988029",
        "cursor": {
          "ref": "ba660435-8c6a-4fac-b85c-3c36afb85f14",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "457ae610-d4d7-4718-9dc8-758a848e2e2f"
        },
        "item": {
          "id": "5b6066de-6165-4a55-ae6a-602fee988029",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "305d7da1-8783-4907-880d-36a290989a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a0b24-6606-4f56-8504-8012702a8793",
        "cursor": {
          "ref": "c4035ca3-2ce2-4603-82e2-c447e8b3c881",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6e7a7ddc-e6af-4f2a-beb6-6cfe436a4277"
        },
        "item": {
          "id": "3d2a0b24-6606-4f56-8504-8012702a8793",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "486d7f1e-e7b4-415a-822a-78c50931e1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671c863d-cf72-44bc-ab73-241e33deded7",
        "cursor": {
          "ref": "a98fca04-02cf-45a5-b7b3-fc3550011353",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e52ed691-5627-4acd-9099-15029bfad211"
        },
        "item": {
          "id": "671c863d-cf72-44bc-ab73-241e33deded7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b72e8bb6-644e-4448-8d3c-3817b0664628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f15a8c-36da-408b-8dd4-e4dc157486aa",
        "cursor": {
          "ref": "3791fede-a2c8-4413-a7a7-5ac00e78e07e",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "153cd7ca-ad24-4209-b992-f275cb388432"
        },
        "item": {
          "id": "09f15a8c-36da-408b-8dd4-e4dc157486aa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a2482634-51aa-4cce-a0c6-17cd21a6662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3787e4-6f34-465d-914f-8feef09b0552",
        "cursor": {
          "ref": "80472e2d-d049-4737-b59d-04a8201ebdaf",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ee783f4e-0488-455f-9679-deda219b76d4"
        },
        "item": {
          "id": "3f3787e4-6f34-465d-914f-8feef09b0552",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9a804a01-67aa-4df1-8bcd-4def4fafd0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b88a6fc-87ff-4ee5-b37a-6b28f7a6dea6",
        "cursor": {
          "ref": "ed78ddc7-d6d7-4da7-a061-09912e3e3a3d",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8b9a06e9-f02a-4c3a-af9e-b8468fa2473b"
        },
        "item": {
          "id": "9b88a6fc-87ff-4ee5-b37a-6b28f7a6dea6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d4067634-a9e6-48e3-8e25-6b43c71064fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50388a87-bf3f-4532-a9b1-2d3a73710d8b",
        "cursor": {
          "ref": "af5100dd-dcdb-403a-9a15-20b5e0570813",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "01d5e9ec-a741-4816-8fe3-d3cff88a5d4a"
        },
        "item": {
          "id": "50388a87-bf3f-4532-a9b1-2d3a73710d8b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b5b60acf-8927-48d9-8320-8fd7b4019c4d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 613,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744f2fc6-043a-4669-b03c-3f4cba302990",
        "cursor": {
          "ref": "3fd6b7f9-f209-454e-ab42-33c7bbe0c3a7",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51c89b38-9940-4e24-862f-69322cf0405d"
        },
        "item": {
          "id": "744f2fc6-043a-4669-b03c-3f4cba302990",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81d993a3-0757-44eb-b22c-c59fab86ac6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867ff48f-e4c6-4d9a-9b05-b1bce8ec1781",
        "cursor": {
          "ref": "9e61e8e1-5d71-4a85-85c9-233f32940129",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7ac6af9d-d826-4183-9da5-3914f8728b6b"
        },
        "item": {
          "id": "867ff48f-e4c6-4d9a-9b05-b1bce8ec1781",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c67588b3-263e-4bf5-8331-3e4ecf1b44e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be64f4c-0e91-4534-864c-d71f8ff8b49a",
        "cursor": {
          "ref": "956c1d19-912a-4d98-8fe8-bb854fa5a41d",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9a8a81b2-3d86-4bfc-8acd-66c27cf253f8"
        },
        "item": {
          "id": "3be64f4c-0e91-4534-864c-d71f8ff8b49a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a6c1dce2-88b7-40ca-be7f-7e2a3abe6ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1cdc83-93c7-4c60-a451-fbed5b87ea1f",
        "cursor": {
          "ref": "1da80ed4-90af-4c6d-9361-55dee63d963e",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc6cf28d-ebae-4068-b0ca-12699b7dab5d"
        },
        "item": {
          "id": "ec1cdc83-93c7-4c60-a451-fbed5b87ea1f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ffc141b0-2fe4-4d44-a2e3-27193cb2d924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af6bc67-20c5-4904-a123-227b50177cca",
        "cursor": {
          "ref": "32ed35e1-5abd-4b3a-98ba-f18503ce8e95",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "81480d6c-be5a-4dc0-9706-4a34b3de5e13"
        },
        "item": {
          "id": "9af6bc67-20c5-4904-a123-227b50177cca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aec9115b-f690-4f4d-be20-240fe2986776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b8725e-1ad8-409b-b289-b7a1b518d8dd",
        "cursor": {
          "ref": "742e4684-3cce-4236-86d2-b0138a003e5e",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "40c2046c-4360-4167-8c04-031b1ca3c385"
        },
        "item": {
          "id": "60b8725e-1ad8-409b-b289-b7a1b518d8dd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a3ff0b2b-c6ca-4802-98a6-c8ed0bcdc1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b751a5d-0d7c-4d02-969f-fdba5f413f26",
        "cursor": {
          "ref": "29876f45-9572-4720-ad08-38e13695caf5",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8c389fd6-371d-4e81-9442-c2006548d862"
        },
        "item": {
          "id": "3b751a5d-0d7c-4d02-969f-fdba5f413f26",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cbdd3ea4-6711-4d12-8c39-6cd1ad9272d5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 607,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ec0d8a-ac18-46ec-a749-ef2f832740ff",
        "cursor": {
          "ref": "80d757d3-68f7-47c1-967a-042fdbc02d67",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "30769a5c-fdbc-4734-a33a-4fa65c442b10"
        },
        "item": {
          "id": "30ec0d8a-ac18-46ec-a749-ef2f832740ff",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b3a7306f-81f4-4454-9815-a69c2878d5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f113e5-62b8-4c47-a6b2-bc415fa0cec9",
        "cursor": {
          "ref": "e5af27e1-63c5-4c59-858e-26fdd547804b",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4fcae1ca-77ba-4d27-8232-7df7faa2e98a"
        },
        "item": {
          "id": "01f113e5-62b8-4c47-a6b2-bc415fa0cec9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d683860c-2b6a-435c-b58a-c976ecd56799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a005c1-9853-43c9-988a-a163ab4ad078",
        "cursor": {
          "ref": "299fe50a-79a6-413e-b6b7-709d11442a7f",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "65a03a14-91e2-4f73-a013-5ac72e72af31"
        },
        "item": {
          "id": "15a005c1-9853-43c9-988a-a163ab4ad078",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bbe82a31-22f3-4fa2-acab-100343401cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9cda2a-f5e1-4c01-824d-7104744a8dbb",
        "cursor": {
          "ref": "5fdceb00-d006-46bb-bc02-cba613371fc1",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6ba318fc-1bbc-4990-bd2c-f042758d8236"
        },
        "item": {
          "id": "3c9cda2a-f5e1-4c01-824d-7104744a8dbb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "21c956d0-d83e-44cb-b010-555695d9d983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b78e1ed-24bb-4c3d-ae46-186f52b2518e",
        "cursor": {
          "ref": "beb61002-97c8-4a26-bcb3-7dd4f1da435c",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "18fd74e5-c4a9-4e7d-8226-540a4c4e927b"
        },
        "item": {
          "id": "8b78e1ed-24bb-4c3d-ae46-186f52b2518e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "14b013f0-1fca-4113-b24e-4f45188a8665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a0215-47db-4257-a830-e449bd20f79a",
        "cursor": {
          "ref": "a6223e83-4d86-459a-ba43-be5991939434",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f64e3b7d-e99c-47fe-8584-deea0c8ff47a"
        },
        "item": {
          "id": "2e9a0215-47db-4257-a830-e449bd20f79a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f4ec9039-19e0-4351-bfc8-d0fc17e9bbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657d7d7e-9e76-4a91-b106-3b976f06e50d",
        "cursor": {
          "ref": "dece4ecc-92ea-409f-af25-021353adaa82",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed3c7478-e667-495a-8b2c-0423647a2b6c"
        },
        "item": {
          "id": "657d7d7e-9e76-4a91-b106-3b976f06e50d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c192f12-9534-4759-888c-95aeb7c1f543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca34c7dd-7209-4328-8171-6b8d823c52e8",
        "cursor": {
          "ref": "d520cb2f-f1de-46c4-b2b3-fc0c33eb048d",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a4b2f961-477b-4641-8f58-5f9888cf18f2"
        },
        "item": {
          "id": "ca34c7dd-7209-4328-8171-6b8d823c52e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c30ae95b-0840-4736-9aa2-a69c5f0db1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9f6786-fabd-426f-aa17-5e6b6adc82c6",
        "cursor": {
          "ref": "7e569f70-3564-49b2-af8c-046d8bcf6feb",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "63973aa2-3903-4896-83e6-02c544b41bb4"
        },
        "item": {
          "id": "8d9f6786-fabd-426f-aa17-5e6b6adc82c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7bde539a-6459-4b3c-9b7d-1ec7f4991001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e920b9e0-7ec4-453f-8b01-887dc1350cd8",
        "cursor": {
          "ref": "f7003fdb-c6f6-41b0-87ce-d625cbee84ab",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "470d7c23-4b28-4f3d-a7f7-abed87c877f8"
        },
        "item": {
          "id": "e920b9e0-7ec4-453f-8b01-887dc1350cd8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "72485aef-d156-43b0-9bfc-f2f67ebcd2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e08cf61-1d6d-48a2-99ee-2e65886f02e5",
        "cursor": {
          "ref": "631a7b9c-abce-4e50-9ac2-7156bacd2de8",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "68806958-7bce-410b-9bde-63e4a4d1739d"
        },
        "item": {
          "id": "3e08cf61-1d6d-48a2-99ee-2e65886f02e5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "03c14973-7d40-4605-8292-f3dd7cfbcc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f4ff5e-608a-4a7f-9ce3-666033a82027",
        "cursor": {
          "ref": "9a35c8fd-8e7d-412e-a0a2-0235254df8b2",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c7e96e26-3f8c-48a3-a14d-82e71efbb93a"
        },
        "item": {
          "id": "85f4ff5e-608a-4a7f-9ce3-666033a82027",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1fdacce2-f07a-4e6f-a88b-198a0cd0e252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664ee98e-51f7-4ccf-b4f3-1f83402a258b",
        "cursor": {
          "ref": "81eb71f7-ed47-457c-9793-d6d7a1161176",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cf04c806-cdcc-432c-9660-8c2c0d5a2b2d"
        },
        "item": {
          "id": "664ee98e-51f7-4ccf-b4f3-1f83402a258b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0400b559-12f5-4753-8951-89d9d3c0ab17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59efd861-599a-440c-ba6f-cd32c2be15c2",
        "cursor": {
          "ref": "2fc15a0f-452f-4c65-89a5-030d26030605",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "25cb3c45-25ac-42d4-9849-b67e8defe525"
        },
        "item": {
          "id": "59efd861-599a-440c-ba6f-cd32c2be15c2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "169d9ea6-914f-4f81-b12b-a3d0e014c85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a17ad20-237d-4252-b39e-e3aed41ba0aa",
        "cursor": {
          "ref": "248385d6-1af9-44f1-aa0f-dc63d328de0e",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8dc76095-6fe1-4d9b-882e-e9184ba2fcb9"
        },
        "item": {
          "id": "4a17ad20-237d-4252-b39e-e3aed41ba0aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "902841b6-70b2-4aec-9c6b-9c41c19e9d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff21446-49ed-4762-9bc2-f83087f7fd39",
        "cursor": {
          "ref": "fc0575d9-23c5-4e64-82f2-23ef9f47d7ab",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0e372b7a-174f-4af4-b9a2-c67b43abf6aa"
        },
        "item": {
          "id": "3ff21446-49ed-4762-9bc2-f83087f7fd39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4338707c-1977-4fa8-a880-cd67e339c9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b6fd0-64a6-46de-8bfb-67059bb390b0",
        "cursor": {
          "ref": "1a12167b-a79b-48dc-b13a-4b9bdef40c6e",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3d5273ed-fd3d-4434-8b35-15e946f991a3"
        },
        "item": {
          "id": "ae4b6fd0-64a6-46de-8bfb-67059bb390b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7cf34167-9252-451d-aa28-091c16c1c750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3680aeff-702f-46ff-95f7-68b7af9c4d3d",
        "cursor": {
          "ref": "5f291685-b8ef-4aa1-b217-77cded8cbfff",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c96bf81d-8c9a-45ed-86a4-23f3bb21c5ae"
        },
        "item": {
          "id": "3680aeff-702f-46ff-95f7-68b7af9c4d3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8f4e46df-c8dc-4e2b-8cf5-a2b09ba5ad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3786368e-80bf-4d9f-9d54-b172043bdfef",
        "cursor": {
          "ref": "628568f2-e3c2-43fe-b131-2faca3cf99fe",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5b08e62-0546-40e8-bde2-54e53acf1270"
        },
        "item": {
          "id": "3786368e-80bf-4d9f-9d54-b172043bdfef",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f7a234c8-23ea-48fe-8a67-09f4850a35de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ba8db-f9fe-49d8-bba1-6039c55cc1d7",
        "cursor": {
          "ref": "17c4ee5c-49f1-4c7c-ad48-9e2eba04421f",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0878c399-9e5f-4ca9-a948-804dc542c073"
        },
        "item": {
          "id": "015ba8db-f9fe-49d8-bba1-6039c55cc1d7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cb95918c-f653-4f62-8b45-64529072da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc62ace-ab01-44bd-81b7-d61b42931cbe",
        "cursor": {
          "ref": "a462f57b-9f7c-4e9b-b6fa-398c21110037",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ab3c211f-58df-495b-9bd8-119bac663745"
        },
        "item": {
          "id": "0dc62ace-ab01-44bd-81b7-d61b42931cbe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "58c965eb-9a20-4f36-a93c-b78d226b49a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66b6123-7e23-40e1-911b-fba78747242b",
        "cursor": {
          "ref": "e7768494-6611-4234-9363-28117959326f",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9db2b465-d1d3-4a04-9ea8-786a0c306486"
        },
        "item": {
          "id": "a66b6123-7e23-40e1-911b-fba78747242b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ad26d990-7452-4f75-8d86-d8c550a2c017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084875ef-e642-4d17-8a88-e83bc14590a1",
        "cursor": {
          "ref": "f073ade8-0687-45ab-ad7e-30513992a975",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d45a0e6f-3a9e-4b4d-90cc-5f5777604fc1"
        },
        "item": {
          "id": "084875ef-e642-4d17-8a88-e83bc14590a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f72716bd-9408-4479-942e-e5051b928797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253d6017-125d-4b72-b33d-2dd88d25e0ba",
        "cursor": {
          "ref": "01840ff3-0430-4190-92bb-3c080f7a5bd0",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "673b24eb-6b77-4632-9ad8-9241b2f5aae8"
        },
        "item": {
          "id": "253d6017-125d-4b72-b33d-2dd88d25e0ba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b935e569-0c8b-4a3e-88f6-2ac756a96884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3be9989-d5ff-4c6a-b096-ff41a970ce8c",
        "cursor": {
          "ref": "ab305b00-1590-42d1-bfd8-c609a935a292",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d27e86b8-ddbe-4155-a8e3-217f5579001a"
        },
        "item": {
          "id": "c3be9989-d5ff-4c6a-b096-ff41a970ce8c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a7c7a853-af6f-4a02-b8e0-4a263dccb5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdd8ed-732d-43e9-b547-016fe4f58000",
        "cursor": {
          "ref": "45d46db8-4e20-408c-94e6-f1835a8dd182",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d8e4700a-30d3-4c0c-9629-e379070aa04b"
        },
        "item": {
          "id": "37cdd8ed-732d-43e9-b547-016fe4f58000",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "74a3f2bc-9f34-4274-bd0e-23d1e9ae1ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5909a63c-e9b5-4541-9914-c9790adff8dc",
        "cursor": {
          "ref": "8fdaa0e5-9343-4fd2-b321-bae1a4d21d06",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "299ee1a6-32a8-4ab1-8471-94acdbc24ce9"
        },
        "item": {
          "id": "5909a63c-e9b5-4541-9914-c9790adff8dc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3049e0a9-5db4-43fe-8352-e9bdcf70c309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254e0d7e-ea67-4457-b642-0961f5140c83",
        "cursor": {
          "ref": "75f7ec0e-740d-48df-9f47-6e9bd1e83937",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7d8fc7bf-1969-444e-bbb1-0c862cab213b"
        },
        "item": {
          "id": "254e0d7e-ea67-4457-b642-0961f5140c83",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1f3f3d0f-4936-4cd1-8ceb-1e707e29324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4a4164-adc5-4aa4-bd8c-7846f1e17672",
        "cursor": {
          "ref": "3b01c62f-47c5-4ddd-871b-66f32c4a4f67",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4bbed477-84d8-47b3-96d4-318d40add946"
        },
        "item": {
          "id": "ce4a4164-adc5-4aa4-bd8c-7846f1e17672",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2cbd3f59-4bea-424e-a53e-6e214c49d8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee49adef-5ec2-472e-a279-14c75a8c8a29",
        "cursor": {
          "ref": "cd6daa3c-1ad7-4a5e-ad7d-a3f03fbd2085",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4bdece64-efa4-4b28-8882-f5fcae9cb6f5"
        },
        "item": {
          "id": "ee49adef-5ec2-472e-a279-14c75a8c8a29",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bfbee97c-6998-4f27-a33c-e0e610711e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa36b4c1-2912-4bf0-b7f6-cedef8bc856c",
        "cursor": {
          "ref": "3d4074f8-78f2-4623-a8b6-f4446a4faa4a",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a17d8c2d-9998-4f1e-80d4-049e8177d2db"
        },
        "item": {
          "id": "fa36b4c1-2912-4bf0-b7f6-cedef8bc856c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "60777ba0-99f4-45d2-9e3f-071702b18670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0d1fc2-22a4-4cad-ac9d-f49a3c7b71d4",
        "cursor": {
          "ref": "29562b99-c3fc-479c-96f3-eace7fcbd5e9",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ac029db3-82ec-4940-aac2-0bf5a4ae23af"
        },
        "item": {
          "id": "cb0d1fc2-22a4-4cad-ac9d-f49a3c7b71d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1e62fb14-b82b-4c14-8c84-ed62f69e2bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8408d20-1c25-488e-bed5-e6369ad55b86",
        "cursor": {
          "ref": "ebed0344-14ab-4721-8c55-bd5264499ff1",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "58ab5c0d-4c2c-4496-8095-d020aca53d52"
        },
        "item": {
          "id": "f8408d20-1c25-488e-bed5-e6369ad55b86",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d2e06802-c20e-4653-8274-f77c9374601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3cdadf-8779-45d9-983c-9e11a2842914",
        "cursor": {
          "ref": "80f84a2d-e692-47df-b1e7-63124b5f0954",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a9081324-fcbe-47c8-9350-43dc0f0f226b"
        },
        "item": {
          "id": "0c3cdadf-8779-45d9-983c-9e11a2842914",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "736d5fd8-8648-4732-b5c3-2c8e917ac765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490af14b-3b62-47f6-a6ea-a321386e3162",
        "cursor": {
          "ref": "d64ea28b-8cc2-4dbe-b07e-4e60e6e0053f",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f0cf74b6-0479-4802-8197-605ae07dbdb2"
        },
        "item": {
          "id": "490af14b-3b62-47f6-a6ea-a321386e3162",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cbe189c9-d922-4537-b77a-507345c9cfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d126f25a-d669-444a-af0a-99377b6ba036",
        "cursor": {
          "ref": "01b207ba-b30a-45f6-a7f4-471009432c27",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a1a8d9d1-9e7c-4ead-8f69-e1d3a4fb614a"
        },
        "item": {
          "id": "d126f25a-d669-444a-af0a-99377b6ba036",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "27b6e5ae-d84e-4c09-a239-022733e6c804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68508a88-2282-4599-931a-3f1d50d8d01f",
        "cursor": {
          "ref": "8986bd68-5627-44dc-a7c0-086b68fb8296",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7f01064d-ee72-403f-b560-4545cc0b48ac"
        },
        "item": {
          "id": "68508a88-2282-4599-931a-3f1d50d8d01f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a5498f29-5e6a-48d2-9300-98c814939381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1eae42-e1c0-4d34-ad98-23d34805d648",
        "cursor": {
          "ref": "f4c5c4c3-0173-4049-8ec8-20d0c9f18019",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ee8fd15c-9119-4461-b224-870c0bcceaa6"
        },
        "item": {
          "id": "ba1eae42-e1c0-4d34-ad98-23d34805d648",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d0940a9b-2649-4c39-9cea-421da7eec72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f376c-f155-408c-9950-bb1735df6175",
        "cursor": {
          "ref": "78898b5c-210a-4cae-b608-d732b387f9c2",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ca5bbdb8-cb0d-4a26-8741-f1d508be4503"
        },
        "item": {
          "id": "254f376c-f155-408c-9950-bb1735df6175",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c62d28ab-74a3-4b76-9945-bda55df95625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf200097-f141-42a6-8454-e4561b7fccfb",
        "cursor": {
          "ref": "583386ec-cb3f-427f-a35c-ca1decd5ba5d",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "27e6f056-8276-45dd-8922-cd71bfdc23ec"
        },
        "item": {
          "id": "cf200097-f141-42a6-8454-e4561b7fccfb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7bd2192c-7733-406a-abbe-33cdf85152e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ace4f6-6d40-49dd-9718-2036734c2c96",
        "cursor": {
          "ref": "7e070525-2dd2-498a-8ce6-f19aaddfd055",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ac7c5353-21fd-4bc2-9e69-13112c94a904"
        },
        "item": {
          "id": "c5ace4f6-6d40-49dd-9718-2036734c2c96",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "03e18e63-09a5-473b-baa6-145c6ede1b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9040ee99-7764-4276-bce9-efae34cdd9e3",
        "cursor": {
          "ref": "55ff8d74-d2a0-41b7-be45-9df9ec6b3a57",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6338a836-4945-4fea-862f-3ef61048a7f4"
        },
        "item": {
          "id": "9040ee99-7764-4276-bce9-efae34cdd9e3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f9c1e06d-cfea-41a8-a7a6-a4cb02a0be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20547b6-fed8-40c3-bd9e-466b8dae1d78",
        "cursor": {
          "ref": "15a69017-5bbd-46f5-a8cb-4a1c98e63f68",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c6dc71da-0fe8-49ae-bc7d-3343968a565b"
        },
        "item": {
          "id": "e20547b6-fed8-40c3-bd9e-466b8dae1d78",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3862d76f-6fb1-4154-9b29-8a8d861f9cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87024a67-57a7-4115-b9c0-1906dfd0cc89",
        "cursor": {
          "ref": "f3206122-b640-4dd6-a30a-23c39b9e3e46",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a9f6da38-b762-42be-9ce5-bd8d37e0362e"
        },
        "item": {
          "id": "87024a67-57a7-4115-b9c0-1906dfd0cc89",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "13cfac4b-8225-47c3-b576-0701098857c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6dfc24-c00c-4ba8-9cfc-45d5eb5efb5a",
        "cursor": {
          "ref": "ea9be36c-a01d-4d3f-93f1-49bb2d0f699d",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0b2b38ff-e052-43fb-8b92-9ab9ec41a41a"
        },
        "item": {
          "id": "eb6dfc24-c00c-4ba8-9cfc-45d5eb5efb5a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "92954c5c-bd23-416a-a949-fcf23d1556d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6452da6e-470b-48c2-a9ac-731ce06bdc03",
        "cursor": {
          "ref": "3f802328-9c8a-45b3-ace3-dc025de3a8c6",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "268d3a3c-86ca-438a-a26d-b1af6fdf80f7"
        },
        "item": {
          "id": "6452da6e-470b-48c2-a9ac-731ce06bdc03",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5a8674e4-54ee-4853-9920-08e6465e5be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9088084e-54ec-44ac-bc8c-eeea76f423f1",
        "cursor": {
          "ref": "61664c40-595c-4e85-a2dd-589cad6df420",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8e14ab96-96a9-4d91-8704-eaf37b175f50"
        },
        "item": {
          "id": "9088084e-54ec-44ac-bc8c-eeea76f423f1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f37a435a-25b5-4f23-8820-042b976478ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae0241c-5562-4cbb-90d6-1c5214afd221",
        "cursor": {
          "ref": "8e8bf41b-faa2-4194-a8ac-16a8070b06ef",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6f4caae0-0874-4933-baf8-eb14819905d6"
        },
        "item": {
          "id": "eae0241c-5562-4cbb-90d6-1c5214afd221",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "412d0dba-cbc1-4579-8e2a-693d49cfd052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271a4992-1c9b-41b6-aa4a-47e377c2822c",
        "cursor": {
          "ref": "a5182777-76fc-414b-a343-9c335239d11d",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "adc3197a-dcb6-486f-8551-a876e8e45dfe"
        },
        "item": {
          "id": "271a4992-1c9b-41b6-aa4a-47e377c2822c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "21dd65a7-c0f3-4731-a972-78ba0d1a9d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4732ce33-fb95-47a7-ae17-a72598126d0b",
        "cursor": {
          "ref": "05ff52d0-120c-4170-a5e3-5928b28cf578",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4796037d-1314-40af-99de-515abbd40a67"
        },
        "item": {
          "id": "4732ce33-fb95-47a7-ae17-a72598126d0b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8489409-146a-4b8e-891e-3558fde26671",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c594145-deff-4fdb-a7c6-7a3e7f760ee1",
        "cursor": {
          "ref": "de4357c8-0ac7-4c4c-9054-ba577821599d",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1826e2bb-98ee-4238-a10e-93aec542689c"
        },
        "item": {
          "id": "6c594145-deff-4fdb-a7c6-7a3e7f760ee1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3b291408-5b6a-4736-8ce8-29c13490e9d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 514,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2289c5-1bdc-4f4e-a48d-5986cbce7ef0",
        "cursor": {
          "ref": "793f85fe-f30f-4869-9675-737c7d4b5327",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ee22fdb3-cdbd-4657-a8e2-8941852b7d5a"
        },
        "item": {
          "id": "dc2289c5-1bdc-4f4e-a48d-5986cbce7ef0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cc5ab214-0282-4386-924b-cbaecbd15c0e",
          "status": "Created",
          "code": 201,
          "responseTime": 4112,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "186fe14c-87d4-474e-8f2c-7b4d5cf55479",
        "cursor": {
          "ref": "87a3e3f0-8749-41bf-8c11-ca2e35e9e252",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bd74879e-046a-495a-b749-1269d91be998"
        },
        "item": {
          "id": "186fe14c-87d4-474e-8f2c-7b4d5cf55479",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "25eefc1b-0897-4047-8963-2f67add8f728",
          "status": "Created",
          "code": 201,
          "responseTime": 3911,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "64d2159e-c163-4aec-8d67-3f1d2e5689be",
        "cursor": {
          "ref": "c9fb2c29-49a0-4cf2-a268-bcbbef715137",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d7acc40-6562-48de-a1c4-43200896c807"
        },
        "item": {
          "id": "64d2159e-c163-4aec-8d67-3f1d2e5689be",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1edc29e2-130e-421a-afab-f1f341851c64",
          "status": "Created",
          "code": 201,
          "responseTime": 3735,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "0e126399-d837-43a6-aabb-2acda488befd",
        "cursor": {
          "ref": "62b21753-8d97-4f38-8573-9d7dbe609f84",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c25e24b8-a444-4c7b-8884-2828af6f1e60"
        },
        "item": {
          "id": "0e126399-d837-43a6-aabb-2acda488befd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ef8083b0-70a1-480e-93a7-6c5c89134cbf",
          "status": "Created",
          "code": 201,
          "responseTime": 4978,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "39747443-141c-468c-8e8c-c5f129b9f6d8",
        "cursor": {
          "ref": "62c7040f-1cb2-427c-b264-a190b1e65387",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3198d7b-4149-49ca-b776-630e6790306e"
        },
        "item": {
          "id": "39747443-141c-468c-8e8c-c5f129b9f6d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "01559f7b-a008-4ac7-9a7c-c62257601c1f",
          "status": "Created",
          "code": 201,
          "responseTime": 4812,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "8760e010-1aef-4d92-a838-a671208d9658",
        "cursor": {
          "ref": "916073df-32cd-4925-b154-3e8d3d55dd59",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7a02c2b5-6197-48eb-a3e2-0ba1d4d01c4b"
        },
        "item": {
          "id": "8760e010-1aef-4d92-a838-a671208d9658",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c32c0753-72e7-4d20-a1fc-baf7ff21b4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8760e010-1aef-4d92-a838-a671208d9658",
        "cursor": {
          "ref": "916073df-32cd-4925-b154-3e8d3d55dd59",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7a02c2b5-6197-48eb-a3e2-0ba1d4d01c4b"
        },
        "item": {
          "id": "8760e010-1aef-4d92-a838-a671208d9658",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c32c0753-72e7-4d20-a1fc-baf7ff21b4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a61acb1-3c23-4a82-8a71-a2da63eb0635",
        "cursor": {
          "ref": "11bfa975-9df1-4b76-afc9-22903feae0d9",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "22ef088a-f531-4770-a427-826766e32d38"
        },
        "item": {
          "id": "1a61acb1-3c23-4a82-8a71-a2da63eb0635",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0e7e5cd-5abf-47c4-af23-ce1aefa35b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c59544-f725-46be-9c00-df09166815ec",
        "cursor": {
          "ref": "bd3d7555-c426-4993-8cdd-e3e205393895",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "773f4374-445f-49fe-9a95-5a47ef423071"
        },
        "item": {
          "id": "00c59544-f725-46be-9c00-df09166815ec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7788bc9-4be5-46a7-a1b6-675663dd5f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe7a696-7f56-4bf6-88c6-aae4acc7f840",
        "cursor": {
          "ref": "2cf33de9-fb9e-4ab3-8ac2-dc04d3152266",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "58e8b790-8310-41cf-bf4d-5456908540eb"
        },
        "item": {
          "id": "efe7a696-7f56-4bf6-88c6-aae4acc7f840",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eaa93374-1769-423a-ba7a-a2494eb8dad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc8c5b-d477-4a40-b5c1-b476c433b114",
        "cursor": {
          "ref": "8de4da33-789d-413d-9936-7e524f413eb2",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c2b54e56-410a-4bbb-9017-f599e001c8df"
        },
        "item": {
          "id": "dadc8c5b-d477-4a40-b5c1-b476c433b114",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0538dbc4-869a-4ae5-bee8-a26a5d7239dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539ef780-42e1-4c47-8c64-e3c83161532c",
        "cursor": {
          "ref": "7c592ec1-c8a1-4af7-bd3a-d86edeedaa76",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f024a49d-e249-4880-a0e1-025c9316b387"
        },
        "item": {
          "id": "539ef780-42e1-4c47-8c64-e3c83161532c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "29c64c45-f395-403c-b595-db54680c982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b2e908-31fe-43f0-aeb5-74506413cdcc",
        "cursor": {
          "ref": "3114bcc1-fd90-4ca1-909d-3420d02b5571",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aa167dc4-f49c-46b2-9ac6-c546e5335ce3"
        },
        "item": {
          "id": "30b2e908-31fe-43f0-aeb5-74506413cdcc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14c5a28f-8084-45a6-ac63-b0a89d2fbdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66daca7b-2dc2-47f9-bfd6-70002f6b8de4",
        "cursor": {
          "ref": "0c15d731-6a11-4a97-be73-bf247e8a1734",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e02b4b42-f471-43d5-9b42-13087f362a14"
        },
        "item": {
          "id": "66daca7b-2dc2-47f9-bfd6-70002f6b8de4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be48c08b-17a1-40b4-bdc6-8477acb583d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2b0b2b-ec5b-4546-863b-ed106ccc7ed9",
        "cursor": {
          "ref": "aaa06b85-5587-4eaa-a216-68b0c1ed2d0e",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a920f430-b0ab-43b6-a2ca-a6df066c3eed"
        },
        "item": {
          "id": "ef2b0b2b-ec5b-4546-863b-ed106ccc7ed9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f4612cd7-fc2d-48a7-8532-5ee5ed469177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3c932-eb7e-467b-ae98-cface1216c3d",
        "cursor": {
          "ref": "73933a58-dbf6-4495-8ee4-1805b32fbf17",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c2c42412-365d-4a6c-9d36-f4008e797b47"
        },
        "item": {
          "id": "87e3c932-eb7e-467b-ae98-cface1216c3d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c003714b-e7e2-4f36-9555-5af87d97d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8785811c-cec8-41e0-985f-ae5cc0ed65cc",
        "cursor": {
          "ref": "dc5cef12-eb52-4225-8ab5-708094f9e6b4",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "98920717-e48f-4c9a-9e90-cc4e330c44be"
        },
        "item": {
          "id": "8785811c-cec8-41e0-985f-ae5cc0ed65cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e99dfe4-769a-49cc-9448-824a31318680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5c024b-c15c-4904-b1e3-cde327aa8bee",
        "cursor": {
          "ref": "6f349769-dc8f-4c09-888f-5a3a5d94b125",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "65213186-10d7-48bd-8811-dfc1a49e44f1"
        },
        "item": {
          "id": "8b5c024b-c15c-4904-b1e3-cde327aa8bee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3fc27fe-e651-4243-9212-b1378d7e41f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41f9b2c-fefa-45d6-9648-21696b111345",
        "cursor": {
          "ref": "bcffeb86-e5d6-4d36-b839-dd6cd38e62c0",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5848bd4f-75ec-471b-80e4-2e44015b6e75"
        },
        "item": {
          "id": "b41f9b2c-fefa-45d6-9648-21696b111345",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "14653413-66b8-4bf3-bb36-46d083cb252f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8fc9bc-a0c2-4770-9257-8fb165279c3a",
        "cursor": {
          "ref": "2e0ce6cc-7fee-4553-8dad-c3a15d82d772",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8e6b4954-db3a-4075-b6ff-5460d55b278e"
        },
        "item": {
          "id": "ef8fc9bc-a0c2-4770-9257-8fb165279c3a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0b53248c-2373-4d7c-8ee2-6509c8073860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab185770-679a-455e-8370-1b2967ed6c45",
        "cursor": {
          "ref": "3e325612-ffa8-4c6e-a5a8-f903f5c52391",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bcaa5d8c-c45f-4c4f-b1cf-0618c6f72f7d"
        },
        "item": {
          "id": "ab185770-679a-455e-8370-1b2967ed6c45",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "39f4eab3-56cd-4eab-924f-15d1b1aaf8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c335bd-62d8-4f64-8e0b-e98c7d06cc6f",
        "cursor": {
          "ref": "0fbd7fde-8d1e-44a9-b68b-a99691cfdaa8",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "32484bcd-5e27-478b-802f-54350e2dc3aa"
        },
        "item": {
          "id": "30c335bd-62d8-4f64-8e0b-e98c7d06cc6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c131dc14-a447-47f4-9549-bd6eb639fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6082a16-89bb-4415-b939-78ea9fc987f9",
        "cursor": {
          "ref": "93b4c61d-4e14-4472-9af2-c2388e3ba67c",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "98ac06b1-a9b5-427b-9edd-320da16b467a"
        },
        "item": {
          "id": "b6082a16-89bb-4415-b939-78ea9fc987f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "19de7d1c-e15b-424a-8c9e-fe17e6a952d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115a0ee6-991f-4201-a114-0f2e355f2751",
        "cursor": {
          "ref": "3da20272-340a-49aa-9aeb-0151925fe751",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "832838ed-9715-481e-86cf-70b068ebc729"
        },
        "item": {
          "id": "115a0ee6-991f-4201-a114-0f2e355f2751",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3364b47d-6caf-46c3-8c5f-3316afe9fc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a996ab78-43ac-4b3f-a075-00ec30772189",
        "cursor": {
          "ref": "4d13cdb3-dccb-4703-ae60-ee65b963e2de",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "902f3943-25d6-41e5-9c3d-35e4a833e710"
        },
        "item": {
          "id": "a996ab78-43ac-4b3f-a075-00ec30772189",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f58ad02c-b25c-45a7-907f-0a2980266062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36cd8f7-7f1e-4f18-9a91-b44f5b6599c7",
        "cursor": {
          "ref": "55971b7a-79b2-4b3f-9eb3-24e6f1b0e4eb",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cc1c016d-6adf-4bcf-b465-288df16272fe"
        },
        "item": {
          "id": "e36cd8f7-7f1e-4f18-9a91-b44f5b6599c7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0a72eef1-a575-4510-aaa4-a90829d9537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9f2348-db3a-4177-bb65-66178fd2293d",
        "cursor": {
          "ref": "11a12d6d-f86b-4b2d-a785-361b72247c15",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b87f76f8-a0e5-4e82-b14a-b43a09d4ec52"
        },
        "item": {
          "id": "df9f2348-db3a-4177-bb65-66178fd2293d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75ccad7b-8e18-4db0-90e2-3dc98a4ddc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0ae27a-e4bb-496e-b48f-8bddaacef261",
        "cursor": {
          "ref": "cf61def1-1ba2-4eb9-9d21-da872be632c4",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5b0d16ec-a72d-4286-8662-3ef3f6990665"
        },
        "item": {
          "id": "dd0ae27a-e4bb-496e-b48f-8bddaacef261",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "47c9ab89-f0e1-4da4-849a-4e8ca4f0c5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93fd910-e8a4-4fb4-9fb0-614b141288f1",
        "cursor": {
          "ref": "0045e1f8-2b04-4d7e-9cc7-0991898b7785",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e4624aa1-b906-45fe-812a-81fbba4d2130"
        },
        "item": {
          "id": "f93fd910-e8a4-4fb4-9fb0-614b141288f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3b3ab9e4-4d00-416f-8319-19ae16a2919e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808473f7-80c6-4bc4-afdb-d031cda8cdf7",
        "cursor": {
          "ref": "3ff5bad7-1c8d-46ba-ad34-3482d4859bff",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7e2ede88-08d4-488c-84a2-059ad7fbbb3c"
        },
        "item": {
          "id": "808473f7-80c6-4bc4-afdb-d031cda8cdf7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6d51cb21-1a3e-4aa3-aad2-f931d54b9db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240b7154-56d2-404a-86b4-791f4c060b69",
        "cursor": {
          "ref": "ba8b97d4-c53a-4e6d-b999-82da6e0c90e4",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7d0dc355-8600-438f-84a2-7ebb031a4f3c"
        },
        "item": {
          "id": "240b7154-56d2-404a-86b4-791f4c060b69",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6dad3444-7799-42c3-b540-e440574ef6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdf2419-d72f-4c07-913a-fd3260fc9563",
        "cursor": {
          "ref": "f3a72d45-6814-4658-a36c-561441653fb5",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "de56bd8c-5235-473f-91e6-4d2ac342c783"
        },
        "item": {
          "id": "1fdf2419-d72f-4c07-913a-fd3260fc9563",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "11a41b36-6db2-4437-ad8a-cab354a40cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7693f412-f9c5-4570-a1e5-24b51131bbad",
        "cursor": {
          "ref": "359de5ef-0eef-4a3b-b64c-6421f115a291",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5520db90-64f1-4581-a79c-a762336a4d7f"
        },
        "item": {
          "id": "7693f412-f9c5-4570-a1e5-24b51131bbad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b0a1afa-b6d2-4e33-862e-8c21d651a378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc6b348-1c24-46cf-8e37-b9c6fa6419a0",
        "cursor": {
          "ref": "512dd7e2-2a13-4301-9baf-0f91eb56f9c0",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "df6d6a5b-97f5-4cd3-9e51-432712d2b57e"
        },
        "item": {
          "id": "bdc6b348-1c24-46cf-8e37-b9c6fa6419a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "846b75a6-f471-4e50-87c5-a227033aad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c828d57-09ad-4144-8822-b22dc269acec",
        "cursor": {
          "ref": "a1cfa87c-6896-4e61-9092-59a830353d22",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b99c1c7a-64e9-4182-84ee-ba750d5c4aa1"
        },
        "item": {
          "id": "3c828d57-09ad-4144-8822-b22dc269acec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d49d6587-63f1-4894-b3a8-fa90c33c350d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbad551-8214-43fb-9bff-94699759e853",
        "cursor": {
          "ref": "eb9b3b81-7176-445b-ba62-6918c17c9f88",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6aeb7a0d-fcbb-4c4c-a36a-217f439c4482"
        },
        "item": {
          "id": "afbad551-8214-43fb-9bff-94699759e853",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9e734a7c-9d07-4bff-a2dc-76f81e32ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da272d69-50c2-4c2a-98f0-6f5c0a66dd2c",
        "cursor": {
          "ref": "62d621ed-e7ab-465e-a9a0-dbff0d4733ff",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "22bf8ca0-619a-4d86-bd05-15cc70c87915"
        },
        "item": {
          "id": "da272d69-50c2-4c2a-98f0-6f5c0a66dd2c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b271a25-70d6-44c3-8b19-c2fe385a2983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7951862d-8a5c-445f-8c04-53b0c3858b5d",
        "cursor": {
          "ref": "8163b5c8-d761-4019-8856-465ad1850334",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4cf22780-d103-445f-a81a-ec84c544beb3"
        },
        "item": {
          "id": "7951862d-8a5c-445f-8c04-53b0c3858b5d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ad109f72-585a-4e49-9899-6ecc6a71b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffece5d9-70e6-480a-b608-087007af8fc9",
        "cursor": {
          "ref": "2b2c0167-bc94-41b9-8b88-e39a7afb9e37",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bf7b4144-728a-4078-b875-b067c30cd5a3"
        },
        "item": {
          "id": "ffece5d9-70e6-480a-b608-087007af8fc9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0b545fc-0228-40ab-950c-f505b0bbfe46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab71ef89-94a8-4bc4-97e9-b9f6f44fb92a",
        "cursor": {
          "ref": "d08e0afe-81f5-402f-8e8c-14811e8b6c9f",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3d0a2ce6-9d23-427c-a282-73bf80098c38"
        },
        "item": {
          "id": "ab71ef89-94a8-4bc4-97e9-b9f6f44fb92a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "6f477890-ae89-409a-9921-6932bbac3095",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 679,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573b4d52-1fac-4fd1-8274-a613721413d0",
        "cursor": {
          "ref": "5929f874-01cc-426f-a3b3-5a2df0ec559a",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a29acb0d-8673-41e5-80cd-a19bfce31bb3"
        },
        "item": {
          "id": "573b4d52-1fac-4fd1-8274-a613721413d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9800f17c-fdb3-4e9d-97f1-e06b61c1dc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573b4d52-1fac-4fd1-8274-a613721413d0",
        "cursor": {
          "ref": "5929f874-01cc-426f-a3b3-5a2df0ec559a",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a29acb0d-8673-41e5-80cd-a19bfce31bb3"
        },
        "item": {
          "id": "573b4d52-1fac-4fd1-8274-a613721413d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9800f17c-fdb3-4e9d-97f1-e06b61c1dc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9919d5-abce-4f5f-8b5f-8618065e78df",
        "cursor": {
          "ref": "09c5277a-2d76-4125-9743-b02fc37d8ee7",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b818477c-1fb4-4610-a8e1-dbcf49b688cd"
        },
        "item": {
          "id": "ce9919d5-abce-4f5f-8b5f-8618065e78df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "686a8f13-8a42-435e-96ed-14a4b8438d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36059a5-8019-4702-8ca0-9a9668861585",
        "cursor": {
          "ref": "cfc9171d-30dd-4d47-bc75-ebb9adfc6a24",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f7573647-ed06-4cbb-bc2a-e74bc20b2c3d"
        },
        "item": {
          "id": "e36059a5-8019-4702-8ca0-9a9668861585",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2ee4d358-e2ad-4540-ae08-8fac89211346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff44b16-9246-4034-b619-5c3e251f0d5d",
        "cursor": {
          "ref": "2ce612fc-c6ee-4be9-bccc-26b65f7c580b",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e696e590-3759-459d-81b5-b35a27a6d32e"
        },
        "item": {
          "id": "eff44b16-9246-4034-b619-5c3e251f0d5d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8e459149-dcbe-4a45-9fae-e8eb77d28e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc59d94-49ca-48ad-bac4-37ab3e40bf64",
        "cursor": {
          "ref": "eb3417eb-985d-460a-ac77-9819ba4daf0c",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35ede9ed-4e8a-4aa6-9c44-070cc2d801b1"
        },
        "item": {
          "id": "2cc59d94-49ca-48ad-bac4-37ab3e40bf64",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d651c511-3d21-4d6b-85ec-4c45ef8ce824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d237dcf-2a83-4c98-805f-ab4cf2579ae3",
        "cursor": {
          "ref": "82573d51-9134-4efd-afec-c1fefff38de7",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4a4c6184-1aae-44fb-89c6-60bc108a1cea"
        },
        "item": {
          "id": "4d237dcf-2a83-4c98-805f-ab4cf2579ae3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "691fc0ba-ce1f-47f2-8316-0541f2e59883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7be5767-d854-41ea-9525-d0f369e0d23e",
        "cursor": {
          "ref": "0ed55bd3-e190-45c4-8b22-6eec08464cec",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e18660a6-e04b-4a24-b79d-a1ebb5f4a4f3"
        },
        "item": {
          "id": "f7be5767-d854-41ea-9525-d0f369e0d23e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2c0453c9-7c4f-4671-8170-9deb4c4e096e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2eb9b3-17ed-4f5e-8c9b-1f1fdcc157ff",
        "cursor": {
          "ref": "b3c18ea0-2b1f-48b1-95e0-93326e1a9524",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4d609d1b-f4c3-4d48-91b8-99dd479e1db6"
        },
        "item": {
          "id": "dd2eb9b3-17ed-4f5e-8c9b-1f1fdcc157ff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "627675b0-9df7-47fc-8948-b3dd3040f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea56f5-0ffb-405c-8a48-488006344c7c",
        "cursor": {
          "ref": "06dda8be-8f72-4b2d-bcfe-1af11fb66d1b",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c4dd2a40-575c-4c4e-b6e7-72bc4a02521a"
        },
        "item": {
          "id": "c2ea56f5-0ffb-405c-8a48-488006344c7c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ae84a1c8-173f-4270-8ce5-9cb79d37fd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f74226-aa2f-4e8c-b267-dd1cc6076864",
        "cursor": {
          "ref": "c99481ed-aa98-4f26-b200-1dae2343f679",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1cc07582-473e-441b-b810-111d4aff7dcf"
        },
        "item": {
          "id": "79f74226-aa2f-4e8c-b267-dd1cc6076864",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b198b298-b5ca-41dd-999b-fe34ce578dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843218fc-013c-454b-9111-f7576531fb55",
        "cursor": {
          "ref": "3aee3acd-5a2b-4581-870e-9f7684f17174",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dcf2a08a-8e7d-463d-bdde-aa480bd1c378"
        },
        "item": {
          "id": "843218fc-013c-454b-9111-f7576531fb55",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "81dc5417-ec05-4e54-8190-6b7749ed6560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6091afd2-7f47-4b57-9ee2-3ea2a70be8b6",
        "cursor": {
          "ref": "3e4cfd2f-3e81-44a2-b509-0b493c8eda05",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f95f7472-5b9a-43a3-9cdb-013362d70336"
        },
        "item": {
          "id": "6091afd2-7f47-4b57-9ee2-3ea2a70be8b6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3ffb164f-1574-4572-a61c-f6a9a46080e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295914be-fcee-4ded-b271-1914941a2195",
        "cursor": {
          "ref": "6b95a78b-b991-4001-be38-3dcd48cba4ba",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a7f2d61c-721a-4630-b7c7-c3175d9d4442"
        },
        "item": {
          "id": "295914be-fcee-4ded-b271-1914941a2195",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f723ffd2-b1b3-437a-912c-89c053c30b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5ebaef-11b1-4487-a15d-e85c314f742e",
        "cursor": {
          "ref": "8f113e78-f885-4e5d-af31-ed58f5b954fc",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e1dee59-0e18-48d3-be6d-d687e5e4a8ab"
        },
        "item": {
          "id": "1f5ebaef-11b1-4487-a15d-e85c314f742e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cc8f6450-7fe8-45c8-85b0-bc1037b7ea53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3378d232-6558-4226-aefb-9dba3a5dc34f",
        "cursor": {
          "ref": "1a85b043-219a-47e0-868b-4a16fdc6a3cb",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fad547d5-bcc3-4e6d-ad19-0c2a29c9409b"
        },
        "item": {
          "id": "3378d232-6558-4226-aefb-9dba3a5dc34f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9aeeb567-026f-41dc-bedc-733aa270e144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaebbee7-d2e8-4322-a76a-3440efe840e9",
        "cursor": {
          "ref": "de5c1d02-7d97-40df-94aa-15aa943f1ebb",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "73bd920a-26d4-4ab7-9b8a-e0d1aa5962c5"
        },
        "item": {
          "id": "aaebbee7-d2e8-4322-a76a-3440efe840e9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "14a05b46-c9a4-445f-ac78-23a07bb34dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fedd72-764e-497c-b32b-a711a0e1ba34",
        "cursor": {
          "ref": "2af54ccf-8f04-4472-91ea-cdc97f7cd35e",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "290ae29a-dc1b-447c-b377-77e90077d5f7"
        },
        "item": {
          "id": "d8fedd72-764e-497c-b32b-a711a0e1ba34",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e96f577e-981a-4bcc-8711-26c26c51941b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bb2765-e5c0-479e-bd16-76302d592215",
        "cursor": {
          "ref": "1ab54855-023f-45dd-8451-1c82688e6116",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c3806b89-1f60-493b-9542-54fe3353aa4e"
        },
        "item": {
          "id": "86bb2765-e5c0-479e-bd16-76302d592215",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "15abf1fa-66d0-4db8-8795-c762b907f18e",
          "status": "OK",
          "code": 200,
          "responseTime": 3515,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "be6a3c22-9687-4e33-89f2-06ad843b1ee0",
        "cursor": {
          "ref": "3f39c575-1047-4e50-89c8-5ab46f08421f",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d623551f-0f59-4ff1-845b-f4d75fed7bcb"
        },
        "item": {
          "id": "be6a3c22-9687-4e33-89f2-06ad843b1ee0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "218df81f-d5b6-4e88-8eb8-9a71af9a49f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5769e6-4b8e-488e-9b12-f9ccf42797fe",
        "cursor": {
          "ref": "e0eeddaa-32c7-4f4e-8a4d-93b86ee70197",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "da4aeea5-9517-4871-9a13-20ef0df1db4e"
        },
        "item": {
          "id": "8e5769e6-4b8e-488e-9b12-f9ccf42797fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "57ddaf41-1f1a-4a72-be88-216742adfb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0242f5-78f1-47e2-957e-d5ab1a6022a0",
        "cursor": {
          "ref": "69e96bc7-55e6-42ea-a58c-1207892e7648",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "39746551-1ed4-4e5e-99e4-cdcb1ce48d74"
        },
        "item": {
          "id": "2c0242f5-78f1-47e2-957e-d5ab1a6022a0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "43c0205d-d34d-4380-a004-62ea43be5ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91143f69-fe87-4941-8079-2002d0e2ff18",
        "cursor": {
          "ref": "cd0880c6-7d8f-4838-9141-ca24703ccd2b",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a9588b84-7409-4c74-9a50-e7b3d8a7f49b"
        },
        "item": {
          "id": "91143f69-fe87-4941-8079-2002d0e2ff18",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c3ae340c-16e5-447d-b8db-fdd66860b8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831faa3f-e793-4658-aaf1-22652e95d56b",
        "cursor": {
          "ref": "7e7b2161-e5fd-43cf-a00b-96dac8b7d7a3",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "25e1ae63-7c2e-40e0-bef7-70102beb320f"
        },
        "item": {
          "id": "831faa3f-e793-4658-aaf1-22652e95d56b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ce82dc29-9c89-40ce-b2ad-ba7056408c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d2a5cb-1551-4c05-945c-4815ed3c884f",
        "cursor": {
          "ref": "1c1877b9-f6ac-4f15-81a9-968ed51694f4",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5ffde820-ec49-46c2-80c1-71a22194ac76"
        },
        "item": {
          "id": "b4d2a5cb-1551-4c05-945c-4815ed3c884f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a75978cc-eebd-4363-aeb1-3b5df27d31c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f04b43-0493-43c9-8233-1655deb45e95",
        "cursor": {
          "ref": "7cedf4fb-deb9-4334-a994-d6b69a935efc",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "445f068a-4526-4a68-82d1-062fc9487125"
        },
        "item": {
          "id": "a9f04b43-0493-43c9-8233-1655deb45e95",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "652915f5-e4d0-4cd0-8968-f15ce5ef842c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c8277c-5f2a-44a0-9ebc-afb638a31b8e",
        "cursor": {
          "ref": "82a50472-5ecf-4d0c-85e3-2bb1a35e0e90",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5f4736fb-a600-4b64-9b3e-5219770051c8"
        },
        "item": {
          "id": "d6c8277c-5f2a-44a0-9ebc-afb638a31b8e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "068502c4-252f-4001-97bf-1ab4c414536c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e48bdbb-ad01-4787-a050-cacff23e8890",
        "cursor": {
          "ref": "ddb1a1f9-db3f-49c7-bef2-39b8432db091",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c10ebed5-3fb5-446c-9b27-ef30986b3f28"
        },
        "item": {
          "id": "7e48bdbb-ad01-4787-a050-cacff23e8890",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4cca2fa3-4124-4a13-a779-abf7432dd0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b1ada6-c946-42de-983a-f36029ac96de",
        "cursor": {
          "ref": "5e284d01-2ca5-4f8f-a7a1-caf6cd918844",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "07f1ba67-043b-4a0e-9470-6bccea8580a1"
        },
        "item": {
          "id": "b5b1ada6-c946-42de-983a-f36029ac96de",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "21dfb34b-9681-4dfa-982d-ba259aa8265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17328ca-3da0-4111-94f1-e5650a561648",
        "cursor": {
          "ref": "b9a5ad4f-6d58-4c2f-b212-3b2bae21ae83",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0c7e931e-6207-4d7c-92bc-04a378deee2c"
        },
        "item": {
          "id": "e17328ca-3da0-4111-94f1-e5650a561648",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "15041349-eb9e-4de4-b545-12b968b0a0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5679084-3049-411c-b562-6ba56c9c4315",
        "cursor": {
          "ref": "0830ee0c-6f80-4eea-b234-e9b223ff8f6a",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e4dfb42e-9b32-4bc8-b823-22a184ac9264"
        },
        "item": {
          "id": "f5679084-3049-411c-b562-6ba56c9c4315",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a28d81d9-7981-401e-b5d3-32284f552102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a78643-f776-4911-8275-3447826cfe94",
        "cursor": {
          "ref": "2c0c5819-a85b-4e39-a3fa-b38af4dbecdc",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7fb86411-d845-4a86-89ff-44dec778dff7"
        },
        "item": {
          "id": "d4a78643-f776-4911-8275-3447826cfe94",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "edfa03ae-0dec-497a-ac23-d85dc73673fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab852e0e-e026-4f90-83f2-ebbff85735c6",
        "cursor": {
          "ref": "7722cac0-0d5c-4db5-b5aa-c9f0eb2a0731",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e603004a-53fb-4980-8446-eb57aa851fdf"
        },
        "item": {
          "id": "ab852e0e-e026-4f90-83f2-ebbff85735c6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "06f21565-c178-48f9-adc5-07e1d10c9eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0e8a12-1820-43d9-9c96-fd087f2cc304",
        "cursor": {
          "ref": "e727e518-9e21-468d-aeb1-62dc5c5d9de1",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f4d9acc4-b71e-45a6-b302-4e1b8b0dd6f8"
        },
        "item": {
          "id": "3c0e8a12-1820-43d9-9c96-fd087f2cc304",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "403d33dd-576c-4f33-9e0c-ad9b947ac49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddbc995-2eed-46b1-bdf0-c8d242703eba",
        "cursor": {
          "ref": "65fc5f19-965b-49cb-90f6-1c10e7981674",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0916706a-38aa-47d6-b848-7a9f5b9187b4"
        },
        "item": {
          "id": "3ddbc995-2eed-46b1-bdf0-c8d242703eba",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6a98dd4f-7406-4cce-8949-746e3c12a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7290efc4-d6bf-4ac5-9816-5db7186b4bbb",
        "cursor": {
          "ref": "ec2d57ae-96a0-496c-80fb-f298d504de2e",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "522e8767-776a-49bf-9058-178335b2dabd"
        },
        "item": {
          "id": "7290efc4-d6bf-4ac5-9816-5db7186b4bbb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b1e6f40-7bbf-4f01-b637-3bc3919056df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d5e7ea-e38f-4965-9eee-fdc929fc8cf5",
        "cursor": {
          "ref": "a17bc81a-9549-4804-af93-6e70634ebf75",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fb3f9ea9-c99e-419d-84f4-99b4e4af5202"
        },
        "item": {
          "id": "c3d5e7ea-e38f-4965-9eee-fdc929fc8cf5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f173cac5-6c7d-4744-80eb-7862c697aa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0c3553-5d1d-4077-8999-301030b4bf36",
        "cursor": {
          "ref": "3b043b5f-a1e9-47fb-ad48-059ad0ba16ab",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "404356f8-6fac-4cbe-a0e7-457619f6cb6f"
        },
        "item": {
          "id": "fb0c3553-5d1d-4077-8999-301030b4bf36",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "62a3ce9c-170d-4309-8af6-f7911bacb660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcba405f-d4f4-476e-9ba0-c8592eb354dc",
        "cursor": {
          "ref": "cf2b3d33-f847-4ae0-92fb-56665b7ce5e0",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "39b1eb32-5925-42fb-9060-73ad159a482b"
        },
        "item": {
          "id": "bcba405f-d4f4-476e-9ba0-c8592eb354dc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4c98e0c7-8cdd-49a5-952c-cc327d5f4714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80344f24-2bcf-42f6-a6e9-0f05eb4e2e5c",
        "cursor": {
          "ref": "cad3c551-8e2a-401e-85d1-b00cc5bc0c6f",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bc288868-f4dc-423a-942a-fe9691bc17c8"
        },
        "item": {
          "id": "80344f24-2bcf-42f6-a6e9-0f05eb4e2e5c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c35f621a-538a-4612-878d-34e9b18b013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66546622-1359-41c7-9cc9-4ec621bd89bd",
        "cursor": {
          "ref": "57b2488b-1e7b-4ed9-812e-9508bdd6d289",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c9222633-0f12-4791-876a-485f7fee11cd"
        },
        "item": {
          "id": "66546622-1359-41c7-9cc9-4ec621bd89bd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46ad8753-0c7d-46c0-b8a2-35e58acfa3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82521f4-dbba-4e11-b910-e74bfaadf23e",
        "cursor": {
          "ref": "57328460-c2ac-4392-a346-dc4929621e8d",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7e0c9119-75b7-453d-84fd-23346b42a965"
        },
        "item": {
          "id": "d82521f4-dbba-4e11-b910-e74bfaadf23e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "29156edc-73da-4267-9e4b-216802849771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f816fba9-b616-4591-bfcf-b5f144d8c33f",
        "cursor": {
          "ref": "4510655e-1056-40a3-883d-eeffdf6db86d",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "569c447a-933e-4f8b-8119-1c89a7a71da4"
        },
        "item": {
          "id": "f816fba9-b616-4591-bfcf-b5f144d8c33f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ccce7d54-64c5-4065-9954-469e6093e4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d14d43-af52-4c03-8bf4-e3d505a1d2ad",
        "cursor": {
          "ref": "6af1b56d-dc8a-4b24-8449-c60f2e1c8756",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "37ddbf54-81cf-40ce-b95f-cb1867a65bce"
        },
        "item": {
          "id": "98d14d43-af52-4c03-8bf4-e3d505a1d2ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "71bad166-3aef-4f24-a12e-9b64400a8c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dc66ed-28e9-4f5f-b466-a3a98a31a530",
        "cursor": {
          "ref": "00c307f7-0f53-4fdd-9731-3c9ab1a9f944",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "230ea9e0-8a5b-4600-baa7-360ae7c4850a"
        },
        "item": {
          "id": "47dc66ed-28e9-4f5f-b466-a3a98a31a530",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b8e6491c-96ec-4bc3-ac3f-23278bfecbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e629c936-e540-4e01-a6b9-6bf67210d1b5",
        "cursor": {
          "ref": "d7d4e21c-62c7-4c1d-9412-e81ccab449f2",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "61f89916-ec02-4dd9-8471-24df18a40240"
        },
        "item": {
          "id": "e629c936-e540-4e01-a6b9-6bf67210d1b5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "58dcaaa5-e958-429e-96d3-0e37006b5b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0fb4be-1efc-4481-ac84-033874bf9541",
        "cursor": {
          "ref": "ef0de7e8-aa7d-45ff-8dd2-7a628da6d344",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ebb97540-fa53-4191-9299-0c54af0218fd"
        },
        "item": {
          "id": "7f0fb4be-1efc-4481-ac84-033874bf9541",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "35e2241f-b9f2-42ee-a146-f78adf02539c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eb3e83-c974-44f7-a90f-9df9a01c7487",
        "cursor": {
          "ref": "ae8d58a6-5cc0-4025-92d8-d556efe055ee",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "131549ad-adba-4dd0-b819-e9188f353697"
        },
        "item": {
          "id": "68eb3e83-c974-44f7-a90f-9df9a01c7487",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "55731e22-746b-49c2-954f-d91dc6f3c20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0de98ed-6100-4f4f-8339-be517ce8b979",
        "cursor": {
          "ref": "570f1cd8-d0c1-4963-bbef-faab1455765b",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0cf5648f-f4a1-4641-b4a1-a0ed2f490441"
        },
        "item": {
          "id": "c0de98ed-6100-4f4f-8339-be517ce8b979",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1da4e427-3ad9-4577-805f-a8586879f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66db2c94-b5f7-4eb4-9e14-5ebfc1835cbe",
        "cursor": {
          "ref": "a71feef2-d2e1-4cb5-bce0-4339bb2d7ca0",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "72f9a030-1924-4642-b3a7-2d7698a3a6fc"
        },
        "item": {
          "id": "66db2c94-b5f7-4eb4-9e14-5ebfc1835cbe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "aac2629a-2899-4479-a1b9-9799ca4eedf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a2311b-7db3-40d5-b7d2-a96925c26b10",
        "cursor": {
          "ref": "3a952804-c318-4dc5-9658-0b0b2e6af521",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "702cda18-0574-4585-8fde-2940935e60c5"
        },
        "item": {
          "id": "30a2311b-7db3-40d5-b7d2-a96925c26b10",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "66313c50-9a11-496d-a5de-ae6aa4effcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0b3e4a-51ec-48e3-8ae1-cf72eac0b2ad",
        "cursor": {
          "ref": "86a48ad5-3697-49f9-863b-3f30217a9564",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "74c63b63-624a-4577-82e7-65060df09afb"
        },
        "item": {
          "id": "ea0b3e4a-51ec-48e3-8ae1-cf72eac0b2ad",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d233dff6-1689-4bf1-92ca-9c9bab00629b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73590f85-43b8-4cc4-a211-1ec9d82f5b77",
        "cursor": {
          "ref": "ede635f2-c3bc-4e44-a11c-557a2233fe94",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "00e4e2e0-8e62-4872-ab1d-a5a8f8f927d7"
        },
        "item": {
          "id": "73590f85-43b8-4cc4-a211-1ec9d82f5b77",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9c197cf-6e32-44f3-8c68-8ef7e0c6edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f744539-bea2-442c-b8da-67abca414631",
        "cursor": {
          "ref": "6fbd1592-0e83-4f1e-af32-cd9a903dc385",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c3a47a06-c62b-4adb-a40a-d97beda77256"
        },
        "item": {
          "id": "0f744539-bea2-442c-b8da-67abca414631",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5c60d9bb-e5d9-4af4-9490-0d1de20f2e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81de0d98-a3e7-4e19-9235-02acc436de56",
        "cursor": {
          "ref": "bdd0d3cb-d71d-4ffb-b8df-204c48d4b8db",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e2d8751d-5f45-4378-980f-6ea06addb6f8"
        },
        "item": {
          "id": "81de0d98-a3e7-4e19-9235-02acc436de56",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9fc04a8e-f127-4b14-a946-d50fdcf02556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a2e8b1-9394-4946-82d9-2fb5041bd29f",
        "cursor": {
          "ref": "54ef8580-0302-4302-9b4e-6c093c000ebe",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "db16e803-462f-4555-b005-8d191381cd79"
        },
        "item": {
          "id": "e7a2e8b1-9394-4946-82d9-2fb5041bd29f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "40d0e6e3-2c34-46f3-8ddb-554ce9f26a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38474366-f523-487d-b451-ebb3c71603ce",
        "cursor": {
          "ref": "c5f61437-3cc3-48a2-a780-ed52df703fa6",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e779a743-2e67-42a7-a88a-d56483c2766c"
        },
        "item": {
          "id": "38474366-f523-487d-b451-ebb3c71603ce",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8a6f52fb-efaf-4ce7-ae17-90aaa78e78b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8354cc84-ca55-4392-9211-9b3ecc22d772",
        "cursor": {
          "ref": "53dfb931-80b7-4a14-82e5-19900319420e",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "18996539-6e46-4df9-90c6-5a8afedfb365"
        },
        "item": {
          "id": "8354cc84-ca55-4392-9211-9b3ecc22d772",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "32fa6e13-9c1e-43e2-a0f1-7cd5b1acc3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cb739b-304e-40eb-bda1-f8f4efcaaa1b",
        "cursor": {
          "ref": "56a472a2-cf67-4664-9e43-902786ca0030",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8629fb3d-ca97-41c5-bce0-539b4f583b37"
        },
        "item": {
          "id": "c7cb739b-304e-40eb-bda1-f8f4efcaaa1b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "72c9ebc0-e47c-45dc-b069-2b47d66878b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3bd289-bc2b-4583-93d2-69e454adaea9",
        "cursor": {
          "ref": "38db717e-e91e-4271-8bde-78e9f0c91a4d",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dca63185-c296-4ef4-90b3-253fbc8b23b5"
        },
        "item": {
          "id": "de3bd289-bc2b-4583-93d2-69e454adaea9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "04bcd08b-c804-4237-88c6-d598d2665556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0be2b9-c923-44fc-bf7e-49f890db243b",
        "cursor": {
          "ref": "24998c4d-808c-4628-b326-922c5ff5ff11",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b5d6a7a1-f25e-49b0-89bf-9dba28662d35"
        },
        "item": {
          "id": "ec0be2b9-c923-44fc-bf7e-49f890db243b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7429190-0e86-4e7d-9cb2-45d01e738eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b04c240-5355-4f8d-a237-ec7751998469",
        "cursor": {
          "ref": "93ffdf51-e84a-4886-9314-3a71ce08e5aa",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70c0c5f9-bf89-41e2-8da6-e3df283f676b"
        },
        "item": {
          "id": "9b04c240-5355-4f8d-a237-ec7751998469",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8bfd0a91-fa89-47da-a7c7-2120a65fd479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60324bb8-2da0-44ba-815a-6d2ee6d6e7c9",
        "cursor": {
          "ref": "d6e373ac-0c57-4250-83be-c770ed30e8df",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0dc458bd-a33f-4b44-8630-ca9e67c9dbea"
        },
        "item": {
          "id": "60324bb8-2da0-44ba-815a-6d2ee6d6e7c9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ae786d44-5b02-49c8-8dc2-690788b89755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c15fb16-aefd-4772-8fb3-3aa7c14540ff",
        "cursor": {
          "ref": "abf5278e-59a8-4a44-9660-66cb3f0f6030",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "51dc9333-bd6a-406c-8901-6334a519c845"
        },
        "item": {
          "id": "1c15fb16-aefd-4772-8fb3-3aa7c14540ff",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9dc10339-01b7-4c58-9582-0f00b939cd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a8f66-f61d-405c-8157-afd5e38b475f",
        "cursor": {
          "ref": "e323a78e-7c1d-4a09-8450-7667bf66a25f",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "98fb2747-6844-4e19-afb9-a89450ea432e"
        },
        "item": {
          "id": "a04a8f66-f61d-405c-8157-afd5e38b475f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "80dd1caa-d13e-42b7-9ce8-ff02e4d530b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf5ca1d-a41c-4a9c-b9be-18e4bcf1907f",
        "cursor": {
          "ref": "44cc29d7-c817-4096-b333-8b5ed669825a",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1ebcfddc-7c8a-4d87-87f3-b37abc149876"
        },
        "item": {
          "id": "6cf5ca1d-a41c-4a9c-b9be-18e4bcf1907f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dca7469e-917c-42e2-b12c-b69bd57be69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561840d3-cb2e-4ffc-b674-303474d14f86",
        "cursor": {
          "ref": "6f4a308c-881e-4fb9-845b-d63ac4d7aa88",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d5cfce05-188a-4b9b-8896-08fe16018829"
        },
        "item": {
          "id": "561840d3-cb2e-4ffc-b674-303474d14f86",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "909e1109-e343-4f8e-b6b9-a8edbc7369f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ad5330-4fb5-49d0-94b6-d1c6a416d6ec",
        "cursor": {
          "ref": "71bb9ae6-d0e2-4328-bedc-61e65d5336ab",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1eed1c1-6e1e-47ef-8b93-f9a63daee822"
        },
        "item": {
          "id": "24ad5330-4fb5-49d0-94b6-d1c6a416d6ec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d65ef053-f8a7-4f08-8e19-1a1538c774d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4b223e-2f1b-4116-922a-4448978a0d63",
        "cursor": {
          "ref": "d0aded79-483d-40e5-8ef5-0742f86084b9",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c708a378-8aa3-4e0e-b72d-e3eba69b74c8"
        },
        "item": {
          "id": "df4b223e-2f1b-4116-922a-4448978a0d63",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f2dcd4d5-5e09-4622-bbb3-a2b944f8fb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12beffd2-e430-497c-a7c9-33675a980e71",
        "cursor": {
          "ref": "326248b6-211b-4bfb-aa87-9ac38d390435",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2e50c662-9f5f-4c72-ab62-b72c012b07d4"
        },
        "item": {
          "id": "12beffd2-e430-497c-a7c9-33675a980e71",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d03f8433-645e-4cc7-a28d-729325da9232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b18528-bb18-4bd9-9243-80d400feb8fd",
        "cursor": {
          "ref": "b2c6b582-bf6c-407c-8383-3e8eba797845",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9b3a718d-c043-402f-bb5c-c8d4dd0c92c8"
        },
        "item": {
          "id": "48b18528-bb18-4bd9-9243-80d400feb8fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e9a26824-d15e-4328-b2f6-ecaac34c01cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a6cbd0-3afb-487a-814d-0a968a2d0d77",
        "cursor": {
          "ref": "87f4b066-6570-4583-8c9b-da9fc2dddbfc",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d03e0843-fc6b-4c9c-b283-8cafbc76a15e"
        },
        "item": {
          "id": "13a6cbd0-3afb-487a-814d-0a968a2d0d77",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "77dd4579-518b-456c-85d6-4b9aa1a79323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71daea93-500b-4d55-9b3f-021ea00f67ec",
        "cursor": {
          "ref": "41541b0b-c1d3-4fa3-917a-2fbfe917316c",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0bd43d8e-96cb-4868-8300-7c3b64550f3c"
        },
        "item": {
          "id": "71daea93-500b-4d55-9b3f-021ea00f67ec",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cda3765a-fb9e-4c06-89e9-be584714d851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb849a9d-2677-4d0d-8828-b91ba9e68bee",
        "cursor": {
          "ref": "c5aedfae-4e23-4de2-9d19-5a581c96fa1a",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4522b9ee-8da8-4946-850a-4432f30f2cf0"
        },
        "item": {
          "id": "fb849a9d-2677-4d0d-8828-b91ba9e68bee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c70c3720-3696-4675-ac9f-74bbb3369d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17ddf49-6411-4137-befa-d653da042402",
        "cursor": {
          "ref": "8fc177ee-ab04-44ac-a119-3482846d7feb",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb6f6e81-e69b-4ff4-8c35-779d8e16407b"
        },
        "item": {
          "id": "a17ddf49-6411-4137-befa-d653da042402",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e224cba0-d4f7-4ce5-933a-e3da1ee9c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01128911-b624-4aa3-87cf-b336243320fa",
        "cursor": {
          "ref": "79a8a310-8a5c-40e2-a067-049ba0120d1e",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4903190b-2c8f-4095-af47-6b1b75d39502"
        },
        "item": {
          "id": "01128911-b624-4aa3-87cf-b336243320fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3f69edc1-9edc-45ef-9513-b4c026848ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3ff2fc-01a5-44af-a719-c2b75c5c1c57",
        "cursor": {
          "ref": "e978ac57-590f-4854-bbec-03b677548f3e",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c6f94c66-ef56-415b-a056-aafecc9781fb"
        },
        "item": {
          "id": "3c3ff2fc-01a5-44af-a719-c2b75c5c1c57",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5fea67ec-a007-434e-9cb7-c107b2ae1af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3554f841-97b6-420e-a643-d62ef27c3b12",
        "cursor": {
          "ref": "61e8f651-5b7f-44bd-bce9-c7c7be706bae",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "563d365d-b25d-4b92-a82d-8af0744150f9"
        },
        "item": {
          "id": "3554f841-97b6-420e-a643-d62ef27c3b12",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0326416b-d943-47e7-9633-dbd062e4d760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fd3ea2-d07a-42a5-9476-7f700b8af6e9",
        "cursor": {
          "ref": "b67f4659-5e3c-47aa-8845-70d16ae14bf5",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "db8aa74d-0d32-46b1-9c1d-6bc08b90a4ea"
        },
        "item": {
          "id": "b7fd3ea2-d07a-42a5-9476-7f700b8af6e9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3012284a-fbeb-487b-a422-0c23b696a805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84761d4a-4d91-4795-b9c3-9afb81020c04",
        "cursor": {
          "ref": "69a1ab10-d72f-42ce-bb38-6bced5c4ba9d",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a74e18c1-dd60-433e-bda2-41fc23e49b2a"
        },
        "item": {
          "id": "84761d4a-4d91-4795-b9c3-9afb81020c04",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "02e43037-bb08-4796-b2da-d0fc475f4520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a20b02-b5cf-48a0-8a9f-1bbf4bcf6c52",
        "cursor": {
          "ref": "8c957a67-648d-49a9-b43c-16358354277b",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b0aecdb1-40dd-4330-8010-c80d07c3b7f2"
        },
        "item": {
          "id": "98a20b02-b5cf-48a0-8a9f-1bbf4bcf6c52",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "53f0c6b1-91db-4b9c-bb7d-ec92e406381e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30cf89a-08b5-4634-afc6-a594a1ceacd7",
        "cursor": {
          "ref": "66fc3d80-76bc-4442-945e-9a4fd6805d34",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d4c95ee5-14e0-4166-8481-1b7730f268ec"
        },
        "item": {
          "id": "e30cf89a-08b5-4634-afc6-a594a1ceacd7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e0e4a53a-0e65-46fd-b613-0759cc633202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11f9ddd-13fb-47ed-80e4-9162c54b9a26",
        "cursor": {
          "ref": "fcc81f83-6c0c-4fea-be4c-2d02e6e410e3",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8f8f193d-86d6-4adb-abcf-67b87000b89b"
        },
        "item": {
          "id": "d11f9ddd-13fb-47ed-80e4-9162c54b9a26",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "40016954-6903-492a-987c-2d5e542e8aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9b5786-4972-4c5e-89a9-8240d4346371",
        "cursor": {
          "ref": "cb129008-770e-49fc-9086-ee9612a93b6b",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2376b1fe-ac9b-44e0-982d-a41eaa28270c"
        },
        "item": {
          "id": "5f9b5786-4972-4c5e-89a9-8240d4346371",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b60e5011-6663-4499-b38d-919ea2196bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8fbb21-deda-4175-ab78-3b4fa3e386d6",
        "cursor": {
          "ref": "5ca8dceb-c4bf-4518-af68-897acd3b2fc5",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f5e6f038-94a6-4569-b896-0626778acf92"
        },
        "item": {
          "id": "7d8fbb21-deda-4175-ab78-3b4fa3e386d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "38056e86-06ba-4ac8-a1b2-654b0ba539f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7e692f-417c-4245-ac72-9efcb7ecfb85",
        "cursor": {
          "ref": "8b6a61b8-2d53-4233-bf28-87371970041d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4a2e9af4-642d-4407-9529-679927f43e29"
        },
        "item": {
          "id": "ad7e692f-417c-4245-ac72-9efcb7ecfb85",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8ff13be8-f6c6-4789-aae8-e7e929ae206a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b93e77-d839-4fc5-a162-b011e2eaa77e",
        "cursor": {
          "ref": "cac012e6-9d88-4ba7-a269-d246eee27b19",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "27f63def-ad46-4482-b8c0-2762c51f95aa"
        },
        "item": {
          "id": "18b93e77-d839-4fc5-a162-b011e2eaa77e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3d9807cd-2754-480b-99b1-5f83c528e524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef43586-d11c-49f6-a8c3-49d14540c482",
        "cursor": {
          "ref": "c6f1e772-85c9-40a4-97a5-34eb7afcac8a",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e38e4efd-f03e-4811-b29c-899962e53e37"
        },
        "item": {
          "id": "fef43586-d11c-49f6-a8c3-49d14540c482",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "db925350-70e6-4d2d-804a-5aae0375277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd877f28-4898-4e11-958f-f59981220d60",
        "cursor": {
          "ref": "20eb6417-6f33-4bcb-9c54-3ce7d4527f54",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc919aec-29b3-415e-b269-c35940119439"
        },
        "item": {
          "id": "fd877f28-4898-4e11-958f-f59981220d60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "840660a4-94bc-464e-aac5-c4b0a4b7e499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfc7490-59a3-4aa7-a517-4732cf8c859d",
        "cursor": {
          "ref": "b205ee7e-01fb-4324-a38a-bc1009efa306",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2ae693f8-2856-4f73-97be-24386239492a"
        },
        "item": {
          "id": "8dfc7490-59a3-4aa7-a517-4732cf8c859d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "643851a8-4b43-449a-8b3a-9a7bbb0164c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7fba2e-0ede-489b-8177-909b5398fd20",
        "cursor": {
          "ref": "fe97228c-be65-4f76-8e59-9be710fced63",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d5b1b3fb-3683-4c4a-8cd7-ea4e35eab74b"
        },
        "item": {
          "id": "ea7fba2e-0ede-489b-8177-909b5398fd20",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b585b412-d26d-4e7f-b4d8-2a29ffcdf884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07f877b-2e14-43f3-98dd-3bf25b0edbe4",
        "cursor": {
          "ref": "d08dcbb2-0afc-4b51-a6ab-ca084c525ab6",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eacc0d83-e9c5-4dbb-83a7-e1e475f7408e"
        },
        "item": {
          "id": "b07f877b-2e14-43f3-98dd-3bf25b0edbe4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "72d295fe-fee5-4fb1-8093-6131905188f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b49b3f1-573f-4f96-ba0d-38c61005ab57",
        "cursor": {
          "ref": "47994734-6cdc-4e5d-b1f0-2761b096ec03",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "30da5f93-a41f-4c98-85c9-4c9725deb647"
        },
        "item": {
          "id": "3b49b3f1-573f-4f96-ba0d-38c61005ab57",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aa2da74e-0341-470c-8771-54d9328830b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f42d6cc-1e84-469d-9aee-a7b866ee92b9",
        "cursor": {
          "ref": "fb3592e9-655d-405f-ba4a-3cce6c16dec8",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9fbc63f3-f136-47ea-b103-b77b13c569fb"
        },
        "item": {
          "id": "9f42d6cc-1e84-469d-9aee-a7b866ee92b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "19a7b577-8799-4815-830d-af1510641b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0e5c2e-8313-43a7-992f-da34f21f62b0",
        "cursor": {
          "ref": "f7a56667-b27b-42d5-b3eb-7b1b3f409512",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "120c9502-7e2d-4f22-9d40-f7adff0ebc15"
        },
        "item": {
          "id": "2b0e5c2e-8313-43a7-992f-da34f21f62b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e319ade9-eab3-46d0-abca-d3e574f669c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adc9d24-b789-463b-80e2-ea977decf6fd",
        "cursor": {
          "ref": "f3563c05-3f7a-4cd4-9582-3e73b18aceac",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee165e73-6fe2-42ad-897c-2d53b97f39a5"
        },
        "item": {
          "id": "3adc9d24-b789-463b-80e2-ea977decf6fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0caee32f-b85b-472e-a2ce-3cb82b05e352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1b200d-b355-47b6-9109-952463a2af23",
        "cursor": {
          "ref": "fe2baeb2-618c-40ad-ba61-270ff1195a3f",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e53691b3-c001-4333-b6c7-3bad1841751d"
        },
        "item": {
          "id": "3d1b200d-b355-47b6-9109-952463a2af23",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "36ac0cb9-72ef-41f9-841d-b342e721004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6481aca6-b995-40ef-a48c-394cd6359d81",
        "cursor": {
          "ref": "fd62d659-2f4f-4d40-b565-e3b5de22e78f",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "921c0fb7-bb0f-4c70-a4c4-97bb5aeedf25"
        },
        "item": {
          "id": "6481aca6-b995-40ef-a48c-394cd6359d81",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c86685f-f2e7-47b5-ba5d-f7ebc7e0e884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb9ae1e-d01f-4975-8bb2-f87da1858817",
        "cursor": {
          "ref": "baa9b8f4-b87e-4e28-872b-bf755b1aef43",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ca5b5f6e-0634-4b2d-a88c-023e04596441"
        },
        "item": {
          "id": "4fb9ae1e-d01f-4975-8bb2-f87da1858817",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dfbdfe2d-42d7-47fc-8363-ab5a5d6f08f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5172d768-f856-415a-b3c1-7efdb2bc8ea2",
        "cursor": {
          "ref": "b0fb9e0a-2061-4bc5-a77c-5986a66d7200",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "025d80e1-b26d-4cd9-a4bb-3ef85c7c6c69"
        },
        "item": {
          "id": "5172d768-f856-415a-b3c1-7efdb2bc8ea2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a1bc30e6-d099-414a-b0e1-5686a5bfb8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51aed7fa-8509-4e83-8da6-edf9701f96cc",
        "cursor": {
          "ref": "291b6919-a286-4e72-a60d-e28e05496c54",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "963eea7d-7dde-48de-94fd-b87e917e556f"
        },
        "item": {
          "id": "51aed7fa-8509-4e83-8da6-edf9701f96cc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "04a136c0-73ea-41c5-a97c-18950f2cfbc5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 342,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d2cf8-dd06-442a-b6ea-f5c371e4a495",
        "cursor": {
          "ref": "80c27d84-f29d-4735-8732-9e7219f15a57",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3283215d-40ea-4374-b34a-bd520af6eb7d"
        },
        "item": {
          "id": "bd4d2cf8-dd06-442a-b6ea-f5c371e4a495",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "90935c79-bc0a-4c71-9aa3-19dcca635e77",
          "status": "OK",
          "code": 200,
          "responseTime": 411,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd8a924-38e8-4687-a197-8a7e2a0c7905",
        "cursor": {
          "ref": "8b500ae4-6376-43a4-8da7-3e9f251205a9",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1ac005c9-acb3-48cb-b53f-f463383f13c6"
        },
        "item": {
          "id": "ffd8a924-38e8-4687-a197-8a7e2a0c7905",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9991820-95d3-41d3-bd34-ad3683a05133",
          "status": "OK",
          "code": 200,
          "responseTime": 3539,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece3c76-b90b-48e4-a94b-88cf8f8a0012",
        "cursor": {
          "ref": "cdd9b9ee-6722-4ff5-932f-129feb02988c",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "096c0cf0-86b5-44aa-810b-4aa9d03c2196"
        },
        "item": {
          "id": "eece3c76-b90b-48e4-a94b-88cf8f8a0012",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2cc2fa7e-c4f0-4f55-9afd-dbaa6d5c9ef9",
          "status": "OK",
          "code": 200,
          "responseTime": 3594,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
        "cursor": {
          "ref": "661ae898-d6dd-488b-9417-6c27bb759617",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28693044-7d0d-4537-b7a9-4a1dbe570f79"
        },
        "item": {
          "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb7702e2-a11a-4bc3-84ae-5f155f664279",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
        "cursor": {
          "ref": "661ae898-d6dd-488b-9417-6c27bb759617",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28693044-7d0d-4537-b7a9-4a1dbe570f79"
        },
        "item": {
          "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb7702e2-a11a-4bc3-84ae-5f155f664279",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
        "cursor": {
          "ref": "661ae898-d6dd-488b-9417-6c27bb759617",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28693044-7d0d-4537-b7a9-4a1dbe570f79"
        },
        "item": {
          "id": "7f8c437f-ed63-4e27-ba70-a529eccdd6ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb7702e2-a11a-4bc3-84ae-5f155f664279",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170b456-ca0a-4573-9903-d992ff30e6af",
        "cursor": {
          "ref": "1e7f35d7-97b9-46d1-b65f-88b3550c5a83",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f8650782-ab1c-4204-8d99-0ac7307931d6"
        },
        "item": {
          "id": "b170b456-ca0a-4573-9903-d992ff30e6af",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d67b47fc-0283-4e55-bf03-a99728f43d27",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 309,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d91255-b7de-498d-bfc8-4d528acd11af",
        "cursor": {
          "ref": "4695b5de-48f7-44e1-98e9-bf09f189811f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d16a360-2d27-4f08-b773-f87c0e889947"
        },
        "item": {
          "id": "b2d91255-b7de-498d-bfc8-4d528acd11af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ec2cdd41-1637-49c0-b2e0-62d668978a5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d91255-b7de-498d-bfc8-4d528acd11af",
        "cursor": {
          "ref": "4695b5de-48f7-44e1-98e9-bf09f189811f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d16a360-2d27-4f08-b773-f87c0e889947"
        },
        "item": {
          "id": "b2d91255-b7de-498d-bfc8-4d528acd11af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ec2cdd41-1637-49c0-b2e0-62d668978a5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad793725-1edf-41aa-b1ed-b4f407d90b98",
        "cursor": {
          "ref": "01208f80-6cd2-4064-a3ca-2bd0ff9a0334",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fbf845bc-5478-44f3-ba4d-7c7863097650"
        },
        "item": {
          "id": "ad793725-1edf-41aa-b1ed-b4f407d90b98",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "47fd0093-82f2-4af1-9a5e-f5a3d8b2a815",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 581,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e0aa26-5f35-4f77-a366-96f7ce8cabc5",
        "cursor": {
          "ref": "7378748e-9630-4246-ac28-1fb2423d488b",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "57de957a-dfd7-4e95-b030-05380a12e199"
        },
        "item": {
          "id": "21e0aa26-5f35-4f77-a366-96f7ce8cabc5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a074195-7f1c-44b1-bcd7-121688673ec6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e0aa26-5f35-4f77-a366-96f7ce8cabc5",
        "cursor": {
          "ref": "7378748e-9630-4246-ac28-1fb2423d488b",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "57de957a-dfd7-4e95-b030-05380a12e199"
        },
        "item": {
          "id": "21e0aa26-5f35-4f77-a366-96f7ce8cabc5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a074195-7f1c-44b1-bcd7-121688673ec6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388b1794-5011-4099-8bf5-4e4bb93a879c",
        "cursor": {
          "ref": "1686a10a-c41a-4cef-a597-de6b5eb711d6",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5f007711-2872-42b5-b378-ff0c1a661fa2"
        },
        "item": {
          "id": "388b1794-5011-4099-8bf5-4e4bb93a879c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7f2a6c5d-03a8-470c-b330-cfdcee2a8f79",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}